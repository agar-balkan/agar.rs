(function (e, t, n) {
	function i(e) {
		return g.call(e) == "[object Function]";
	}
	function o(e) {
		return typeof e == "string";
	}
	function a() {}
	function s(e) {
		return !e || e == "loaded" || e == "complete" || e == "uninitialized";
	}
	function r() {
		var e = v.shift();
		b = 1;
		if (e) {
			if (e.t) {
				h(function () {
					(e.t == "c" ? p.injectCss : p.injectJs)(e.s, 0, e.a, e.x, e.e, 1);
				}, 0);
			} else {
				e();
				r();
			}
		} else {
			b = 0;
		}
	}
	function l(e, n, i, o, a, l, c) {
		function u(t) {
			if (!f && s(d.readyState) && (y.r = f = 1, !b && r(), d.onload = d.onreadystatechange = null, t)) {
				if (e != "img") {
					h(function () {
						_.removeChild(d);
					}, 50);
				}
				for (var i in A[n]) {
					if (A[n].hasOwnProperty(i)) {
						A[n][i].onload();
					}
				}
			}
		}
		var c = c || p.errorTimeout;
		var d = t.createElement(e);
		var f = 0;
		var g = 0;
		var y = {
			t: i,
			s: n,
			e: a,
			a: l,
			x: c
		};
		if (A[n] === 1) {
			g = 1;
			A[n] = [];
		}
		if (e == "object") {
			d.data = n;
		} else {
			d.src = n;
			d.type = e;
		}
		d.width = d.height = "0";
		d.onerror = d.onload = d.onreadystatechange = function () {
			u.call(this, g);
		};
		v.splice(o, 0, y);
		if (e != "img") {
			if (g || A[n] === 2) {
				_.insertBefore(d, w ? null : m);
				h(u, c);
			} else {
				A[n].push(d);
			}
		}
	}
	function c(e, t, n, i, a) {
		b = 0;
		t = t || "j";
		if (o(e)) {
			l(t == "c" ? x : k, e, t, this.i++, n, i, a);
		} else {
			v.splice(this.i++, 0, e);
			if (v.length == 1) {
				r();
			}
		}
		return this;
	}
	function u() {
		var e = p;
		e.loader = {
			load: c,
			i: 0
		};
		return e;
	}
	var d;
	var p;
	var f = t.documentElement;
	var h = e.setTimeout;
	var m = t.getElementsByTagName("script")[0];
	var g = {}.toString;
	var v = [];
	var b = 0;
	var y = "MozAppearance" in f.style;
	var w = y && !!t.createRange().compareNode;
	var _ = w ? f : m.parentNode;
	var f = e.opera && g.call(e.opera) == "[object Opera]";
	var f = !!t.attachEvent && !f;
	var k = y ? "object" : f ? "script" : "img";
	var x = f ? "script" : k;
	var C = Array.isArray || function (e) {
		return g.call(e) == "[object Array]";
	};
	var S = [];
	var A = {};
	var T = {
		timeout: function (e, t) {
			if (t.length) {
				e.timeout = t[0];
			}
			return e;
		}
	};
	(p = function (e) {
		function t(e) {
			var t;
			var n;
			var i;
			var e = e.split("!");
			var o = S.length;
			var a = e.pop();
			var s = e.length;
			var a = {
				url: a,
				origUrl: a,
				prefixes: e
			};
			for (n = 0; n < s; n++) {
				i = e[n].split("=");
				if (t = T[i.shift()]) {
					a = t(a, i);
				}
			}
			for (n = 0; n < o; n++) {
				a = S[n](a);
			}
			return a;
		}
		function s(e, o, a, s, r) {
			var l = t(e);
			var c = l.autoCallback;
			l.url.split(".").pop().split("?").shift();
			if (!l.bypass) {
				o &&= i(o) ? o : o[e] || o[s] || o[e.split("/").pop().split("?")[0]];
				if (l.instead) {
					l.instead(e, o, a, s, r);
				} else {
					if (A[l.url]) {
						l.noexec = true;
					} else {
						A[l.url] = 1;
					}
					a.load(l.url, l.forceCSS || !l.forceJS && l.url.split(".").pop().split("?").shift() == "css" ? "c" : n, l.noexec, l.attrs, l.timeout);
					if (i(o) || i(c)) {
						a.load(function () {
							u();
							if (o) {
								o(l.origUrl, r, s);
							}
							if (c) {
								c(l.origUrl, r, s);
							}
							A[l.url] = 2;
						});
					}
				}
			}
		}
		function r(e, t) {
			function n(e, n) {
				if (e) {
					if (o(e)) {
						if (!n) {
							d = function () {
								var e = [].slice.call(arguments);
								p.apply(this, e);
								f();
							};
						}
						s(e, d, t, 0, c);
					} else if (Object(e) === e) {
						r = function () {
							var t;
							var n = 0;
							for (t in e) {
								if (e.hasOwnProperty(t)) {
									n++;
								}
							}
							return n;
						}();
						for (l in e) {
							if (e.hasOwnProperty(l)) {
								if (!n && ! --r) {
									if (i(d)) {
										d = function () {
											var e = [].slice.call(arguments);
											p.apply(this, e);
											f();
										};
									} else {
										d[l] = function (e) {
											return function () {
												var t = [].slice.call(arguments);
												if (e) {
													e.apply(this, t);
												}
												f();
											};
										}(p[l]);
									}
								}
								s(e[l], d, t, l, c);
							}
						}
					}
				} else if (!n) {
					f();
				}
			}
			var r;
			var l;
			var c = !!e.test;
			var u = e.load || e.both;
			var d = e.callback || a;
			var p = d;
			var f = e.complete || a;
			n(c ? e.yep : e.nope, !!u);
			if (u) {
				n(u);
			}
		}
		var l;
		var c;
		var d = this.yepnope.loader;
		if (o(e)) {
			s(e, 0, d, 0);
		} else if (C(e)) {
			for (l = 0; l < e.length; l++) {
				c = e[l];
				if (o(c)) {
					s(c, 0, d, 0);
				} else if (C(c)) {
					p(c);
				} else if (Object(c) === c) {
					r(c, d);
				}
			}
		} else if (Object(e) === e) {
			r(e, d);
		}
	}).addPrefix = function (e, t) {
		T[e] = t;
	};
	p.addFilter = function (e) {
		S.push(e);
	};
	p.errorTimeout = 10000;
	if (t.readyState == null && t.addEventListener) {
		t.readyState = "loading";
		t.addEventListener("DOMContentLoaded", d = function () {
			t.removeEventListener("DOMContentLoaded", d, 0);
			t.readyState = "complete";
		}, 0);
	}
	e.yepnope = u();
	e.yepnope.executeStack = r;
	e.yepnope.injectJs = function (e, n, i, o, l, c) {
		var u;
		var d;
		var f = t.createElement("script");
		var o = o || p.errorTimeout;
		f.src = e;
		for (d in i) {
			f.setAttribute(d, i[d]);
		}
		n = c ? r : n || a;
		f.onreadystatechange = f.onload = function () {
			if (!u && s(f.readyState)) {
				u = 1;
				n();
				f.onload = f.onreadystatechange = null;
			}
		};
		h(function () {
			if (!u) {
				u = 1;
				n(1);
			}
		}, o);
		if (l) {
			f.onload();
		} else {
			m.parentNode.insertBefore(f, m);
		}
	};
	e.yepnope.injectCss = function (e, n, i, o, s, l) {
		var c;
		var o = t.createElement("link");
		var n = l ? r : n || a;
		o.href = e;
		o.rel = "stylesheet";
		o.type = "text/css";
		for (c in i) {
			o.setAttribute(c, i[c]);
		}
		if (!s) {
			m.parentNode.insertBefore(o, m);
			h(n, 0);
		}
	};
})(this, document);

Modernizr.load = function () {
	yepnope.apply(window, [].slice.call(arguments, 0));
};

(function (e, t, n, i) {
	e.site = e.fn.site = function (o) {
		var a;
		var s;
		var r = new Date().getTime();
		var l = [];
		var c = arguments[0];
		var u = typeof c == "string";
		var d = [].slice.call(arguments, 1);
		var p = e.isPlainObject(o) ? e.extend(true, {}, e.site.settings, o) : e.extend({}, e.site.settings);
		var f = p.namespace;
		var h = p.error;
		var m = "module-" + f;
		var g = e(n);
		var v = this;
		var b = g.data(m);
		a = {
			initialize: function () {
				a.instantiate();
			},
			instantiate: function () {
				a.verbose("Storing instance of site", a);
				b = a;
				g.data(m, a);
			},
			normalize: function () {
				a.fix.console();
				a.fix.requestAnimationFrame();
			},
			fix: {
				console: function () {
					a.debug("Normalizing window.console");
					if (console === i || console.log === i) {
						a.verbose("Console not available, normalizing events");
						a.disable.console();
					}
					if (console.group === undefined || console.groupEnd === undefined || console.groupCollapsed === undefined) {
						a.verbose("Console group not available, normalizing events");
						t.console.group = function () {};
						t.console.groupEnd = function () {};
						t.console.groupCollapsed = function () {};
					}
					if (console.markTimeline === undefined) {
						a.verbose("Mark timeline not available, normalizing events");
						t.console.markTimeline = function () {};
					}
				},
				consoleClear: function () {
					a.debug("Disabling programmatic console clearing");
					t.console.clear = function () {};
				},
				requestAnimationFrame: function () {
					a.debug("Normalizing requestAnimationFrame");
					if (t.requestAnimationFrame === i) {
						a.debug("RequestAnimationFrame not available, normalizing event");
						t.requestAnimationFrame = t.requestAnimationFrame || t.mozRequestAnimationFrame || t.webkitRequestAnimationFrame || t.msRequestAnimationFrame || function (e) {
							setTimeout(e, 0);
						};
					}
				}
			},
			moduleExists: function (t) {
				return e.fn[t] !== i && e.fn[t].settings !== i;
			},
			enabled: {
				modules: function (t) {
					var n = [];
					t = t || p.modules;
					e.each(t, function (e, t) {
						if (a.moduleExists(t)) {
							n.push(t);
						}
					});
					return n;
				}
			},
			disabled: {
				modules: function (t) {
					var n = [];
					t = t || p.modules;
					e.each(t, function (e, t) {
						if (!a.moduleExists(t)) {
							n.push(t);
						}
					});
					return n;
				}
			},
			change: {
				setting: function (t, n, o, s) {
					o = typeof o == "string" ? o === "all" ? p.modules : [o] : o || p.modules;
					s = s === i || s;
					e.each(o, function (i, o) {
						var r;
						var l = !a.moduleExists(o) || e.fn[o].settings.namespace || false;
						if (a.moduleExists(o)) {
							a.verbose("Changing default setting", t, n, o);
							e.fn[o].settings[t] = n;
							if (s && l && (r = e(":data(module-" + l + ")")).length > 0) {
								a.verbose("Modifying existing settings", r);
								r[o]("setting", t, n);
							}
						}
					});
				},
				settings: function (t, n, o) {
					n = typeof n == "string" ? [n] : n || p.modules;
					o = o === i || o;
					e.each(n, function (n, i) {
						var s;
						if (a.moduleExists(i)) {
							a.verbose("Changing default setting", t, i);
							e.extend(true, e.fn[i].settings, t);
							if (o && f && (s = e(":data(module-" + f + ")")).length > 0) {
								a.verbose("Modifying existing settings", s);
								s[i]("setting", t);
							}
						}
					});
				}
			},
			enable: {
				console: function () {
					a.console(true);
				},
				debug: function (e, t) {
					e = e || p.modules;
					a.debug("Enabling debug for modules", e);
					a.change.setting("debug", true, e, t);
				},
				verbose: function (e, t) {
					e = e || p.modules;
					a.debug("Enabling verbose debug for modules", e);
					a.change.setting("verbose", true, e, t);
				}
			},
			disable: {
				console: function () {
					a.console(false);
				},
				debug: function (e, t) {
					e = e || p.modules;
					a.debug("Disabling debug for modules", e);
					a.change.setting("debug", false, e, t);
				},
				verbose: function (e, t) {
					e = e || p.modules;
					a.debug("Disabling verbose debug for modules", e);
					a.change.setting("verbose", false, e, t);
				}
			},
			console: function (e) {
				if (e) {
					if (b.cache.console === i) {
						a.error(h.console);
						return;
					}
					a.debug("Restoring console function");
					t.console = b.cache.console;
				} else {
					a.debug("Disabling console function");
					b.cache.console = t.console;
					t.console = {
						clear: function () {},
						error: function () {},
						group: function () {},
						groupCollapsed: function () {},
						groupEnd: function () {},
						info: function () {},
						log: function () {},
						markTimeline: function () {},
						warn: function () {}
					};
				}
			},
			destroy: function () {
				a.verbose("Destroying previous site for", g);
				g.removeData(m);
			},
			cache: {},
			setting: function (t, n) {
				if (e.isPlainObject(t)) {
					e.extend(true, p, t);
				} else {
					if (n === i) {
						return p[t];
					}
					p[t] = n;
				}
			},
			internal: function (t, n) {
				if (e.isPlainObject(t)) {
					e.extend(true, a, t);
				} else {
					if (n === i) {
						return a[t];
					}
					a[t] = n;
				}
			},
			debug: function () {
				if (p.debug) {
					if (p.performance) {
						a.performance.log(arguments);
					} else {
						a.debug = Function.prototype.bind.call(console.info, console, p.name + ":");
						a.debug.apply(console, arguments);
					}
				}
			},
			verbose: function () {
				if (p.verbose && p.debug) {
					if (p.performance) {
						a.performance.log(arguments);
					} else {
						a.verbose = Function.prototype.bind.call(console.info, console, p.name + ":");
						a.verbose.apply(console, arguments);
					}
				}
			},
			error: function () {
				a.error = Function.prototype.bind.call(console.error, console, p.name + ":");
				a.error.apply(console, arguments);
			},
			performance: {
				log: function (e) {
					var t;
					var n;
					var i;
					if (p.performance) {
						t = new Date().getTime();
						i = r || t;
						n = t - i;
						r = t;
						l.push({
							Element: v,
							Name: e[0],
							Arguments: [].slice.call(e, 1) || "",
							"Execution Time": n
						});
					}
					clearTimeout(a.performance.timer);
					a.performance.timer = setTimeout(a.performance.display, 500);
				},
				display: function () {
					var t = p.name + ":";
					var n = 0;
					r = false;
					clearTimeout(a.performance.timer);
					e.each(l, function (e, t) {
						n += t["Execution Time"];
					});
					t += " " + n + "ms";
					if ((console.group !== i || console.table !== i) && l.length > 0) {
						console.groupCollapsed(t);
						if (console.table) {
							console.table(l);
						} else {
							e.each(l, function (e, t) {
								console.log(t.Name + ": " + t["Execution Time"] + "ms");
							});
						}
						console.groupEnd();
					}
					l = [];
				}
			},
			invoke: function (t, n, o) {
				var r;
				var l;
				var c;
				var u = b;
				n = n || d;
				o = v || o;
				if (typeof t == "string" && u !== i) {
					t = t.split(/[\. ]/);
					r = t.length - 1;
					e.each(t, function (n, o) {
						var s = n != r ? o + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t;
						if (e.isPlainObject(u[s]) && n != r) {
							u = u[s];
						} else {
							if (u[s] !== i) {
								l = u[s];
								return false;
							}
							if (!e.isPlainObject(u[o]) || n == r) {
								if (u[o] !== i) {
									l = u[o];
									return false;
								} else {
									a.error(h.method, t);
									return false;
								}
							}
							u = u[o];
						}
					});
				}
				if (e.isFunction(l)) {
					c = l.apply(o, n);
				} else if (l !== i) {
					c = l;
				}
				if (e.isArray(s)) {
					s.push(c);
				} else if (s !== i) {
					s = [s, c];
				} else if (c !== i) {
					s = c;
				}
				return l;
			}
		};
		if (u) {
			if (b === i) {
				a.initialize();
			}
			a.invoke(c);
		} else {
			if (b !== i) {
				a.destroy();
			}
			a.initialize();
		}
		if (s !== i) {
			return s;
		} else {
			return this;
		}
	};
	e.site.settings = {
		name: "Site",
		namespace: "site",
		error: {
			console: "Console cannot be restored, most likely it was overwritten outside of module",
			method: "The method you called is not defined."
		},
		debug: false,
		verbose: false,
		performance: true,
		modules: ["accordion", "api", "checkbox", "dimmer", "dropdown", "embed", "form", "modal", "nag", "popup", "rating", "shape", "sidebar", "state", "sticky", "tab", "transition", "visit", "visibility"],
		siteNamespace: "site",
		namespaceStub: {
			cache: {},
			config: {},
			sections: {},
			section: {},
			utilities: {}
		}
	};
	e.extend(e.expr[":"], {
		data: e.expr.createPseudo ? e.expr.createPseudo(function (t) {
			return function (n) {
				return !!e.data(n, t);
			};
		}) : function (t, n, i) {
			return !!e.data(t, i[3]);
		}
	});
})(jQuery, window, document);
(function (e, t, n, i) {
	"use strict";

	t = t !== undefined && t.Math == Math ? t : typeof self != "undefined" && self.Math == Math ? self : Function("return this")();
	e.fn.form = function (t) {
		var o;
		var a = e(this);
		var s = a.selector || "";
		var r = new Date().getTime();
		var l = [];
		var c = arguments[0];
		var u = arguments[1];
		var d = typeof c == "string";
		var p = [].slice.call(arguments, 1);
		a.each(function () {
			var f;
			var h;
			var m;
			var g;
			var v;
			var b;
			var y;
			var w;
			var _;
			var k;
			var x;
			var C;
			var S;
			var A;
			var T;
			var P;
			var j;
			var E;
			var N;
			var O = e(this);
			var D = this;
			var I = [];
			var $ = false;
			(N = {
				initialize: function () {
					N.get.settings();
					if (d) {
						if (E === i) {
							N.instantiate();
						}
						N.invoke(c);
					} else {
						if (E !== i) {
							E.invoke("destroy");
						}
						N.verbose("Initializing form validation", O, w);
						N.bindEvents();
						N.set.defaults();
						N.instantiate();
					}
				},
				instantiate: function () {
					N.verbose("Storing instance of module", N);
					E = N;
					O.data(P, N);
				},
				destroy: function () {
					N.verbose("Destroying previous module", E);
					N.removeEvents();
					O.removeData(P);
				},
				refresh: function () {
					N.verbose("Refreshing selector cache");
					f = O.find(x.field);
					h = O.find(x.group);
					m = O.find(x.message);
					g = O.find(x.prompt);
					v = O.find(x.submit);
					b = O.find(x.clear);
					y = O.find(x.reset);
				},
				submit: function () {
					N.verbose("Submitting form", O);
					O.submit();
				},
				attachEvents: function (t, n) {
					n = n || "submit";
					e(t).on("click" + j, function (e) {
						N[n]();
						e.preventDefault();
					});
				},
				bindEvents: function () {
					N.verbose("Attaching form events");
					O.on("submit" + j, N.validate.form).on("blur" + j, x.field, N.event.field.blur).on("click" + j, x.submit, N.submit).on("click" + j, x.reset, N.reset).on("click" + j, x.clear, N.clear);
					if (w.keyboardShortcuts) {
						O.on("keydown" + j, x.field, N.event.field.keydown);
					}
					f.each(function () {
						var t = e(this);
						var n = t.prop("type");
						var i = N.get.changeEvent(n, t);
						e(this).on(i + j, N.event.field.change);
					});
				},
				clear: function () {
					f.each(function () {
						var t = e(this);
						var n = t.parent();
						var i = t.closest(h);
						var o = i.find(x.prompt);
						var a = t.data(k.defaultValue) || "";
						var s = n.is(x.uiCheckbox);
						var r = n.is(x.uiDropdown);
						if (i.hasClass(C.error)) {
							N.verbose("Resetting error on field", i);
							i.removeClass(C.error);
							o.remove();
						}
						if (r) {
							N.verbose("Resetting dropdown value", n, a);
							n.dropdown("clear");
						} else if (s) {
							t.prop("checked", false);
						} else {
							N.verbose("Resetting field value", t, a);
							t.val("");
						}
					});
				},
				reset: function () {
					f.each(function () {
						var t = e(this);
						var n = t.parent();
						var o = t.closest(h);
						var a = o.find(x.prompt);
						var s = t.data(k.defaultValue);
						var r = n.is(x.uiCheckbox);
						var l = n.is(x.uiDropdown);
						var c = o.hasClass(C.error);
						if (s !== i) {
							if (c) {
								N.verbose("Resetting error on field", o);
								o.removeClass(C.error);
								a.remove();
							}
							if (l) {
								N.verbose("Resetting dropdown value", n, s);
								n.dropdown("restore defaults");
							} else if (r) {
								N.verbose("Resetting checkbox value", n, s);
								t.prop("checked", s);
							} else {
								N.verbose("Resetting field value", t, s);
								t.val(s);
							}
						}
					});
				},
				determine: {
					isValid: function () {
						var t = true;
						e.each(_, function (e, n) {
							if (!N.validate.field(n, e, true)) {
								t = false;
							}
						});
						return t;
					}
				},
				is: {
					bracketedRule: function (e) {
						return e.type && e.type.match(w.regExp.bracket);
					},
					empty: function (e) {
						return !e || e.length === 0 || (e.is("input[type=\"checkbox\"]") ? !e.is(":checked") : N.is.blank(e));
					},
					blank: function (t) {
						return e.trim(t.val()) === "";
					},
					valid: function (t) {
						var n = true;
						if (t) {
							N.verbose("Checking if field is valid", t);
							return N.validate.field(_[t], t, false);
						} else {
							N.verbose("Checking if form is valid");
							e.each(_, function (e, t) {
								if (!N.is.valid(e)) {
									n = false;
								}
							});
							return n;
						}
					}
				},
				removeEvents: function () {
					O.off(j);
					f.off(j);
					v.off(j);
					f.off(j);
				},
				event: {
					field: {
						keydown: function (t) {
							var n = e(this);
							var i = t.which;
							var o = n.is(x.input);
							var a = n.is(x.checkbox);
							var s = n.closest(x.uiDropdown).length > 0;
							var r = {
								enter: 13,
								escape: 27
							};
							if (i == r.escape) {
								N.verbose("Escape key pressed blurring field");
								n.blur();
							}
							if (!t.ctrlKey && i == r.enter && !!o && !s && !a) {
								if (!$) {
									n.one("keyup" + j, N.event.field.keyup);
									N.submit();
									N.debug("Enter pressed on input submitting form");
								}
								$ = true;
							}
						},
						keyup: function () {
							$ = false;
						},
						blur: function (t) {
							var n = e(this);
							var i = n.closest(h);
							var o = N.get.validation(n);
							if (i.hasClass(C.error)) {
								N.debug("Revalidating field", n, o);
								if (o) {
									N.validate.field(o);
								}
							} else if (w.on == "blur" || w.on == "change") {
								if (o) {
									N.validate.field(o);
								}
							}
						},
						change: function (t) {
							var n = e(this);
							var i = n.closest(h);
							var o = N.get.validation(n);
							if (o && (w.on == "change" || i.hasClass(C.error) && w.revalidate)) {
								clearTimeout(N.timer);
								N.timer = setTimeout(function () {
									N.debug("Revalidating field", n, N.get.validation(n));
									N.validate.field(o);
								}, w.delay);
							}
						}
					}
				},
				get: {
					ancillaryValue: function (e) {
						return !!e.type && (!!e.value || !!N.is.bracketedRule(e)) && (e.value !== i ? e.value : e.type.match(w.regExp.bracket)[1] + "");
					},
					ruleName: function (e) {
						if (N.is.bracketedRule(e)) {
							return e.type.replace(e.type.match(w.regExp.bracket)[0], "");
						} else {
							return e.type;
						}
					},
					changeEvent: function (e, t) {
						if (e == "checkbox" || e == "radio" || e == "hidden" || t.is("select")) {
							return "change";
						} else {
							return N.get.inputEvent();
						}
					},
					inputEvent: function () {
						if (n.createElement("input").oninput !== i) {
							return "input";
						} else if (n.createElement("input").onpropertychange !== i) {
							return "propertychange";
						} else {
							return "keyup";
						}
					},
					prompt: function (e, t) {
						var n;
						var i;
						var o;
						var a = N.get.ruleName(e);
						var s = N.get.ancillaryValue(e);
						var r = e.prompt || w.prompt[a] || w.text.unspecifiedRule;
						var l = r.search("{value}") !== -1;
						var c = r.search("{name}") !== -1;
						if (c || l) {
							i = N.get.field(t.identifier);
						}
						if (l) {
							r = r.replace("{value}", i.val());
						}
						if (c) {
							n = i.closest(x.group).find("label").eq(0);
							o = n.length == 1 ? n.text() : i.prop("placeholder") || w.text.unspecifiedField;
							r = r.replace("{name}", o);
						}
						r = r.replace("{identifier}", t.identifier);
						r = r.replace("{ruleValue}", s);
						if (!e.prompt) {
							N.verbose("Using default validation prompt for type", r, a);
						}
						return r;
					},
					settings: function () {
						if (e.isPlainObject(t)) {
							var n;
							var o = Object.keys(t);
							if (o.length > 0 && t[o[0]].identifier !== i && t[o[0]].rules !== i) {
								w = e.extend(true, {}, e.fn.form.settings, u);
								_ = e.extend({}, e.fn.form.settings.defaults, t);
								N.error(w.error.oldSyntax, D);
								N.verbose("Extending settings from legacy parameters", _, w);
							} else {
								if (t.fields) {
									n = Object.keys(t.fields);
									if (typeof t.fields[n[0]] == "string" || e.isArray(t.fields[n[0]])) {
										e.each(t.fields, function (n, i) {
											if (typeof i == "string") {
												i = [i];
											}
											t.fields[n] = {
												rules: []
											};
											e.each(i, function (e, i) {
												t.fields[n].rules.push({
													type: i
												});
											});
										});
									}
								}
								w = e.extend(true, {}, e.fn.form.settings, t);
								_ = e.extend({}, e.fn.form.settings.defaults, w.fields);
								N.verbose("Extending settings", _, w);
							}
						} else {
							w = e.fn.form.settings;
							_ = e.fn.form.settings.defaults;
							N.verbose("Using default form validation", _, w);
						}
						T = w.namespace;
						k = w.metadata;
						x = w.selector;
						C = w.className;
						S = w.regExp;
						A = w.error;
						P = "module-" + T;
						j = "." + T;
						E = O.data(P);
						N.refresh();
					},
					field: function (t) {
						N.verbose("Finding field with identifier", t);
						t = N.escape.string(t);
						if (f.filter("#" + t).length > 0) {
							return f.filter("#" + t);
						} else if (f.filter("[name=\"" + t + "\"]").length > 0) {
							return f.filter("[name=\"" + t + "\"]");
						} else if (f.filter("[name=\"" + t + "[]\"]").length > 0) {
							return f.filter("[name=\"" + t + "[]\"]");
						} else if (f.filter("[data-" + k.validate + "=\"" + t + "\"]").length > 0) {
							return f.filter("[data-" + k.validate + "=\"" + t + "\"]");
						} else {
							return e("<input/>");
						}
					},
					fields: function (t) {
						var n = e();
						e.each(t, function (e, t) {
							n = n.add(N.get.field(t));
						});
						return n;
					},
					validation: function (t) {
						var n;
						var i;
						return !!_ && (e.each(_, function (e, o) {
							i = o.identifier || e;
							if (N.get.field(i)[0] == t[0]) {
								o.identifier = i;
								n = o;
							}
						}), n || false);
					},
					value: function (e) {
						var t = [];
						t.push(e);
						return N.get.values.call(D, t)[e];
					},
					values: function (t) {
						var n = {};
						(e.isArray(t) ? N.get.fields(t) : f).each(function (t, i) {
							var o = e(i);
							o.prop("type");
							var a = o.prop("name");
							var s = o.val();
							var r = o.is(x.checkbox);
							var l = o.is(x.radio);
							var c = a.indexOf("[]") !== -1;
							var u = !!r && o.is(":checked");
							if (a) {
								if (c) {
									a = a.replace("[]", "");
									n[a] ||= [];
									if (r) {
										if (u) {
											n[a].push(s || true);
										} else {
											n[a].push(false);
										}
									} else {
										n[a].push(s);
									}
								} else if (l) {
									if (u) {
										n[a] = s;
									}
								} else {
									n[a] = r ? !!u && (s || true) : s;
								}
							}
						});
						return n;
					}
				},
				has: {
					field: function (e) {
						N.verbose("Checking for existence of a field with identifier", e);
						if (typeof (e = N.escape.string(e)) != "string") {
							N.error(A.identifier, e);
						}
						return f.filter("#" + e).length > 0 || f.filter("[name=\"" + e + "\"]").length > 0 || f.filter("[data-" + k.validate + "=\"" + e + "\"]").length > 0;
					}
				},
				escape: {
					string: function (e) {
						return (e = String(e)).replace(S.escape, "\\$&");
					}
				},
				add: {
					prompt: function (t, n) {
						var o = N.get.field(t).closest(h);
						var a = o.children(x.prompt);
						var s = a.length !== 0;
						n = typeof n == "string" ? [n] : n;
						N.verbose("Adding field error state", t);
						o.addClass(C.error);
						if (w.inline) {
							if (!s) {
								(a = w.templates.prompt(n)).appendTo(o);
							}
							a.html(n[0]);
							if (s) {
								N.verbose("Inline errors are disabled, no inline error added", t);
							} else if (w.transition && e.fn.transition !== i && O.transition("is supported")) {
								N.verbose("Displaying error with css transition", w.transition);
								a.transition(w.transition + " in", w.duration);
							} else {
								N.verbose("Displaying error with fallback javascript animation");
								a.fadeIn(w.duration);
							}
						}
					},
					errors: function (e) {
						N.debug("Adding form error messages", e);
						N.set.error();
						m.html(w.templates.error(e));
					}
				},
				remove: {
					prompt: function (t) {
						var n = N.get.field(t).closest(h);
						var o = n.children(x.prompt);
						n.removeClass(C.error);
						if (w.inline && o.is(":visible")) {
							N.verbose("Removing prompt for field", t);
							if (w.transition && e.fn.transition !== i && O.transition("is supported")) {
								o.transition(w.transition + " out", w.duration, function () {
									o.remove();
								});
							} else {
								o.fadeOut(w.duration, function () {
									o.remove();
								});
							}
						}
					}
				},
				set: {
					success: function () {
						O.removeClass(C.error).addClass(C.success);
					},
					defaults: function () {
						f.each(function () {
							var t = e(this);
							var n = t.filter(x.checkbox).length > 0 ? t.is(":checked") : t.val();
							t.data(k.defaultValue, n);
						});
					},
					error: function () {
						O.removeClass(C.success).addClass(C.error);
					},
					value: function (e, t) {
						var n = {
							[e]: t
						};
						return N.set.values.call(D, n);
					},
					values: function (t) {
						if (!e.isEmptyObject(t)) {
							e.each(t, function (t, n) {
								var i;
								var o = N.get.field(t);
								var a = o.parent();
								var s = e.isArray(n);
								var r = a.is(x.uiCheckbox);
								var l = a.is(x.uiDropdown);
								var c = o.is(x.radio) && r;
								if (o.length > 0) {
									if (s && r) {
										N.verbose("Selecting multiple", n, o);
										a.checkbox("uncheck");
										e.each(n, function (e, t) {
											i = o.filter("[value=\"" + t + "\"]");
											a = i.parent();
											if (i.length > 0) {
												a.checkbox("check");
											}
										});
									} else if (c) {
										N.verbose("Selecting radio value", n, o);
										o.filter("[value=\"" + n + "\"]").parent(x.uiCheckbox).checkbox("check");
									} else if (r) {
										N.verbose("Setting checkbox value", n, a);
										if (n === true) {
											a.checkbox("check");
										} else {
											a.checkbox("uncheck");
										}
									} else if (l) {
										N.verbose("Setting dropdown value", n, a);
										a.dropdown("set selected", n);
									} else {
										N.verbose("Setting field value", n, o);
										o.val(n);
									}
								}
							});
						}
					}
				},
				validate: {
					form: function (e, t) {
						var n = N.get.values();
						if ($) {
							return false;
						}
						I = [];
						if (N.determine.isValid()) {
							N.debug("Form has no validation errors, submitting");
							N.set.success();
							if (t !== true) {
								return w.onSuccess.call(D, e, n);
							}
						} else {
							N.debug("Form has errors");
							N.set.error();
							if (!w.inline) {
								N.add.errors(I);
							}
							if (O.data("moduleApi") !== i) {
								e.stopImmediatePropagation();
							}
							if (t !== true) {
								return w.onFailure.call(D, I, n);
							}
						}
					},
					field: function (t, n, o) {
						o = o === i || o;
						if (typeof t == "string") {
							N.verbose("Validating field", t);
							n = t;
							t = _[t];
						}
						var a = t.identifier || n;
						var s = N.get.field(a);
						var r = !!t.depends && N.get.field(t.depends);
						var l = true;
						var c = [];
						if (!t.identifier) {
							N.debug("Using field name as identifier", a);
							t.identifier = a;
						}
						if (s.prop("disabled")) {
							N.debug("Field is disabled. Skipping", a);
							l = true;
						} else if (t.optional && N.is.blank(s)) {
							N.debug("Field is optional and blank. Skipping", a);
							l = true;
						} else if (t.depends && N.is.empty(r)) {
							N.debug("Field depends on another value that is not present or empty. Skipping", r);
							l = true;
						} else if (t.rules !== i) {
							e.each(t.rules, function (e, n) {
								if (N.has.field(a) && !N.validate.rule(t, n)) {
									N.debug("Field is invalid", a, n.type);
									c.push(N.get.prompt(n, t));
									l = false;
								}
							});
						}
						if (l) {
							if (o) {
								N.remove.prompt(a, c);
								w.onValid.call(s);
							}
							return true;
						} else {
							if (o) {
								I = I.concat(c);
								N.add.prompt(a, c);
								w.onInvalid.call(s, c);
							}
							return false;
						}
					},
					rule: function (t, n) {
						var o = N.get.field(t.identifier);
						n.type;
						var a = o.val();
						var s = N.get.ancillaryValue(n);
						var r = N.get.ruleName(n);
						var l = w.rules[r];
						if (e.isFunction(l)) {
							a = a === i || a === "" || a === null ? "" : e.trim(a + "");
							return l.call(o, a, s);
						} else {
							N.error(A.noRule, r);
							return;
						}
					}
				},
				setting: function (t, n) {
					if (e.isPlainObject(t)) {
						e.extend(true, w, t);
					} else {
						if (n === i) {
							return w[t];
						}
						w[t] = n;
					}
				},
				internal: function (t, n) {
					if (e.isPlainObject(t)) {
						e.extend(true, N, t);
					} else {
						if (n === i) {
							return N[t];
						}
						N[t] = n;
					}
				},
				debug: function () {
					if (!w.silent && w.debug) {
						if (w.performance) {
							N.performance.log(arguments);
						} else {
							N.debug = Function.prototype.bind.call(console.info, console, w.name + ":");
							N.debug.apply(console, arguments);
						}
					}
				},
				verbose: function () {
					if (!w.silent && w.verbose && w.debug) {
						if (w.performance) {
							N.performance.log(arguments);
						} else {
							N.verbose = Function.prototype.bind.call(console.info, console, w.name + ":");
							N.verbose.apply(console, arguments);
						}
					}
				},
				error: function () {
					if (!w.silent) {
						N.error = Function.prototype.bind.call(console.error, console, w.name + ":");
						N.error.apply(console, arguments);
					}
				},
				performance: {
					log: function (e) {
						var t;
						var n;
						var i;
						if (w.performance) {
							t = new Date().getTime();
							i = r || t;
							n = t - i;
							r = t;
							l.push({
								Name: e[0],
								Arguments: [].slice.call(e, 1) || "",
								Element: D,
								"Execution Time": n
							});
						}
						clearTimeout(N.performance.timer);
						N.performance.timer = setTimeout(N.performance.display, 500);
					},
					display: function () {
						var t = w.name + ":";
						var n = 0;
						r = false;
						clearTimeout(N.performance.timer);
						e.each(l, function (e, t) {
							n += t["Execution Time"];
						});
						t += " " + n + "ms";
						if (s) {
							t += " '" + s + "'";
						}
						if (a.length > 1) {
							t += " (" + a.length + ")";
						}
						if ((console.group !== i || console.table !== i) && l.length > 0) {
							console.groupCollapsed(t);
							if (console.table) {
								console.table(l);
							} else {
								e.each(l, function (e, t) {
									console.log(t.Name + ": " + t["Execution Time"] + "ms");
								});
							}
							console.groupEnd();
						}
						l = [];
					}
				},
				invoke: function (t, n, a) {
					var s;
					var r;
					var l;
					var c = E;
					n = n || p;
					a = D || a;
					if (typeof t == "string" && c !== i) {
						t = t.split(/[\. ]/);
						s = t.length - 1;
						e.each(t, function (n, o) {
							var a = n != s ? o + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t;
							if (e.isPlainObject(c[a]) && n != s) {
								c = c[a];
							} else {
								if (c[a] !== i) {
									r = c[a];
									return false;
								}
								if (!e.isPlainObject(c[o]) || n == s) {
									return c[o] !== i && (r = c[o], false);
								}
								c = c[o];
							}
						});
					}
					if (e.isFunction(r)) {
						l = r.apply(a, n);
					} else if (r !== i) {
						l = r;
					}
					if (e.isArray(o)) {
						o.push(l);
					} else if (o !== i) {
						o = [o, l];
					} else if (l !== i) {
						o = l;
					}
					return r;
				}
			}).initialize();
		});
		if (o !== i) {
			return o;
		} else {
			return this;
		}
	};
	e.fn.form.settings = {
		name: "Form",
		namespace: "form",
		debug: false,
		verbose: false,
		performance: true,
		fields: false,
		keyboardShortcuts: true,
		on: "submit",
		inline: false,
		delay: 200,
		revalidate: true,
		transition: "scale",
		duration: 200,
		onValid: function () {},
		onInvalid: function () {},
		onSuccess: function () {
			return true;
		},
		onFailure: function () {
			return false;
		},
		metadata: {
			defaultValue: "default",
			validate: "validate"
		},
		regExp: {
			htmlID: /^[a-zA-Z][\w:.-]*$/g,
			bracket: /\[(.*)\]/i,
			decimal: /^\d+\.?\d*$/,
			email: /^[a-z0-9!#$%&'*+\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i,
			escape: /[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,
			flags: /^\/(.*)\/(.*)?/,
			integer: /^\-?\d+$/,
			number: /^\-?\d*(\.\d+)?$/,
			url: /(https?:\/\/(?:www\.|(?!www))[^\s\.]+\.[^\s]{2,}|www\.[^\s]+\.[^\s]{2,})/i
		},
		text: {
			unspecifiedRule: "Please enter a valid value",
			unspecifiedField: "This field"
		},
		prompt: {
			empty: "{name} must have a value",
			checked: "{name} must be checked",
			email: "{name} must be a valid e-mail",
			url: "{name} must be a valid url",
			regExp: "{name} is not formatted correctly",
			integer: "{name} must be an integer",
			decimal: "{name} must be a decimal number",
			number: "{name} must be set to a number",
			is: "{name} must be \"{ruleValue}\"",
			isExactly: "{name} must be exactly \"{ruleValue}\"",
			not: "{name} cannot be set to \"{ruleValue}\"",
			notExactly: "{name} cannot be set to exactly \"{ruleValue}\"",
			contain: "{name} cannot contain \"{ruleValue}\"",
			containExactly: "{name} cannot contain exactly \"{ruleValue}\"",
			doesntContain: "{name} must contain  \"{ruleValue}\"",
			doesntContainExactly: "{name} must contain exactly \"{ruleValue}\"",
			minLength: "{name} must be at least {ruleValue} characters",
			length: "{name} must be at least {ruleValue} characters",
			exactLength: "{name} must be exactly {ruleValue} characters",
			maxLength: "{name} cannot be longer than {ruleValue} characters",
			match: "{name} must match {ruleValue} field",
			different: "{name} must have a different value than {ruleValue} field",
			creditCard: "{name} must be a valid credit card number",
			minCount: "{name} must have at least {ruleValue} choices",
			exactCount: "{name} must have exactly {ruleValue} choices",
			maxCount: "{name} must have {ruleValue} or less choices"
		},
		selector: {
			checkbox: "input[type=\"checkbox\"], input[type=\"radio\"]",
			clear: ".clear",
			field: "input, textarea, select",
			group: ".field",
			input: "input",
			message: ".error.message",
			prompt: ".prompt.label",
			radio: "input[type=\"radio\"]",
			reset: ".reset:not([type=\"reset\"])",
			submit: ".submit:not([type=\"submit\"])",
			uiCheckbox: ".ui.checkbox",
			uiDropdown: ".ui.dropdown"
		},
		className: {
			error: "error",
			label: "ui prompt label",
			pressed: "down",
			success: "success"
		},
		error: {
			identifier: "You must specify a string identifier for each field",
			method: "The method you called is not defined.",
			noRule: "There is no rule matching the one you specified",
			oldSyntax: "Starting in 2.0 forms now only take a single settings object. Validation settings converted to new syntax automatically."
		},
		templates: {
			error: function (t) {
				var n = "<ul class=\"list\">";
				e.each(t, function (e, t) {
					n += "<li>" + t + "</li>";
				});
				n += "</ul>";
				return e(n);
			},
			prompt: function (t) {
				return e("<div/>").addClass("ui basic red pointing prompt label").html(t[0]);
			}
		},
		rules: {
			empty: function (t) {
				return t !== i && t !== "" && (!e.isArray(t) || t.length !== 0);
			},
			checked: function () {
				return e(this).filter(":checked").length > 0;
			},
			email: function (t) {
				return e.fn.form.settings.regExp.email.test(t);
			},
			url: function (t) {
				return e.fn.form.settings.regExp.url.test(t);
			},
			regExp: function (t, n) {
				if (n instanceof RegExp) {
					return t.match(n);
				}
				var i;
				var o = n.match(e.fn.form.settings.regExp.flags);
				if (o) {
					n = o.length >= 2 ? o[1] : n;
					i = o.length >= 3 ? o[2] : "";
				}
				return t.match(new RegExp(n, i));
			},
			integer: function (t, n) {
				var o;
				var a;
				var s;
				var r = e.fn.form.settings.regExp.integer;
				if (n && ["", ".."].indexOf(n) === -1) {
					if (n.indexOf("..") == -1) {
						if (r.test(n)) {
							o = a = n - 0;
						}
					} else {
						s = n.split("..", 2);
						if (r.test(s[0])) {
							o = s[0] - 0;
						}
						if (r.test(s[1])) {
							a = s[1] - 0;
						}
					}
				}
				return r.test(t) && (o === i || t >= o) && (a === i || a >= t);
			},
			decimal: function (t) {
				return e.fn.form.settings.regExp.decimal.test(t);
			},
			number: function (t) {
				return e.fn.form.settings.regExp.number.test(t);
			},
			is: function (e, t) {
				t = typeof t == "string" ? t.toLowerCase() : t;
				return (e = typeof e == "string" ? e.toLowerCase() : e) == t;
			},
			isExactly: function (e, t) {
				return e == t;
			},
			not: function (e, t) {
				e = typeof e == "string" ? e.toLowerCase() : e;
				t = typeof t == "string" ? t.toLowerCase() : t;
				return e != t;
			},
			notExactly: function (e, t) {
				return e != t;
			},
			contains: function (t, n) {
				n = n.replace(e.fn.form.settings.regExp.escape, "\\$&");
				return t.search(new RegExp(n, "i")) !== -1;
			},
			containsExactly: function (t, n) {
				n = n.replace(e.fn.form.settings.regExp.escape, "\\$&");
				return t.search(new RegExp(n)) !== -1;
			},
			doesntContain: function (t, n) {
				n = n.replace(e.fn.form.settings.regExp.escape, "\\$&");
				return t.search(new RegExp(n, "i")) === -1;
			},
			doesntContainExactly: function (t, n) {
				n = n.replace(e.fn.form.settings.regExp.escape, "\\$&");
				return t.search(new RegExp(n)) === -1;
			},
			minLength: function (e, t) {
				return e !== i && e.length >= t;
			},
			length: function (e, t) {
				return e !== i && e.length >= t;
			},
			exactLength: function (e, t) {
				return e !== i && e.length == t;
			},
			maxLength: function (e, t) {
				return e !== i && e.length <= t;
			},
			match: function (t, n) {
				var o;
				e(this);
				if (e("[data-validate=\"" + n + "\"]").length > 0) {
					o = e("[data-validate=\"" + n + "\"]").val();
				} else if (e("#" + n).length > 0) {
					o = e("#" + n).val();
				} else if (e("[name=\"" + n + "\"]").length > 0) {
					o = e("[name=\"" + n + "\"]").val();
				} else if (e("[name=\"" + n + "[]\"]").length > 0) {
					o = e("[name=\"" + n + "[]\"]");
				}
				return o !== i && t.toString() == o.toString();
			},
			different: function (t, n) {
				var o;
				e(this);
				if (e("[data-validate=\"" + n + "\"]").length > 0) {
					o = e("[data-validate=\"" + n + "\"]").val();
				} else if (e("#" + n).length > 0) {
					o = e("#" + n).val();
				} else if (e("[name=\"" + n + "\"]").length > 0) {
					o = e("[name=\"" + n + "\"]").val();
				} else if (e("[name=\"" + n + "[]\"]").length > 0) {
					o = e("[name=\"" + n + "[]\"]");
				}
				return o !== i && t.toString() !== o.toString();
			},
			creditCard: function (t, n) {
				var i;
				var o;
				var a = {
					visa: {
						pattern: /^4/,
						length: [16]
					},
					amex: {
						pattern: /^3[47]/,
						length: [15]
					},
					mastercard: {
						pattern: /^5[1-5]/,
						length: [16]
					},
					discover: {
						pattern: /^(6011|622(12[6-9]|1[3-9][0-9]|[2-8][0-9]{2}|9[0-1][0-9]|92[0-5]|64[4-9])|65)/,
						length: [16]
					},
					unionPay: {
						pattern: /^(62|88)/,
						length: [16, 17, 18, 19]
					},
					jcb: {
						pattern: /^35(2[89]|[3-8][0-9])/,
						length: [16]
					},
					maestro: {
						pattern: /^(5018|5020|5038|6304|6759|676[1-3])/,
						length: [12, 13, 14, 15, 16, 17, 18, 19]
					},
					dinersClub: {
						pattern: /^(30[0-5]|^36)/,
						length: [14]
					},
					laser: {
						pattern: /^(6304|670[69]|6771)/,
						length: [16, 17, 18, 19]
					},
					visaElectron: {
						pattern: /^(4026|417500|4508|4844|491(3|7))/,
						length: [16]
					}
				};
				var s = {};
				var r = false;
				var l = typeof n == "string" && n.split(",");
				if (typeof t == "string" && t.length !== 0) {
					t = t.replace(/[\-]/g, "");
					if (l && (e.each(l, function (n, i) {
						if ((o = a[i]) && (s = {
							length: e.inArray(t.length, o.length) !== -1,
							pattern: t.search(o.pattern) !== -1
						}).length && s.pattern) {
							r = true;
						}
					}), !r)) {
						return false;
					}
					if ((i = {
						number: e.inArray(t.length, a.unionPay.length) !== -1,
						pattern: t.search(a.unionPay.pattern) !== -1
					}).number && i.pattern) {
						return true;
					}
					for (var c = t.length, u = 0, d = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [0, 2, 4, 6, 8, 1, 3, 5, 7, 9]], p = 0; c--;) {
						p += d[u][parseInt(t.charAt(c), 10)];
						u ^= 1;
					}
					return p % 10 == 0 && p > 0;
				}
			},
			minCount: function (e, t) {
				return t == 0 || (t == 1 ? e !== "" : e.split(",").length >= t);
			},
			exactCount: function (e, t) {
				if (t == 0) {
					return e === "";
				} else if (t == 1) {
					return e !== "" && e.search(",") === -1;
				} else {
					return e.split(",").length == t;
				}
			},
			maxCount: function (e, t) {
				return t != 0 && (t == 1 ? e.search(",") === -1 : e.split(",").length <= t);
			}
		}
	};
})(jQuery, window, document);
(function (e, t, n, i) {
	"use strict";

	t = t !== undefined && t.Math == Math ? t : typeof self != "undefined" && self.Math == Math ? self : Function("return this")();
	e.fn.accordion = function (n) {
		var o;
		var a = e(this);
		var s = new Date().getTime();
		var r = [];
		var l = arguments[0];
		var c = typeof l == "string";
		var u = [].slice.call(arguments, 1);
		if (!t.requestAnimationFrame && !t.mozRequestAnimationFrame && !t.webkitRequestAnimationFrame) {
			t.msRequestAnimationFrame;
		}
		a.each(function () {
			var d;
			var p;
			var f = e.isPlainObject(n) ? e.extend(true, {}, e.fn.accordion.settings, n) : e.extend({}, e.fn.accordion.settings);
			var h = f.className;
			var m = f.namespace;
			var g = f.selector;
			var v = f.error;
			var b = "." + m;
			var y = "module-" + m;
			var w = a.selector || "";
			var _ = e(this);
			var k = _.find(g.title);
			var x = _.find(g.content);
			var C = this;
			var S = _.data(y);
			p = {
				initialize: function () {
					p.debug("Initializing", _);
					p.bind.events();
					if (f.observeChanges) {
						p.observeChanges();
					}
					p.instantiate();
				},
				instantiate: function () {
					S = p;
					_.data(y, p);
				},
				destroy: function () {
					p.debug("Destroying previous instance", _);
					_.off(b).removeData(y);
				},
				refresh: function () {
					k = _.find(g.title);
					x = _.find(g.content);
				},
				observeChanges: function () {
					if ("MutationObserver" in t) {
						(d = new MutationObserver(function (e) {
							p.debug("DOM tree modified, updating selector cache");
							p.refresh();
						})).observe(C, {
							childList: true,
							subtree: true
						});
						p.debug("Setting up mutation observer", d);
					}
				},
				bind: {
					events: function () {
						p.debug("Binding delegated events");
						_.on(f.on + b, g.trigger, p.event.click);
					}
				},
				event: {
					click: function () {
						p.toggle.call(this);
					}
				},
				toggle: function (t) {
					var n = t !== i ? typeof t == "number" ? k.eq(t) : e(t).closest(g.title) : e(this).closest(g.title);
					var o = n.next(x);
					var a = o.hasClass(h.animating);
					var s = o.hasClass(h.active);
					var r = s && !a;
					var l = !s && a;
					p.debug("Toggling visibility of content", n);
					if (r || l) {
						if (f.collapsible) {
							p.close.call(n);
						} else {
							p.debug("Cannot close accordion content collapsing is disabled");
						}
					} else {
						p.open.call(n);
					}
				},
				open: function (t) {
					var n = t !== i ? typeof t == "number" ? k.eq(t) : e(t).closest(g.title) : e(this).closest(g.title);
					var o = n.next(x);
					var a = o.hasClass(h.animating);
					if (o.hasClass(h.active) || a) {
						p.debug("Accordion already open, skipping", o);
						return;
					} else {
						p.debug("Opening accordion content", n);
						f.onOpening.call(o);
						if (f.exclusive) {
							p.closeOthers.call(n);
						}
						n.addClass(h.active);
						o.stop(true, true).addClass(h.animating);
						if (f.animateChildren) {
							if (e.fn.transition !== i && _.transition("is supported")) {
								o.children().transition({
									animation: "fade in",
									queue: false,
									useFailSafe: true,
									debug: f.debug,
									verbose: f.verbose,
									duration: f.duration
								});
							} else {
								o.children().stop(true, true).animate({
									opacity: 1
								}, f.duration, p.resetOpacity);
							}
						}
						o.slideDown(f.duration, f.easing, function () {
							o.removeClass(h.animating).addClass(h.active);
							p.reset.display.call(this);
							f.onOpen.call(this);
							f.onChange.call(this);
						});
						return;
					}
				},
				close: function (t) {
					var n = t !== i ? typeof t == "number" ? k.eq(t) : e(t).closest(g.title) : e(this).closest(g.title);
					var o = n.next(x);
					var a = o.hasClass(h.animating);
					var s = o.hasClass(h.active);
					var r = !s && a;
					var l = s && a;
					if ((!!s || !!r) && !l) {
						p.debug("Closing accordion content", o);
						f.onClosing.call(o);
						n.removeClass(h.active);
						o.stop(true, true).addClass(h.animating);
						if (f.animateChildren) {
							if (e.fn.transition !== i && _.transition("is supported")) {
								o.children().transition({
									animation: "fade out",
									queue: false,
									useFailSafe: true,
									debug: f.debug,
									verbose: f.verbose,
									duration: f.duration
								});
							} else {
								o.children().stop(true, true).animate({
									opacity: 0
								}, f.duration, p.resetOpacity);
							}
						}
						o.slideUp(f.duration, f.easing, function () {
							o.removeClass(h.animating).removeClass(h.active);
							p.reset.display.call(this);
							f.onClose.call(this);
							f.onChange.call(this);
						});
					}
				},
				closeOthers: function (t) {
					var n;
					var o;
					var a;
					var s = t !== i ? k.eq(t) : e(this).closest(g.title);
					var r = s.parents(g.content).prev(g.title);
					var l = s.closest(g.accordion);
					var c = g.title + "." + h.active + ":visible";
					var u = g.content + "." + h.active + ":visible";
					if (f.closeNested) {
						n = l.find(c).not(r);
						a = n.next(x);
					} else {
						n = l.find(c).not(r);
						o = l.find(u).find(c).not(r);
						n = n.not(o);
						a = n.next(x);
					}
					if (n.length > 0) {
						p.debug("Exclusive enabled, closing other content", n);
						n.removeClass(h.active);
						a.removeClass(h.animating).stop(true, true);
						if (f.animateChildren) {
							if (e.fn.transition !== i && _.transition("is supported")) {
								a.children().transition({
									animation: "fade out",
									useFailSafe: true,
									debug: f.debug,
									verbose: f.verbose,
									duration: f.duration
								});
							} else {
								a.children().stop(true, true).animate({
									opacity: 0
								}, f.duration, p.resetOpacity);
							}
						}
						a.slideUp(f.duration, f.easing, function () {
							e(this).removeClass(h.active);
							p.reset.display.call(this);
						});
					}
				},
				reset: {
					display: function () {
						p.verbose("Removing inline display from element", this);
						e(this).css("display", "");
						if (e(this).attr("style") === "") {
							e(this).attr("style", "").removeAttr("style");
						}
					},
					opacity: function () {
						p.verbose("Removing inline opacity from element", this);
						e(this).css("opacity", "");
						if (e(this).attr("style") === "") {
							e(this).attr("style", "").removeAttr("style");
						}
					}
				},
				setting: function (t, n) {
					p.debug("Changing setting", t, n);
					if (e.isPlainObject(t)) {
						e.extend(true, f, t);
					} else {
						if (n === i) {
							return f[t];
						}
						if (e.isPlainObject(f[t])) {
							e.extend(true, f[t], n);
						} else {
							f[t] = n;
						}
					}
				},
				internal: function (t, n) {
					p.debug("Changing internal", t, n);
					if (n === i) {
						return p[t];
					} else {
						if (e.isPlainObject(t)) {
							e.extend(true, p, t);
						} else {
							p[t] = n;
						}
						return;
					}
				},
				debug: function () {
					if (!f.silent && f.debug) {
						if (f.performance) {
							p.performance.log(arguments);
						} else {
							p.debug = Function.prototype.bind.call(console.info, console, f.name + ":");
							p.debug.apply(console, arguments);
						}
					}
				},
				verbose: function () {
					if (!f.silent && f.verbose && f.debug) {
						if (f.performance) {
							p.performance.log(arguments);
						} else {
							p.verbose = Function.prototype.bind.call(console.info, console, f.name + ":");
							p.verbose.apply(console, arguments);
						}
					}
				},
				error: function () {
					if (!f.silent) {
						p.error = Function.prototype.bind.call(console.error, console, f.name + ":");
						p.error.apply(console, arguments);
					}
				},
				performance: {
					log: function (e) {
						var t;
						var n;
						var i;
						if (f.performance) {
							t = new Date().getTime();
							i = s || t;
							n = t - i;
							s = t;
							r.push({
								Name: e[0],
								Arguments: [].slice.call(e, 1) || "",
								Element: C,
								"Execution Time": n
							});
						}
						clearTimeout(p.performance.timer);
						p.performance.timer = setTimeout(p.performance.display, 500);
					},
					display: function () {
						var t = f.name + ":";
						var n = 0;
						s = false;
						clearTimeout(p.performance.timer);
						e.each(r, function (e, t) {
							n += t["Execution Time"];
						});
						t += " " + n + "ms";
						if (w) {
							t += " '" + w + "'";
						}
						if ((console.group !== i || console.table !== i) && r.length > 0) {
							console.groupCollapsed(t);
							if (console.table) {
								console.table(r);
							} else {
								e.each(r, function (e, t) {
									console.log(t.Name + ": " + t["Execution Time"] + "ms");
								});
							}
							console.groupEnd();
						}
						r = [];
					}
				},
				invoke: function (t, n, a) {
					var s;
					var r;
					var l;
					var c = S;
					n = n || u;
					a = C || a;
					if (typeof t == "string" && c !== i) {
						t = t.split(/[\. ]/);
						s = t.length - 1;
						e.each(t, function (n, o) {
							var a = n != s ? o + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t;
							if (e.isPlainObject(c[a]) && n != s) {
								c = c[a];
							} else {
								if (c[a] !== i) {
									r = c[a];
									return false;
								}
								if (!e.isPlainObject(c[o]) || n == s) {
									if (c[o] !== i) {
										r = c[o];
										return false;
									} else {
										p.error(v.method, t);
										return false;
									}
								}
								c = c[o];
							}
						});
					}
					if (e.isFunction(r)) {
						l = r.apply(a, n);
					} else if (r !== i) {
						l = r;
					}
					if (e.isArray(o)) {
						o.push(l);
					} else if (o !== i) {
						o = [o, l];
					} else if (l !== i) {
						o = l;
					}
					return r;
				}
			};
			if (c) {
				if (S === i) {
					p.initialize();
				}
				p.invoke(l);
			} else {
				if (S !== i) {
					S.invoke("destroy");
				}
				p.initialize();
			}
		});
		if (o !== i) {
			return o;
		} else {
			return this;
		}
	};
	e.fn.accordion.settings = {
		name: "Accordion",
		namespace: "accordion",
		silent: false,
		debug: false,
		verbose: false,
		performance: true,
		on: "click",
		observeChanges: true,
		exclusive: true,
		collapsible: true,
		closeNested: false,
		animateChildren: true,
		duration: 350,
		easing: "easeOutQuad",
		onOpening: function () {},
		onOpen: function () {},
		onClosing: function () {},
		onClose: function () {},
		onChange: function () {},
		error: {
			method: "The method you called is not defined"
		},
		className: {
			active: "active",
			animating: "animating"
		},
		selector: {
			accordion: ".accordion",
			title: ".title",
			trigger: ".title",
			content: ".content"
		}
	};
	e.extend(e.easing, {
		easeOutQuad: function (e, t, n, i, o) {
			return -i * (t /= o) * (t - 2) + n;
		}
	});
})(jQuery, window, document);
(function (e, t, n, i) {
	"use strict";

	t = t !== undefined && t.Math == Math ? t : typeof self != "undefined" && self.Math == Math ? self : Function("return this")();
	e.fn.checkbox = function (o) {
		var a;
		var s = e(this);
		var r = s.selector || "";
		var l = new Date().getTime();
		var c = [];
		var u = arguments[0];
		var d = typeof u == "string";
		var p = [].slice.call(arguments, 1);
		s.each(function () {
			var s;
			var f;
			var h = e.extend(true, {}, e.fn.checkbox.settings, o);
			var m = h.className;
			var g = h.namespace;
			var v = h.selector;
			var b = h.error;
			var y = "." + g;
			var w = "module-" + g;
			var _ = e(this);
			var k = e(this).children(v.label);
			var x = e(this).children(v.input);
			var C = x[0];
			var S = false;
			var A = false;
			var T = _.data(w);
			var P = this;
			f = {
				initialize: function () {
					f.verbose("Initializing checkbox", h);
					f.create.label();
					f.bind.events();
					f.set.tabbable();
					f.hide.input();
					f.observeChanges();
					f.instantiate();
					f.setup();
				},
				instantiate: function () {
					f.verbose("Storing instance of module", f);
					T = f;
					_.data(w, f);
				},
				destroy: function () {
					f.verbose("Destroying module");
					f.unbind.events();
					f.show.input();
					_.removeData(w);
				},
				fix: {
					reference: function () {
						if (_.is(v.input)) {
							f.debug("Behavior called on <input> adjusting invoked element");
							_ = _.closest(v.checkbox);
							f.refresh();
						}
					}
				},
				setup: function () {
					f.set.initialLoad();
					if (f.is.indeterminate()) {
						f.debug("Initial value is indeterminate");
						f.indeterminate();
					} else if (f.is.checked()) {
						f.debug("Initial value is checked");
						f.check();
					} else {
						f.debug("Initial value is unchecked");
						f.uncheck();
					}
					f.remove.initialLoad();
				},
				refresh: function () {
					k = _.children(v.label);
					x = _.children(v.input);
					C = x[0];
				},
				hide: {
					input: function () {
						f.verbose("Modifying <input> z-index to be unselectable");
						x.addClass(m.hidden);
					}
				},
				show: {
					input: function () {
						f.verbose("Modifying <input> z-index to be selectable");
						x.removeClass(m.hidden);
					}
				},
				observeChanges: function () {
					if ("MutationObserver" in t) {
						(s = new MutationObserver(function (e) {
							f.debug("DOM tree modified, updating selector cache");
							f.refresh();
						})).observe(P, {
							childList: true,
							subtree: true
						});
						f.debug("Setting up mutation observer", s);
					}
				},
				attachEvents: function (t, n) {
					var i = e(t);
					n = e.isFunction(f[n]) ? f[n] : f.toggle;
					if (i.length > 0) {
						f.debug("Attaching checkbox events to element", t, n);
						i.on("click" + y, n);
					} else {
						f.error(b.notFound);
					}
				},
				event: {
					click: function (t) {
						var n = e(t.target);
						if (n.is(v.input)) {
							f.verbose("Using default check action on initialized checkbox");
							return;
						} else if (n.is(v.link)) {
							f.debug("Clicking link inside checkbox, skipping toggle");
							return;
						} else {
							f.toggle();
							x.focus();
							t.preventDefault();
							return;
						}
					},
					keydown: function (e) {
						var t = e.which;
						var n = {
							enter: 13,
							space: 32,
							escape: 27
						};
						if (t == n.escape) {
							f.verbose("Escape key pressed blurring field");
							x.blur();
							A = true;
						} else if (e.ctrlKey || t != n.space && t != n.enter) {
							A = false;
						} else {
							f.verbose("Enter/space key pressed, toggling checkbox");
							f.toggle();
							A = true;
						}
					},
					keyup: function (e) {
						if (A) {
							e.preventDefault();
						}
					}
				},
				check: function () {
					if (f.should.allowCheck()) {
						f.debug("Checking checkbox", x);
						f.set.checked();
						if (!f.should.ignoreCallbacks()) {
							h.onChecked.call(C);
							h.onChange.call(C);
						}
					}
				},
				uncheck: function () {
					if (f.should.allowUncheck()) {
						f.debug("Unchecking checkbox");
						f.set.unchecked();
						if (!f.should.ignoreCallbacks()) {
							h.onUnchecked.call(C);
							h.onChange.call(C);
						}
					}
				},
				indeterminate: function () {
					if (f.should.allowIndeterminate()) {
						f.debug("Checkbox is already indeterminate");
						return;
					} else {
						f.debug("Making checkbox indeterminate");
						f.set.indeterminate();
						if (!f.should.ignoreCallbacks()) {
							h.onIndeterminate.call(C);
							h.onChange.call(C);
						}
						return;
					}
				},
				determinate: function () {
					if (f.should.allowDeterminate()) {
						f.debug("Checkbox is already determinate");
						return;
					} else {
						f.debug("Making checkbox determinate");
						f.set.determinate();
						if (!f.should.ignoreCallbacks()) {
							h.onDeterminate.call(C);
							h.onChange.call(C);
						}
						return;
					}
				},
				enable: function () {
					if (f.is.enabled()) {
						f.debug("Checkbox is already enabled");
						return;
					} else {
						f.debug("Enabling checkbox");
						f.set.enabled();
						h.onEnable.call(C);
						h.onEnabled.call(C);
						return;
					}
				},
				disable: function () {
					if (f.is.disabled()) {
						f.debug("Checkbox is already disabled");
						return;
					} else {
						f.debug("Disabling checkbox");
						f.set.disabled();
						h.onDisable.call(C);
						h.onDisabled.call(C);
						return;
					}
				},
				get: {
					radios: function () {
						var t = f.get.name();
						return e("input[name=\"" + t + "\"]").closest(v.checkbox);
					},
					otherRadios: function () {
						return f.get.radios().not(_);
					},
					name: function () {
						return x.attr("name");
					}
				},
				is: {
					initialLoad: function () {
						return S;
					},
					radio: function () {
						return x.hasClass(m.radio) || x.attr("type") == "radio";
					},
					indeterminate: function () {
						return x.prop("indeterminate") !== i && x.prop("indeterminate");
					},
					checked: function () {
						return x.prop("checked") !== i && x.prop("checked");
					},
					disabled: function () {
						return x.prop("disabled") !== i && x.prop("disabled");
					},
					enabled: function () {
						return !f.is.disabled();
					},
					determinate: function () {
						return !f.is.indeterminate();
					},
					unchecked: function () {
						return !f.is.checked();
					}
				},
				should: {
					allowCheck: function () {
						if (f.is.determinate() && f.is.checked() && !f.should.forceCallbacks()) {
							f.debug("Should not allow check, checkbox is already checked");
							return false;
						} else {
							return h.beforeChecked.apply(C) !== false || (f.debug("Should not allow check, beforeChecked cancelled"), false);
						}
					},
					allowUncheck: function () {
						if (f.is.determinate() && f.is.unchecked() && !f.should.forceCallbacks()) {
							f.debug("Should not allow uncheck, checkbox is already unchecked");
							return false;
						} else {
							return h.beforeUnchecked.apply(C) !== false || (f.debug("Should not allow uncheck, beforeUnchecked cancelled"), false);
						}
					},
					allowIndeterminate: function () {
						if (f.is.indeterminate() && !f.should.forceCallbacks()) {
							f.debug("Should not allow indeterminate, checkbox is already indeterminate");
							return false;
						} else {
							return h.beforeIndeterminate.apply(C) !== false || (f.debug("Should not allow indeterminate, beforeIndeterminate cancelled"), false);
						}
					},
					allowDeterminate: function () {
						if (f.is.determinate() && !f.should.forceCallbacks()) {
							f.debug("Should not allow determinate, checkbox is already determinate");
							return false;
						} else {
							return h.beforeDeterminate.apply(C) !== false || (f.debug("Should not allow determinate, beforeDeterminate cancelled"), false);
						}
					},
					forceCallbacks: function () {
						return f.is.initialLoad() && h.fireOnInit;
					},
					ignoreCallbacks: function () {
						return S && !h.fireOnInit;
					}
				},
				can: {
					change: function () {
						return !_.hasClass(m.disabled) && !_.hasClass(m.readOnly) && !x.prop("disabled") && !x.prop("readonly");
					},
					uncheck: function () {
						if (typeof h.uncheckable == "boolean") {
							return h.uncheckable;
						} else {
							return !f.is.radio();
						}
					}
				},
				set: {
					initialLoad: function () {
						S = true;
					},
					checked: function () {
						f.verbose("Setting class to checked");
						_.removeClass(m.indeterminate).addClass(m.checked);
						if (f.is.radio()) {
							f.uncheckOthers();
						}
						if (!f.is.indeterminate() && f.is.checked()) {
							f.debug("Input is already checked, skipping input property change");
							return;
						} else {
							f.verbose("Setting state to checked", C);
							x.prop("indeterminate", false).prop("checked", true);
							f.trigger.change();
							return;
						}
					},
					unchecked: function () {
						f.verbose("Removing checked class");
						_.removeClass(m.indeterminate).removeClass(m.checked);
						if (!f.is.indeterminate() && f.is.unchecked()) {
							f.debug("Input is already unchecked");
							return;
						} else {
							f.debug("Setting state to unchecked");
							x.prop("indeterminate", false).prop("checked", false);
							f.trigger.change();
							return;
						}
					},
					indeterminate: function () {
						f.verbose("Setting class to indeterminate");
						_.addClass(m.indeterminate);
						if (f.is.indeterminate()) {
							f.debug("Input is already indeterminate, skipping input property change");
							return;
						} else {
							f.debug("Setting state to indeterminate");
							x.prop("indeterminate", true);
							f.trigger.change();
							return;
						}
					},
					determinate: function () {
						f.verbose("Removing indeterminate class");
						_.removeClass(m.indeterminate);
						if (f.is.determinate()) {
							f.debug("Input is already determinate, skipping input property change");
							return;
						} else {
							f.debug("Setting state to determinate");
							x.prop("indeterminate", false);
							return;
						}
					},
					disabled: function () {
						f.verbose("Setting class to disabled");
						_.addClass(m.disabled);
						if (f.is.disabled()) {
							f.debug("Input is already disabled, skipping input property change");
							return;
						} else {
							f.debug("Setting state to disabled");
							x.prop("disabled", "disabled");
							f.trigger.change();
							return;
						}
					},
					enabled: function () {
						f.verbose("Removing disabled class");
						_.removeClass(m.disabled);
						if (f.is.enabled()) {
							f.debug("Input is already enabled, skipping input property change");
							return;
						} else {
							f.debug("Setting state to enabled");
							x.prop("disabled", false);
							f.trigger.change();
							return;
						}
					},
					tabbable: function () {
						f.verbose("Adding tabindex to checkbox");
						if (x.attr("tabindex") === i) {
							x.attr("tabindex", 0);
						}
					}
				},
				remove: {
					initialLoad: function () {
						S = false;
					}
				},
				trigger: {
					change: function () {
						var e = n.createEvent("HTMLEvents");
						var t = x[0];
						if (t) {
							f.verbose("Triggering native change event");
							e.initEvent("change", true, false);
							t.dispatchEvent(e);
						}
					}
				},
				create: {
					label: function () {
						if (x.prevAll(v.label).length > 0) {
							x.prev(v.label).detach().insertAfter(x);
							f.debug("Moving existing label", k);
						} else if (!f.has.label()) {
							k = e("<label>").insertAfter(x);
							f.debug("Creating label", k);
						}
					}
				},
				has: {
					label: function () {
						return k.length > 0;
					}
				},
				bind: {
					events: function () {
						f.verbose("Attaching checkbox events");
						_.on("click" + y, f.event.click).on("keydown" + y, v.input, f.event.keydown).on("keyup" + y, v.input, f.event.keyup);
					}
				},
				unbind: {
					events: function () {
						f.debug("Removing events");
						_.off(y);
					}
				},
				uncheckOthers: function () {
					var e = f.get.otherRadios();
					f.debug("Unchecking other radios", e);
					e.removeClass(m.checked);
				},
				toggle: function () {
					if (f.can.change()) {
						if (f.is.indeterminate() || f.is.unchecked()) {
							f.debug("Currently unchecked");
							f.check();
						} else if (f.is.checked() && f.can.uncheck()) {
							f.debug("Currently checked");
							f.uncheck();
						}
						return;
					} else {
						if (!f.is.radio()) {
							f.debug("Checkbox is read-only or disabled, ignoring toggle");
						}
						return;
					}
				},
				setting: function (t, n) {
					f.debug("Changing setting", t, n);
					if (e.isPlainObject(t)) {
						e.extend(true, h, t);
					} else {
						if (n === i) {
							return h[t];
						}
						if (e.isPlainObject(h[t])) {
							e.extend(true, h[t], n);
						} else {
							h[t] = n;
						}
					}
				},
				internal: function (t, n) {
					if (e.isPlainObject(t)) {
						e.extend(true, f, t);
					} else {
						if (n === i) {
							return f[t];
						}
						f[t] = n;
					}
				},
				debug: function () {
					if (!h.silent && h.debug) {
						if (h.performance) {
							f.performance.log(arguments);
						} else {
							f.debug = Function.prototype.bind.call(console.info, console, h.name + ":");
							f.debug.apply(console, arguments);
						}
					}
				},
				verbose: function () {
					if (!h.silent && h.verbose && h.debug) {
						if (h.performance) {
							f.performance.log(arguments);
						} else {
							f.verbose = Function.prototype.bind.call(console.info, console, h.name + ":");
							f.verbose.apply(console, arguments);
						}
					}
				},
				error: function () {
					if (!h.silent) {
						f.error = Function.prototype.bind.call(console.error, console, h.name + ":");
						f.error.apply(console, arguments);
					}
				},
				performance: {
					log: function (e) {
						var t;
						var n;
						var i;
						if (h.performance) {
							t = new Date().getTime();
							i = l || t;
							n = t - i;
							l = t;
							c.push({
								Name: e[0],
								Arguments: [].slice.call(e, 1) || "",
								Element: P,
								"Execution Time": n
							});
						}
						clearTimeout(f.performance.timer);
						f.performance.timer = setTimeout(f.performance.display, 500);
					},
					display: function () {
						var t = h.name + ":";
						var n = 0;
						l = false;
						clearTimeout(f.performance.timer);
						e.each(c, function (e, t) {
							n += t["Execution Time"];
						});
						t += " " + n + "ms";
						if (r) {
							t += " '" + r + "'";
						}
						if ((console.group !== i || console.table !== i) && c.length > 0) {
							console.groupCollapsed(t);
							if (console.table) {
								console.table(c);
							} else {
								e.each(c, function (e, t) {
									console.log(t.Name + ": " + t["Execution Time"] + "ms");
								});
							}
							console.groupEnd();
						}
						c = [];
					}
				},
				invoke: function (t, n, o) {
					var s;
					var r;
					var l;
					var c = T;
					n = n || p;
					o = P || o;
					if (typeof t == "string" && c !== i) {
						t = t.split(/[\. ]/);
						s = t.length - 1;
						e.each(t, function (n, o) {
							var a = n != s ? o + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t;
							if (e.isPlainObject(c[a]) && n != s) {
								c = c[a];
							} else {
								if (c[a] !== i) {
									r = c[a];
									return false;
								}
								if (!e.isPlainObject(c[o]) || n == s) {
									if (c[o] !== i) {
										r = c[o];
										return false;
									} else {
										f.error(b.method, t);
										return false;
									}
								}
								c = c[o];
							}
						});
					}
					if (e.isFunction(r)) {
						l = r.apply(o, n);
					} else if (r !== i) {
						l = r;
					}
					if (e.isArray(a)) {
						a.push(l);
					} else if (a !== i) {
						a = [a, l];
					} else if (l !== i) {
						a = l;
					}
					return r;
				}
			};
			if (d) {
				if (T === i) {
					f.initialize();
				}
				f.invoke(u);
			} else {
				if (T !== i) {
					T.invoke("destroy");
				}
				f.initialize();
			}
		});
		if (a !== i) {
			return a;
		} else {
			return this;
		}
	};
	e.fn.checkbox.settings = {
		name: "Checkbox",
		namespace: "checkbox",
		silent: false,
		debug: false,
		verbose: true,
		performance: true,
		uncheckable: "auto",
		fireOnInit: false,
		onChange: function () {},
		beforeChecked: function () {},
		beforeUnchecked: function () {},
		beforeDeterminate: function () {},
		beforeIndeterminate: function () {},
		onChecked: function () {},
		onUnchecked: function () {},
		onDeterminate: function () {},
		onIndeterminate: function () {},
		onEnable: function () {},
		onDisable: function () {},
		onEnabled: function () {},
		onDisabled: function () {},
		className: {
			checked: "checked",
			indeterminate: "indeterminate",
			disabled: "disabled",
			hidden: "hidden",
			radio: "radio",
			readOnly: "read-only"
		},
		error: {
			method: "The method you called is not defined"
		},
		selector: {
			checkbox: ".ui.checkbox",
			label: "label, .box",
			input: "input[type=\"checkbox\"], input[type=\"radio\"]",
			link: "a[href]"
		}
	};
})(jQuery, window, document);
(function (e, t, n, i) {
	"use strict";

	t = t !== undefined && t.Math == Math ? t : typeof self != "undefined" && self.Math == Math ? self : Function("return this")();
	e.fn.dimmer = function (t) {
		var o;
		var a = e(this);
		var s = new Date().getTime();
		var r = [];
		var l = arguments[0];
		var c = typeof l == "string";
		var u = [].slice.call(arguments, 1);
		a.each(function () {
			var d;
			var p;
			var f;
			var h = e.isPlainObject(t) ? e.extend(true, {}, e.fn.dimmer.settings, t) : e.extend({}, e.fn.dimmer.settings);
			var m = h.selector;
			var g = h.namespace;
			var v = h.className;
			var b = h.error;
			var y = "." + g;
			var w = "module-" + g;
			var _ = a.selector || "";
			var k = "ontouchstart" in n.documentElement ? "touchstart" : "click";
			var x = e(this);
			var C = this;
			var S = x.data(w);
			(f = {
				preinitialize: function () {
					if (f.is.dimmer()) {
						p = x.parent();
						d = x;
					} else {
						p = x;
						d = f.has.dimmer() ? h.dimmerName ? p.find(m.dimmer).filter("." + h.dimmerName) : p.find(m.dimmer) : f.create();
						f.set.variation();
					}
				},
				initialize: function () {
					f.debug("Initializing dimmer", h);
					f.bind.events();
					f.set.dimmable();
					f.instantiate();
				},
				instantiate: function () {
					f.verbose("Storing instance of module", f);
					S = f;
					x.data(w, S);
				},
				destroy: function () {
					f.verbose("Destroying previous module", d);
					f.unbind.events();
					f.remove.variation();
					p.off(y);
				},
				bind: {
					events: function () {
						if (h.on == "hover") {
							p.on("mouseenter" + y, f.show).on("mouseleave" + y, f.hide);
						} else if (h.on == "click") {
							p.on(k + y, f.toggle);
						}
						if (f.is.page()) {
							f.debug("Setting as a page dimmer", p);
							f.set.pageDimmer();
						}
						if (f.is.closable()) {
							f.verbose("Adding dimmer close event", d);
							p.on(k + y, m.dimmer, f.event.click);
						}
					}
				},
				unbind: {
					events: function () {
						x.removeData(w);
						p.off(y);
					}
				},
				event: {
					click: function (t) {
						f.verbose("Determining if event occured on dimmer", t);
						if (d.find(t.target).length === 0 || e(t.target).is(m.content)) {
							f.hide();
							t.stopImmediatePropagation();
						}
					}
				},
				addContent: function (t) {
					var n = e(t);
					f.debug("Add content to dimmer", n);
					if (n.parent()[0] !== d[0]) {
						n.detach().appendTo(d);
					}
				},
				create: function () {
					var t = e(h.template.dimmer());
					if (h.dimmerName) {
						f.debug("Creating named dimmer", h.dimmerName);
						t.addClass(h.dimmerName);
					}
					t.appendTo(p);
					return t;
				},
				show: function (t) {
					t = e.isFunction(t) ? t : function () {};
					f.debug("Showing dimmer", d, h);
					if (f.is.dimmed() && !f.is.animating() || !f.is.enabled()) {
						f.debug("Dimmer is already shown or disabled");
					} else {
						f.animate.show(t);
						h.onShow.call(C);
						h.onChange.call(C);
					}
				},
				hide: function (t) {
					t = e.isFunction(t) ? t : function () {};
					if (f.is.dimmed() || f.is.animating()) {
						f.debug("Hiding dimmer", d);
						f.animate.hide(t);
						h.onHide.call(C);
						h.onChange.call(C);
					} else {
						f.debug("Dimmer is not visible");
					}
				},
				toggle: function () {
					f.verbose("Toggling dimmer visibility", d);
					if (f.is.dimmed()) {
						f.hide();
					} else {
						f.show();
					}
				},
				animate: {
					show: function (t) {
						t = e.isFunction(t) ? t : function () {};
						if (h.useCSS && e.fn.transition !== i && d.transition("is supported")) {
							if (h.opacity !== "auto") {
								f.set.opacity();
							}
							d.transition({
								animation: h.transition + " in",
								queue: false,
								duration: f.get.duration(),
								useFailSafe: true,
								onStart: function () {
									f.set.dimmed();
								},
								onComplete: function () {
									f.set.active();
									t();
								}
							});
						} else {
							f.verbose("Showing dimmer animation with javascript");
							f.set.dimmed();
							if (h.opacity == "auto") {
								h.opacity = 0.8;
							}
							d.stop().css({
								opacity: 0,
								width: "100%",
								height: "100%"
							}).fadeTo(f.get.duration(), h.opacity, function () {
								d.removeAttr("style");
								f.set.active();
								t();
							});
						}
					},
					hide: function (t) {
						t = e.isFunction(t) ? t : function () {};
						if (h.useCSS && e.fn.transition !== i && d.transition("is supported")) {
							f.verbose("Hiding dimmer with css");
							d.transition({
								animation: h.transition + " out",
								queue: false,
								duration: f.get.duration(),
								useFailSafe: true,
								onStart: function () {
									f.remove.dimmed();
								},
								onComplete: function () {
									f.remove.active();
									t();
								}
							});
						} else {
							f.verbose("Hiding dimmer with javascript");
							f.remove.dimmed();
							d.stop().fadeOut(f.get.duration(), function () {
								f.remove.active();
								d.removeAttr("style");
								t();
							});
						}
					}
				},
				get: {
					dimmer: function () {
						return d;
					},
					duration: function () {
						if (typeof h.duration == "object") {
							if (f.is.active()) {
								return h.duration.hide;
							} else {
								return h.duration.show;
							}
						} else {
							return h.duration;
						}
					}
				},
				has: {
					dimmer: function () {
						if (h.dimmerName) {
							return x.find(m.dimmer).filter("." + h.dimmerName).length > 0;
						} else {
							return x.find(m.dimmer).length > 0;
						}
					}
				},
				is: {
					active: function () {
						return d.hasClass(v.active);
					},
					animating: function () {
						return d.is(":animated") || d.hasClass(v.animating);
					},
					closable: function () {
						if (h.closable == "auto") {
							return h.on != "hover";
						} else {
							return h.closable;
						}
					},
					dimmer: function () {
						return x.hasClass(v.dimmer);
					},
					dimmable: function () {
						return x.hasClass(v.dimmable);
					},
					dimmed: function () {
						return p.hasClass(v.dimmed);
					},
					disabled: function () {
						return p.hasClass(v.disabled);
					},
					enabled: function () {
						return !f.is.disabled();
					},
					page: function () {
						return p.is("body");
					},
					pageDimmer: function () {
						return d.hasClass(v.pageDimmer);
					}
				},
				can: {
					show: function () {
						return !d.hasClass(v.disabled);
					}
				},
				set: {
					opacity: function (e) {
						var t = d.css("background-color");
						var n = t.split(",");
						var i = n && n.length == 3;
						var o = n && n.length == 4;
						e = h.opacity === 0 ? 0 : h.opacity || e;
						if (i || o) {
							n[3] = e + ")";
							t = n.join(",");
						} else {
							t = "rgba(0, 0, 0, " + e + ")";
						}
						f.debug("Setting opacity to", e);
						d.css("background-color", t);
					},
					active: function () {
						d.addClass(v.active);
					},
					dimmable: function () {
						p.addClass(v.dimmable);
					},
					dimmed: function () {
						p.addClass(v.dimmed);
					},
					pageDimmer: function () {
						d.addClass(v.pageDimmer);
					},
					disabled: function () {
						d.addClass(v.disabled);
					},
					variation: function (e) {
						if (e = e || h.variation) {
							d.addClass(e);
						}
					}
				},
				remove: {
					active: function () {
						d.removeClass(v.active);
					},
					dimmed: function () {
						p.removeClass(v.dimmed);
					},
					disabled: function () {
						d.removeClass(v.disabled);
					},
					variation: function (e) {
						if (e = e || h.variation) {
							d.removeClass(e);
						}
					}
				},
				setting: function (t, n) {
					f.debug("Changing setting", t, n);
					if (e.isPlainObject(t)) {
						e.extend(true, h, t);
					} else {
						if (n === i) {
							return h[t];
						}
						if (e.isPlainObject(h[t])) {
							e.extend(true, h[t], n);
						} else {
							h[t] = n;
						}
					}
				},
				internal: function (t, n) {
					if (e.isPlainObject(t)) {
						e.extend(true, f, t);
					} else {
						if (n === i) {
							return f[t];
						}
						f[t] = n;
					}
				},
				debug: function () {
					if (!h.silent && h.debug) {
						if (h.performance) {
							f.performance.log(arguments);
						} else {
							f.debug = Function.prototype.bind.call(console.info, console, h.name + ":");
							f.debug.apply(console, arguments);
						}
					}
				},
				verbose: function () {
					if (!h.silent && h.verbose && h.debug) {
						if (h.performance) {
							f.performance.log(arguments);
						} else {
							f.verbose = Function.prototype.bind.call(console.info, console, h.name + ":");
							f.verbose.apply(console, arguments);
						}
					}
				},
				error: function () {
					if (!h.silent) {
						f.error = Function.prototype.bind.call(console.error, console, h.name + ":");
						f.error.apply(console, arguments);
					}
				},
				performance: {
					log: function (e) {
						var t;
						var n;
						var i;
						if (h.performance) {
							t = new Date().getTime();
							i = s || t;
							n = t - i;
							s = t;
							r.push({
								Name: e[0],
								Arguments: [].slice.call(e, 1) || "",
								Element: C,
								"Execution Time": n
							});
						}
						clearTimeout(f.performance.timer);
						f.performance.timer = setTimeout(f.performance.display, 500);
					},
					display: function () {
						var t = h.name + ":";
						var n = 0;
						s = false;
						clearTimeout(f.performance.timer);
						e.each(r, function (e, t) {
							n += t["Execution Time"];
						});
						t += " " + n + "ms";
						if (_) {
							t += " '" + _ + "'";
						}
						if (a.length > 1) {
							t += " (" + a.length + ")";
						}
						if ((console.group !== i || console.table !== i) && r.length > 0) {
							console.groupCollapsed(t);
							if (console.table) {
								console.table(r);
							} else {
								e.each(r, function (e, t) {
									console.log(t.Name + ": " + t["Execution Time"] + "ms");
								});
							}
							console.groupEnd();
						}
						r = [];
					}
				},
				invoke: function (t, n, a) {
					var s;
					var r;
					var l;
					var c = S;
					n = n || u;
					a = C || a;
					if (typeof t == "string" && c !== i) {
						t = t.split(/[\. ]/);
						s = t.length - 1;
						e.each(t, function (n, o) {
							var a = n != s ? o + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t;
							if (e.isPlainObject(c[a]) && n != s) {
								c = c[a];
							} else {
								if (c[a] !== i) {
									r = c[a];
									return false;
								}
								if (!e.isPlainObject(c[o]) || n == s) {
									if (c[o] !== i) {
										r = c[o];
										return false;
									} else {
										f.error(b.method, t);
										return false;
									}
								}
								c = c[o];
							}
						});
					}
					if (e.isFunction(r)) {
						l = r.apply(a, n);
					} else if (r !== i) {
						l = r;
					}
					if (e.isArray(o)) {
						o.push(l);
					} else if (o !== i) {
						o = [o, l];
					} else if (l !== i) {
						o = l;
					}
					return r;
				}
			}).preinitialize();
			if (c) {
				if (S === i) {
					f.initialize();
				}
				f.invoke(l);
			} else {
				if (S !== i) {
					S.invoke("destroy");
				}
				f.initialize();
			}
		});
		if (o !== i) {
			return o;
		} else {
			return this;
		}
	};
	e.fn.dimmer.settings = {
		name: "Dimmer",
		namespace: "dimmer",
		silent: false,
		debug: false,
		verbose: false,
		performance: true,
		dimmerName: false,
		variation: false,
		closable: "auto",
		useCSS: true,
		transition: "fade",
		on: false,
		opacity: "auto",
		duration: {
			show: 500,
			hide: 500
		},
		onChange: function () {},
		onShow: function () {},
		onHide: function () {},
		error: {
			method: "The method you called is not defined."
		},
		className: {
			active: "active",
			animating: "animating",
			dimmable: "dimmable",
			dimmed: "dimmed",
			dimmer: "dimmer",
			disabled: "disabled",
			hide: "hide",
			pageDimmer: "page",
			show: "show"
		},
		selector: {
			dimmer: "> .ui.dimmer",
			content: ".ui.dimmer > .content, .ui.dimmer > .content > .center"
		},
		template: {
			dimmer: function () {
				return e("<div />").attr("class", "ui dimmer");
			}
		}
	};
})(jQuery, window, document);
(function (e, t, n, i) {
	"use strict";

	t = t !== undefined && t.Math == Math ? t : typeof self != "undefined" && self.Math == Math ? self : Function("return this")();
	e.fn.dropdown = function (o) {
		var a;
		var s = e(this);
		var r = e(n);
		var l = s.selector || "";
		var c = "ontouchstart" in n.documentElement;
		var u = new Date().getTime();
		var d = [];
		var p = arguments[0];
		var f = typeof p == "string";
		var h = [].slice.call(arguments, 1);
		s.each(function (m) {
			var g;
			var v;
			var b;
			var y;
			var w;
			var _;
			var k;
			var x;
			var C = e.isPlainObject(o) ? e.extend(true, {}, e.fn.dropdown.settings, o) : e.extend({}, e.fn.dropdown.settings);
			var S = C.className;
			var A = C.message;
			var T = C.fields;
			var P = C.keys;
			var j = C.metadata;
			var E = C.namespace;
			var N = C.regExp;
			var O = C.selector;
			var D = C.error;
			var I = C.templates;
			var $ = "." + E;
			var M = "module-" + E;
			var z = e(this);
			var F = e(C.context);
			var L = z.find(O.text);
			var R = z.find(O.search);
			var H = z.find(O.sizer);
			var B = z.find(O.input);
			var q = z.find(O.icon);
			var V = z.prev().find(O.text).length > 0 ? z.prev().find(O.text) : z.prev();
			var U = z.children(O.menu);
			var W = U.find(O.item);
			var G = false;
			var Y = false;
			var K = false;
			var J = this;
			var X = z.data(M);
			x = {
				initialize: function () {
					x.debug("Initializing dropdown", C);
					if (x.is.alreadySetup()) {
						x.setup.reference();
					} else {
						x.setup.layout();
						x.refreshData();
						x.save.defaults();
						x.restore.selected();
						x.create.id();
						x.bind.events();
						x.observeChanges();
						x.instantiate();
					}
				},
				instantiate: function () {
					x.verbose("Storing instance of dropdown", x);
					X = x;
					z.data(M, x);
				},
				destroy: function () {
					x.verbose("Destroying previous dropdown", z);
					x.remove.tabbable();
					z.off($).removeData(M);
					U.off($);
					r.off(y);
					x.disconnect.menuObserver();
					x.disconnect.selectObserver();
				},
				observeChanges: function () {
					if ("MutationObserver" in t) {
						_ = new MutationObserver(x.event.select.mutation);
						k = new MutationObserver(x.event.menu.mutation);
						x.debug("Setting up mutation observer", _, k);
						x.observe.select();
						x.observe.menu();
					}
				},
				disconnect: {
					menuObserver: function () {
						if (k) {
							k.disconnect();
						}
					},
					selectObserver: function () {
						if (_) {
							_.disconnect();
						}
					}
				},
				observe: {
					select: function () {
						if (x.has.input()) {
							_.observe(B[0], {
								childList: true,
								subtree: true
							});
						}
					},
					menu: function () {
						if (x.has.menu()) {
							k.observe(U[0], {
								childList: true,
								subtree: true
							});
						}
					}
				},
				create: {
					id: function () {
						w = (Math.random().toString(16) + "000000000").substr(2, 8);
						y = "." + w;
						x.verbose("Creating unique id for element", w);
					},
					userChoice: function (t) {
						var n;
						var o;
						var a;
						return !!(t = t || x.get.userValues()) && (t = e.isArray(t) ? t : [t], e.each(t, function (t, s) {
							if (x.get.item(s) === false) {
								a = C.templates.addition(x.add.variables(A.addResult, s));
								o = e("<div />").html(a).attr("data-" + j.value, s).attr("data-" + j.text, s).addClass(S.addition).addClass(S.item);
								if (C.hideAdditions) {
									o.addClass(S.hidden);
								}
								n = n === i ? o : n.add(o);
								x.verbose("Creating user choices for value", s, o);
							}
						}), n);
					},
					userLabels: function (t) {
						var n = x.get.userValues();
						if (n) {
							x.debug("Adding user labels", n);
							e.each(n, function (e, t) {
								x.verbose("Adding custom user value");
								x.add.label(t, t);
							});
						}
					},
					menu: function () {
						U = e("<div />").addClass(S.menu).appendTo(z);
					},
					sizer: function () {
						H = e("<span />").addClass(S.sizer).insertAfter(R);
					}
				},
				search: function (e) {
					e = e !== i ? e : x.get.query();
					x.verbose("Searching for query", e);
					if (x.has.minCharacters(e)) {
						x.filter(e);
					} else {
						x.hide();
					}
				},
				select: {
					firstUnfiltered: function () {
						x.verbose("Selecting first non-filtered element");
						x.remove.selectedItem();
						W.not(O.unselectable).not(O.addition + O.hidden).eq(0).addClass(S.selected);
					},
					nextAvailable: function (e) {
						var t = (e = e.eq(0)).nextAll(O.item).not(O.unselectable).eq(0);
						var n = e.prevAll(O.item).not(O.unselectable).eq(0);
						if (t.length > 0) {
							x.verbose("Moving selection to", t);
							t.addClass(S.selected);
						} else {
							x.verbose("Moving selection to", n);
							n.addClass(S.selected);
						}
					}
				},
				setup: {
					api: function () {
						var e = {
							debug: C.debug,
							urlData: {
								value: x.get.value(),
								query: x.get.query()
							},
							on: false
						};
						x.verbose("First request, initializing API");
						z.api(e);
					},
					layout: function () {
						if (z.is("select")) {
							x.setup.select();
							x.setup.returnedObject();
						}
						if (!x.has.menu()) {
							x.create.menu();
						}
						if (x.is.search() && !x.has.search()) {
							x.verbose("Adding search input");
							R = e("<input />").addClass(S.search).prop("autocomplete", "off").insertBefore(L);
						}
						if (x.is.multiple() && x.is.searchSelection() && !x.has.sizer()) {
							x.create.sizer();
						}
						if (C.allowTab) {
							x.set.tabbable();
						}
					},
					select: function () {
						var t = x.get.selectValues();
						x.debug("Dropdown initialized on a select", t);
						if (z.is("select")) {
							B = z;
						}
						if (B.parent(O.dropdown).length > 0) {
							x.debug("UI dropdown already exists. Creating dropdown menu only");
							z = B.closest(O.dropdown);
							if (!x.has.menu()) {
								x.create.menu();
							}
							U = z.children(O.menu);
							x.setup.menu(t);
						} else {
							x.debug("Creating entire dropdown from select");
							z = e("<div />").attr("class", B.attr("class")).addClass(S.selection).addClass(S.dropdown).html(I.dropdown(t)).insertBefore(B);
							if (B.hasClass(S.multiple) && B.prop("multiple") === false) {
								x.error(D.missingMultiple);
								B.prop("multiple", true);
							}
							if (B.is("[multiple]")) {
								x.set.multiple();
							}
							if (B.prop("disabled")) {
								x.debug("Disabling dropdown");
								z.addClass(S.disabled);
							}
							B.removeAttr("class").detach().prependTo(z);
						}
						x.refresh();
					},
					menu: function (e) {
						U.html(I.menu(e, T));
						W = U.find(O.item);
					},
					reference: function () {
						x.debug("Dropdown behavior was called on select, replacing with closest dropdown");
						z = z.parent(O.dropdown);
						x.refresh();
						x.setup.returnedObject();
						if (f) {
							X = x;
							x.invoke(p);
						}
					},
					returnedObject: function () {
						var e = s.slice(0, m);
						var t = s.slice(m + 1);
						s = e.add(z).add(t);
					}
				},
				refresh: function () {
					x.refreshSelectors();
					x.refreshData();
				},
				refreshItems: function () {
					W = U.find(O.item);
				},
				refreshSelectors: function () {
					x.verbose("Refreshing selector cache");
					L = z.find(O.text);
					R = z.find(O.search);
					B = z.find(O.input);
					q = z.find(O.icon);
					V = z.prev().find(O.text).length > 0 ? z.prev().find(O.text) : z.prev();
					U = z.children(O.menu);
					W = U.find(O.item);
				},
				refreshData: function () {
					x.verbose("Refreshing cached metadata");
					W.removeData(j.text).removeData(j.value);
				},
				clearData: function () {
					x.verbose("Clearing metadata");
					W.removeData(j.text).removeData(j.value);
					z.removeData(j.defaultText).removeData(j.defaultValue).removeData(j.placeholderText);
				},
				toggle: function () {
					x.verbose("Toggling menu visibility");
					if (x.is.active()) {
						x.hide();
					} else {
						x.show();
					}
				},
				show: function (t) {
					t = e.isFunction(t) ? t : function () {};
					if (!x.can.show() && x.is.remote()) {
						x.debug("No API results retrieved, searching before show");
						x.queryRemote(x.get.query(), x.show);
					}
					if (x.can.show() && !x.is.active()) {
						x.debug("Showing dropdown");
						if (!!x.has.message() && !x.has.maxSelections() && !x.has.allResultsFiltered()) {
							x.remove.message();
						}
						if (x.is.allFiltered()) {
							return true;
						}
						if (C.onShow.call(J) !== false) {
							x.animate.show(function () {
								if (x.can.click()) {
									x.bind.intent();
								}
								if (x.has.menuSearch()) {
									x.focusSearch();
								}
								x.set.visible();
								t.call(J);
							});
						}
					}
				},
				hide: function (t) {
					t = e.isFunction(t) ? t : function () {};
					if (x.is.active()) {
						x.debug("Hiding dropdown");
						if (C.onHide.call(J) !== false) {
							x.animate.hide(function () {
								x.remove.visible();
								t.call(J);
							});
						}
					}
				},
				hideOthers: function () {
					x.verbose("Finding other dropdowns to hide");
					s.not(z).has(O.menu + "." + S.visible).dropdown("hide");
				},
				hideMenu: function () {
					x.verbose("Hiding menu  instantaneously");
					x.remove.active();
					x.remove.visible();
					U.transition("hide");
				},
				hideSubMenus: function () {
					var e = U.children(O.item).find(O.menu);
					x.verbose("Hiding sub menus", e);
					e.transition("hide");
				},
				bind: {
					events: function () {
						if (c) {
							x.bind.touchEvents();
						}
						x.bind.keyboardEvents();
						x.bind.inputEvents();
						x.bind.mouseEvents();
					},
					touchEvents: function () {
						x.debug("Touch device detected binding additional touch events");
						if (!x.is.searchSelection()) {
							if (x.is.single()) {
								z.on("touchstart" + $, x.event.test.toggle);
							}
						}
						U.on("touchstart" + $, O.item, x.event.item.mouseenter);
					},
					keyboardEvents: function () {
						x.verbose("Binding keyboard events");
						z.on("keydown" + $, x.event.keydown);
						if (x.has.search()) {
							z.on(x.get.inputEvent() + $, O.search, x.event.input);
						}
						if (x.is.multiple()) {
							r.on("keydown" + y, x.event.document.keydown);
						}
					},
					inputEvents: function () {
						x.verbose("Binding input change events");
						z.on("change" + $, O.input, x.event.change);
					},
					mouseEvents: function () {
						x.verbose("Binding mouse events");
						if (x.is.multiple()) {
							z.on("click" + $, O.label, x.event.label.click).on("click" + $, O.remove, x.event.remove.click);
						}
						if (x.is.searchSelection()) {
							z.on("mousedown" + $, x.event.mousedown).on("mouseup" + $, x.event.mouseup).on("mousedown" + $, O.menu, x.event.menu.mousedown).on("mouseup" + $, O.menu, x.event.menu.mouseup).on("click" + $, O.icon, x.event.icon.click).on("focus" + $, O.search, x.event.search.focus).on("click" + $, O.search, x.event.search.focus).on("blur" + $, O.search, x.event.search.blur).on("click" + $, O.text, x.event.text.focus);
							if (x.is.multiple()) {
								z.on("click" + $, x.event.click);
							}
						} else {
							if (C.on == "click") {
								z.on("click" + $, O.icon, x.event.icon.click).on("click" + $, x.event.test.toggle);
							} else if (C.on == "hover") {
								z.on("mouseenter" + $, x.delay.show).on("mouseleave" + $, x.delay.hide);
							} else {
								z.on(C.on + $, x.toggle);
							}
							z.on("mousedown" + $, x.event.mousedown).on("mouseup" + $, x.event.mouseup).on("focus" + $, x.event.focus);
							if (x.has.menuSearch()) {
								z.on("blur" + $, O.search, x.event.search.blur);
							} else {
								z.on("blur" + $, x.event.blur);
							}
						}
						U.on("mouseenter" + $, O.item, x.event.item.mouseenter).on("mouseleave" + $, O.item, x.event.item.mouseleave).on("click" + $, O.item, x.event.item.click);
					},
					intent: function () {
						x.verbose("Binding hide intent event to document");
						if (c) {
							r.on("touchstart" + y, x.event.test.touch).on("touchmove" + y, x.event.test.touch);
						}
						r.on("click" + y, x.event.test.hide);
					}
				},
				unbind: {
					intent: function () {
						x.verbose("Removing hide intent event from document");
						if (c) {
							r.off("touchstart" + y).off("touchmove" + y);
						}
						r.off("click" + y);
					}
				},
				filter: function (e) {
					var t = e !== i ? e : x.get.query();
					function n() {
						if (x.is.multiple()) {
							x.filterActive();
						}
						x.select.firstUnfiltered();
						if (x.has.allResultsFiltered()) {
							if (C.onNoResults.call(J, t)) {
								if (C.allowAdditions) {
									if (C.hideAdditions) {
										x.verbose("User addition with no menu, setting empty style");
										x.set.empty();
										x.hideMenu();
									}
								} else {
									x.verbose("All items filtered, showing message", t);
									x.add.message(A.noResults);
								}
							} else {
								x.verbose("All items filtered, hiding dropdown", t);
								x.hideMenu();
							}
						} else {
							x.remove.empty();
							x.remove.message();
						}
						if (C.allowAdditions) {
							x.add.userSuggestion(e);
						}
						if (x.is.searchSelection() && x.can.show() && x.is.focusedOnSearch()) {
							x.show();
						}
					}
					if (!C.useLabels || !x.has.maxSelections()) {
						if (C.apiSettings) {
							if (x.can.useAPI()) {
								x.queryRemote(t, function () {
									if (C.filterRemoteData) {
										x.filterItems(t);
									}
									n();
								});
							} else {
								x.error(D.noAPI);
							}
						} else {
							x.filterItems(t);
							n();
						}
					}
				},
				queryRemote: function (t, n) {
					var i = {
						errorDuration: false,
						cache: "local",
						throttle: C.throttle,
						urlData: {
							query: t
						},
						onError: function () {
							x.add.message(A.serverError);
							n();
						},
						onFailure: function () {
							x.add.message(A.serverError);
							n();
						},
						onSuccess: function (e) {
							x.remove.message();
							x.setup.menu({
								values: e[T.remoteValues]
							});
							n();
						}
					};
					if (!z.api("get request")) {
						x.setup.api();
					}
					i = e.extend(true, {}, i, C.apiSettings);
					z.api("setting", i).api("query");
				},
				filterItems: function (t) {
					var n = t !== i ? t : x.get.query();
					var o = null;
					var a = x.escape.string(n);
					var s = new RegExp("^" + a, "igm");
					if (x.has.query()) {
						o = [];
						x.verbose("Searching for matching values", n);
						W.each(function () {
							var t;
							var i;
							var a = e(this);
							if (C.match == "both" || C.match == "text") {
								if ((t = String(x.get.choiceText(a, false))).search(s) !== -1) {
									o.push(this);
									return true;
								}
								if (C.fullTextSearch === "exact" && x.exactSearch(n, t)) {
									o.push(this);
									return true;
								}
								if (C.fullTextSearch === true && x.fuzzySearch(n, t)) {
									o.push(this);
									return true;
								}
							}
							if (C.match == "both" || C.match == "value") {
								if ((i = String(x.get.choiceValue(a, t))).search(s) !== -1) {
									o.push(this);
									return true;
								}
								if (C.fullTextSearch === "exact" && x.exactSearch(n, i)) {
									o.push(this);
									return true;
								}
								if (C.fullTextSearch === true && x.fuzzySearch(n, i)) {
									o.push(this);
									return true;
								}
							}
						});
					}
					x.debug("Showing only matched items", n);
					x.remove.filteredItem();
					if (o) {
						W.not(o).addClass(S.filtered);
					}
				},
				fuzzySearch: function (e, t) {
					var n = t.length;
					var i = e.length;
					e = e.toLowerCase();
					t = t.toLowerCase();
					if (i > n) {
						return false;
					}
					if (i === n) {
						return e === t;
					}
					e: for (var o = 0, a = 0; i > o; o++) {
						var s = e.charCodeAt(o);
						for (; n > a;) {
							if (t.charCodeAt(a++) === s) {
								continue e;
							}
						}
						return false;
					}
					return true;
				},
				exactSearch: function (e, t) {
					e = e.toLowerCase();
					return (t = t.toLowerCase()).indexOf(e) > -1;
				},
				filterActive: function () {
					if (C.useLabels) {
						W.filter("." + S.active).addClass(S.filtered);
					}
				},
				focusSearch: function (e) {
					if (x.has.search() && !x.is.focusedOnSearch()) {
						if (e) {
							z.off("focus" + $, O.search);
							R.focus();
							z.on("focus" + $, O.search, x.event.search.focus);
						} else {
							R.focus();
						}
					}
				},
				forceSelection: function () {
					var e = W.not(S.filtered).filter("." + S.selected).eq(0);
					var t = W.not(S.filtered).filter("." + S.active).eq(0);
					var n = e.length > 0 ? e : t;
					if (n.length > 0 && !x.is.multiple()) {
						x.debug("Forcing partial selection to selected item", n);
						x.event.item.click.call(n, {}, true);
						return;
					} else {
						if (C.allowAdditions) {
							x.set.selected(x.get.query());
							x.remove.searchTerm();
						} else {
							x.remove.searchTerm();
						}
						return;
					}
				},
				event: {
					change: function () {
						if (!K) {
							x.debug("Input changed, updating selection");
							x.set.selected();
						}
					},
					focus: function () {
						if (C.showOnFocus && !G && x.is.hidden() && !v) {
							x.show();
						}
					},
					blur: function (e) {
						v = n.activeElement === this;
						if (!G && !v) {
							x.remove.activeLabel();
							x.hide();
						}
					},
					mousedown: function () {
						if (x.is.searchSelection()) {
							b = true;
						} else {
							G = true;
						}
					},
					mouseup: function () {
						if (x.is.searchSelection()) {
							b = false;
						} else {
							G = false;
						}
					},
					click: function (t) {
						if (e(t.target).is(z)) {
							if (x.is.focusedOnSearch()) {
								x.show();
							} else {
								x.focusSearch();
							}
						}
					},
					search: {
						focus: function () {
							G = true;
							if (x.is.multiple()) {
								x.remove.activeLabel();
							}
							if (C.showOnFocus) {
								x.search();
							}
						},
						blur: function (e) {
							v = n.activeElement === this;
							if (x.is.searchSelection() && !b) {
								if (!Y && !v) {
									if (C.forceSelection) {
										x.forceSelection();
									}
									x.hide();
								}
							}
							b = false;
						}
					},
					icon: {
						click: function (e) {
							x.toggle();
						}
					},
					text: {
						focus: function (e) {
							G = true;
							x.focusSearch();
						}
					},
					input: function (e) {
						if (x.is.multiple() || x.is.searchSelection()) {
							x.set.filtered();
						}
						clearTimeout(x.timer);
						x.timer = setTimeout(x.search, C.delay.search);
					},
					label: {
						click: function (t) {
							var n = e(this);
							var i = z.find(O.label);
							var o = i.filter("." + S.active);
							var a = n.nextAll("." + S.active);
							var s = n.prevAll("." + S.active);
							var r = a.length > 0 ? n.nextUntil(a).add(o).add(n) : n.prevUntil(s).add(o).add(n);
							if (t.shiftKey) {
								o.removeClass(S.active);
								r.addClass(S.active);
							} else if (t.ctrlKey) {
								n.toggleClass(S.active);
							} else {
								o.removeClass(S.active);
								n.addClass(S.active);
							}
							C.onLabelSelect.apply(this, i.filter("." + S.active));
						}
					},
					remove: {
						click: function () {
							var t = e(this).parent();
							if (t.hasClass(S.active)) {
								x.remove.activeLabels();
							} else {
								x.remove.activeLabels(t);
							}
						}
					},
					test: {
						toggle: function (e) {
							var t = x.is.multiple() ? x.show : x.toggle;
							if (!x.is.bubbledLabelClick(e) && !x.is.bubbledIconClick(e)) {
								if (x.determine.eventOnElement(e, t)) {
									e.preventDefault();
								}
							}
						},
						touch: function (e) {
							x.determine.eventOnElement(e, function () {
								if (e.type == "touchstart") {
									x.timer = setTimeout(function () {
										x.hide();
									}, C.delay.touch);
								} else if (e.type == "touchmove") {
									clearTimeout(x.timer);
								}
							});
							e.stopPropagation();
						},
						hide: function (e) {
							x.determine.eventInModule(e, x.hide);
						}
					},
					select: {
						mutation: function (e) {
							x.debug("<select> modified, recreating menu");
							x.setup.select();
						}
					},
					menu: {
						mutation: function (t) {
							var n = t[0];
							var i = e(!!n.addedNodes && n.addedNodes[0]);
							var o = e(!!n.removedNodes && n.removedNodes[0]);
							var a = i.add(o);
							var s = a.is(O.addition) || a.closest(O.addition).length > 0;
							var r = a.is(O.message) || a.closest(O.message).length > 0;
							if (s || r) {
								x.debug("Updating item selector cache");
								x.refreshItems();
							} else {
								x.debug("Menu modified, updating selector cache");
								x.refresh();
							}
						},
						mousedown: function () {
							Y = true;
						},
						mouseup: function () {
							Y = false;
						}
					},
					item: {
						mouseenter: function (t) {
							var n = e(t.target);
							var i = e(this);
							var o = i.children(O.menu);
							var a = i.siblings(O.item).children(O.menu);
							var s = o.length > 0;
							if (!(o.find(n).length > 0) && s) {
								clearTimeout(x.itemTimer);
								x.itemTimer = setTimeout(function () {
									x.verbose("Showing sub-menu", o);
									e.each(a, function () {
										x.animate.hide(false, e(this));
									});
									x.animate.show(false, o);
								}, C.delay.show);
								t.preventDefault();
							}
						},
						mouseleave: function (t) {
							var n = e(this).children(O.menu);
							if (n.length > 0) {
								clearTimeout(x.itemTimer);
								x.itemTimer = setTimeout(function () {
									x.verbose("Hiding sub-menu", n);
									x.animate.hide(false, n);
								}, C.delay.hide);
							}
						},
						click: function (t, i) {
							var o = e(this);
							var a = e(t ? t.target : "");
							var s = o.find(O.menu);
							var r = x.get.choiceText(o);
							var l = x.get.choiceValue(o, r);
							var c = s.length > 0;
							var u = s.find(a).length > 0;
							if (x.has.menuSearch()) {
								e(n.activeElement).blur();
							}
							if (!u && (!c || !!C.allowCategorySelection)) {
								if (x.is.searchSelection()) {
									if (C.allowAdditions) {
										x.remove.userAddition();
									}
									x.remove.searchTerm();
									if (!x.is.focusedOnSearch() && i != 1) {
										x.focusSearch(true);
									}
								}
								if (!C.useLabels) {
									x.remove.filteredItem();
									x.set.scrollPosition(o);
								}
								x.determine.selectAction.call(this, r, l);
							}
						}
					},
					document: {
						keydown: function (e) {
							var t = e.which;
							if (x.is.inObject(t, P)) {
								var n = z.find(O.label);
								var i = n.filter("." + S.active);
								i.data(j.value);
								var o = n.index(i);
								var a = n.length;
								var s = i.length > 0;
								var r = i.length > 1;
								var l = o === 0;
								var c = o + 1 == a;
								var u = x.is.searchSelection();
								var d = x.is.focusedOnSearch();
								var p = x.is.focused();
								var f = d && x.get.caretPosition() === 0;
								if (u && !s && !d) {
									return;
								}
								if (t == P.leftArrow) {
									if (!p && !f || s) {
										if (s) {
											if (e.shiftKey) {
												x.verbose("Adding previous label to selection");
											} else {
												x.verbose("Selecting previous label");
												n.removeClass(S.active);
											}
											if (l && !r) {
												i.addClass(S.active);
											} else {
												i.prev(O.siblingLabel).addClass(S.active).end();
											}
											e.preventDefault();
										}
									} else {
										x.verbose("Selecting previous label");
										n.last().addClass(S.active);
									}
								} else if (t == P.rightArrow) {
									if (p && !s) {
										n.first().addClass(S.active);
									}
									if (s) {
										if (e.shiftKey) {
											x.verbose("Adding next label to selection");
										} else {
											x.verbose("Selecting next label");
											n.removeClass(S.active);
										}
										if (c) {
											if (u) {
												if (d) {
													n.removeClass(S.active);
												} else {
													x.focusSearch();
												}
											} else if (r) {
												i.next(O.siblingLabel).addClass(S.active);
											} else {
												i.addClass(S.active);
											}
										} else {
											i.next(O.siblingLabel).addClass(S.active);
										}
										e.preventDefault();
									}
								} else if (t == P.deleteKey || t == P.backspace) {
									if (s) {
										x.verbose("Removing active labels");
										if (c && u && !d) {
											x.focusSearch();
										}
										i.last().next(O.siblingLabel).addClass(S.active);
										x.remove.activeLabels(i);
										e.preventDefault();
									} else if (f && !s && t == P.backspace) {
										x.verbose("Removing last label on input backspace");
										i = n.last().addClass(S.active);
										x.remove.activeLabels(i);
									}
								} else {
									i.removeClass(S.active);
								}
							}
						}
					},
					keydown: function (e) {
						var t = e.which;
						if (x.is.inObject(t, P)) {
							var n;
							var i = W.not(O.unselectable).filter("." + S.selected).eq(0);
							var o = U.children("." + S.active).eq(0);
							var a = i.length > 0 ? i : o;
							var s = a.length > 0 ? a.siblings(":not(." + S.filtered + ")").addBack() : U.children(":not(." + S.filtered + ")");
							var r = a.children(O.menu);
							var l = a.closest(O.menu);
							var c = l.hasClass(S.visible) || l.hasClass(S.animating) || l.parent(O.menu).length > 0;
							var u = r.length > 0;
							var d = a.length > 0;
							var p = a.not(O.unselectable).length > 0;
							var f = t == P.delimiter && C.allowAdditions && x.is.multiple();
							if (C.allowAdditions && C.hideAdditions && (t == P.enter || f) && p) {
								x.verbose("Selecting item from keyboard shortcut", a);
								x.event.item.click.call(a, e);
								if (x.is.searchSelection()) {
									x.remove.searchTerm();
								}
							}
							if (x.is.visible()) {
								if (t == P.enter || f) {
									if (t == P.enter && d && u && !C.allowCategorySelection) {
										x.verbose("Pressed enter on unselectable category, opening sub menu");
										t = P.rightArrow;
									} else if (p) {
										x.verbose("Selecting item from keyboard shortcut", a);
										x.event.item.click.call(a, e);
										if (x.is.searchSelection()) {
											x.remove.searchTerm();
										}
									}
									e.preventDefault();
								}
								if (d) {
									if (t == P.leftArrow && l[0] !== U[0]) {
										x.verbose("Left key pressed, closing sub-menu");
										x.animate.hide(false, l);
										a.removeClass(S.selected);
										l.closest(O.item).addClass(S.selected);
										e.preventDefault();
									}
									if (t == P.rightArrow && u) {
										x.verbose("Right key pressed, opening sub-menu");
										x.animate.show(false, r);
										a.removeClass(S.selected);
										r.find(O.item).eq(0).addClass(S.selected);
										e.preventDefault();
									}
								}
								if (t == P.upArrow) {
									n = d && c ? a.prevAll(O.item + ":not(" + O.unselectable + ")").eq(0) : W.eq(0);
									if (s.index(n) < 0) {
										x.verbose("Up key pressed but reached top of current menu");
										e.preventDefault();
										return;
									}
									x.verbose("Up key pressed, changing active item");
									a.removeClass(S.selected);
									n.addClass(S.selected);
									x.set.scrollPosition(n);
									if (C.selectOnKeydown && x.is.single()) {
										x.set.selectedItem(n);
									}
									e.preventDefault();
								}
								if (t == P.downArrow) {
									if ((n = d && c ? n = a.nextAll(O.item + ":not(" + O.unselectable + ")").eq(0) : W.eq(0)).length === 0) {
										x.verbose("Down key pressed but reached bottom of current menu");
										e.preventDefault();
										return;
									}
									x.verbose("Down key pressed, changing active item");
									W.removeClass(S.selected);
									n.addClass(S.selected);
									x.set.scrollPosition(n);
									if (C.selectOnKeydown && x.is.single()) {
										x.set.selectedItem(n);
									}
									e.preventDefault();
								}
								if (t == P.pageUp) {
									x.scrollPage("up");
									e.preventDefault();
								}
								if (t == P.pageDown) {
									x.scrollPage("down");
									e.preventDefault();
								}
								if (t == P.escape) {
									x.verbose("Escape key pressed, closing dropdown");
									x.hide();
								}
							} else {
								if (f) {
									e.preventDefault();
								}
								if (t == P.downArrow && !x.is.visible()) {
									x.verbose("Down key pressed, showing dropdown");
									x.select.firstUnfiltered();
									x.show();
									e.preventDefault();
								}
							}
						} else if (!x.has.search()) {
							x.set.selectedLetter(String.fromCharCode(t));
						}
					}
				},
				trigger: {
					change: function () {
						var e = n.createEvent("HTMLEvents");
						var t = B[0];
						if (t) {
							x.verbose("Triggering native change event");
							e.initEvent("change", true, false);
							t.dispatchEvent(e);
						}
					}
				},
				determine: {
					selectAction: function (t, n) {
						x.verbose("Determining action", C.action);
						if (e.isFunction(x.action[C.action])) {
							x.verbose("Triggering preset action", C.action, t, n);
							x.action[C.action].call(J, t, n, this);
						} else if (e.isFunction(C.action)) {
							x.verbose("Triggering user action", C.action, t, n);
							C.action.call(J, t, n, this);
						} else {
							x.error(D.action, C.action);
						}
					},
					eventInModule: function (t, i) {
						var o = e(t.target);
						var a = o.closest(n.documentElement).length > 0;
						var s = o.closest(z).length > 0;
						i = e.isFunction(i) ? i : function () {};
						if (a && !s) {
							x.verbose("Triggering event", i);
							i();
							return true;
						} else {
							x.verbose("Event occurred in dropdown, canceling callback");
							return false;
						}
					},
					eventOnElement: function (t, i) {
						var o = e(t.target);
						var a = o.closest(O.siblingLabel);
						var s = n.body.contains(t.target);
						var r = z.find(a).length === 0;
						var l = o.closest(U).length === 0;
						i = e.isFunction(i) ? i : function () {};
						if (s && r && l) {
							x.verbose("Triggering event", i);
							i();
							return true;
						} else {
							x.verbose("Event occurred in dropdown menu, canceling callback");
							return false;
						}
					}
				},
				action: {
					nothing: function () {},
					activate: function (t, n, o) {
						n = n !== i ? n : t;
						if (x.can.activate(e(o))) {
							x.set.selected(n, e(o));
							if (x.is.multiple() && !x.is.allFiltered()) {
								return;
							}
							x.hideAndClear();
						}
					},
					select: function (t, n, o) {
						n = n !== i ? n : t;
						if (x.can.activate(e(o))) {
							x.set.value(n, e(o));
							if (x.is.multiple() && !x.is.allFiltered()) {
								return;
							}
							x.hideAndClear();
						}
					},
					combo: function (t, n, o) {
						n = n !== i ? n : t;
						x.set.selected(n, e(o));
						x.hideAndClear();
					},
					hide: function (e, t, n) {
						x.set.value(t, e);
						x.hideAndClear();
					}
				},
				get: {
					id: function () {
						return w;
					},
					defaultText: function () {
						return z.data(j.defaultText);
					},
					defaultValue: function () {
						return z.data(j.defaultValue);
					},
					placeholderText: function () {
						return z.data(j.placeholderText) || "";
					},
					text: function () {
						return L.text();
					},
					query: function () {
						return e.trim(R.val());
					},
					searchWidth: function (e) {
						e = e !== i ? e : R.val();
						H.text(e);
						return Math.ceil(H.width() + 1);
					},
					selectionCount: function () {
						var t = x.get.values();
						if (x.is.multiple()) {
							if (e.isArray(t)) {
								return t.length;
							} else {
								return 0;
							}
						} else if (x.get.value() !== "") {
							return 1;
						} else {
							return 0;
						}
					},
					transition: function (e) {
						if (C.transition == "auto") {
							if (x.is.upward(e)) {
								return "slide up";
							} else {
								return "slide down";
							}
						} else {
							return C.transition;
						}
					},
					userValues: function () {
						var t = x.get.values();
						return !!t && (t = e.isArray(t) ? t : [t], e.grep(t, function (e) {
							return x.get.item(e) === false;
						}));
					},
					uniqueArray: function (t) {
						return e.grep(t, function (n, i) {
							return e.inArray(n, t) === i;
						});
					},
					caretPosition: function () {
						var e;
						var t;
						var i = R.get(0);
						if ("selectionStart" in i) {
							return i.selectionStart;
						} else if (n.selection) {
							i.focus();
							e = n.selection.createRange();
							t = e.text.length;
							e.moveStart("character", -i.value.length);
							return e.text.length - t;
						} else {
							return undefined;
						}
					},
					value: function () {
						var t = B.length > 0 ? B.val() : z.data(j.value);
						var n = e.isArray(t) && t.length === 1 && t[0] === "";
						if (t === i || n) {
							return "";
						} else {
							return t;
						}
					},
					values: function () {
						var e = x.get.value();
						if (e === "") {
							return "";
						} else if (!x.has.selectInput() && x.is.multiple()) {
							if (typeof e == "string") {
								return e.split(C.delimiter);
							} else {
								return "";
							}
						} else {
							return e;
						}
					},
					remoteValues: function () {
						var t = x.get.values();
						var n = false;
						if (t) {
							if (typeof t == "string") {
								t = [t];
							}
							e.each(t, function (e, t) {
								var i = x.read.remoteData(t);
								x.verbose("Restoring value from session data", i, t);
								if (i) {
									n ||= {};
									n[t] = i;
								}
							});
						}
						return n;
					},
					choiceText: function (t, n) {
						n = n !== i ? n : C.preserveHTML;
						if (t) {
							if (t.find(O.menu).length > 0) {
								x.verbose("Retrieving text of element with sub-menu");
								(t = t.clone()).find(O.menu).remove();
								t.find(O.menuIcon).remove();
							}
							if (t.data(j.text) !== i) {
								return t.data(j.text);
							} else if (n) {
								return e.trim(t.html());
							} else {
								return e.trim(t.text());
							}
						} else {
							return undefined;
						}
					},
					choiceValue: function (t, n) {
						n = n || x.get.choiceText(t);
						return !!t && (t.data(j.value) !== i ? String(t.data(j.value)) : typeof n == "string" ? e.trim(n.toLowerCase()) : String(n));
					},
					inputEvent: function () {
						var e = R[0];
						return !!e && (e.oninput !== i ? "input" : e.onpropertychange !== i ? "propertychange" : "keyup");
					},
					selectValues: function () {
						var t = {
							values: []
						};
						z.find("option").each(function () {
							var n = e(this);
							var o = n.html();
							var a = n.attr("disabled");
							var s = n.attr("value") !== i ? n.attr("value") : o;
							if (C.placeholder === "auto" && s === "") {
								t.placeholder = o;
							} else {
								t.values.push({
									name: o,
									value: s,
									disabled: a
								});
							}
						});
						if (C.placeholder && C.placeholder !== "auto") {
							x.debug("Setting placeholder value to", C.placeholder);
							t.placeholder = C.placeholder;
						}
						if (C.sortSelect) {
							t.values.sort(function (e, t) {
								if (e.name > t.name) {
									return 1;
								} else {
									return -1;
								}
							});
							x.debug("Retrieved and sorted values from select", t);
						} else {
							x.debug("Retrieved values from select", t);
						}
						return t;
					},
					activeItem: function () {
						return W.filter("." + S.active);
					},
					selectedItem: function () {
						var e = W.not(O.unselectable).filter("." + S.selected);
						if (e.length > 0) {
							return e;
						} else {
							return W.eq(0);
						}
					},
					itemWithAdditions: function (e) {
						var t = x.get.item(e);
						var n = x.create.userChoice(e);
						if (n && n.length > 0) {
							t = t.length > 0 ? t.add(n) : n;
						}
						return t;
					},
					item: function (t, n) {
						var o;
						var a;
						var s = false;
						t = t !== i ? t : x.get.values() !== i ? x.get.values() : x.get.text();
						o = a ? t.length > 0 : t !== i && t !== null;
						a = x.is.multiple() && e.isArray(t);
						n = t === "" || t === 0 || n || false;
						if (o) {
							W.each(function () {
								var o = e(this);
								var r = x.get.choiceText(o);
								var l = x.get.choiceValue(o, r);
								if (l !== null && l !== i) {
									if (a) {
										if (e.inArray(String(l), t) !== -1 || e.inArray(r, t) !== -1) {
											s = s ? s.add(o) : o;
										}
									} else if (n) {
										x.verbose("Ambiguous dropdown value using strict type check", o, t);
										if (l === t || r === t) {
											s = o;
											return true;
										}
									} else if (String(l) == String(t) || r == t) {
										x.verbose("Found select item by value", l, t);
										s = o;
										return true;
									}
								}
							});
						}
						return s;
					}
				},
				check: {
					maxSelections: function (e) {
						return !C.maxSelections || ((e = e !== i ? e : x.get.selectionCount()) >= C.maxSelections ? (x.debug("Maximum selection count reached"), C.useLabels && (W.addClass(S.filtered), x.add.message(A.maxSelections)), true) : (x.verbose("No longer at maximum selection count"), x.remove.message(), x.remove.filteredItem(), x.is.searchSelection() && x.filterItems(), false));
					}
				},
				restore: {
					defaults: function () {
						x.clear();
						x.restore.defaultText();
						x.restore.defaultValue();
					},
					defaultText: function () {
						var e = x.get.defaultText();
						if (e === x.get.placeholderText) {
							x.debug("Restoring default placeholder text", e);
							x.set.placeholderText(e);
						} else {
							x.debug("Restoring default text", e);
							x.set.text(e);
						}
					},
					placeholderText: function () {
						x.set.placeholderText();
					},
					defaultValue: function () {
						var e = x.get.defaultValue();
						if (e !== i) {
							x.debug("Restoring default value", e);
							if (e !== "") {
								x.set.value(e);
								x.set.selected();
							} else {
								x.remove.activeItem();
								x.remove.selectedItem();
							}
						}
					},
					labels: function () {
						if (C.allowAdditions) {
							if (!C.useLabels) {
								x.error(D.labels);
								C.useLabels = true;
							}
							x.debug("Restoring selected values");
							x.create.userLabels();
						}
						x.check.maxSelections();
					},
					selected: function () {
						x.restore.values();
						if (x.is.multiple()) {
							x.debug("Restoring previously selected values and labels");
							x.restore.labels();
						} else {
							x.debug("Restoring previously selected values");
						}
					},
					values: function () {
						x.set.initialLoad();
						if (C.apiSettings && C.saveRemoteData && x.get.remoteValues()) {
							x.restore.remoteValues();
						} else {
							x.set.selected();
						}
						x.remove.initialLoad();
					},
					remoteValues: function () {
						var t = x.get.remoteValues();
						x.debug("Recreating selected from session data", t);
						if (t) {
							if (x.is.single()) {
								e.each(t, function (e, t) {
									x.set.text(t);
								});
							} else {
								e.each(t, function (e, t) {
									x.add.label(e, t);
								});
							}
						}
					}
				},
				read: {
					remoteData: function (e) {
						var n;
						if (t.Storage === i) {
							x.error(D.noStorage);
							return;
						} else {
							return (n = sessionStorage.getItem(e)) !== i && n;
						}
					}
				},
				save: {
					defaults: function () {
						x.save.defaultText();
						x.save.placeholderText();
						x.save.defaultValue();
					},
					defaultValue: function () {
						var e = x.get.value();
						x.verbose("Saving default value as", e);
						z.data(j.defaultValue, e);
					},
					defaultText: function () {
						var e = x.get.text();
						x.verbose("Saving default text as", e);
						z.data(j.defaultText, e);
					},
					placeholderText: function () {
						var e;
						if (C.placeholder !== false && L.hasClass(S.placeholder)) {
							e = x.get.text();
							x.verbose("Saving placeholder text as", e);
							z.data(j.placeholderText, e);
						}
					},
					remoteData: function (e, n) {
						if (t.Storage === i) {
							x.error(D.noStorage);
							return;
						} else {
							x.verbose("Saving remote data to session storage", n, e);
							sessionStorage.setItem(n, e);
							return;
						}
					}
				},
				clear: function () {
					if (x.is.multiple() && C.useLabels) {
						x.remove.labels();
					} else {
						x.remove.activeItem();
						x.remove.selectedItem();
					}
					x.set.placeholderText();
					x.clearValue();
				},
				clearValue: function () {
					x.set.value("");
				},
				scrollPage: function (e, t) {
					var n;
					var i;
					var o = t || x.get.selectedItem();
					var a = o.closest(O.menu);
					var s = a.outerHeight();
					var r = a.scrollTop();
					var l = W.eq(0).outerHeight();
					var c = Math.floor(s / l);
					a.prop("scrollHeight");
					var u = e == "up" ? r - l * c : r + l * c;
					var d = W.not(O.unselectable);
					i = e == "up" ? d.index(o) - c : d.index(o) + c;
					if ((n = (e == "up" ? i >= 0 : i < d.length) ? d.eq(i) : e == "up" ? d.first() : d.last()).length > 0) {
						x.debug("Scrolling page", e, n);
						o.removeClass(S.selected);
						n.addClass(S.selected);
						if (C.selectOnKeydown && x.is.single()) {
							x.set.selectedItem(n);
						}
						a.scrollTop(u);
					}
				},
				set: {
					filtered: function () {
						var e = x.is.multiple();
						var t = x.is.searchSelection();
						var n = e && t;
						var i = t ? x.get.query() : "";
						var o = typeof i == "string" && i.length > 0;
						var a = x.get.searchWidth();
						var s = i !== "";
						if (e && o) {
							x.verbose("Adjusting input width", a, C.glyphWidth);
							R.css("width", a);
						}
						if (o || n && s) {
							x.verbose("Hiding placeholder text");
							L.addClass(S.filtered);
						} else if (!e || n && !s) {
							x.verbose("Showing placeholder text");
							L.removeClass(S.filtered);
						}
					},
					empty: function () {
						z.addClass(S.empty);
					},
					loading: function () {
						z.addClass(S.loading);
					},
					placeholderText: function (e) {
						e = e || x.get.placeholderText();
						x.debug("Setting placeholder text", e);
						x.set.text(e);
						L.addClass(S.placeholder);
					},
					tabbable: function () {
						if (x.is.searchSelection()) {
							x.debug("Added tabindex to searchable dropdown");
							R.val("").attr("tabindex", 0);
							U.attr("tabindex", -1);
						} else {
							x.debug("Added tabindex to dropdown");
							if (z.attr("tabindex") === i) {
								z.attr("tabindex", 0);
								U.attr("tabindex", -1);
							}
						}
					},
					initialLoad: function () {
						x.verbose("Setting initial load");
						g = true;
					},
					activeItem: function (e) {
						if (C.allowAdditions && e.filter(O.addition).length > 0) {
							e.addClass(S.filtered);
						} else {
							e.addClass(S.active);
						}
					},
					partialSearch: function (e) {
						var t = x.get.query().length;
						R.val(e.substr(0, t));
					},
					scrollPosition: function (e, t) {
						var n;
						var o;
						var a;
						var s;
						var r;
						var l;
						var c;
						var u;
						var d;
						n = (e = e || x.get.selectedItem()).closest(O.menu);
						o = e && e.length > 0;
						t = t !== i && t;
						if (e && n.length > 0 && o) {
							s = e.position().top;
							n.addClass(S.loading);
							l = n.scrollTop();
							r = n.offset().top;
							s = e.offset().top;
							a = l - r + s;
							if (!t) {
								c = n.height();
								d = a + 5 > l + c;
								u = l > a - 5;
							}
							x.debug("Scrolling to active item", a);
							if (t || u || d) {
								n.scrollTop(a);
							}
							n.removeClass(S.loading);
						}
					},
					text: function (e) {
						if (C.action !== "select") {
							if (C.action == "combo") {
								x.debug("Changing combo button text", e, V);
								if (C.preserveHTML) {
									V.html(e);
								} else {
									V.text(e);
								}
							} else {
								if (e !== x.get.placeholderText()) {
									L.removeClass(S.placeholder);
								}
								x.debug("Changing text", e, L);
								L.removeClass(S.filtered);
								if (C.preserveHTML) {
									L.html(e);
								} else {
									L.text(e);
								}
							}
						}
					},
					selectedItem: function (e) {
						var t = x.get.choiceValue(e);
						var n = x.get.choiceText(e, false);
						var i = x.get.choiceText(e, true);
						x.debug("Setting user selection to item", e);
						x.remove.activeItem();
						x.set.partialSearch(n);
						x.set.activeItem(e);
						x.set.selected(t, e);
						x.set.text(i);
					},
					selectedLetter: function (t) {
						var n;
						var i = W.filter("." + S.selected);
						var o = false;
						if (i.length > 0 && x.has.firstLetter(i, t)) {
							n = i.nextAll(W).eq(0);
							if (x.has.firstLetter(n, t)) {
								o = n;
							}
						}
						if (!o) {
							W.each(function () {
								if (x.has.firstLetter(e(this), t)) {
									o = e(this);
									return false;
								} else {
									return undefined;
								}
							});
						}
						if (o) {
							x.verbose("Scrolling to next value with letter", t);
							x.set.scrollPosition(o);
							i.removeClass(S.selected);
							o.addClass(S.selected);
							if (C.selectOnKeydown && x.is.single()) {
								x.set.selectedItem(o);
							}
						}
					},
					direction: function (e) {
						if (C.direction == "auto") {
							if (x.is.onScreen(e)) {
								x.remove.upward(e);
							} else {
								x.set.upward(e);
							}
						} else if (C.direction == "upward") {
							x.set.upward(e);
						}
					},
					upward: function (e) {
						(e || z).addClass(S.upward);
					},
					value: function (e, t, n) {
						var o = x.escape.value(e);
						var a = B.length > 0;
						x.has.value(e);
						var s = x.get.values();
						var r = e !== i ? String(e) : e;
						if (a) {
							if (!C.allowReselection && r == s && (x.verbose("Skipping value update already same value", e, s), !x.is.initialLoad())) {
								return;
							}
							if (x.is.single() && x.has.selectInput() && x.can.extendSelect()) {
								x.debug("Adding user option", e);
								x.add.optionValue(e);
							}
							x.debug("Updating input value", o, s);
							K = true;
							B.val(o);
							if (C.fireOnInit === false && x.is.initialLoad()) {
								x.debug("Input native change event ignored on initial load");
							} else {
								x.trigger.change();
							}
							K = false;
						} else {
							x.verbose("Storing value in metadata", o, B);
							if (o !== s) {
								z.data(j.value, r);
							}
						}
						if (C.fireOnInit === false && x.is.initialLoad()) {
							x.verbose("No callback on initial load", C.onChange);
						} else {
							C.onChange.call(J, e, t, n);
						}
					},
					active: function () {
						z.addClass(S.active);
					},
					multiple: function () {
						z.addClass(S.multiple);
					},
					visible: function () {
						z.addClass(S.visible);
					},
					exactly: function (e, t) {
						x.debug("Setting selected to exact values");
						x.clear();
						x.set.selected(e, t);
					},
					selected: function (t, n) {
						var i = x.is.multiple();
						if (n = C.allowAdditions ? n || x.get.itemWithAdditions(t) : n || x.get.item(t)) {
							x.debug("Setting selected menu item to", n);
							if (x.is.multiple()) {
								x.remove.searchWidth();
							}
							if (x.is.single()) {
								x.remove.activeItem();
								x.remove.selectedItem();
							} else if (C.useLabels) {
								x.remove.selectedItem();
							}
							n.each(function () {
								var t = e(this);
								var o = x.get.choiceText(t);
								var a = x.get.choiceValue(t, o);
								var s = t.hasClass(S.filtered);
								var r = t.hasClass(S.active);
								var l = t.hasClass(S.addition);
								var c = i && n.length == 1;
								if (i) {
									if (!r || l) {
										if (C.apiSettings && C.saveRemoteData) {
											x.save.remoteData(o, a);
										}
										if (C.useLabels) {
											x.add.value(a, o, t);
											x.add.label(a, o, c);
											x.set.activeItem(t);
											x.filterActive();
											x.select.nextAvailable(n);
										} else {
											x.add.value(a, o, t);
											x.set.text(x.add.variables(A.count));
											x.set.activeItem(t);
										}
									} else if (!s) {
										x.debug("Selected active value, removing label");
										x.remove.selected(a);
									}
								} else {
									if (C.apiSettings && C.saveRemoteData) {
										x.save.remoteData(o, a);
									}
									x.set.text(o);
									x.set.value(a, o, t);
									t.addClass(S.active).addClass(S.selected);
								}
							});
						}
					}
				},
				add: {
					label: function (t, n, i) {
						var o;
						var a = x.is.searchSelection() ? R : L;
						var s = x.escape.value(t);
						o = e("<a />").addClass(S.label).attr("data-" + j.value, s).html(I.label(s, n));
						o = C.onLabelCreate.call(o, s, n);
						if (x.has.label(t)) {
							x.debug("Label already exists, skipping", s);
							return;
						} else {
							if (C.label.variation) {
								o.addClass(C.label.variation);
							}
							if (i === true) {
								x.debug("Animating in label", o);
								o.addClass(S.hidden).insertBefore(a).transition(C.label.transition, C.label.duration);
							} else {
								x.debug("Adding selection label", o);
								o.insertBefore(a);
							}
							return;
						}
					},
					message: function (t) {
						var n = U.children(O.message);
						var i = C.templates.message(x.add.variables(t));
						if (n.length > 0) {
							n.html(i);
						} else {
							n = e("<div/>").html(i).addClass(S.message).appendTo(U);
						}
					},
					optionValue: function (t) {
						var n = x.escape.value(t);
						if (!(B.find("option[value=\"" + x.escape.string(n) + "\"]").length > 0)) {
							x.disconnect.selectObserver();
							if (x.is.single()) {
								x.verbose("Removing previous user addition");
								B.find("option." + S.addition).remove();
							}
							e("<option/>").prop("value", n).addClass(S.addition).html(t).appendTo(B);
							x.verbose("Adding user addition as an <option>", t);
							x.observe.select();
						}
					},
					userSuggestion: function (e) {
						var t;
						var n = U.children(O.addition);
						var i = x.get.item(e);
						var o = i && i.not(O.addition).length;
						var a = n.length > 0;
						if (!C.useLabels || !x.has.maxSelections()) {
							if (e === "" || o) {
								n.remove();
								return;
							}
							if (a) {
								n.data(j.value, e).data(j.text, e).attr("data-" + j.value, e).attr("data-" + j.text, e).removeClass(S.filtered);
								if (!C.hideAdditions) {
									t = C.templates.addition(x.add.variables(A.addResult, e));
									n.html(t);
								}
								x.verbose("Replacing user suggestion with new value", n);
							} else {
								(n = x.create.userChoice(e)).prependTo(U);
								x.verbose("Adding item choice to menu corresponding with user choice addition", n);
							}
							if (!C.hideAdditions || !!x.is.allFiltered()) {
								n.addClass(S.selected).siblings().removeClass(S.selected);
							}
							x.refreshItems();
						}
					},
					variables: function (e, t) {
						var n;
						var i;
						var o = e.search("{count}") !== -1;
						var a = e.search("{maxCount}") !== -1;
						var s = e.search("{term}") !== -1;
						x.verbose("Adding templated variables to message", e);
						if (o) {
							n = x.get.selectionCount();
							e = e.replace("{count}", n);
						}
						if (a) {
							n = x.get.selectionCount();
							e = e.replace("{maxCount}", C.maxSelections);
						}
						if (s) {
							i = t || x.get.query();
							e = e.replace("{term}", i);
						}
						return e;
					},
					value: function (t, n, i) {
						var o;
						var a = x.get.values();
						if (t === "") {
							x.debug("Cannot select blank values from multiselect");
							return;
						} else {
							if (e.isArray(a)) {
								o = a.concat([t]);
								o = x.get.uniqueArray(o);
							} else {
								o = [t];
							}
							if (x.has.selectInput()) {
								if (x.can.extendSelect()) {
									x.debug("Adding value to select", t, o, B);
									x.add.optionValue(t);
								}
							} else {
								o = o.join(C.delimiter);
								x.debug("Setting hidden input to delimited value", o, B);
							}
							if (C.fireOnInit === false && x.is.initialLoad()) {
								x.verbose("Skipping onadd callback on initial load", C.onAdd);
							} else {
								C.onAdd.call(J, t, n, i);
							}
							x.set.value(o, t, n, i);
							x.check.maxSelections();
							return;
						}
					}
				},
				remove: {
					active: function () {
						z.removeClass(S.active);
					},
					activeLabel: function () {
						z.find(O.label).removeClass(S.active);
					},
					empty: function () {
						z.removeClass(S.empty);
					},
					loading: function () {
						z.removeClass(S.loading);
					},
					initialLoad: function () {
						g = false;
					},
					upward: function (e) {
						(e || z).removeClass(S.upward);
					},
					visible: function () {
						z.removeClass(S.visible);
					},
					activeItem: function () {
						W.removeClass(S.active);
					},
					filteredItem: function () {
						if (!C.useLabels || !x.has.maxSelections()) {
							if (C.useLabels && x.is.multiple()) {
								W.not("." + S.active).removeClass(S.filtered);
							} else {
								W.removeClass(S.filtered);
							}
							x.remove.empty();
						}
					},
					optionValue: function (e) {
						var t = x.escape.value(e);
						var n = B.find("option[value=\"" + x.escape.string(t) + "\"]");
						if (n.length > 0 && n.hasClass(S.addition)) {
							if (_) {
								_.disconnect();
								x.verbose("Temporarily disconnecting mutation observer");
							}
							n.remove();
							x.verbose("Removing user addition as an <option>", t);
							if (_) {
								_.observe(B[0], {
									childList: true,
									subtree: true
								});
							}
						}
					},
					message: function () {
						U.children(O.message).remove();
					},
					searchWidth: function () {
						R.css("width", "");
					},
					searchTerm: function () {
						x.verbose("Cleared search term");
						R.val("");
						x.set.filtered();
					},
					userAddition: function () {
						W.filter(O.addition).remove();
					},
					selected: function (t, n) {
						return !!(n = C.allowAdditions ? n || x.get.itemWithAdditions(t) : n || x.get.item(t)) && void n.each(function () {
							var t = e(this);
							var n = x.get.choiceText(t);
							var i = x.get.choiceValue(t, n);
							if (x.is.multiple()) {
								if (C.useLabels) {
									x.remove.value(i, n, t);
									x.remove.label(i);
								} else {
									x.remove.value(i, n, t);
									if (x.get.selectionCount() === 0) {
										x.set.placeholderText();
									} else {
										x.set.text(x.add.variables(A.count));
									}
								}
							} else {
								x.remove.value(i, n, t);
							}
							t.removeClass(S.filtered).removeClass(S.active);
							if (C.useLabels) {
								t.removeClass(S.selected);
							}
						});
					},
					selectedItem: function () {
						W.removeClass(S.selected);
					},
					value: function (e, t, n) {
						var i;
						var o = x.get.values();
						if (x.has.selectInput()) {
							x.verbose("Input is <select> removing selected option", e);
							i = x.remove.arrayValue(e, o);
							x.remove.optionValue(e);
						} else {
							x.verbose("Removing from delimited values", e);
							i = x.remove.arrayValue(e, o);
							i = i.join(C.delimiter);
						}
						if (C.fireOnInit === false && x.is.initialLoad()) {
							x.verbose("No callback on initial load", C.onRemove);
						} else {
							C.onRemove.call(J, e, t, n);
						}
						x.set.value(i, t, n);
						x.check.maxSelections();
					},
					arrayValue: function (t, n) {
						if (!e.isArray(n)) {
							n = [n];
						}
						n = e.grep(n, function (e) {
							return t != e;
						});
						x.verbose("Removed value from delimited string", t, n);
						return n;
					},
					label: function (e, t) {
						var n = z.find(O.label).filter("[data-" + j.value + "=\"" + x.escape.string(e) + "\"]");
						x.verbose("Removing label", n);
						n.remove();
					},
					activeLabels: function (e) {
						e = e || z.find(O.label).filter("." + S.active);
						x.verbose("Removing active label selections", e);
						x.remove.labels(e);
					},
					labels: function (t) {
						t = t || z.find(O.label);
						x.verbose("Removing labels", t);
						t.each(function () {
							var t = e(this);
							var n = t.data(j.value);
							var o = n !== i ? String(n) : n;
							var a = x.is.userValue(o);
							if (C.onLabelRemove.call(t, n) === false) {
								x.debug("Label remove callback cancelled removal");
								return;
							} else {
								x.remove.message();
								if (a) {
									x.remove.value(o);
									x.remove.label(o);
								} else {
									x.remove.selected(o);
								}
								return;
							}
						});
					},
					tabbable: function () {
						if (x.is.searchSelection()) {
							x.debug("Searchable dropdown initialized");
							R.removeAttr("tabindex");
							U.removeAttr("tabindex");
						} else {
							x.debug("Simple selection dropdown initialized");
							z.removeAttr("tabindex");
							U.removeAttr("tabindex");
						}
					}
				},
				has: {
					menuSearch: function () {
						return x.has.search() && R.closest(U).length > 0;
					},
					search: function () {
						return R.length > 0;
					},
					sizer: function () {
						return H.length > 0;
					},
					selectInput: function () {
						return B.is("select");
					},
					minCharacters: function (e) {
						return !C.minCharacters || (e = e !== i ? String(e) : String(x.get.query())).length >= C.minCharacters;
					},
					firstLetter: function (e, t) {
						var n;
						var i;
						return !!e && e.length !== 0 && typeof t == "string" && (n = x.get.choiceText(e, false), t = t.toLowerCase(), i = String(n).charAt(0).toLowerCase(), t == i);
					},
					input: function () {
						return B.length > 0;
					},
					items: function () {
						return W.length > 0;
					},
					menu: function () {
						return U.length > 0;
					},
					message: function () {
						return U.children(O.message).length !== 0;
					},
					label: function (e) {
						var t = x.escape.value(e);
						return z.find(O.label).filter("[data-" + j.value + "=\"" + x.escape.string(t) + "\"]").length > 0;
					},
					maxSelections: function () {
						return C.maxSelections && x.get.selectionCount() >= C.maxSelections;
					},
					allResultsFiltered: function () {
						var e = W.not(O.addition);
						return e.filter(O.unselectable).length === e.length;
					},
					userSuggestion: function () {
						return U.children(O.addition).length > 0;
					},
					query: function () {
						return x.get.query() !== "";
					},
					value: function (t) {
						var n = x.get.values();
						return !!(e.isArray(n) ? n && e.inArray(t, n) !== -1 : n == t);
					}
				},
				is: {
					active: function () {
						return z.hasClass(S.active);
					},
					bubbledLabelClick: function (t) {
						return e(t.target).is("select, input") && z.closest("label").length > 0;
					},
					bubbledIconClick: function (t) {
						return e(t.target).closest(q).length > 0;
					},
					alreadySetup: function () {
						return z.is("select") && z.parent(O.dropdown).length > 0 && z.prev().length === 0;
					},
					animating: function (e) {
						if (e) {
							return e.transition && e.transition("is animating");
						} else {
							return U.transition && U.transition("is animating");
						}
					},
					disabled: function () {
						return z.hasClass(S.disabled);
					},
					focused: function () {
						return n.activeElement === z[0];
					},
					focusedOnSearch: function () {
						return n.activeElement === R[0];
					},
					allFiltered: function () {
						return (x.is.multiple() || x.has.search()) && (C.hideAdditions != 0 || !x.has.userSuggestion()) && !x.has.message() && x.has.allResultsFiltered();
					},
					hidden: function (e) {
						return !x.is.visible(e);
					},
					initialLoad: function () {
						return g;
					},
					onScreen: function (e) {
						var t;
						var n = e || U;
						var i = true;
						var o = {};
						n.addClass(S.loading);
						t = {
							context: {
								scrollTop: F.scrollTop(),
								height: F.outerHeight()
							},
							menu: {
								offset: n.offset(),
								height: n.outerHeight()
							}
						};
						if (x.is.verticallyScrollableContext()) {
							t.menu.offset.top += t.context.scrollTop;
						}
						if ((o = {
							above: t.context.scrollTop <= t.menu.offset.top - t.menu.height,
							below: t.context.scrollTop + t.context.height >= t.menu.offset.top + t.menu.height
						}).below) {
							x.verbose("Dropdown can fit in context downward", o);
							i = true;
						} else if (o.below || o.above) {
							x.verbose("Dropdown cannot fit below, opening upward", o);
							i = false;
						} else {
							x.verbose("Dropdown cannot fit in either direction, favoring downward", o);
							i = true;
						}
						n.removeClass(S.loading);
						return i;
					},
					inObject: function (t, n) {
						var i = false;
						e.each(n, function (e, n) {
							if (n == t) {
								i = true;
								return true;
							} else {
								return undefined;
							}
						});
						return i;
					},
					multiple: function () {
						return z.hasClass(S.multiple);
					},
					remote: function () {
						return C.apiSettings && x.can.useAPI();
					},
					single: function () {
						return !x.is.multiple();
					},
					selectMutation: function (t) {
						var n = false;
						e.each(t, function (t, i) {
							if (i.target && e(i.target).is("select")) {
								n = true;
								return true;
							} else {
								return undefined;
							}
						});
						return n;
					},
					search: function () {
						return z.hasClass(S.search);
					},
					searchSelection: function () {
						return x.has.search() && R.parent(O.dropdown).length === 1;
					},
					selection: function () {
						return z.hasClass(S.selection);
					},
					userValue: function (t) {
						return e.inArray(t, x.get.userValues()) !== -1;
					},
					upward: function (e) {
						return (e || z).hasClass(S.upward);
					},
					visible: function (e) {
						if (e) {
							return e.hasClass(S.visible);
						} else {
							return U.hasClass(S.visible);
						}
					},
					verticallyScrollableContext: function () {
						var e = F.get(0) !== t && F.css("overflow-y");
						return e == "auto" || e == "scroll";
					}
				},
				can: {
					activate: function (e) {
						return !!C.useLabels || !x.has.maxSelections() || !!x.has.maxSelections() && !!e.hasClass(S.active);
					},
					click: function () {
						return c || C.on == "click";
					},
					extendSelect: function () {
						return C.allowAdditions || C.apiSettings;
					},
					show: function () {
						return !x.is.disabled() && (x.has.items() || x.has.message());
					},
					useAPI: function () {
						return e.fn.api !== i;
					}
				},
				animate: {
					show: function (t, n) {
						var o;
						var a = n || U;
						var s = n ? function () {} : function () {
							x.hideSubMenus();
							x.hideOthers();
							x.set.active();
						};
						t = e.isFunction(t) ? t : function () {};
						x.verbose("Doing menu show animation", a);
						x.set.direction(n);
						o = x.get.transition(n);
						if (x.is.selection()) {
							x.set.scrollPosition(x.get.selectedItem(), true);
						}
						if (x.is.hidden(a) || x.is.animating(a)) {
							if (o == "none") {
								s();
								a.transition("show");
								t.call(J);
							} else if (e.fn.transition !== i && z.transition("is supported")) {
								a.transition({
									animation: o + " in",
									debug: C.debug,
									verbose: C.verbose,
									duration: C.duration,
									queue: true,
									onStart: s,
									onComplete: function () {
										t.call(J);
									}
								});
							} else {
								x.error(D.noTransition, o);
							}
						}
					},
					hide: function (t, n) {
						var o = n || U;
						if (n) {
							C.duration;
						} else {
							C.duration;
						}
						var a = n ? function () {} : function () {
							if (x.can.click()) {
								x.unbind.intent();
							}
							x.remove.active();
						};
						var s = x.get.transition(n);
						t = e.isFunction(t) ? t : function () {};
						if (x.is.visible(o) || x.is.animating(o)) {
							x.verbose("Doing menu hide animation", o);
							if (s == "none") {
								a();
								o.transition("hide");
								t.call(J);
							} else if (e.fn.transition !== i && z.transition("is supported")) {
								o.transition({
									animation: s + " out",
									duration: C.duration,
									debug: C.debug,
									verbose: C.verbose,
									queue: true,
									onStart: a,
									onComplete: function () {
										if (C.direction == "auto") {
											x.remove.upward(n);
										}
										t.call(J);
									}
								});
							} else {
								x.error(D.transition);
							}
						}
					}
				},
				hideAndClear: function () {
					x.remove.searchTerm();
					if (!x.has.maxSelections()) {
						if (x.has.search()) {
							x.hide(function () {
								x.remove.filteredItem();
							});
						} else {
							x.hide();
						}
					}
				},
				delay: {
					show: function () {
						x.verbose("Delaying show event to ensure user intent");
						clearTimeout(x.timer);
						x.timer = setTimeout(x.show, C.delay.show);
					},
					hide: function () {
						x.verbose("Delaying hide event to ensure user intent");
						clearTimeout(x.timer);
						x.timer = setTimeout(x.hide, C.delay.hide);
					}
				},
				escape: {
					value: function (t) {
						var n = e.isArray(t);
						var i = typeof t == "string";
						var o = !i && !n;
						var a = i && t.search(N.quote) !== -1;
						var s = [];
						if (o || !a) {
							return t;
						} else {
							x.debug("Encoding quote values for use in select", t);
							if (n) {
								e.each(t, function (e, t) {
									s.push(t.replace(N.quote, "&quot;"));
								});
								return s;
							} else {
								return t.replace(N.quote, "&quot;");
							}
						}
					},
					string: function (e) {
						return (e = String(e)).replace(N.escape, "\\$&");
					}
				},
				setting: function (t, n) {
					x.debug("Changing setting", t, n);
					if (e.isPlainObject(t)) {
						e.extend(true, C, t);
					} else {
						if (n === i) {
							return C[t];
						}
						if (e.isPlainObject(C[t])) {
							e.extend(true, C[t], n);
						} else {
							C[t] = n;
						}
					}
				},
				internal: function (t, n) {
					if (e.isPlainObject(t)) {
						e.extend(true, x, t);
					} else {
						if (n === i) {
							return x[t];
						}
						x[t] = n;
					}
				},
				debug: function () {
					if (!C.silent && C.debug) {
						if (C.performance) {
							x.performance.log(arguments);
						} else {
							x.debug = Function.prototype.bind.call(console.info, console, C.name + ":");
							x.debug.apply(console, arguments);
						}
					}
				},
				verbose: function () {
					if (!C.silent && C.verbose && C.debug) {
						if (C.performance) {
							x.performance.log(arguments);
						} else {
							x.verbose = Function.prototype.bind.call(console.info, console, C.name + ":");
							x.verbose.apply(console, arguments);
						}
					}
				},
				error: function () {
					if (!C.silent) {
						x.error = Function.prototype.bind.call(console.error, console, C.name + ":");
						x.error.apply(console, arguments);
					}
				},
				performance: {
					log: function (e) {
						var t;
						var n;
						var i;
						if (C.performance) {
							t = new Date().getTime();
							i = u || t;
							n = t - i;
							u = t;
							d.push({
								Name: e[0],
								Arguments: [].slice.call(e, 1) || "",
								Element: J,
								"Execution Time": n
							});
						}
						clearTimeout(x.performance.timer);
						x.performance.timer = setTimeout(x.performance.display, 500);
					},
					display: function () {
						var t = C.name + ":";
						var n = 0;
						u = false;
						clearTimeout(x.performance.timer);
						e.each(d, function (e, t) {
							n += t["Execution Time"];
						});
						t += " " + n + "ms";
						if (l) {
							t += " '" + l + "'";
						}
						if ((console.group !== i || console.table !== i) && d.length > 0) {
							console.groupCollapsed(t);
							if (console.table) {
								console.table(d);
							} else {
								e.each(d, function (e, t) {
									console.log(t.Name + ": " + t["Execution Time"] + "ms");
								});
							}
							console.groupEnd();
						}
						d = [];
					}
				},
				invoke: function (t, n, o) {
					var s;
					var r;
					var l;
					var c = X;
					n = n || h;
					o = J || o;
					if (typeof t == "string" && c !== i) {
						t = t.split(/[\. ]/);
						s = t.length - 1;
						e.each(t, function (n, o) {
							var a = n != s ? o + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t;
							if (e.isPlainObject(c[a]) && n != s) {
								c = c[a];
							} else {
								if (c[a] !== i) {
									r = c[a];
									return false;
								}
								if (!e.isPlainObject(c[o]) || n == s) {
									if (c[o] !== i) {
										r = c[o];
										return false;
									} else {
										x.error(D.method, t);
										return false;
									}
								}
								c = c[o];
							}
						});
					}
					if (e.isFunction(r)) {
						l = r.apply(o, n);
					} else if (r !== i) {
						l = r;
					}
					if (e.isArray(a)) {
						a.push(l);
					} else if (a !== i) {
						a = [a, l];
					} else if (l !== i) {
						a = l;
					}
					return r;
				}
			};
			if (f) {
				if (X === i) {
					x.initialize();
				}
				x.invoke(p);
			} else {
				if (X !== i) {
					X.invoke("destroy");
				}
				x.initialize();
			}
		});
		if (a !== i) {
			return a;
		} else {
			return s;
		}
	};
	e.fn.dropdown.settings = {
		silent: false,
		debug: false,
		verbose: false,
		performance: true,
		on: "click",
		action: "activate",
		apiSettings: false,
		selectOnKeydown: true,
		minCharacters: 0,
		filterRemoteData: false,
		saveRemoteData: true,
		throttle: 200,
		context: t,
		direction: "auto",
		keepOnScreen: true,
		match: "both",
		fullTextSearch: false,
		placeholder: "auto",
		preserveHTML: true,
		sortSelect: false,
		forceSelection: true,
		allowAdditions: false,
		hideAdditions: true,
		maxSelections: false,
		useLabels: true,
		delimiter: ",",
		showOnFocus: true,
		allowReselection: false,
		allowTab: true,
		allowCategorySelection: false,
		fireOnInit: false,
		transition: "auto",
		duration: 200,
		glyphWidth: 1.037,
		label: {
			transition: "scale",
			duration: 200,
			variation: false
		},
		delay: {
			hide: 300,
			show: 200,
			search: 20,
			touch: 50
		},
		onChange: function (e, t, n) {},
		onAdd: function (e, t, n) {},
		onRemove: function (e, t, n) {},
		onLabelSelect: function (e) {},
		onLabelCreate: function (t, n) {
			return e(this);
		},
		onLabelRemove: function (e) {
			return true;
		},
		onNoResults: function (e) {
			return true;
		},
		onShow: function () {},
		onHide: function () {},
		name: "Dropdown",
		namespace: "dropdown",
		message: {
			addResult: "Add <b>{term}</b>",
			count: "{count} selected",
			maxSelections: "Max {maxCount} selections",
			noResults: "No results found.",
			serverError: "There was an error contacting the server"
		},
		error: {
			action: "You called a dropdown action that was not defined",
			alreadySetup: "Once a select has been initialized behaviors must be called on the created ui dropdown",
			labels: "Allowing user additions currently requires the use of labels.",
			missingMultiple: "<select> requires multiple property to be set to correctly preserve multiple values",
			method: "The method you called is not defined.",
			noAPI: "The API module is required to load resources remotely",
			noStorage: "Saving remote data requires session storage",
			noTransition: "This module requires ui transitions <https://github.com/Semantic-Org/UI-Transition>"
		},
		regExp: {
			escape: /[-[\]{}()*+?.,\\^$|#\s]/g,
			quote: /"/g
		},
		metadata: {
			defaultText: "defaultText",
			defaultValue: "defaultValue",
			placeholderText: "placeholder",
			text: "text",
			value: "value"
		},
		fields: {
			remoteValues: "results",
			values: "values",
			disabled: "disabled",
			name: "name",
			value: "value",
			text: "text"
		},
		keys: {
			backspace: 8,
			delimiter: 188,
			deleteKey: 46,
			enter: 13,
			escape: 27,
			pageUp: 33,
			pageDown: 34,
			leftArrow: 37,
			upArrow: 38,
			rightArrow: 39,
			downArrow: 40
		},
		selector: {
			addition: ".addition",
			dropdown: ".ui.dropdown",
			hidden: ".hidden",
			icon: "> .dropdown.icon",
			input: "> input[type=\"hidden\"], > select",
			item: ".item",
			label: "> .label",
			remove: "> .label > .delete.icon",
			siblingLabel: ".label",
			menu: ".menu",
			message: ".message",
			menuIcon: ".dropdown.icon",
			search: "input.search, .menu > .search > input, .menu input.search",
			sizer: "> input.sizer",
			text: "> .text:not(.icon)",
			unselectable: ".disabled, .filtered"
		},
		className: {
			active: "active",
			addition: "addition",
			animating: "animating",
			disabled: "disabled",
			empty: "empty",
			dropdown: "ui dropdown",
			filtered: "filtered",
			hidden: "hidden transition",
			item: "item",
			label: "ui label",
			loading: "loading",
			menu: "menu",
			message: "message",
			multiple: "multiple",
			placeholder: "default",
			sizer: "sizer",
			search: "search",
			selected: "selected",
			selection: "selection",
			upward: "upward",
			visible: "visible"
		}
	};
	e.fn.dropdown.settings.templates = {
		dropdown: function (t) {
			var n = t.placeholder || false;
			t.values;
			var i = "";
			i += "<i class=\"dropdown icon\"></i>";
			i += t.placeholder ? "<div class=\"default text\">" + n + "</div>" : "<div class=\"text\"></div>";
			i += "<div class=\"menu\">";
			e.each(t.values, function (e, t) {
				i += t.disabled ? "<div class=\"disabled item\" data-value=\"" + t.value + "\">" + t.name + "</div>" : "<div class=\"item\" data-value=\"" + t.value + "\">" + t.name + "</div>";
			});
			return i += "</div>";
		},
		menu: function (t, n) {
			var i = t[n.values] || {};
			var o = "";
			e.each(i, function (e, t) {
				var i = t[n.text] ? "data-text=\"" + t[n.text] + "\"" : "";
				var a = t[n.disabled] ? "disabled " : "";
				o += "<div class=\"" + a + "item\" data-value=\"" + t[n.value] + "\"" + i + ">";
				o += t[n.name];
				o += "</div>";
			});
			return o;
		},
		label: function (e, t) {
			return t + "<i class=\"delete icon\"></i>";
		},
		message: function (e) {
			return e;
		},
		addition: function (e) {
			return e;
		}
	};
})(jQuery, window, document);
(function (e, t, n, i) {
	"use strict";

	t = t !== undefined && t.Math == Math ? t : typeof self != "undefined" && self.Math == Math ? self : Function("return this")();
	e.fn.embed = function (n) {
		var o;
		var a = e(this);
		var s = a.selector || "";
		var r = new Date().getTime();
		var l = [];
		var c = arguments[0];
		var u = typeof c == "string";
		var d = [].slice.call(arguments, 1);
		a.each(function () {
			var p;
			var f = e.isPlainObject(n) ? e.extend(true, {}, e.fn.embed.settings, n) : e.extend({}, e.fn.embed.settings);
			var h = f.selector;
			var m = f.className;
			var g = f.sources;
			var v = f.error;
			var b = f.metadata;
			var y = f.namespace;
			var w = f.templates;
			var _ = "." + y;
			var k = "module-" + y;
			e(t);
			var x = e(this);
			var C = x.find(h.placeholder);
			var S = x.find(h.icon);
			var A = x.find(h.embed);
			var T = this;
			var P = x.data(k);
			p = {
				initialize: function () {
					p.debug("Initializing embed");
					p.determine.autoplay();
					p.create();
					p.bind.events();
					p.instantiate();
				},
				instantiate: function () {
					p.verbose("Storing instance of module", p);
					P = p;
					x.data(k, p);
				},
				destroy: function () {
					p.verbose("Destroying previous instance of embed");
					p.reset();
					x.removeData(k).off(_);
				},
				refresh: function () {
					p.verbose("Refreshing selector cache");
					C = x.find(h.placeholder);
					S = x.find(h.icon);
					A = x.find(h.embed);
				},
				bind: {
					events: function () {
						if (p.has.placeholder()) {
							p.debug("Adding placeholder events");
							x.on("click" + _, h.placeholder, p.createAndShow).on("click" + _, h.icon, p.createAndShow);
						}
					}
				},
				create: function () {
					if (p.get.placeholder()) {
						p.createPlaceholder();
					} else {
						p.createAndShow();
					}
				},
				createPlaceholder: function (e) {
					var t = p.get.icon();
					var n = p.get.url();
					p.generate.embed(n);
					e = e || p.get.placeholder();
					x.html(w.placeholder(e, t));
					p.debug("Creating placeholder for embed", e, t);
				},
				createEmbed: function (t) {
					p.refresh();
					t = t || p.get.url();
					A = e("<div/>").addClass(m.embed).html(p.generate.embed(t)).appendTo(x);
					f.onCreate.call(T, t);
					p.debug("Creating embed object", A);
				},
				changeEmbed: function (e) {
					A.html(p.generate.embed(e));
				},
				createAndShow: function () {
					p.createEmbed();
					p.show();
				},
				change: function (e, t, n) {
					p.debug("Changing video to ", e, t, n);
					x.data(b.source, e).data(b.id, t);
					if (n) {
						x.data(b.url, n);
					} else {
						x.removeData(b.url);
					}
					if (p.has.embed()) {
						p.changeEmbed();
					} else {
						p.create();
					}
				},
				reset: function () {
					p.debug("Clearing embed and showing placeholder");
					p.remove.active();
					p.remove.embed();
					p.showPlaceholder();
					f.onReset.call(T);
				},
				show: function () {
					p.debug("Showing embed");
					p.set.active();
					f.onDisplay.call(T);
				},
				hide: function () {
					p.debug("Hiding embed");
					p.showPlaceholder();
				},
				showPlaceholder: function () {
					p.debug("Showing placeholder image");
					p.remove.active();
					f.onPlaceholderDisplay.call(T);
				},
				get: {
					id: function () {
						return f.id || x.data(b.id);
					},
					placeholder: function () {
						return f.placeholder || x.data(b.placeholder);
					},
					icon: function () {
						if (f.icon) {
							return f.icon;
						} else if (x.data(b.icon) !== i) {
							return x.data(b.icon);
						} else {
							return p.determine.icon();
						}
					},
					source: function (e) {
						if (f.source) {
							return f.source;
						} else if (x.data(b.source) !== i) {
							return x.data(b.source);
						} else {
							return p.determine.source();
						}
					},
					type: function () {
						var e = p.get.source();
						return g[e] !== i && g[e].type;
					},
					url: function () {
						if (f.url) {
							return f.url;
						} else if (x.data(b.url) !== i) {
							return x.data(b.url);
						} else {
							return p.determine.url();
						}
					}
				},
				determine: {
					autoplay: function () {
						if (p.should.autoplay()) {
							f.autoplay = true;
						}
					},
					source: function (t) {
						var n = false;
						if (t = t || p.get.url()) {
							e.each(g, function (e, i) {
								if (t.search(i.domain) !== -1) {
									n = e;
									return false;
								} else {
									return undefined;
								}
							});
						}
						return n;
					},
					icon: function () {
						var e = p.get.source();
						return g[e] !== i && g[e].icon;
					},
					url: function () {
						var e;
						var t = f.id || x.data(b.id);
						var n = f.source || x.data(b.source);
						if (e = g[n] !== i && g[n].url.replace("{id}", t)) {
							x.data(b.url, e);
						}
						return e;
					}
				},
				set: {
					active: function () {
						x.addClass(m.active);
					}
				},
				remove: {
					active: function () {
						x.removeClass(m.active);
					},
					embed: function () {
						A.empty();
					}
				},
				encode: {
					parameters: function (e) {
						var t;
						var n = [];
						for (t in e) {
							n.push(encodeURIComponent(t) + "=" + encodeURIComponent(e[t]));
						}
						return n.join("&amp;");
					}
				},
				generate: {
					embed: function (e) {
						p.debug("Generating embed html");
						var t;
						var n;
						var i = p.get.source();
						if (e = p.get.url(e)) {
							n = p.generate.parameters(i);
							t = w.iframe(e, n);
						} else {
							p.error(v.noURL, x);
						}
						return t;
					},
					parameters: function (t, n) {
						var o = g[t] && g[t].parameters !== i ? g[t].parameters(f) : {};
						if (n = n || f.parameters) {
							o = e.extend({}, o, n);
						}
						o = f.onEmbed(o);
						return p.encode.parameters(o);
					}
				},
				has: {
					embed: function () {
						return A.length > 0;
					},
					placeholder: function () {
						return f.placeholder || x.data(b.placeholder);
					}
				},
				should: {
					autoplay: function () {
						if (f.autoplay === "auto") {
							return f.placeholder || x.data(b.placeholder) !== i;
						} else {
							return f.autoplay;
						}
					}
				},
				is: {
					video: function () {
						return p.get.type() == "video";
					}
				},
				setting: function (t, n) {
					p.debug("Changing setting", t, n);
					if (e.isPlainObject(t)) {
						e.extend(true, f, t);
					} else {
						if (n === i) {
							return f[t];
						}
						if (e.isPlainObject(f[t])) {
							e.extend(true, f[t], n);
						} else {
							f[t] = n;
						}
					}
				},
				internal: function (t, n) {
					if (e.isPlainObject(t)) {
						e.extend(true, p, t);
					} else {
						if (n === i) {
							return p[t];
						}
						p[t] = n;
					}
				},
				debug: function () {
					if (!f.silent && f.debug) {
						if (f.performance) {
							p.performance.log(arguments);
						} else {
							p.debug = Function.prototype.bind.call(console.info, console, f.name + ":");
							p.debug.apply(console, arguments);
						}
					}
				},
				verbose: function () {
					if (!f.silent && f.verbose && f.debug) {
						if (f.performance) {
							p.performance.log(arguments);
						} else {
							p.verbose = Function.prototype.bind.call(console.info, console, f.name + ":");
							p.verbose.apply(console, arguments);
						}
					}
				},
				error: function () {
					if (!f.silent) {
						p.error = Function.prototype.bind.call(console.error, console, f.name + ":");
						p.error.apply(console, arguments);
					}
				},
				performance: {
					log: function (e) {
						var t;
						var n;
						var i;
						if (f.performance) {
							t = new Date().getTime();
							i = r || t;
							n = t - i;
							r = t;
							l.push({
								Name: e[0],
								Arguments: [].slice.call(e, 1) || "",
								Element: T,
								"Execution Time": n
							});
						}
						clearTimeout(p.performance.timer);
						p.performance.timer = setTimeout(p.performance.display, 500);
					},
					display: function () {
						var t = f.name + ":";
						var n = 0;
						r = false;
						clearTimeout(p.performance.timer);
						e.each(l, function (e, t) {
							n += t["Execution Time"];
						});
						t += " " + n + "ms";
						if (s) {
							t += " '" + s + "'";
						}
						if (a.length > 1) {
							t += " (" + a.length + ")";
						}
						if ((console.group !== i || console.table !== i) && l.length > 0) {
							console.groupCollapsed(t);
							if (console.table) {
								console.table(l);
							} else {
								e.each(l, function (e, t) {
									console.log(t.Name + ": " + t["Execution Time"] + "ms");
								});
							}
							console.groupEnd();
						}
						l = [];
					}
				},
				invoke: function (t, n, a) {
					var s;
					var r;
					var l;
					var c = P;
					n = n || d;
					a = T || a;
					if (typeof t == "string" && c !== i) {
						t = t.split(/[\. ]/);
						s = t.length - 1;
						e.each(t, function (n, o) {
							var a = n != s ? o + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t;
							if (e.isPlainObject(c[a]) && n != s) {
								c = c[a];
							} else {
								if (c[a] !== i) {
									r = c[a];
									return false;
								}
								if (!e.isPlainObject(c[o]) || n == s) {
									if (c[o] !== i) {
										r = c[o];
										return false;
									} else {
										p.error(v.method, t);
										return false;
									}
								}
								c = c[o];
							}
						});
					}
					if (e.isFunction(r)) {
						l = r.apply(a, n);
					} else if (r !== i) {
						l = r;
					}
					if (e.isArray(o)) {
						o.push(l);
					} else if (o !== i) {
						o = [o, l];
					} else if (l !== i) {
						o = l;
					}
					return r;
				}
			};
			if (u) {
				if (P === i) {
					p.initialize();
				}
				p.invoke(c);
			} else {
				if (P !== i) {
					P.invoke("destroy");
				}
				p.initialize();
			}
		});
		if (o !== i) {
			return o;
		} else {
			return this;
		}
	};
	e.fn.embed.settings = {
		name: "Embed",
		namespace: "embed",
		silent: false,
		debug: false,
		verbose: false,
		performance: true,
		icon: false,
		source: false,
		url: false,
		id: false,
		autoplay: "auto",
		color: "#444444",
		hd: true,
		brandedUI: false,
		parameters: false,
		onDisplay: function () {},
		onPlaceholderDisplay: function () {},
		onReset: function () {},
		onCreate: function (e) {},
		onEmbed: function (e) {
			return e;
		},
		metadata: {
			id: "id",
			icon: "icon",
			placeholder: "placeholder",
			source: "source",
			url: "url"
		},
		error: {
			noURL: "No URL specified",
			method: "The method you called is not defined"
		},
		className: {
			active: "active",
			embed: "embed"
		},
		selector: {
			embed: ".embed",
			placeholder: ".placeholder",
			icon: ".icon"
		},
		sources: {
			youtube: {
				name: "youtube",
				type: "video",
				icon: "video play",
				domain: "youtube.com",
				url: "//www.youtube.com/embed/{id}",
				parameters: function (e) {
					return {
						autohide: !e.brandedUI,
						autoplay: e.autoplay,
						color: e.color || i,
						hq: e.hd,
						jsapi: e.api,
						modestbranding: !e.brandedUI
					};
				}
			},
			vimeo: {
				name: "vimeo",
				type: "video",
				icon: "video play",
				domain: "vimeo.com",
				url: "//player.vimeo.com/video/{id}",
				parameters: function (e) {
					return {
						api: e.api,
						autoplay: e.autoplay,
						byline: e.brandedUI,
						color: e.color || i,
						portrait: e.brandedUI,
						title: e.brandedUI
					};
				}
			}
		},
		templates: {
			iframe: function (e, t) {
				var n = e;
				if (t) {
					n += "?" + t;
				}
				return "<iframe src=\"" + n + "\" width=\"100%\" height=\"100%\" frameborder=\"0\" scrolling=\"no\" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>";
			},
			placeholder: function (e, t) {
				var n = "";
				if (t) {
					n += "<i class=\"" + t + " icon\"></i>";
				}
				if (e) {
					n += "<img class=\"placeholder\" src=\"" + e + "\">";
				}
				return n;
			}
		},
		api: false,
		onPause: function () {},
		onPlay: function () {},
		onStop: function () {}
	};
})(jQuery, window, document);
(function (e, t, n, i) {
	"use strict";

	t = t !== undefined && t.Math == Math ? t : typeof self != "undefined" && self.Math == Math ? self : Function("return this")();
	e.fn.modal = function (o) {
		var a;
		var s = e(this);
		var r = e(t);
		var l = e(n);
		var c = e("body");
		var u = s.selector || "";
		var d = new Date().getTime();
		var p = [];
		var f = arguments[0];
		var h = typeof f == "string";
		var m = [].slice.call(arguments, 1);
		var g = t.requestAnimationFrame || t.mozRequestAnimationFrame || t.webkitRequestAnimationFrame || t.msRequestAnimationFrame || function (e) {
			setTimeout(e, 0);
		};
		s.each(function () {
			var s;
			var v;
			var b;
			var y;
			var w;
			var _;
			var k;
			var x;
			var C;
			var S = e.isPlainObject(o) ? e.extend(true, {}, e.fn.modal.settings, o) : e.extend({}, e.fn.modal.settings);
			var A = S.selector;
			var T = S.className;
			var P = S.namespace;
			var j = S.error;
			var E = "." + P;
			var N = "module-" + P;
			var O = e(this);
			var D = e(S.context);
			var I = O.find(A.close);
			var $ = this;
			var M = O.data(N);
			var z = false;
			C = {
				initialize: function () {
					C.verbose("Initializing dimmer", D);
					C.create.id();
					C.create.dimmer();
					C.refreshModals();
					C.bind.events();
					if (S.observeChanges) {
						C.observeChanges();
					}
					C.instantiate();
				},
				instantiate: function () {
					C.verbose("Storing instance of modal");
					M = C;
					O.data(N, M);
				},
				create: {
					dimmer: function () {
						var t = {
							debug: S.debug,
							dimmerName: "modals",
							duration: {
								show: S.duration,
								hide: S.duration
							}
						};
						var n = e.extend(true, t, S.dimmerSettings);
						if (S.inverted) {
							n.variation = n.variation !== i ? n.variation + " inverted" : "inverted";
						}
						if (e.fn.dimmer === i) {
							C.error(j.dimmer);
							return;
						} else {
							C.debug("Creating dimmer with settings", n);
							y = D.dimmer(n);
							if (S.detachable) {
								C.verbose("Modal is detachable, moving content into dimmer");
								y.dimmer("add content", O);
							} else {
								C.set.undetached();
							}
							if (S.blurring) {
								y.addClass(T.blurring);
							}
							w = y.dimmer("get dimmer");
							return;
						}
					},
					id: function () {
						k = (Math.random().toString(16) + "000000000").substr(2, 8);
						_ = "." + k;
						C.verbose("Creating unique id for element", k);
					}
				},
				destroy: function () {
					C.verbose("Destroying previous modal");
					O.removeData(N).off(E);
					r.off(_);
					w.off(_);
					I.off(E);
					D.dimmer("destroy");
				},
				observeChanges: function () {
					if ("MutationObserver" in t) {
						(x = new MutationObserver(function (e) {
							C.debug("DOM tree modified, refreshing");
							C.refresh();
						})).observe($, {
							childList: true,
							subtree: true
						});
						C.debug("Setting up mutation observer", x);
					}
				},
				refresh: function () {
					C.remove.scrolling();
					C.cacheSizes();
					C.set.screenHeight();
					C.set.type();
					C.set.position();
				},
				refreshModals: function () {
					v = O.siblings(A.modal);
					s = v.add(O);
				},
				attachEvents: function (t, n) {
					var i = e(t);
					n = e.isFunction(C[n]) ? C[n] : C.toggle;
					if (i.length > 0) {
						C.debug("Attaching modal events to element", t, n);
						i.off(E).on("click" + E, n);
					} else {
						C.error(j.notFound, t);
					}
				},
				bind: {
					events: function () {
						C.verbose("Attaching events");
						O.on("click" + E, A.close, C.event.close).on("click" + E, A.approve, C.event.approve).on("click" + E, A.deny, C.event.deny);
						r.on("resize" + _, C.event.resize);
					}
				},
				get: {
					id: function () {
						return (Math.random().toString(16) + "000000000").substr(2, 8);
					}
				},
				event: {
					approve: function () {
						if (z || S.onApprove.call($, e(this)) === false) {
							C.verbose("Approve callback returned false cancelling hide");
							return;
						} else {
							z = true;
							C.hide(function () {
								z = false;
							});
							return;
						}
					},
					deny: function () {
						if (z || S.onDeny.call($, e(this)) === false) {
							C.verbose("Deny callback returned false cancelling hide");
							return;
						} else {
							z = true;
							C.hide(function () {
								z = false;
							});
							return;
						}
					},
					close: function () {
						C.hide();
					},
					click: function (t) {
						var i = e(t.target).closest(A.modal).length > 0;
						var o = e.contains(n.documentElement, t.target);
						if (!i && o) {
							C.debug("Dimmer clicked, hiding all modals");
							if (C.is.active()) {
								C.remove.clickaway();
								if (S.allowMultiple) {
									C.hide();
								} else {
									C.hideAll();
								}
							}
						}
					},
					debounce: function (e, t) {
						clearTimeout(C.timer);
						C.timer = setTimeout(e, t);
					},
					keyboard: function (e) {
						if (e.which == 27) {
							if (S.closable) {
								C.debug("Escape key pressed hiding modal");
								C.hide();
							} else {
								C.debug("Escape key pressed, but closable is set to false");
							}
							e.preventDefault();
						}
					},
					resize: function () {
						if (y.dimmer("is active")) {
							g(C.refresh);
						}
					}
				},
				toggle: function () {
					if (C.is.active() || C.is.animating()) {
						C.hide();
					} else {
						C.show();
					}
				},
				show: function (t) {
					t = e.isFunction(t) ? t : function () {};
					C.refreshModals();
					C.showModal(t);
				},
				hide: function (t) {
					t = e.isFunction(t) ? t : function () {};
					C.refreshModals();
					C.hideModal(t);
				},
				showModal: function (t) {
					t = e.isFunction(t) ? t : function () {};
					if (C.is.animating() || !C.is.active()) {
						C.showDimmer();
						C.cacheSizes();
						C.set.position();
						C.set.screenHeight();
						C.set.type();
						C.set.clickaway();
						if (!S.allowMultiple && C.others.active()) {
							C.hideOthers(C.showModal);
						} else {
							S.onShow.call($);
							if (S.transition && e.fn.transition !== i && O.transition("is supported")) {
								C.debug("Showing modal with css animations");
								O.transition({
									debug: S.debug,
									animation: S.transition + " in",
									queue: S.queue,
									duration: S.duration,
									useFailSafe: true,
									onComplete: function () {
										S.onVisible.apply($);
										if (S.keyboardShortcuts) {
											C.add.keyboardShortcuts();
										}
										C.save.focus();
										C.set.active();
										if (S.autofocus) {
											C.set.autofocus();
										}
										t();
									}
								});
							} else {
								C.error(j.noTransition);
							}
						}
					} else {
						C.debug("Modal is already visible");
					}
				},
				hideModal: function (t, n) {
					t = e.isFunction(t) ? t : function () {};
					C.debug("Hiding modal");
					if (S.onHide.call($, e(this)) === false) {
						C.verbose("Hide callback returned false cancelling hide");
						return;
					} else {
						if (C.is.animating() || C.is.active()) {
							if (S.transition && e.fn.transition !== i && O.transition("is supported")) {
								C.remove.active();
								O.transition({
									debug: S.debug,
									animation: S.transition + " out",
									queue: S.queue,
									duration: S.duration,
									useFailSafe: true,
									onStart: function () {
										if (!C.others.active() && !n) {
											C.hideDimmer();
										}
										if (S.keyboardShortcuts) {
											C.remove.keyboardShortcuts();
										}
									},
									onComplete: function () {
										S.onHidden.call($);
										C.restore.focus();
										t();
									}
								});
							} else {
								C.error(j.noTransition);
							}
						}
						return;
					}
				},
				showDimmer: function () {
					if (y.dimmer("is animating") || !y.dimmer("is active")) {
						C.debug("Showing dimmer");
						y.dimmer("show");
					} else {
						C.debug("Dimmer already visible");
					}
				},
				hideDimmer: function () {
					if (y.dimmer("is animating") || y.dimmer("is active")) {
						y.dimmer("hide", function () {
							C.remove.clickaway();
							C.remove.screenHeight();
						});
						return;
					} else {
						C.debug("Dimmer is not visible cannot hide");
						return;
					}
				},
				hideAll: function (t) {
					var n = s.filter("." + T.active + ", ." + T.animating);
					t = e.isFunction(t) ? t : function () {};
					if (n.length > 0) {
						C.debug("Hiding all visible modals");
						C.hideDimmer();
						n.modal("hide modal", t);
					}
				},
				hideOthers: function (t) {
					var n = v.filter("." + T.active + ", ." + T.animating);
					t = e.isFunction(t) ? t : function () {};
					if (n.length > 0) {
						C.debug("Hiding other modals", v);
						n.modal("hide modal", t, true);
					}
				},
				others: {
					active: function () {
						return v.filter("." + T.active).length > 0;
					},
					animating: function () {
						return v.filter("." + T.animating).length > 0;
					}
				},
				add: {
					keyboardShortcuts: function () {
						C.verbose("Adding keyboard shortcuts");
						l.on("keyup" + E, C.event.keyboard);
					}
				},
				save: {
					focus: function () {
						b = e(n.activeElement).blur();
					}
				},
				restore: {
					focus: function () {
						if (b && b.length > 0) {
							b.focus();
						}
					}
				},
				remove: {
					active: function () {
						O.removeClass(T.active);
					},
					clickaway: function () {
						if (S.closable) {
							w.off("click" + _);
						}
					},
					bodyStyle: function () {
						if (c.attr("style") === "") {
							C.verbose("Removing style attribute");
							c.removeAttr("style");
						}
					},
					screenHeight: function () {
						C.debug("Removing page height");
						c.css("height", "");
					},
					keyboardShortcuts: function () {
						C.verbose("Removing keyboard shortcuts");
						l.off("keyup" + E);
					},
					scrolling: function () {
						y.removeClass(T.scrolling);
						O.removeClass(T.scrolling);
					}
				},
				cacheSizes: function () {
					var o = O.outerHeight();
					if (C.cache === i || o !== 0) {
						C.cache = {
							pageHeight: e(n).outerHeight(),
							height: o + S.offset,
							contextHeight: S.context == "body" ? e(t).height() : y.height()
						};
					}
					C.debug("Caching modal and container sizes", C.cache);
				},
				can: {
					fit: function () {
						return C.cache.height + S.padding * 2 < C.cache.contextHeight;
					}
				},
				is: {
					active: function () {
						return O.hasClass(T.active);
					},
					animating: function () {
						if (O.transition("is supported")) {
							return O.transition("is animating");
						} else {
							return O.is(":visible");
						}
					},
					scrolling: function () {
						return y.hasClass(T.scrolling);
					},
					modernBrowser: function () {
						return !t.ActiveXObject && !("ActiveXObject" in t);
					}
				},
				set: {
					autofocus: function () {
						var e = O.find("[tabindex], :input").filter(":visible");
						var t = e.filter("[autofocus]");
						var n = t.length > 0 ? t.first() : e.first();
						if (n.length > 0) {
							n.focus();
						}
					},
					clickaway: function () {
						if (S.closable) {
							w.on("click" + _, C.event.click);
						}
					},
					screenHeight: function () {
						if (C.can.fit()) {
							c.css("height", "");
						} else {
							C.debug("Modal is taller than page content, resizing page height");
							c.css("height", C.cache.height + S.padding * 2);
						}
					},
					active: function () {
						O.addClass(T.active);
					},
					scrolling: function () {
						y.addClass(T.scrolling);
						O.addClass(T.scrolling);
					},
					type: function () {
						if (C.can.fit()) {
							C.verbose("Modal fits on screen");
							if (!C.others.active() && !C.others.animating()) {
								C.remove.scrolling();
							}
						} else {
							C.verbose("Modal cannot fit on screen setting to scrolling");
							C.set.scrolling();
						}
					},
					position: function () {
						C.verbose("Centering modal on page", C.cache);
						if (C.can.fit()) {
							O.css({
								top: "",
								marginTop: -C.cache.height / 2
							});
						} else {
							O.css({
								marginTop: "",
								top: l.scrollTop()
							});
						}
					},
					undetached: function () {
						y.addClass(T.undetached);
					}
				},
				setting: function (t, n) {
					C.debug("Changing setting", t, n);
					if (e.isPlainObject(t)) {
						e.extend(true, S, t);
					} else {
						if (n === i) {
							return S[t];
						}
						if (e.isPlainObject(S[t])) {
							e.extend(true, S[t], n);
						} else {
							S[t] = n;
						}
					}
				},
				internal: function (t, n) {
					if (e.isPlainObject(t)) {
						e.extend(true, C, t);
					} else {
						if (n === i) {
							return C[t];
						}
						C[t] = n;
					}
				},
				debug: function () {
					if (!S.silent && S.debug) {
						if (S.performance) {
							C.performance.log(arguments);
						} else {
							C.debug = Function.prototype.bind.call(console.info, console, S.name + ":");
							C.debug.apply(console, arguments);
						}
					}
				},
				verbose: function () {
					if (!S.silent && S.verbose && S.debug) {
						if (S.performance) {
							C.performance.log(arguments);
						} else {
							C.verbose = Function.prototype.bind.call(console.info, console, S.name + ":");
							C.verbose.apply(console, arguments);
						}
					}
				},
				error: function () {
					if (!S.silent) {
						C.error = Function.prototype.bind.call(console.error, console, S.name + ":");
						C.error.apply(console, arguments);
					}
				},
				performance: {
					log: function (e) {
						var t;
						var n;
						var i;
						if (S.performance) {
							t = new Date().getTime();
							i = d || t;
							n = t - i;
							d = t;
							p.push({
								Name: e[0],
								Arguments: [].slice.call(e, 1) || "",
								Element: $,
								"Execution Time": n
							});
						}
						clearTimeout(C.performance.timer);
						C.performance.timer = setTimeout(C.performance.display, 500);
					},
					display: function () {
						var t = S.name + ":";
						var n = 0;
						d = false;
						clearTimeout(C.performance.timer);
						e.each(p, function (e, t) {
							n += t["Execution Time"];
						});
						t += " " + n + "ms";
						if (u) {
							t += " '" + u + "'";
						}
						if ((console.group !== i || console.table !== i) && p.length > 0) {
							console.groupCollapsed(t);
							if (console.table) {
								console.table(p);
							} else {
								e.each(p, function (e, t) {
									console.log(t.Name + ": " + t["Execution Time"] + "ms");
								});
							}
							console.groupEnd();
						}
						p = [];
					}
				},
				invoke: function (t, n, o) {
					var s;
					var r;
					var l;
					var c = M;
					n = n || m;
					o = $ || o;
					if (typeof t == "string" && c !== i) {
						t = t.split(/[\. ]/);
						s = t.length - 1;
						e.each(t, function (n, o) {
							var a = n != s ? o + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t;
							if (e.isPlainObject(c[a]) && n != s) {
								c = c[a];
							} else {
								if (c[a] !== i) {
									r = c[a];
									return false;
								}
								if (!e.isPlainObject(c[o]) || n == s) {
									return c[o] !== i && (r = c[o], false);
								}
								c = c[o];
							}
						});
					}
					if (e.isFunction(r)) {
						l = r.apply(o, n);
					} else if (r !== i) {
						l = r;
					}
					if (e.isArray(a)) {
						a.push(l);
					} else if (a !== i) {
						a = [a, l];
					} else if (l !== i) {
						a = l;
					}
					return r;
				}
			};
			if (h) {
				if (M === i) {
					C.initialize();
				}
				C.invoke(f);
			} else {
				if (M !== i) {
					M.invoke("destroy");
				}
				C.initialize();
			}
		});
		if (a !== i) {
			return a;
		} else {
			return this;
		}
	};
	e.fn.modal.settings = {
		name: "Modal",
		namespace: "modal",
		silent: false,
		debug: false,
		verbose: false,
		performance: true,
		observeChanges: false,
		allowMultiple: false,
		detachable: true,
		closable: true,
		autofocus: true,
		inverted: false,
		blurring: false,
		dimmerSettings: {
			closable: false,
			useCSS: true
		},
		keyboardShortcuts: true,
		context: "body",
		queue: false,
		duration: 500,
		offset: 0,
		transition: "scale",
		padding: 50,
		onShow: function () {},
		onVisible: function () {},
		onHide: function () {
			return true;
		},
		onHidden: function () {},
		onApprove: function () {
			return true;
		},
		onDeny: function () {
			return true;
		},
		selector: {
			close: "> .close",
			approve: ".actions .positive, .actions .approve, .actions .ok",
			deny: ".actions .negative, .actions .deny, .actions .cancel",
			modal: ".ui.modal"
		},
		error: {
			dimmer: "UI Dimmer, a required component is not included in this page",
			method: "The method you called is not defined.",
			notFound: "The element you specified could not be found"
		},
		className: {
			active: "active",
			animating: "animating",
			blurring: "blurring",
			scrolling: "scrolling",
			undetached: "undetached"
		}
	};
})(jQuery, window, document);
(function (e, t, n, i) {
	"use strict";

	t = t !== undefined && t.Math == Math ? t : typeof self != "undefined" && self.Math == Math ? self : Function("return this")();
	e.fn.nag = function (n) {
		var o;
		var a = e(this);
		var s = a.selector || "";
		var r = new Date().getTime();
		var l = [];
		var c = arguments[0];
		var u = typeof c == "string";
		var d = [].slice.call(arguments, 1);
		a.each(function () {
			var a;
			var p = e.isPlainObject(n) ? e.extend(true, {}, e.fn.nag.settings, n) : e.extend({}, e.fn.nag.settings);
			p.className;
			var f = p.selector;
			var h = p.error;
			var m = p.namespace;
			var g = "." + m;
			var v = m + "-module";
			var b = e(this);
			b.find(f.close);
			var y = e(p.context ? p.context : "body");
			var w = this;
			var _ = b.data(v);
			if (!t.requestAnimationFrame && !t.mozRequestAnimationFrame && !t.webkitRequestAnimationFrame) {
				t.msRequestAnimationFrame;
			}
			a = {
				initialize: function () {
					a.verbose("Initializing element");
					b.on("click" + g, f.close, a.dismiss).data(v, a);
					if (p.detachable && b.parent()[0] !== y[0]) {
						b.detach().prependTo(y);
					}
					if (p.displayTime > 0) {
						setTimeout(a.hide, p.displayTime);
					}
					a.show();
				},
				destroy: function () {
					a.verbose("Destroying instance");
					b.removeData(v).off(g);
				},
				show: function () {
					if (a.should.show() && !b.is(":visible")) {
						a.debug("Showing nag", p.animation.show);
						if (p.animation.show == "fade") {
							b.fadeIn(p.duration, p.easing);
						} else {
							b.slideDown(p.duration, p.easing);
						}
					}
				},
				hide: function () {
					a.debug("Showing nag", p.animation.hide);
					if (p.animation.show == "fade") {
						b.fadeIn(p.duration, p.easing);
					} else {
						b.slideUp(p.duration, p.easing);
					}
				},
				onHide: function () {
					a.debug("Removing nag", p.animation.hide);
					b.remove();
					if (p.onHide) {
						p.onHide();
					}
				},
				dismiss: function (e) {
					if (p.storageMethod) {
						a.storage.set(p.key, p.value);
					}
					a.hide();
					e.stopImmediatePropagation();
					e.preventDefault();
				},
				should: {
					show: function () {
						if (p.persist) {
							a.debug("Persistent nag is set, can show nag");
							return true;
						} else if (a.storage.get(p.key) != p.value.toString()) {
							a.debug("Stored value is not set, can show nag", a.storage.get(p.key));
							return true;
						} else {
							a.debug("Stored value is set, cannot show nag", a.storage.get(p.key));
							return false;
						}
					}
				},
				get: {
					storageOptions: function () {
						var e = {};
						if (p.expires) {
							e.expires = p.expires;
						}
						if (p.domain) {
							e.domain = p.domain;
						}
						if (p.path) {
							e.path = p.path;
						}
						return e;
					}
				},
				clear: function () {
					a.storage.remove(p.key);
				},
				storage: {
					set: function (n, o) {
						var s = a.get.storageOptions();
						if (p.storageMethod == "localstorage" && t.localStorage !== i) {
							t.localStorage.setItem(n, o);
							a.debug("Value stored using local storage", n, o);
						} else if (p.storageMethod == "sessionstorage" && t.sessionStorage !== i) {
							t.sessionStorage.setItem(n, o);
							a.debug("Value stored using session storage", n, o);
						} else {
							if (e.cookie === i) {
								a.error(h.noCookieStorage);
								return;
							}
							e.cookie(n, o, s);
							a.debug("Value stored using cookie", n, o, s);
						}
					},
					get: function (n, o) {
						var s;
						if (p.storageMethod == "localstorage" && t.localStorage !== i) {
							s = t.localStorage.getItem(n);
						} else if (p.storageMethod == "sessionstorage" && t.sessionStorage !== i) {
							s = t.sessionStorage.getItem(n);
						} else if (e.cookie !== i) {
							s = e.cookie(n);
						} else {
							a.error(h.noCookieStorage);
						}
						if (s == "undefined" || s == "null" || s === i || s === null) {
							s = i;
						}
						return s;
					},
					remove: function (n) {
						var o = a.get.storageOptions();
						if (p.storageMethod == "localstorage" && t.localStorage !== i) {
							t.localStorage.removeItem(n);
						} else if (p.storageMethod == "sessionstorage" && t.sessionStorage !== i) {
							t.sessionStorage.removeItem(n);
						} else if (e.cookie !== i) {
							e.removeCookie(n, o);
						} else {
							a.error(h.noStorage);
						}
					}
				},
				setting: function (t, n) {
					a.debug("Changing setting", t, n);
					if (e.isPlainObject(t)) {
						e.extend(true, p, t);
					} else {
						if (n === i) {
							return p[t];
						}
						if (e.isPlainObject(p[t])) {
							e.extend(true, p[t], n);
						} else {
							p[t] = n;
						}
					}
				},
				internal: function (t, n) {
					if (e.isPlainObject(t)) {
						e.extend(true, a, t);
					} else {
						if (n === i) {
							return a[t];
						}
						a[t] = n;
					}
				},
				debug: function () {
					if (!p.silent && p.debug) {
						if (p.performance) {
							a.performance.log(arguments);
						} else {
							a.debug = Function.prototype.bind.call(console.info, console, p.name + ":");
							a.debug.apply(console, arguments);
						}
					}
				},
				verbose: function () {
					if (!p.silent && p.verbose && p.debug) {
						if (p.performance) {
							a.performance.log(arguments);
						} else {
							a.verbose = Function.prototype.bind.call(console.info, console, p.name + ":");
							a.verbose.apply(console, arguments);
						}
					}
				},
				error: function () {
					if (!p.silent) {
						a.error = Function.prototype.bind.call(console.error, console, p.name + ":");
						a.error.apply(console, arguments);
					}
				},
				performance: {
					log: function (e) {
						var t;
						var n;
						var i;
						if (p.performance) {
							t = new Date().getTime();
							i = r || t;
							n = t - i;
							r = t;
							l.push({
								Name: e[0],
								Arguments: [].slice.call(e, 1) || "",
								Element: w,
								"Execution Time": n
							});
						}
						clearTimeout(a.performance.timer);
						a.performance.timer = setTimeout(a.performance.display, 500);
					},
					display: function () {
						var t = p.name + ":";
						var n = 0;
						r = false;
						clearTimeout(a.performance.timer);
						e.each(l, function (e, t) {
							n += t["Execution Time"];
						});
						t += " " + n + "ms";
						if (s) {
							t += " '" + s + "'";
						}
						if ((console.group !== i || console.table !== i) && l.length > 0) {
							console.groupCollapsed(t);
							if (console.table) {
								console.table(l);
							} else {
								e.each(l, function (e, t) {
									console.log(t.Name + ": " + t["Execution Time"] + "ms");
								});
							}
							console.groupEnd();
						}
						l = [];
					}
				},
				invoke: function (t, n, s) {
					var r;
					var l;
					var c;
					var u = _;
					n = n || d;
					s = w || s;
					if (typeof t == "string" && u !== i) {
						t = t.split(/[\. ]/);
						r = t.length - 1;
						e.each(t, function (n, o) {
							var s = n != r ? o + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t;
							if (e.isPlainObject(u[s]) && n != r) {
								u = u[s];
							} else {
								if (u[s] !== i) {
									l = u[s];
									return false;
								}
								if (!e.isPlainObject(u[o]) || n == r) {
									if (u[o] !== i) {
										l = u[o];
										return false;
									} else {
										a.error(h.method, t);
										return false;
									}
								}
								u = u[o];
							}
						});
					}
					if (e.isFunction(l)) {
						c = l.apply(s, n);
					} else if (l !== i) {
						c = l;
					}
					if (e.isArray(o)) {
						o.push(c);
					} else if (o !== i) {
						o = [o, c];
					} else if (c !== i) {
						o = c;
					}
					return l;
				}
			};
			if (u) {
				if (_ === i) {
					a.initialize();
				}
				a.invoke(c);
			} else {
				if (_ !== i) {
					_.invoke("destroy");
				}
				a.initialize();
			}
		});
		if (o !== i) {
			return o;
		} else {
			return this;
		}
	};
	e.fn.nag.settings = {
		name: "Nag",
		silent: false,
		debug: false,
		verbose: false,
		performance: true,
		namespace: "Nag",
		persist: false,
		displayTime: 0,
		animation: {
			show: "slide",
			hide: "slide"
		},
		context: false,
		detachable: false,
		expires: 30,
		domain: false,
		path: "/",
		storageMethod: "cookie",
		key: "nag",
		value: "dismiss",
		error: {
			noCookieStorage: "$.cookie is not included. A storage solution is required.",
			noStorage: "Neither $.cookie or store is defined. A storage solution is required for storing state",
			method: "The method you called is not defined."
		},
		className: {
			bottom: "bottom",
			fixed: "fixed"
		},
		selector: {
			close: ".close.icon"
		},
		speed: 500,
		easing: "easeOutQuad",
		onHide: function () {}
	};
	e.extend(e.easing, {
		easeOutQuad: function (e, t, n, i, o) {
			return -i * (t /= o) * (t - 2) + n;
		}
	});
})(jQuery, window, document);
(function (e, t, n, i) {
	"use strict";

	t = t !== undefined && t.Math == Math ? t : typeof self != "undefined" && self.Math == Math ? self : Function("return this")();
	e.fn.popup = function (o) {
		var a;
		var s = e(this);
		var r = e(n);
		var l = e(t);
		var c = e("body");
		var u = s.selector || "";
		var d = new Date().getTime();
		var p = [];
		var f = arguments[0];
		var h = typeof f == "string";
		var m = [].slice.call(arguments, 1);
		s.each(function () {
			var s;
			var g;
			var v;
			var b;
			var y;
			var w;
			var _ = e.isPlainObject(o) ? e.extend(true, {}, e.fn.popup.settings, o) : e.extend({}, e.fn.popup.settings);
			var k = _.selector;
			var x = _.className;
			var C = _.error;
			var S = _.metadata;
			var A = _.namespace;
			var T = "." + _.namespace;
			var P = "module-" + A;
			var j = e(this);
			var E = e(_.context);
			var N = e(_.scrollContext);
			var O = e(_.boundary);
			var D = _.target ? e(_.target) : j;
			var I = 0;
			var $ = false;
			var M = false;
			var z = this;
			var F = j.data(P);
			w = {
				initialize: function () {
					w.debug("Initializing", j);
					w.createID();
					w.bind.events();
					if (!w.exists() && _.preserve) {
						w.create();
					}
					if (_.observeChanges) {
						w.observeChanges();
					}
					w.instantiate();
				},
				instantiate: function () {
					w.verbose("Storing instance", w);
					F = w;
					j.data(P, F);
				},
				observeChanges: function () {
					if ("MutationObserver" in t) {
						(v = new MutationObserver(w.event.documentChanged)).observe(n, {
							childList: true,
							subtree: true
						});
						w.debug("Setting up mutation observer", v);
					}
				},
				refresh: function () {
					if (_.popup) {
						s = e(_.popup).eq(0);
					} else if (_.inline) {
						s = D.nextAll(k.popup).eq(0);
						_.popup = s;
					}
					if (_.popup) {
						s.addClass(x.loading);
						g = w.get.offsetParent();
						s.removeClass(x.loading);
						if (_.movePopup && w.has.popup() && w.get.offsetParent(s)[0] !== g[0]) {
							w.debug("Moving popup to the same offset parent as activating element");
							s.detach().appendTo(g);
						}
					} else {
						g = _.inline ? w.get.offsetParent(D) : w.has.popup() ? w.get.offsetParent(s) : c;
					}
					if (g.is("html") && g[0] !== c[0]) {
						w.debug("Setting page as offset parent");
						g = c;
					}
					if (w.get.variation()) {
						w.set.variation();
					}
				},
				reposition: function () {
					w.refresh();
					w.set.position();
				},
				destroy: function () {
					w.debug("Destroying previous module");
					if (v) {
						v.disconnect();
					}
					if (s && !_.preserve) {
						w.removePopup();
					}
					clearTimeout(w.hideTimer);
					clearTimeout(w.showTimer);
					w.unbind.close();
					w.unbind.events();
					j.removeData(P);
				},
				event: {
					start: function (t) {
						var n = e.isPlainObject(_.delay) ? _.delay.show : _.delay;
						clearTimeout(w.hideTimer);
						if (!M) {
							w.showTimer = setTimeout(w.show, n);
						}
					},
					end: function () {
						var t = e.isPlainObject(_.delay) ? _.delay.hide : _.delay;
						clearTimeout(w.showTimer);
						w.hideTimer = setTimeout(w.hide, t);
					},
					touchstart: function (e) {
						M = true;
						w.show();
					},
					resize: function () {
						if (w.is.visible()) {
							w.set.position();
						}
					},
					documentChanged: function (t) {
						[].forEach.call(t, function (t) {
							if (t.removedNodes) {
								[].forEach.call(t.removedNodes, function (t) {
									if (t == z || e(t).find(z).length > 0) {
										w.debug("Element removed from DOM, tearing down events");
										w.destroy();
									}
								});
							}
						});
					},
					hideGracefully: function (t) {
						var i = e(t.target);
						var o = e.contains(n.documentElement, t.target);
						var a = i.closest(k.popup).length > 0;
						if (t && !a && o) {
							w.debug("Click occurred outside popup hiding popup");
							w.hide();
						} else {
							w.debug("Click was inside popup, keeping popup open");
						}
					}
				},
				create: function () {
					var t = w.get.html();
					var n = w.get.title();
					var i = w.get.content();
					if (t || i || n) {
						w.debug("Creating pop-up html");
						t ||= _.templates.popup({
							title: n,
							content: i
						});
						s = e("<div/>").addClass(x.popup).data(S.activator, j).html(t);
						if (_.inline) {
							w.verbose("Inserting popup element inline", s);
							s.insertAfter(j);
						} else {
							w.verbose("Appending popup element to body", s);
							s.appendTo(E);
						}
						w.refresh();
						w.set.variation();
						if (_.hoverable) {
							w.bind.popup();
						}
						_.onCreate.call(s, z);
					} else if (D.next(k.popup).length !== 0) {
						w.verbose("Pre-existing popup found");
						_.inline = true;
						_.popup = D.next(k.popup).data(S.activator, j);
						w.refresh();
						if (_.hoverable) {
							w.bind.popup();
						}
					} else if (_.popup) {
						e(_.popup).data(S.activator, j);
						w.verbose("Used popup specified in settings");
						w.refresh();
						if (_.hoverable) {
							w.bind.popup();
						}
					} else {
						w.debug("No content specified skipping display", z);
					}
				},
				createID: function () {
					y = (Math.random().toString(16) + "000000000").substr(2, 8);
					b = "." + y;
					w.verbose("Creating unique id for element", y);
				},
				toggle: function () {
					w.debug("Toggling pop-up");
					if (w.is.hidden()) {
						w.debug("Popup is hidden, showing pop-up");
						w.unbind.close();
						w.show();
					} else {
						w.debug("Popup is visible, hiding pop-up");
						w.hide();
					}
				},
				show: function (e) {
					e = e || function () {};
					w.debug("Showing pop-up", _.transition);
					if (w.is.hidden() && (!w.is.active() || !w.is.dropdown())) {
						if (!w.exists()) {
							w.create();
						}
						if (_.onShow.call(s, z) === false) {
							w.debug("onShow callback returned false, cancelling popup animation");
							return;
						}
						if (!_.preserve && !_.popup) {
							w.refresh();
						}
						if (s && w.set.position()) {
							w.save.conditions();
							if (_.exclusive) {
								w.hideAll();
							}
							w.animate.show(e);
						}
					}
				},
				hide: function (e) {
					e = e || function () {};
					if (w.is.visible() || w.is.animating()) {
						if (_.onHide.call(s, z) === false) {
							w.debug("onHide callback returned false, cancelling popup animation");
							return;
						}
						w.remove.visible();
						w.unbind.close();
						w.restore.conditions();
						w.animate.hide(e);
					}
				},
				hideAll: function () {
					e(k.popup).filter("." + x.visible).each(function () {
						e(this).data(S.activator).popup("hide");
					});
				},
				exists: function () {
					return !!s && (_.inline || _.popup ? w.has.popup() : s.closest(E).length >= 1);
				},
				removePopup: function () {
					if (w.has.popup() && !_.popup) {
						w.debug("Removing popup", s);
						s.remove();
						s = i;
						_.onRemove.call(s, z);
					}
				},
				save: {
					conditions: function () {
						w.cache = {
							title: j.attr("title")
						};
						if (w.cache.title) {
							j.removeAttr("title");
						}
						w.verbose("Saving original attributes", w.cache.title);
					}
				},
				restore: {
					conditions: function () {
						if (w.cache && w.cache.title) {
							j.attr("title", w.cache.title);
							w.verbose("Restoring original attributes", w.cache.title);
						}
						return true;
					}
				},
				supports: {
					svg: function () {
						return typeof SVGGraphicsElement === i;
					}
				},
				animate: {
					show: function (t) {
						t = e.isFunction(t) ? t : function () {};
						if (_.transition && e.fn.transition !== i && j.transition("is supported")) {
							w.set.visible();
							s.transition({
								animation: _.transition + " in",
								queue: false,
								debug: _.debug,
								verbose: _.verbose,
								duration: _.duration,
								onComplete: function () {
									w.bind.close();
									t.call(s, z);
									_.onVisible.call(s, z);
								}
							});
						} else {
							w.error(C.noTransition);
						}
					},
					hide: function (t) {
						t = e.isFunction(t) ? t : function () {};
						w.debug("Hiding pop-up");
						if (_.onHide.call(s, z) === false) {
							w.debug("onHide callback returned false, cancelling popup animation");
							return;
						} else {
							if (_.transition && e.fn.transition !== i && j.transition("is supported")) {
								s.transition({
									animation: _.transition + " out",
									queue: false,
									duration: _.duration,
									debug: _.debug,
									verbose: _.verbose,
									onComplete: function () {
										w.reset();
										t.call(s, z);
										_.onHidden.call(s, z);
									}
								});
							} else {
								w.error(C.noTransition);
							}
							return;
						}
					}
				},
				change: {
					content: function (e) {
						s.html(e);
					}
				},
				get: {
					html: function () {
						j.removeData(S.html);
						return j.data(S.html) || _.html;
					},
					title: function () {
						j.removeData(S.title);
						return j.data(S.title) || _.title;
					},
					content: function () {
						j.removeData(S.content);
						return j.data(S.content) || j.attr("title") || _.content;
					},
					variation: function () {
						j.removeData(S.variation);
						return j.data(S.variation) || _.variation;
					},
					popup: function () {
						return s;
					},
					popupOffset: function () {
						return s.offset();
					},
					calculations: function () {
						var e;
						var n = D[0];
						var i = O[0] == t;
						var o = _.inline || _.popup && _.movePopup ? D.position() : D.offset();
						var a = i ? {
							top: 0,
							left: 0
						} : O.offset();
						var r = {};
						var c = i ? {
							top: l.scrollTop(),
							left: l.scrollLeft()
						} : {
							top: 0,
							left: 0
						};
						r = {
							target: {
								element: D[0],
								width: D.outerWidth(),
								height: D.outerHeight(),
								top: o.top,
								left: o.left,
								margin: {}
							},
							popup: {
								width: s.outerWidth(),
								height: s.outerHeight()
							},
							parent: {
								width: g.outerWidth(),
								height: g.outerHeight()
							},
							screen: {
								top: a.top,
								left: a.left,
								scroll: {
									top: c.top,
									left: c.left
								},
								width: O.width(),
								height: O.height()
							}
						};
						if (_.setFluidWidth && w.is.fluid()) {
							r.container = {
								width: s.parent().outerWidth()
							};
							r.popup.width = r.container.width;
						}
						r.target.margin.top = _.inline ? parseInt(t.getComputedStyle(n).getPropertyValue("margin-top"), 10) : 0;
						r.target.margin.left = _.inline ? w.is.rtl() ? parseInt(t.getComputedStyle(n).getPropertyValue("margin-right"), 10) : parseInt(t.getComputedStyle(n).getPropertyValue("margin-left"), 10) : 0;
						e = r.screen;
						r.boundary = {
							top: e.top + e.scroll.top,
							bottom: e.top + e.scroll.top + e.height,
							left: e.left + e.scroll.left,
							right: e.left + e.scroll.left + e.width
						};
						return r;
					},
					id: function () {
						return y;
					},
					startEvent: function () {
						if (_.on == "hover") {
							return "mouseenter";
						} else {
							return _.on == "focus" && "focus";
						}
					},
					scrollEvent: function () {
						return "scroll";
					},
					endEvent: function () {
						if (_.on == "hover") {
							return "mouseleave";
						} else {
							return _.on == "focus" && "blur";
						}
					},
					distanceFromBoundary: function (e, t) {
						var n;
						var i;
						var o = {};
						t = t || w.get.calculations();
						n = t.popup;
						i = t.boundary;
						if (e) {
							o = {
								top: e.top - i.top,
								left: e.left - i.left,
								right: i.right - (e.left + n.width),
								bottom: i.bottom - (e.top + n.height)
							};
							w.verbose("Distance from boundaries determined", e, o);
						}
						return o;
					},
					offsetParent: function (t) {
						var n = (t !== i ? t[0] : j[0]).parentNode;
						var o = e(n);
						if (n) {
							for (var a = o.css("transform") === "none", s = o.css("position") === "static", r = o.is("html"); n && !r && s && a;) {
								n = n.parentNode;
								o = e(n);
								a = o.css("transform") === "none";
								s = o.css("position") === "static";
								r = o.is("html");
							}
						}
						if (o && o.length > 0) {
							return o;
						} else {
							return e();
						}
					},
					positions: function () {
						return {
							"top left": false,
							"top center": false,
							"top right": false,
							"bottom left": false,
							"bottom center": false,
							"bottom right": false,
							"left center": false,
							"right center": false
						};
					},
					nextPosition: function (e) {
						var t = e.split(" ");
						var n = t[0];
						var i = t[1];
						var o = {
							top: "bottom",
							bottom: "top",
							left: "right",
							right: "left"
						};
						var a = {
							left: "center",
							center: "right",
							right: "left"
						};
						var s = {
							"top left": "top center",
							"top center": "top right",
							"top right": "right center",
							"right center": "bottom right",
							"bottom right": "bottom center",
							"bottom center": "bottom left",
							"bottom left": "left center",
							"left center": "top left"
						};
						var r = n == "top" || n == "bottom";
						var l = false;
						var c = false;
						var u = false;
						if (!$) {
							w.verbose("All available positions available");
							$ = w.get.positions();
						}
						w.debug("Recording last position tried", e);
						$[e] = true;
						if (_.prefer === "opposite") {
							u = [o[n], i];
							u = u.join(" ");
							l = $[u] === true;
							w.debug("Trying opposite strategy", u);
						}
						if (_.prefer === "adjacent" && r) {
							u = [n, a[i]];
							u = u.join(" ");
							c = $[u] === true;
							w.debug("Trying adjacent strategy", u);
						}
						if (c || l) {
							w.debug("Using backup position", u);
							u = s[e];
						}
						return u;
					}
				},
				set: {
					position: function (e, t) {
						if (D.length !== 0 && s.length !== 0) {
							var n;
							var o;
							var a;
							var r;
							var l;
							var c;
							var u;
							var d;
							t = t || w.get.calculations();
							e = e || j.data(S.position) || _.position;
							n = j.data(S.offset) || _.offset;
							o = _.distanceAway;
							a = t.target;
							r = t.popup;
							l = t.parent;
							if (a.width === 0 && a.height === 0 && !w.is.svg(a.element)) {
								w.debug("Popup target is hidden, no action taken");
								return false;
							}
							if (_.inline) {
								w.debug("Adding margin to calculation", a.margin);
								if (e == "left center" || e == "right center") {
									n += a.margin.top;
									o += -a.margin.left;
								} else if (e == "top left" || e == "top center" || e == "top right") {
									n += a.margin.left;
									o -= a.margin.top;
								} else {
									n += a.margin.left;
									o += a.margin.top;
								}
							}
							w.debug("Determining popup position from calculations", e, t);
							if (w.is.rtl()) {
								e = e.replace(/left|right/g, function (e) {
									if (e == "left") {
										return "right";
									} else {
										return "left";
									}
								});
								w.debug("RTL: Popup position updated", e);
							}
							if (I == _.maxSearchDepth && typeof _.lastResort == "string") {
								e = _.lastResort;
							}
							switch (e) {
								case "top left":
									c = {
										top: "auto",
										bottom: l.height - a.top + o,
										left: a.left + n,
										right: "auto"
									};
									break;
								case "top center":
									c = {
										bottom: l.height - a.top + o,
										left: a.left + a.width / 2 - r.width / 2 + n,
										top: "auto",
										right: "auto"
									};
									break;
								case "top right":
									c = {
										bottom: l.height - a.top + o,
										right: l.width - a.left - a.width - n,
										top: "auto",
										left: "auto"
									};
									break;
								case "left center":
									c = {
										top: a.top + a.height / 2 - r.height / 2 + n,
										right: l.width - a.left + o,
										left: "auto",
										bottom: "auto"
									};
									break;
								case "right center":
									c = {
										top: a.top + a.height / 2 - r.height / 2 + n,
										left: a.left + a.width + o,
										bottom: "auto",
										right: "auto"
									};
									break;
								case "bottom left":
									c = {
										top: a.top + a.height + o,
										left: a.left + n,
										bottom: "auto",
										right: "auto"
									};
									break;
								case "bottom center":
									c = {
										top: a.top + a.height + o,
										left: a.left + a.width / 2 - r.width / 2 + n,
										bottom: "auto",
										right: "auto"
									};
									break;
								case "bottom right":
									c = {
										top: a.top + a.height + o,
										right: l.width - a.left - a.width - n,
										left: "auto",
										bottom: "auto"
									};
							}
							if (c === i) {
								w.error(C.invalidPosition, e);
							}
							w.debug("Calculated popup positioning values", c);
							s.css(c).removeClass(x.position).addClass(e).addClass(x.loading);
							u = w.get.popupOffset();
							d = w.get.distanceFromBoundary(u, t);
							if (w.is.offstage(d, e)) {
								w.debug("Position is outside viewport", e);
								if (I < _.maxSearchDepth) {
									I++;
									e = w.get.nextPosition(e);
									w.debug("Trying new position", e);
									return !!s && w.set.position(e, t);
								}
								if (!_.lastResort) {
									w.debug("Popup could not find a position to display", s);
									w.error(C.cannotPlace, z);
									w.remove.attempts();
									w.remove.loading();
									w.reset();
									_.onUnplaceable.call(s, z);
									return false;
								}
								w.debug("No position found, showing with last position");
							}
							w.debug("Position is on stage", e);
							w.remove.attempts();
							w.remove.loading();
							if (_.setFluidWidth && w.is.fluid()) {
								w.set.fluidWidth(t);
							}
							return true;
						}
						w.error(C.notFound);
					},
					fluidWidth: function (e) {
						e = e || w.get.calculations();
						w.debug("Automatically setting element width to parent width", e.parent.width);
						s.css("width", e.container.width);
					},
					variation: function (e) {
						if ((e = e || w.get.variation()) && w.has.popup()) {
							w.verbose("Adding variation to popup", e);
							s.addClass(e);
						}
					},
					visible: function () {
						j.addClass(x.visible);
					}
				},
				remove: {
					loading: function () {
						s.removeClass(x.loading);
					},
					variation: function (e) {
						if (e = e || w.get.variation()) {
							w.verbose("Removing variation", e);
							s.removeClass(e);
						}
					},
					visible: function () {
						j.removeClass(x.visible);
					},
					attempts: function () {
						w.verbose("Resetting all searched positions");
						I = 0;
						$ = false;
					}
				},
				bind: {
					events: function () {
						w.debug("Binding popup events to module");
						if (_.on == "click") {
							j.on("click" + T, w.toggle);
						}
						if (_.on == "hover" && true) {
							j.on("touchstart" + T, w.event.touchstart);
						}
						if (w.get.startEvent()) {
							j.on(w.get.startEvent() + T, w.event.start).on(w.get.endEvent() + T, w.event.end);
						}
						if (_.target) {
							w.debug("Target set to element", D);
						}
						l.on("resize" + b, w.event.resize);
					},
					popup: function () {
						w.verbose("Allowing hover events on popup to prevent closing");
						if (s && w.has.popup()) {
							s.on("mouseenter" + T, w.event.start).on("mouseleave" + T, w.event.end);
						}
					},
					close: function () {
						if (_.hideOnScroll === true || _.hideOnScroll == "auto" && _.on != "click") {
							N.one(w.get.scrollEvent() + b, w.event.hideGracefully);
						}
						if (_.on == "hover" && M) {
							w.verbose("Binding popup close event to document");
							r.on("touchstart" + b, function (e) {
								w.verbose("Touched away from popup");
								w.event.hideGracefully.call(z, e);
							});
						}
						if (_.on == "click" && _.closable) {
							w.verbose("Binding popup close event to document");
							r.on("click" + b, function (e) {
								w.verbose("Clicked away from popup");
								w.event.hideGracefully.call(z, e);
							});
						}
					}
				},
				unbind: {
					events: function () {
						l.off(b);
						j.off(T);
					},
					close: function () {
						r.off(b);
						N.off(b);
					}
				},
				has: {
					popup: function () {
						return s && s.length > 0;
					}
				},
				is: {
					offstage: function (t, n) {
						var i = [];
						e.each(t, function (e, t) {
							if (t < -_.jitter) {
								w.debug("Position exceeds allowable distance from edge", e, t, n);
								i.push(e);
							}
						});
						return i.length > 0;
					},
					svg: function (e) {
						return w.supports.svg() && e instanceof SVGGraphicsElement;
					},
					active: function () {
						return j.hasClass(x.active);
					},
					animating: function () {
						return s !== i && s.hasClass(x.animating);
					},
					fluid: function () {
						return s !== i && s.hasClass(x.fluid);
					},
					visible: function () {
						return s !== i && s.hasClass(x.visible);
					},
					dropdown: function () {
						return j.hasClass(x.dropdown);
					},
					hidden: function () {
						return !w.is.visible();
					},
					rtl: function () {
						return j.css("direction") == "rtl";
					}
				},
				reset: function () {
					w.remove.visible();
					if (_.preserve) {
						if (e.fn.transition !== i) {
							s.transition("remove transition");
						}
					} else {
						w.removePopup();
					}
				},
				setting: function (t, n) {
					if (e.isPlainObject(t)) {
						e.extend(true, _, t);
					} else {
						if (n === i) {
							return _[t];
						}
						_[t] = n;
					}
				},
				internal: function (t, n) {
					if (e.isPlainObject(t)) {
						e.extend(true, w, t);
					} else {
						if (n === i) {
							return w[t];
						}
						w[t] = n;
					}
				},
				debug: function () {
					if (!_.silent && _.debug) {
						if (_.performance) {
							w.performance.log(arguments);
						} else {
							w.debug = Function.prototype.bind.call(console.info, console, _.name + ":");
							w.debug.apply(console, arguments);
						}
					}
				},
				verbose: function () {
					if (!_.silent && _.verbose && _.debug) {
						if (_.performance) {
							w.performance.log(arguments);
						} else {
							w.verbose = Function.prototype.bind.call(console.info, console, _.name + ":");
							w.verbose.apply(console, arguments);
						}
					}
				},
				error: function () {
					if (!_.silent) {
						w.error = Function.prototype.bind.call(console.error, console, _.name + ":");
						w.error.apply(console, arguments);
					}
				},
				performance: {
					log: function (e) {
						var t;
						var n;
						var i;
						if (_.performance) {
							t = new Date().getTime();
							i = d || t;
							n = t - i;
							d = t;
							p.push({
								Name: e[0],
								Arguments: [].slice.call(e, 1) || "",
								Element: z,
								"Execution Time": n
							});
						}
						clearTimeout(w.performance.timer);
						w.performance.timer = setTimeout(w.performance.display, 500);
					},
					display: function () {
						var t = _.name + ":";
						var n = 0;
						d = false;
						clearTimeout(w.performance.timer);
						e.each(p, function (e, t) {
							n += t["Execution Time"];
						});
						t += " " + n + "ms";
						if (u) {
							t += " '" + u + "'";
						}
						if ((console.group !== i || console.table !== i) && p.length > 0) {
							console.groupCollapsed(t);
							if (console.table) {
								console.table(p);
							} else {
								e.each(p, function (e, t) {
									console.log(t.Name + ": " + t["Execution Time"] + "ms");
								});
							}
							console.groupEnd();
						}
						p = [];
					}
				},
				invoke: function (t, n, o) {
					var s;
					var r;
					var l;
					var c = F;
					n = n || m;
					o = z || o;
					if (typeof t == "string" && c !== i) {
						t = t.split(/[\. ]/);
						s = t.length - 1;
						e.each(t, function (n, o) {
							var a = n != s ? o + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t;
							if (e.isPlainObject(c[a]) && n != s) {
								c = c[a];
							} else {
								if (c[a] !== i) {
									r = c[a];
									return false;
								}
								if (!e.isPlainObject(c[o]) || n == s) {
									return c[o] !== i && (r = c[o], false);
								}
								c = c[o];
							}
						});
					}
					if (e.isFunction(r)) {
						l = r.apply(o, n);
					} else if (r !== i) {
						l = r;
					}
					if (e.isArray(a)) {
						a.push(l);
					} else if (a !== i) {
						a = [a, l];
					} else if (l !== i) {
						a = l;
					}
					return r;
				}
			};
			if (h) {
				if (F === i) {
					w.initialize();
				}
				w.invoke(f);
			} else {
				if (F !== i) {
					F.invoke("destroy");
				}
				w.initialize();
			}
		});
		if (a !== i) {
			return a;
		} else {
			return this;
		}
	};
	e.fn.popup.settings = {
		name: "Popup",
		silent: false,
		debug: false,
		verbose: false,
		performance: true,
		namespace: "popup",
		observeChanges: true,
		onCreate: function () {},
		onRemove: function () {},
		onShow: function () {},
		onVisible: function () {},
		onHide: function () {},
		onUnplaceable: function () {},
		onHidden: function () {},
		on: "hover",
		boundary: t,
		addTouchEvents: true,
		position: "top left",
		variation: "",
		movePopup: true,
		target: false,
		popup: false,
		inline: false,
		preserve: false,
		hoverable: false,
		content: false,
		html: false,
		title: false,
		closable: true,
		hideOnScroll: "auto",
		exclusive: false,
		context: "body",
		scrollContext: t,
		prefer: "opposite",
		lastResort: false,
		delay: {
			show: 50,
			hide: 70
		},
		setFluidWidth: true,
		duration: 200,
		transition: "scale",
		distanceAway: 0,
		jitter: 2,
		offset: 0,
		maxSearchDepth: 15,
		error: {
			invalidPosition: "The position you specified is not a valid position",
			cannotPlace: "Popup does not fit within the boundaries of the viewport",
			method: "The method you called is not defined.",
			noTransition: "This module requires ui transitions <https://github.com/Semantic-Org/UI-Transition>",
			notFound: "The target or popup you specified does not exist on the page"
		},
		metadata: {
			activator: "activator",
			content: "content",
			html: "html",
			offset: "offset",
			position: "position",
			title: "title",
			variation: "variation"
		},
		className: {
			active: "active",
			animating: "animating",
			dropdown: "dropdown",
			fluid: "fluid",
			loading: "loading",
			popup: "ui popup",
			position: "top left center bottom right",
			visible: "visible"
		},
		selector: {
			popup: ".ui.popup"
		},
		templates: {
			escape: function (e) {
				var t = /[&<>"'`]/g;
				var n = {
					"&": "&amp;",
					"<": "&lt;",
					">": "&gt;",
					"\"": "&quot;",
					"'": "&#x27;",
					"`": "&#x60;"
				};
				if (/[&<>"'`]/.test(e)) {
					return e.replace(t, function (e) {
						return n[e];
					});
				} else {
					return e;
				}
			},
			popup: function (t) {
				var n = "";
				var o = e.fn.popup.settings.templates.escape;
				if (typeof t !== i) {
					if (typeof t.title !== i && t.title) {
						t.title = o(t.title);
						n += "<div class=\"header\">" + t.title + "</div>";
					}
					if (typeof t.content !== i && t.content) {
						t.content = o(t.content);
						n += "<div class=\"content\">" + t.content + "</div>";
					}
				}
				return n;
			}
		}
	};
})(jQuery, window, document);
(function (e, t, n, i) {
	"use strict";

	if ((t = t !== undefined && t.Math == Math ? t : typeof self != "undefined" && self.Math == Math ? self : Function("return this")()) === undefined || t.Math != Math) {
		if (typeof self != "undefined" && self.Math == Math) {
			self;
		} else {
			Function("return this")();
		}
	}
	e.fn.progress = function (t) {
		var o;
		var a = e(this);
		var s = a.selector || "";
		var r = new Date().getTime();
		var l = [];
		var c = arguments[0];
		var u = typeof c == "string";
		var d = [].slice.call(arguments, 1);
		a.each(function () {
			var a;
			var p;
			var f = e.isPlainObject(t) ? e.extend(true, {}, e.fn.progress.settings, t) : e.extend({}, e.fn.progress.settings);
			var h = f.className;
			var m = f.metadata;
			var g = f.namespace;
			var v = f.selector;
			var b = f.error;
			var y = "." + g;
			var w = "module-" + g;
			var _ = e(this);
			var k = e(this).find(v.bar);
			var x = e(this).find(v.progress);
			var C = e(this).find(v.label);
			var S = this;
			var A = _.data(w);
			var T = false;
			p = {
				initialize: function () {
					p.debug("Initializing progress bar", f);
					p.set.duration();
					p.set.transitionEvent();
					p.read.metadata();
					p.read.settings();
					p.instantiate();
				},
				instantiate: function () {
					p.verbose("Storing instance of progress", p);
					A = p;
					_.data(w, p);
				},
				destroy: function () {
					p.verbose("Destroying previous progress for", _);
					clearInterval(A.interval);
					p.remove.state();
					_.removeData(w);
					A = i;
				},
				reset: function () {
					p.remove.nextValue();
					p.update.progress(0);
				},
				complete: function () {
					if (p.percent === i || p.percent < 100) {
						p.remove.progressPoll();
						p.set.percent(100);
					}
				},
				read: {
					metadata: function () {
						var e = {
							percent: _.data(m.percent),
							total: _.data(m.total),
							value: _.data(m.value)
						};
						if (e.percent) {
							p.debug("Current percent value set from metadata", e.percent);
							p.set.percent(e.percent);
						}
						if (e.total) {
							p.debug("Total value set from metadata", e.total);
							p.set.total(e.total);
						}
						if (e.value) {
							p.debug("Current value set from metadata", e.value);
							p.set.value(e.value);
							p.set.progress(e.value);
						}
					},
					settings: function () {
						if (f.total !== false) {
							p.debug("Current total set in settings", f.total);
							p.set.total(f.total);
						}
						if (f.value !== false) {
							p.debug("Current value set in settings", f.value);
							p.set.value(f.value);
							p.set.progress(p.value);
						}
						if (f.percent !== false) {
							p.debug("Current percent set in settings", f.percent);
							p.set.percent(f.percent);
						}
					}
				},
				bind: {
					transitionEnd: function (e) {
						var t = p.get.transitionEnd();
						k.one(t + y, function (t) {
							clearTimeout(p.failSafeTimer);
							e.call(this, t);
						});
						p.failSafeTimer = setTimeout(function () {
							k.triggerHandler(t);
						}, f.duration + f.failSafeDelay);
						p.verbose("Adding fail safe timer", p.timer);
					}
				},
				increment: function (e) {
					var t;
					var n;
					if (p.has.total()) {
						t = p.get.value();
						e = e || 1;
						n = t + e;
					} else {
						t = p.get.percent();
						e = e || p.get.randomValue();
						n = t + e;
						100;
						p.debug("Incrementing percentage by", t, n);
					}
					n = p.get.normalizedValue(n);
					p.set.progress(n);
				},
				decrement: function (e) {
					var t;
					var n;
					if (p.get.total()) {
						t = p.get.value();
						e = e || 1;
						n = t - e;
						p.debug("Decrementing value by", e, t);
					} else {
						t = p.get.percent();
						e = e || p.get.randomValue();
						n = t - e;
						p.debug("Decrementing percentage by", e, t);
					}
					n = p.get.normalizedValue(n);
					p.set.progress(n);
				},
				has: {
					progressPoll: function () {
						return p.progressPoll;
					},
					total: function () {
						return p.get.total() !== false;
					}
				},
				get: {
					text: function (e) {
						var t = p.value || 0;
						var n = p.total || 0;
						var i = T ? p.get.displayPercent() : p.percent || 0;
						var o = p.total > 0 ? n - t : 100 - i;
						e = e || "";
						e = e.replace("{value}", t).replace("{total}", n).replace("{left}", o).replace("{percent}", i);
						p.verbose("Adding variables to progress bar text", e);
						return e;
					},
					normalizedValue: function (e) {
						if (e < 0) {
							p.debug("Value cannot decrement below 0");
							return 0;
						}
						if (p.has.total()) {
							if (e > p.total) {
								p.debug("Value cannot increment above total", p.total);
								return p.total;
							}
						} else if (e > 100) {
							p.debug("Value cannot increment above 100 percent");
							return 100;
						}
						return e;
					},
					updateInterval: function () {
						if (f.updateInterval == "auto") {
							return f.duration;
						} else {
							return f.updateInterval;
						}
					},
					randomValue: function () {
						p.debug("Generating random increment percentage");
						return Math.floor(Math.random() * f.random.max + f.random.min);
					},
					numericValue: function (e) {
						if (typeof e == "string") {
							return e.replace(/[^\d.]/g, "") !== "" && +e.replace(/[^\d.]/g, "");
						} else {
							return e;
						}
					},
					transitionEnd: function () {
						var e;
						var t = n.createElement("element");
						var o = {
							transition: "transitionend",
							OTransition: "oTransitionEnd",
							MozTransition: "transitionend",
							WebkitTransition: "webkitTransitionEnd"
						};
						for (e in o) {
							if (t.style[e] !== i) {
								return o[e];
							}
						}
					},
					displayPercent: function () {
						var e = k.width();
						var t = _.width();
						var n = e > parseInt(k.css("min-width"), 10) ? e / t * 100 : p.percent;
						if (f.precision > 0) {
							return Math.round(n * (f.precision * 10)) / (f.precision * 10);
						} else {
							return Math.round(n);
						}
					},
					percent: function () {
						return p.percent || 0;
					},
					value: function () {
						return p.nextValue || p.value || 0;
					},
					total: function () {
						return p.total || false;
					}
				},
				create: {
					progressPoll: function () {
						p.progressPoll = setTimeout(function () {
							p.update.toNextValue();
							p.remove.progressPoll();
						}, p.get.updateInterval());
					}
				},
				is: {
					complete: function () {
						return p.is.success() || p.is.warning() || p.is.error();
					},
					success: function () {
						return _.hasClass(h.success);
					},
					warning: function () {
						return _.hasClass(h.warning);
					},
					error: function () {
						return _.hasClass(h.error);
					},
					active: function () {
						return _.hasClass(h.active);
					},
					visible: function () {
						return _.is(":visible");
					}
				},
				remove: {
					progressPoll: function () {
						p.verbose("Removing progress poll timer");
						if (p.progressPoll) {
							clearTimeout(p.progressPoll);
							delete p.progressPoll;
						}
					},
					nextValue: function () {
						p.verbose("Removing progress value stored for next update");
						delete p.nextValue;
					},
					state: function () {
						p.verbose("Removing stored state");
						delete p.total;
						delete p.percent;
						delete p.value;
					},
					active: function () {
						p.verbose("Removing active state");
						_.removeClass(h.active);
					},
					success: function () {
						p.verbose("Removing success state");
						_.removeClass(h.success);
					},
					warning: function () {
						p.verbose("Removing warning state");
						_.removeClass(h.warning);
					},
					error: function () {
						p.verbose("Removing error state");
						_.removeClass(h.error);
					}
				},
				set: {
					barWidth: function (e) {
						if (e > 100) {
							p.error(b.tooHigh, e);
						} else if (e < 0) {
							p.error(b.tooLow, e);
						} else {
							k.css("width", e + "%");
							_.attr("data-percent", parseInt(e, 10));
						}
					},
					duration: function (e) {
						e = typeof (e = e || f.duration) == "number" ? e + "ms" : e;
						p.verbose("Setting progress bar transition duration", e);
						k.css({
							"transition-duration": e
						});
					},
					percent: function (e) {
						e = typeof e == "string" ? +e.replace("%", "") : e;
						e = f.precision > 0 ? Math.round(e * (f.precision * 10)) / (f.precision * 10) : Math.round(e);
						p.percent = e;
						if (!p.has.total()) {
							p.value = f.precision > 0 ? Math.round(e / 100 * p.total * (f.precision * 10)) / (f.precision * 10) : Math.round(e / 100 * p.total * 10) / 10;
							if (f.limitValues) {
								p.value = p.value > 100 ? 100 : p.value < 0 ? 0 : p.value;
							}
						}
						p.set.barWidth(e);
						p.set.labelInterval();
						p.set.labels();
						f.onChange.call(S, e, p.value, p.total);
					},
					labelInterval: function () {
						clearInterval(p.interval);
						p.bind.transitionEnd(function () {
							p.verbose("Bar finished animating, removing continuous label updates");
							clearInterval(p.interval);
							T = false;
							p.set.labels();
						});
						T = true;
						p.interval = setInterval(function () {
							if (!e.contains(n.documentElement, S)) {
								clearInterval(p.interval);
								T = false;
							}
							p.set.labels();
						}, f.framerate);
					},
					labels: function () {
						p.verbose("Setting both bar progress and outer label text");
						p.set.barLabel();
						p.set.state();
					},
					label: function (e) {
						if (e = e || "") {
							e = p.get.text(e);
							p.verbose("Setting label to text", e);
							C.text(e);
						}
					},
					state: function (e) {
						if ((e = e !== i ? e : p.percent) === 100) {
							if (f.autoSuccess && !p.is.warning() && !p.is.error() && !p.is.success()) {
								p.set.success();
								p.debug("Automatically triggering success at 100%");
							} else {
								p.verbose("Reached 100% removing active state");
								p.remove.active();
								p.remove.progressPoll();
							}
						} else if (e > 0) {
							p.verbose("Adjusting active progress bar label", e);
							p.set.active();
						} else {
							p.remove.active();
							p.set.label(f.text.active);
						}
					},
					barLabel: function (e) {
						if (e !== i) {
							x.text(p.get.text(e));
						} else if (f.label == "ratio" && p.total) {
							p.verbose("Adding ratio to bar label");
							x.text(p.get.text(f.text.ratio));
						} else if (f.label == "percent") {
							p.verbose("Adding percentage to bar label");
							x.text(p.get.text(f.text.percent));
						}
					},
					active: function (e) {
						e = e || f.text.active;
						p.debug("Setting active state");
						if (f.showActivity && !p.is.active()) {
							_.addClass(h.active);
						}
						p.remove.warning();
						p.remove.error();
						p.remove.success();
						if (e = f.onLabelUpdate("active", e, p.value, p.total)) {
							p.set.label(e);
						}
						p.bind.transitionEnd(function () {
							f.onActive.call(S, p.value, p.total);
						});
					},
					success: function (e) {
						e = e || f.text.success || f.text.active;
						p.debug("Setting success state");
						_.addClass(h.success);
						p.remove.active();
						p.remove.warning();
						p.remove.error();
						p.complete();
						if (f.text.success) {
							e = f.onLabelUpdate("success", e, p.value, p.total);
							p.set.label(e);
						} else {
							e = f.onLabelUpdate("active", e, p.value, p.total);
							p.set.label(e);
						}
						p.bind.transitionEnd(function () {
							f.onSuccess.call(S, p.total);
						});
					},
					warning: function (e) {
						e = e || f.text.warning;
						p.debug("Setting warning state");
						_.addClass(h.warning);
						p.remove.active();
						p.remove.success();
						p.remove.error();
						p.complete();
						if (e = f.onLabelUpdate("warning", e, p.value, p.total)) {
							p.set.label(e);
						}
						p.bind.transitionEnd(function () {
							f.onWarning.call(S, p.value, p.total);
						});
					},
					error: function (e) {
						e = e || f.text.error;
						p.debug("Setting error state");
						_.addClass(h.error);
						p.remove.active();
						p.remove.success();
						p.remove.warning();
						p.complete();
						if (e = f.onLabelUpdate("error", e, p.value, p.total)) {
							p.set.label(e);
						}
						p.bind.transitionEnd(function () {
							f.onError.call(S, p.value, p.total);
						});
					},
					transitionEvent: function () {
						a = p.get.transitionEnd();
					},
					total: function (e) {
						p.total = e;
					},
					value: function (e) {
						p.value = e;
					},
					progress: function (e) {
						if (p.has.progressPoll()) {
							p.debug("Updated within interval, setting next update to use new value", e);
							p.set.nextValue(e);
						} else {
							p.debug("First update in progress update interval, immediately updating", e);
							p.update.progress(e);
							p.create.progressPoll();
						}
					},
					nextValue: function (e) {
						p.nextValue = e;
					}
				},
				update: {
					toNextValue: function () {
						var e = p.nextValue;
						if (e) {
							p.debug("Update interval complete using last updated value", e);
							p.update.progress(e);
							p.remove.nextValue();
						}
					},
					progress: function (e) {
						var t;
						if ((e = p.get.numericValue(e)) === false) {
							p.error(b.nonNumeric, e);
						}
						e = p.get.normalizedValue(e);
						if (p.has.total()) {
							p.set.value(e);
							t = e / p.total * 100;
							p.debug("Calculating percent complete from total", t);
							p.set.percent(t);
						} else {
							t = e;
							p.debug("Setting value to exact percentage value", t);
							p.set.percent(t);
						}
					}
				},
				setting: function (t, n) {
					p.debug("Changing setting", t, n);
					if (e.isPlainObject(t)) {
						e.extend(true, f, t);
					} else {
						if (n === i) {
							return f[t];
						}
						if (e.isPlainObject(f[t])) {
							e.extend(true, f[t], n);
						} else {
							f[t] = n;
						}
					}
				},
				internal: function (t, n) {
					if (e.isPlainObject(t)) {
						e.extend(true, p, t);
					} else {
						if (n === i) {
							return p[t];
						}
						p[t] = n;
					}
				},
				debug: function () {
					if (!f.silent && f.debug) {
						if (f.performance) {
							p.performance.log(arguments);
						} else {
							p.debug = Function.prototype.bind.call(console.info, console, f.name + ":");
							p.debug.apply(console, arguments);
						}
					}
				},
				verbose: function () {
					if (!f.silent && f.verbose && f.debug) {
						if (f.performance) {
							p.performance.log(arguments);
						} else {
							p.verbose = Function.prototype.bind.call(console.info, console, f.name + ":");
							p.verbose.apply(console, arguments);
						}
					}
				},
				error: function () {
					if (!f.silent) {
						p.error = Function.prototype.bind.call(console.error, console, f.name + ":");
						p.error.apply(console, arguments);
					}
				},
				performance: {
					log: function (e) {
						var t;
						var n;
						var i;
						if (f.performance) {
							t = new Date().getTime();
							i = r || t;
							n = t - i;
							r = t;
							l.push({
								Name: e[0],
								Arguments: [].slice.call(e, 1) || "",
								Element: S,
								"Execution Time": n
							});
						}
						clearTimeout(p.performance.timer);
						p.performance.timer = setTimeout(p.performance.display, 500);
					},
					display: function () {
						var t = f.name + ":";
						var n = 0;
						r = false;
						clearTimeout(p.performance.timer);
						e.each(l, function (e, t) {
							n += t["Execution Time"];
						});
						t += " " + n + "ms";
						if (s) {
							t += " '" + s + "'";
						}
						if ((console.group !== i || console.table !== i) && l.length > 0) {
							console.groupCollapsed(t);
							if (console.table) {
								console.table(l);
							} else {
								e.each(l, function (e, t) {
									console.log(t.Name + ": " + t["Execution Time"] + "ms");
								});
							}
							console.groupEnd();
						}
						l = [];
					}
				},
				invoke: function (t, n, a) {
					var s;
					var r;
					var l;
					var c = A;
					n = n || d;
					a = S || a;
					if (typeof t == "string" && c !== i) {
						t = t.split(/[\. ]/);
						s = t.length - 1;
						e.each(t, function (n, o) {
							var a = n != s ? o + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t;
							if (e.isPlainObject(c[a]) && n != s) {
								c = c[a];
							} else {
								if (c[a] !== i) {
									r = c[a];
									return false;
								}
								if (!e.isPlainObject(c[o]) || n == s) {
									if (c[o] !== i) {
										r = c[o];
										return false;
									} else {
										p.error(b.method, t);
										return false;
									}
								}
								c = c[o];
							}
						});
					}
					if (e.isFunction(r)) {
						l = r.apply(a, n);
					} else if (r !== i) {
						l = r;
					}
					if (e.isArray(o)) {
						o.push(l);
					} else if (o !== i) {
						o = [o, l];
					} else if (l !== i) {
						o = l;
					}
					return r;
				}
			};
			if (u) {
				if (A === i) {
					p.initialize();
				}
				p.invoke(c);
			} else {
				if (A !== i) {
					A.invoke("destroy");
				}
				p.initialize();
			}
		});
		if (o !== i) {
			return o;
		} else {
			return this;
		}
	};
	e.fn.progress.settings = {
		name: "Progress",
		namespace: "progress",
		silent: false,
		debug: false,
		verbose: false,
		performance: true,
		random: {
			min: 2,
			max: 5
		},
		duration: 300,
		updateInterval: "auto",
		autoSuccess: true,
		showActivity: true,
		limitValues: true,
		label: "percent",
		precision: 0,
		framerate: 1000 / 30,
		percent: false,
		total: false,
		value: false,
		failSafeDelay: 100,
		onLabelUpdate: function (e, t, n, i) {
			return t;
		},
		onChange: function (e, t, n) {},
		onSuccess: function (e) {},
		onActive: function (e, t) {},
		onError: function (e, t) {},
		onWarning: function (e, t) {},
		error: {
			method: "The method you called is not defined.",
			nonNumeric: "Progress value is non numeric",
			tooHigh: "Value specified is above 100%",
			tooLow: "Value specified is below 0%"
		},
		regExp: {
			variable: /\{\$*[A-z0-9]+\}/g
		},
		metadata: {
			percent: "percent",
			total: "total",
			value: "value"
		},
		selector: {
			bar: "> .bar",
			label: "> .label",
			progress: ".bar > .progress"
		},
		text: {
			active: false,
			error: false,
			success: false,
			warning: false,
			percent: "{percent}%",
			ratio: "{value} of {total}"
		},
		className: {
			active: "active",
			error: "error",
			success: "success",
			warning: "warning"
		}
	};
})(jQuery, window, document);
(function (e, t, n, i) {
	"use strict";

	t = t !== undefined && t.Math == Math ? t : typeof self != "undefined" && self.Math == Math ? self : Function("return this")();
	e.fn.rating = function (t) {
		var n;
		var o = e(this);
		var a = o.selector || "";
		var s = new Date().getTime();
		var r = [];
		var l = arguments[0];
		var c = typeof l == "string";
		var u = [].slice.call(arguments, 1);
		o.each(function () {
			var d;
			var p;
			var f = e.isPlainObject(t) ? e.extend(true, {}, e.fn.rating.settings, t) : e.extend({}, e.fn.rating.settings);
			var h = f.namespace;
			var m = f.className;
			var g = f.metadata;
			var v = f.selector;
			f.error;
			var b = "." + h;
			var y = "module-" + h;
			var w = this;
			var _ = e(this).data(y);
			var k = e(this);
			var x = k.find(v.icon);
			p = {
				initialize: function () {
					p.verbose("Initializing rating module", f);
					if (x.length === 0) {
						p.setup.layout();
					}
					if (f.interactive) {
						p.enable();
					} else {
						p.disable();
					}
					p.set.initialLoad();
					p.set.rating(p.get.initialRating());
					p.remove.initialLoad();
					p.instantiate();
				},
				instantiate: function () {
					p.verbose("Instantiating module", f);
					_ = p;
					k.data(y, p);
				},
				destroy: function () {
					p.verbose("Destroying previous instance", _);
					p.remove.events();
					k.removeData(y);
				},
				refresh: function () {
					x = k.find(v.icon);
				},
				setup: {
					layout: function () {
						var t = p.get.maxRating();
						var n = e.fn.rating.settings.templates.icon(t);
						p.debug("Generating icon html dynamically");
						k.html(n);
						p.refresh();
					}
				},
				event: {
					mouseenter: function () {
						var t = e(this);
						t.nextAll().removeClass(m.selected);
						k.addClass(m.selected);
						t.addClass(m.selected).prevAll().addClass(m.selected);
					},
					mouseleave: function () {
						k.removeClass(m.selected);
						x.removeClass(m.selected);
					},
					click: function () {
						var t = e(this);
						var n = p.get.rating();
						var i = x.index(t) + 1;
						if ((f.clearable == "auto" ? x.length === 1 : f.clearable) && n == i) {
							p.clearRating();
						} else {
							p.set.rating(i);
						}
					}
				},
				clearRating: function () {
					p.debug("Clearing current rating");
					p.set.rating(0);
				},
				bind: {
					events: function () {
						p.verbose("Binding events");
						k.on("mouseenter" + b, v.icon, p.event.mouseenter).on("mouseleave" + b, v.icon, p.event.mouseleave).on("click" + b, v.icon, p.event.click);
					}
				},
				remove: {
					events: function () {
						p.verbose("Removing events");
						k.off(b);
					},
					initialLoad: function () {
						d = false;
					}
				},
				enable: function () {
					p.debug("Setting rating to interactive mode");
					p.bind.events();
					k.removeClass(m.disabled);
				},
				disable: function () {
					p.debug("Setting rating to read-only mode");
					p.remove.events();
					k.addClass(m.disabled);
				},
				is: {
					initialLoad: function () {
						return d;
					}
				},
				get: {
					initialRating: function () {
						if (k.data(g.rating) !== i) {
							k.removeData(g.rating);
							return k.data(g.rating);
						} else {
							return f.initialRating;
						}
					},
					maxRating: function () {
						if (k.data(g.maxRating) !== i) {
							k.removeData(g.maxRating);
							return k.data(g.maxRating);
						} else {
							return f.maxRating;
						}
					},
					rating: function () {
						var e = x.filter("." + m.active).length;
						p.verbose("Current rating retrieved", e);
						return e;
					}
				},
				set: {
					rating: function (e) {
						var t = e - 1 >= 0 ? e - 1 : 0;
						var n = x.eq(t);
						k.removeClass(m.selected);
						x.removeClass(m.selected).removeClass(m.active);
						if (e > 0) {
							p.verbose("Setting current rating to", e);
							n.prevAll().addBack().addClass(m.active);
						}
						if (!p.is.initialLoad()) {
							f.onRate.call(w, e);
						}
					},
					initialLoad: function () {
						d = true;
					}
				},
				setting: function (t, n) {
					p.debug("Changing setting", t, n);
					if (e.isPlainObject(t)) {
						e.extend(true, f, t);
					} else {
						if (n === i) {
							return f[t];
						}
						if (e.isPlainObject(f[t])) {
							e.extend(true, f[t], n);
						} else {
							f[t] = n;
						}
					}
				},
				internal: function (t, n) {
					if (e.isPlainObject(t)) {
						e.extend(true, p, t);
					} else {
						if (n === i) {
							return p[t];
						}
						p[t] = n;
					}
				},
				debug: function () {
					if (!f.silent && f.debug) {
						if (f.performance) {
							p.performance.log(arguments);
						} else {
							p.debug = Function.prototype.bind.call(console.info, console, f.name + ":");
							p.debug.apply(console, arguments);
						}
					}
				},
				verbose: function () {
					if (!f.silent && f.verbose && f.debug) {
						if (f.performance) {
							p.performance.log(arguments);
						} else {
							p.verbose = Function.prototype.bind.call(console.info, console, f.name + ":");
							p.verbose.apply(console, arguments);
						}
					}
				},
				error: function () {
					if (!f.silent) {
						p.error = Function.prototype.bind.call(console.error, console, f.name + ":");
						p.error.apply(console, arguments);
					}
				},
				performance: {
					log: function (e) {
						var t;
						var n;
						var i;
						if (f.performance) {
							t = new Date().getTime();
							i = s || t;
							n = t - i;
							s = t;
							r.push({
								Name: e[0],
								Arguments: [].slice.call(e, 1) || "",
								Element: w,
								"Execution Time": n
							});
						}
						clearTimeout(p.performance.timer);
						p.performance.timer = setTimeout(p.performance.display, 500);
					},
					display: function () {
						var t = f.name + ":";
						var n = 0;
						s = false;
						clearTimeout(p.performance.timer);
						e.each(r, function (e, t) {
							n += t["Execution Time"];
						});
						t += " " + n + "ms";
						if (a) {
							t += " '" + a + "'";
						}
						if (o.length > 1) {
							t += " (" + o.length + ")";
						}
						if ((console.group !== i || console.table !== i) && r.length > 0) {
							console.groupCollapsed(t);
							if (console.table) {
								console.table(r);
							} else {
								e.each(r, function (e, t) {
									console.log(t.Name + ": " + t["Execution Time"] + "ms");
								});
							}
							console.groupEnd();
						}
						r = [];
					}
				},
				invoke: function (t, o, a) {
					var s;
					var r;
					var l;
					var c = _;
					o = o || u;
					a = w || a;
					if (typeof t == "string" && c !== i) {
						t = t.split(/[\. ]/);
						s = t.length - 1;
						e.each(t, function (n, o) {
							var a = n != s ? o + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t;
							if (e.isPlainObject(c[a]) && n != s) {
								c = c[a];
							} else {
								if (c[a] !== i) {
									r = c[a];
									return false;
								}
								if (!e.isPlainObject(c[o]) || n == s) {
									return c[o] !== i && (r = c[o], false);
								}
								c = c[o];
							}
						});
					}
					if (e.isFunction(r)) {
						l = r.apply(a, o);
					} else if (r !== i) {
						l = r;
					}
					if (e.isArray(n)) {
						n.push(l);
					} else if (n !== i) {
						n = [n, l];
					} else if (l !== i) {
						n = l;
					}
					return r;
				}
			};
			if (c) {
				if (_ === i) {
					p.initialize();
				}
				p.invoke(l);
			} else {
				if (_ !== i) {
					_.invoke("destroy");
				}
				p.initialize();
			}
		});
		if (n !== i) {
			return n;
		} else {
			return this;
		}
	};
	e.fn.rating.settings = {
		name: "Rating",
		namespace: "rating",
		slent: false,
		debug: false,
		verbose: false,
		performance: true,
		initialRating: 0,
		interactive: true,
		maxRating: 4,
		clearable: "auto",
		fireOnInit: false,
		onRate: function (e) {},
		error: {
			method: "The method you called is not defined",
			noMaximum: "No maximum rating specified. Cannot generate HTML automatically"
		},
		metadata: {
			rating: "rating",
			maxRating: "maxRating"
		},
		className: {
			active: "active",
			disabled: "disabled",
			selected: "selected",
			loading: "loading"
		},
		selector: {
			icon: ".icon"
		},
		templates: {
			icon: function (e) {
				for (var t = 1, n = ""; e >= t;) {
					n += "<i class=\"icon\"></i>";
					t++;
				}
				return n;
			}
		}
	};
})(jQuery, window, document);
(function (e, t, n, i) {
	"use strict";

	t = t !== undefined && t.Math == Math ? t : typeof self != "undefined" && self.Math == Math ? self : Function("return this")();
	e.fn.search = function (o) {
		var a;
		var s = e(this);
		var r = s.selector || "";
		var l = new Date().getTime();
		var c = [];
		var u = arguments[0];
		var d = typeof u == "string";
		var p = [].slice.call(arguments, 1);
		e(this).each(function () {
			var f;
			var h = e.isPlainObject(o) ? e.extend(true, {}, e.fn.search.settings, o) : e.extend({}, e.fn.search.settings);
			var m = h.className;
			var g = h.metadata;
			var v = h.regExp;
			var b = h.fields;
			var y = h.selector;
			var w = h.error;
			var _ = h.namespace;
			var k = "." + _;
			var x = _ + "-module";
			var C = e(this);
			var S = C.find(y.prompt);
			var A = C.find(y.searchButton);
			var T = C.find(y.results);
			var P = C.find(y.result);
			var j = C.find(y.category);
			var E = this;
			var N = C.data(x);
			var O = false;
			var D = false;
			f = {
				initialize: function () {
					f.verbose("Initializing module");
					f.determine.searchFields();
					f.bind.events();
					f.set.type();
					f.create.results();
					f.instantiate();
				},
				instantiate: function () {
					f.verbose("Storing instance of module", f);
					N = f;
					C.data(x, f);
				},
				destroy: function () {
					f.verbose("Destroying instance");
					C.off(k).removeData(x);
				},
				refresh: function () {
					f.debug("Refreshing selector cache");
					S = C.find(y.prompt);
					A = C.find(y.searchButton);
					j = C.find(y.category);
					T = C.find(y.results);
					P = C.find(y.result);
				},
				refreshResults: function () {
					T = C.find(y.results);
					P = C.find(y.result);
				},
				bind: {
					events: function () {
						f.verbose("Binding events to search");
						if (h.automatic) {
							C.on(f.get.inputEvent() + k, y.prompt, f.event.input);
							S.attr("autocomplete", "off");
						}
						C.on("focus" + k, y.prompt, f.event.focus).on("blur" + k, y.prompt, f.event.blur).on("keydown" + k, y.prompt, f.handleKeyboard).on("click" + k, y.searchButton, f.query).on("mousedown" + k, y.results, f.event.result.mousedown).on("mouseup" + k, y.results, f.event.result.mouseup).on("click" + k, y.result, f.event.result.click);
					}
				},
				determine: {
					searchFields: function () {
						if (o && o.searchFields !== i) {
							h.searchFields = o.searchFields;
						}
					}
				},
				event: {
					input: function () {
						clearTimeout(f.timer);
						f.timer = setTimeout(f.query, h.searchDelay);
					},
					focus: function () {
						f.set.focus();
						if (h.searchOnFocus && f.has.minimumCharacters()) {
							f.query(function () {
								if (f.can.show()) {
									f.showResults();
								}
							});
						}
					},
					blur: function (e) {
						function t() {
							f.cancel.query();
							f.remove.focus();
							f.timer = setTimeout(f.hideResults, h.hideDelay);
						}
						if (n.activeElement !== this) {
							D = false;
							if (f.resultsClicked) {
								f.debug("Determining if user action caused search to close");
								C.one("click.close" + k, y.results, function (e) {
									if (f.is.inMessage(e) || O) {
										S.focus();
										return;
									} else {
										O = false;
										if (!f.is.animating() && !f.is.hidden()) {
											t();
										}
										return;
									}
								});
							} else {
								f.debug("Input blurred without user action, closing results");
								t();
							}
						}
					},
					result: {
						mousedown: function () {
							f.resultsClicked = true;
						},
						mouseup: function () {
							f.resultsClicked = false;
						},
						click: function (n) {
							f.debug("Search result selected");
							var i = e(this);
							var o = i.find(y.title).eq(0);
							var a = i.is("a[href]") ? i : i.find("a[href]").eq(0);
							var s = a.attr("href") || false;
							var r = a.attr("target") || false;
							o.html();
							var l = o.length > 0 && o.text();
							var c = f.get.results();
							var u = i.data(g.result) || f.get.result(l, c);
							if (e.isFunction(h.onSelect) && h.onSelect.call(E, u, c) === false) {
								f.debug("Custom onSelect callback cancelled default select action");
								O = true;
								return;
							} else {
								f.hideResults();
								if (l) {
									f.set.value(l);
								}
								if (s) {
									f.verbose("Opening search link found in result", a);
									if (r == "_blank" || n.ctrlKey) {
										t.open(s);
									} else {
										t.location.href = s;
									}
								}
								return;
							}
						}
					}
				},
				handleKeyboard: function (e) {
					var t;
					var n = C.find(y.result);
					var i = C.find(y.category);
					var o = n.filter("." + m.active);
					var a = n.index(o);
					var s = n.length;
					var r = o.length > 0;
					var l = e.which;
					var c = {
						backspace: 8,
						enter: 13,
						escape: 27,
						upArrow: 38,
						downArrow: 40
					};
					if (l == c.escape) {
						f.verbose("Escape key pressed, blurring search field");
						f.hideResults();
						D = true;
					}
					if (f.is.visible()) {
						if (l == c.enter) {
							f.verbose("Enter key pressed, selecting active result");
							if (n.filter("." + m.active).length > 0) {
								f.event.result.click.call(n.filter("." + m.active), e);
								e.preventDefault();
								return false;
							}
						} else if (l == c.upArrow && r) {
							f.verbose("Up key pressed, changing active result");
							t = a - 1 < 0 ? a : a - 1;
							i.removeClass(m.active);
							n.removeClass(m.active).eq(t).addClass(m.active).closest(i).addClass(m.active);
							e.preventDefault();
						} else if (l == c.downArrow) {
							f.verbose("Down key pressed, changing active result");
							t = a + 1 >= s ? a : a + 1;
							i.removeClass(m.active);
							n.removeClass(m.active).eq(t).addClass(m.active).closest(i).addClass(m.active);
							e.preventDefault();
						}
					} else if (l == c.enter) {
						f.verbose("Enter key pressed, executing query");
						f.query();
						f.set.buttonPressed();
						S.one("keyup", f.remove.buttonFocus);
					}
				},
				setup: {
					api: function (t, n) {
						var i = {
							debug: h.debug,
							on: false,
							cache: true,
							action: "search",
							urlData: {
								query: t
							},
							onSuccess: function (e) {
								f.parse.response.call(E, e, t);
								n();
							},
							onFailure: function () {
								f.displayMessage(w.serverError);
								n();
							},
							onAbort: function (e) {},
							onError: f.error
						};
						e.extend(true, i, h.apiSettings);
						f.verbose("Setting up API request", i);
						C.api(i);
					}
				},
				can: {
					useAPI: function () {
						return e.fn.api !== i;
					},
					show: function () {
						return f.is.focused() && !f.is.visible() && !f.is.empty();
					},
					transition: function () {
						return h.transition && e.fn.transition !== i && C.transition("is supported");
					}
				},
				is: {
					animating: function () {
						return T.hasClass(m.animating);
					},
					hidden: function () {
						return T.hasClass(m.hidden);
					},
					inMessage: function (t) {
						if (t.target) {
							var i = e(t.target);
							return e.contains(n.documentElement, t.target) && i.closest(y.message).length > 0;
						}
					},
					empty: function () {
						return T.html() === "";
					},
					visible: function () {
						return T.filter(":visible").length > 0;
					},
					focused: function () {
						return S.filter(":focus").length > 0;
					}
				},
				get: {
					inputEvent: function () {
						var e = S[0];
						if (e !== i && e.oninput !== i) {
							return "input";
						} else if (e !== i && e.onpropertychange !== i) {
							return "propertychange";
						} else {
							return "keyup";
						}
					},
					value: function () {
						return S.val();
					},
					results: function () {
						return C.data(g.results);
					},
					result: function (t, n) {
						var o = ["title", "id"];
						var a = false;
						t = t !== i ? t : f.get.value();
						n = n !== i ? n : f.get.results();
						if (h.type === "category") {
							f.debug("Finding result that matches", t);
							e.each(n, function (n, i) {
								return (!e.isArray(i.results) || !(a = f.search.object(t, i.results, o)[0])) && undefined;
							});
						} else {
							f.debug("Finding result in results object", t);
							a = f.search.object(t, n, o)[0];
						}
						return a || false;
					}
				},
				select: {
					firstResult: function () {
						f.verbose("Selecting first result");
						P.first().addClass(m.active);
					}
				},
				set: {
					focus: function () {
						C.addClass(m.focus);
					},
					loading: function () {
						C.addClass(m.loading);
					},
					value: function (e) {
						f.verbose("Setting search input value", e);
						S.val(e);
					},
					type: function (e) {
						e = e || h.type;
						if (h.type == "category") {
							C.addClass(h.type);
						}
					},
					buttonPressed: function () {
						A.addClass(m.pressed);
					}
				},
				remove: {
					loading: function () {
						C.removeClass(m.loading);
					},
					focus: function () {
						C.removeClass(m.focus);
					},
					buttonPressed: function () {
						A.removeClass(m.pressed);
					}
				},
				query: function (t) {
					t = e.isFunction(t) ? t : function () {};
					var n = f.get.value();
					var i = f.read.cache(n);
					t = t || function () {};
					if (f.has.minimumCharacters()) {
						if (i) {
							f.debug("Reading result from cache", n);
							f.save.results(i.results);
							f.addResults(i.html);
							f.inject.id(i.results);
							t();
						} else {
							f.debug("Querying for", n);
							if (e.isPlainObject(h.source) || e.isArray(h.source)) {
								f.search.local(n);
								t();
							} else if (f.can.useAPI()) {
								f.search.remote(n, t);
							} else {
								f.error(w.source);
								t();
							}
						}
						h.onSearchQuery.call(E, n);
					} else {
						f.hideResults();
					}
				},
				search: {
					local: function (e) {
						var t;
						var n = f.search.object(e, h.content);
						f.set.loading();
						f.save.results(n);
						f.debug("Returned local search results", n);
						t = f.generateResults({
							results: n
						});
						f.remove.loading();
						f.addResults(t);
						f.inject.id(n);
						f.write.cache(e, {
							html: t,
							results: n
						});
					},
					remote: function (t, n) {
						n = e.isFunction(n) ? n : function () {};
						if (C.api("is loading")) {
							C.api("abort");
						}
						f.setup.api(t, n);
						C.api("query");
					},
					object: function (t, n, o) {
						var a = [];
						var s = [];
						var r = t.toString().replace(v.escape, "\\$&");
						var l = new RegExp(v.beginsWith + r, "i");
						function c(t, n) {
							var i = e.inArray(n, a) == -1;
							var o = e.inArray(n, s) == -1;
							if (i && o) {
								t.push(n);
							}
						}
						n = n || h.source;
						o = o !== i ? o : h.searchFields;
						if (!e.isArray(o)) {
							o = [o];
						}
						if (n === i || n === false) {
							f.error(w.source);
							return [];
						} else {
							e.each(o, function (i, o) {
								e.each(n, function (e, n) {
									if (typeof n[o] == "string") {
										if (n[o].search(l) !== -1) {
											c(a, n);
										} else if (h.searchFullText && f.fuzzySearch(t, n[o])) {
											c(s, n);
										}
									}
								});
							});
							return e.merge(a, s);
						}
					}
				},
				fuzzySearch: function (e, t) {
					var n = t.length;
					var i = e.length;
					if (typeof e != "string") {
						return false;
					}
					e = e.toLowerCase();
					t = t.toLowerCase();
					if (i > n) {
						return false;
					}
					if (i === n) {
						return e === t;
					}
					e: for (var o = 0, a = 0; i > o; o++) {
						var s = e.charCodeAt(o);
						for (; n > a;) {
							if (t.charCodeAt(a++) === s) {
								continue e;
							}
						}
						return false;
					}
					return true;
				},
				parse: {
					response: function (e, t) {
						var n = f.generateResults(e);
						f.verbose("Parsing server response", e);
						if (e !== i && t !== i && e[b.results] !== i) {
							f.addResults(n);
							f.inject.id(e[b.results]);
							f.write.cache(t, {
								html: n,
								results: e[b.results]
							});
							f.save.results(e[b.results]);
						}
					}
				},
				cancel: {
					query: function () {
						if (f.can.useAPI()) {
							C.api("abort");
						}
					}
				},
				has: {
					minimumCharacters: function () {
						return f.get.value().length >= h.minCharacters;
					},
					results: function () {
						return T.length !== 0 && T.html() != "";
					}
				},
				clear: {
					cache: function (e) {
						var t = C.data(g.cache);
						if (e) {
							if (e && t && t[e]) {
								f.debug("Removing value from cache", e);
								delete t[e];
								C.data(g.cache, t);
							}
						} else {
							f.debug("Clearing cache", e);
							C.removeData(g.cache);
						}
					}
				},
				read: {
					cache: function (e) {
						var t = C.data(g.cache);
						return !!h.cache && (f.verbose("Checking cache for generated html for query", e), typeof t == "object" && t[e] !== i && t[e]);
					}
				},
				create: {
					id: function (e, t) {
						var n;
						var o;
						var a = e + 1;
						if (t !== i) {
							n = String.fromCharCode(97 + t);
							o = n + a;
							f.verbose("Creating category result id", o);
						} else {
							o = a;
							f.verbose("Creating result id", o);
						}
						return o;
					},
					results: function () {
						if (T.length === 0) {
							T = e("<div />").addClass(m.results).appendTo(C);
						}
					}
				},
				inject: {
					result: function (e, t, n) {
						f.verbose("Injecting result into results");
						var o = n !== i ? T.children().eq(n).children(y.result).eq(t) : T.children(y.result).eq(t);
						f.verbose("Injecting results metadata", o);
						o.data(g.result, e);
					},
					id: function (t) {
						f.debug("Injecting unique ids into results");
						var n = 0;
						var o = 0;
						if (h.type === "category") {
							e.each(t, function (t, a) {
								o = 0;
								e.each(a.results, function (e, t) {
									var s = a.results[e];
									if (s.id === i) {
										s.id = f.create.id(o, n);
									}
									f.inject.result(s, o, n);
									o++;
								});
								n++;
							});
						} else {
							e.each(t, function (e, n) {
								var a = t[e];
								if (a.id === i) {
									a.id = f.create.id(o);
								}
								f.inject.result(a, o);
								o++;
							});
						}
						return t;
					}
				},
				save: {
					results: function (e) {
						f.verbose("Saving current search results to metadata", e);
						C.data(g.results, e);
					}
				},
				write: {
					cache: function (e, t) {
						var n = C.data(g.cache) !== i ? C.data(g.cache) : {};
						if (h.cache) {
							f.verbose("Writing generated html to cache", e, t);
							n[e] = t;
							C.data(g.cache, n);
						}
					}
				},
				addResults: function (t) {
					if (e.isFunction(h.onResultsAdd) && h.onResultsAdd.call(T, t) === false) {
						f.debug("onResultsAdd callback cancelled default action");
						return false;
					} else {
						if (t) {
							T.html(t);
							f.refreshResults();
							if (h.selectFirstResult) {
								f.select.firstResult();
							}
							f.showResults();
						} else {
							f.hideResults(function () {
								T.empty();
							});
						}
						return;
					}
				},
				showResults: function (t) {
					t = e.isFunction(t) ? t : function () {};
					if (!D) {
						if (!f.is.visible() && f.has.results()) {
							if (f.can.transition()) {
								f.debug("Showing results with css animations");
								T.transition({
									animation: h.transition + " in",
									debug: h.debug,
									verbose: h.verbose,
									duration: h.duration,
									onComplete: function () {
										t();
									},
									queue: true
								});
							} else {
								f.debug("Showing results with javascript");
								T.stop().fadeIn(h.duration, h.easing);
							}
							h.onResultsOpen.call(T);
						}
					}
				},
				hideResults: function (t) {
					t = e.isFunction(t) ? t : function () {};
					if (f.is.visible()) {
						if (f.can.transition()) {
							f.debug("Hiding results with css animations");
							T.transition({
								animation: h.transition + " out",
								debug: h.debug,
								verbose: h.verbose,
								duration: h.duration,
								onComplete: function () {
									t();
								},
								queue: true
							});
						} else {
							f.debug("Hiding results with javascript");
							T.stop().fadeOut(h.duration, h.easing);
						}
						h.onResultsClose.call(T);
					}
				},
				generateResults: function (t) {
					f.debug("Generating html from response", t);
					var n = h.templates[h.type];
					var i = e.isPlainObject(t[b.results]) && !e.isEmptyObject(t[b.results]);
					var o = e.isArray(t[b.results]) && t[b.results].length > 0;
					var a = "";
					if (i || o) {
						if (h.maxResults > 0) {
							if (i) {
								if (h.type == "standard") {
									f.error(w.maxResults);
								}
							} else {
								t[b.results] = t[b.results].slice(0, h.maxResults);
							}
						}
						if (e.isFunction(n)) {
							a = n(t, b);
						} else {
							f.error(w.noTemplate, false);
						}
					} else if (h.showNoResults) {
						a = f.displayMessage(w.noResults, "empty");
					}
					h.onResults.call(E, t);
					return a;
				},
				displayMessage: function (e, t) {
					t = t || "standard";
					f.debug("Displaying message", e, t);
					f.addResults(h.templates.message(e, t));
					return h.templates.message(e, t);
				},
				setting: function (t, n) {
					if (e.isPlainObject(t)) {
						e.extend(true, h, t);
					} else {
						if (n === i) {
							return h[t];
						}
						h[t] = n;
					}
				},
				internal: function (t, n) {
					if (e.isPlainObject(t)) {
						e.extend(true, f, t);
					} else {
						if (n === i) {
							return f[t];
						}
						f[t] = n;
					}
				},
				debug: function () {
					if (!h.silent && h.debug) {
						if (h.performance) {
							f.performance.log(arguments);
						} else {
							f.debug = Function.prototype.bind.call(console.info, console, h.name + ":");
							f.debug.apply(console, arguments);
						}
					}
				},
				verbose: function () {
					if (!h.silent && h.verbose && h.debug) {
						if (h.performance) {
							f.performance.log(arguments);
						} else {
							f.verbose = Function.prototype.bind.call(console.info, console, h.name + ":");
							f.verbose.apply(console, arguments);
						}
					}
				},
				error: function () {
					if (!h.silent) {
						f.error = Function.prototype.bind.call(console.error, console, h.name + ":");
						f.error.apply(console, arguments);
					}
				},
				performance: {
					log: function (e) {
						var t;
						var n;
						var i;
						if (h.performance) {
							t = new Date().getTime();
							i = l || t;
							n = t - i;
							l = t;
							c.push({
								Name: e[0],
								Arguments: [].slice.call(e, 1) || "",
								Element: E,
								"Execution Time": n
							});
						}
						clearTimeout(f.performance.timer);
						f.performance.timer = setTimeout(f.performance.display, 500);
					},
					display: function () {
						var t = h.name + ":";
						var n = 0;
						l = false;
						clearTimeout(f.performance.timer);
						e.each(c, function (e, t) {
							n += t["Execution Time"];
						});
						t += " " + n + "ms";
						if (r) {
							t += " '" + r + "'";
						}
						if (s.length > 1) {
							t += " (" + s.length + ")";
						}
						if ((console.group !== i || console.table !== i) && c.length > 0) {
							console.groupCollapsed(t);
							if (console.table) {
								console.table(c);
							} else {
								e.each(c, function (e, t) {
									console.log(t.Name + ": " + t["Execution Time"] + "ms");
								});
							}
							console.groupEnd();
						}
						c = [];
					}
				},
				invoke: function (t, n, o) {
					var s;
					var r;
					var l;
					var c = N;
					n = n || p;
					o = E || o;
					if (typeof t == "string" && c !== i) {
						t = t.split(/[\. ]/);
						s = t.length - 1;
						e.each(t, function (n, o) {
							var a = n != s ? o + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t;
							if (e.isPlainObject(c[a]) && n != s) {
								c = c[a];
							} else {
								if (c[a] !== i) {
									r = c[a];
									return false;
								}
								if (!e.isPlainObject(c[o]) || n == s) {
									return c[o] !== i && (r = c[o], false);
								}
								c = c[o];
							}
						});
					}
					if (e.isFunction(r)) {
						l = r.apply(o, n);
					} else if (r !== i) {
						l = r;
					}
					if (e.isArray(a)) {
						a.push(l);
					} else if (a !== i) {
						a = [a, l];
					} else if (l !== i) {
						a = l;
					}
					return r;
				}
			};
			if (d) {
				if (N === i) {
					f.initialize();
				}
				f.invoke(u);
			} else {
				if (N !== i) {
					N.invoke("destroy");
				}
				f.initialize();
			}
		});
		if (a !== i) {
			return a;
		} else {
			return this;
		}
	};
	e.fn.search.settings = {
		name: "Search",
		namespace: "search",
		silent: false,
		debug: false,
		verbose: false,
		performance: true,
		type: "standard",
		minCharacters: 1,
		selectFirstResult: false,
		apiSettings: false,
		source: false,
		searchOnFocus: true,
		searchFields: ["title", "description"],
		displayField: "",
		searchFullText: true,
		automatic: true,
		hideDelay: 0,
		searchDelay: 200,
		maxResults: 7,
		cache: true,
		showNoResults: true,
		transition: "scale",
		duration: 200,
		easing: "easeOutExpo",
		onSelect: false,
		onResultsAdd: false,
		onSearchQuery: function (e) {},
		onResults: function (e) {},
		onResultsOpen: function () {},
		onResultsClose: function () {},
		className: {
			animating: "animating",
			active: "active",
			empty: "empty",
			focus: "focus",
			hidden: "hidden",
			loading: "loading",
			results: "results",
			pressed: "down"
		},
		error: {
			source: "Cannot search. No source used, and Semantic API module was not included",
			noResults: "Your search returned no results",
			logging: "Error in debug logging, exiting.",
			noEndpoint: "No search endpoint was specified",
			noTemplate: "A valid template name was not specified.",
			serverError: "There was an issue querying the server.",
			maxResults: "Results must be an array to use maxResults setting",
			method: "The method you called is not defined."
		},
		metadata: {
			cache: "cache",
			results: "results",
			result: "result"
		},
		regExp: {
			escape: /[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,
			beginsWith: "(?:s|^)"
		},
		fields: {
			categories: "results",
			categoryName: "name",
			categoryResults: "results",
			description: "description",
			image: "image",
			price: "price",
			results: "results",
			title: "title",
			url: "url",
			action: "action",
			actionText: "text",
			actionURL: "url"
		},
		selector: {
			prompt: ".prompt",
			searchButton: ".search.button",
			results: ".results",
			message: ".results > .message",
			category: ".category",
			result: ".result",
			title: ".title, .name"
		},
		templates: {
			escape: function (e) {
				var t = /[&<>"'`]/g;
				var n = {
					"&": "&amp;",
					"<": "&lt;",
					">": "&gt;",
					"\"": "&quot;",
					"'": "&#x27;",
					"`": "&#x60;"
				};
				if (/[&<>"'`]/.test(e)) {
					return e.replace(t, function (e) {
						return n[e];
					});
				} else {
					return e;
				}
			},
			message: function (e, t) {
				var n = "";
				if (e !== i && t !== i) {
					n += "<div class=\"message " + t + "\">";
					n += t == "empty" ? "<div class=\"header\">No Results</div class=\"header\"><div class=\"description\">" + e + "</div class=\"description\">" : " <div class=\"description\">" + e + "</div>";
					n += "</div>";
				}
				return n;
			},
			category: function (t, n) {
				var o = "";
				e.fn.search.settings.templates.escape;
				return t[n.categoryResults] !== i && (e.each(t[n.categoryResults], function (t, a) {
					if (a[n.results] !== i && a.results.length > 0) {
						o += "<div class=\"category\">";
						if (a[n.categoryName] !== i) {
							o += "<div class=\"name\">" + a[n.categoryName] + "</div>";
						}
						e.each(a.results, function (e, t) {
							o += t[n.url] ? "<a class=\"result\" href=\"" + t[n.url] + "\">" : "<a class=\"result\">";
							if (t[n.image] !== i) {
								o += "<div class=\"image\"> <img src=\"" + t[n.image] + "\"></div>";
							}
							o += "<div class=\"content\">";
							if (t[n.price] !== i) {
								o += "<div class=\"price\">" + t[n.price] + "</div>";
							}
							if (t[n.title] !== i) {
								o += "<div class=\"title\">" + t[n.title] + "</div>";
							}
							if (t[n.description] !== i) {
								o += "<div class=\"description\">" + t[n.description] + "</div>";
							}
							o += "</div>";
							o += "</a>";
						});
						o += "</div>";
					}
				}), t[n.action] && (o += "<a href=\"" + t[n.action][n.actionURL] + "\" class=\"action\">" + t[n.action][n.actionText] + "</a>"), o);
			},
			standard: function (t, n) {
				var o = "";
				return t[n.results] !== i && (e.each(t[n.results], function (e, t) {
					o += t[n.url] ? "<a class=\"result\" href=\"" + t[n.url] + "\">" : "<a class=\"result\">";
					if (t[n.image] !== i) {
						o += "<div class=\"image\"> <img src=\"" + t[n.image] + "\"></div>";
					}
					o += "<div class=\"content\">";
					if (t[n.price] !== i) {
						o += "<div class=\"price\">" + t[n.price] + "</div>";
					}
					if (t[n.title] !== i) {
						o += "<div class=\"title\">" + t[n.title] + "</div>";
					}
					if (t[n.description] !== i) {
						o += "<div class=\"description\">" + t[n.description] + "</div>";
					}
					o += "</div>";
					o += "</a>";
				}), t[n.action] && (o += "<a href=\"" + t[n.action][n.actionURL] + "\" class=\"action\">" + t[n.action][n.actionText] + "</a>"), o);
			}
		}
	};
})(jQuery, window, document);
(function (e, t, n, i) {
	"use strict";

	t = t !== undefined && t.Math == Math ? t : typeof self != "undefined" && self.Math == Math ? self : Function("return this")();
	e.fn.shape = function (o) {
		var a;
		var s = e(this);
		e("body");
		var r = new Date().getTime();
		var l = [];
		var c = arguments[0];
		var u = typeof c == "string";
		var d = [].slice.call(arguments, 1);
		var p = t.requestAnimationFrame || t.mozRequestAnimationFrame || t.webkitRequestAnimationFrame || t.msRequestAnimationFrame || function (e) {
			setTimeout(e, 0);
		};
		s.each(function () {
			var t;
			var f;
			var h;
			var m = s.selector || "";
			var g = e.isPlainObject(o) ? e.extend(true, {}, e.fn.shape.settings, o) : e.extend({}, e.fn.shape.settings);
			var v = g.namespace;
			var b = g.selector;
			var y = g.error;
			var w = g.className;
			var _ = "." + v;
			var k = "module-" + v;
			var x = e(this);
			var C = x.find(b.sides);
			var S = x.find(b.side);
			var A = false;
			var T = this;
			var P = x.data(k);
			h = {
				initialize: function () {
					h.verbose("Initializing module for", T);
					h.set.defaultSide();
					h.instantiate();
				},
				instantiate: function () {
					h.verbose("Storing instance of module", h);
					P = h;
					x.data(k, P);
				},
				destroy: function () {
					h.verbose("Destroying previous module for", T);
					x.removeData(k).off(_);
				},
				refresh: function () {
					h.verbose("Refreshing selector cache for", T);
					x = e(T);
					C = e(this).find(b.shape);
					S = e(this).find(b.side);
				},
				repaint: function () {
					h.verbose("Forcing repaint event");
					(C[0] || n.createElement("div")).offsetWidth;
				},
				animate: function (e, n) {
					h.verbose("Animating box with properties", e);
					n = n || function (e) {
						h.verbose("Executing animation callback");
						if (e !== i) {
							e.stopPropagation();
						}
						h.reset();
						h.set.active();
					};
					g.beforeChange.call(f[0]);
					if (h.get.transitionEvent()) {
						h.verbose("Starting CSS animation");
						x.addClass(w.animating);
						C.css(e).one(h.get.transitionEvent(), n);
						h.set.duration(g.duration);
						p(function () {
							x.addClass(w.animating);
							t.addClass(w.hidden);
						});
					} else {
						n();
					}
				},
				queue: function (e) {
					h.debug("Queueing animation of", e);
					C.one(h.get.transitionEvent(), function () {
						h.debug("Executing queued animation");
						setTimeout(function () {
							x.shape(e);
						}, 0);
					});
				},
				reset: function () {
					h.verbose("Animating states reset");
					x.removeClass(w.animating).attr("style", "").removeAttr("style");
					C.attr("style", "").removeAttr("style");
					S.attr("style", "").removeAttr("style").removeClass(w.hidden);
					f.removeClass(w.animating).attr("style", "").removeAttr("style");
				},
				is: {
					complete: function () {
						return S.filter("." + w.active)[0] == f[0];
					},
					animating: function () {
						return x.hasClass(w.animating);
					}
				},
				set: {
					defaultSide: function () {
						t = x.find("." + g.className.active);
						f = t.next(b.side).length > 0 ? t.next(b.side) : x.find(b.side).first();
						A = false;
						h.verbose("Active side set to", t);
						h.verbose("Next side set to", f);
					},
					duration: function (e) {
						e = typeof (e = e || g.duration) == "number" ? e + "ms" : e;
						h.verbose("Setting animation duration", e);
						if (g.duration || g.duration === 0) {
							C.add(S).css({
								"-webkit-transition-duration": e,
								"-moz-transition-duration": e,
								"-ms-transition-duration": e,
								"-o-transition-duration": e,
								"transition-duration": e
							});
						}
					},
					currentStageSize: function () {
						var e = x.find("." + g.className.active);
						var t = e.outerWidth(true);
						var n = e.outerHeight(true);
						x.css({
							width: t,
							height: n
						});
					},
					stageSize: function () {
						var e = x.clone().addClass(w.loading);
						var t = e.find("." + g.className.active);
						var n = A ? e.find(b.side).eq(A) : t.next(b.side).length > 0 ? t.next(b.side) : e.find(b.side).first();
						var i = g.width == "next" ? n.outerWidth(true) : g.width == "initial" ? x.width() : g.width;
						var o = g.height == "next" ? n.outerHeight(true) : g.height == "initial" ? x.height() : g.height;
						t.removeClass(w.active);
						n.addClass(w.active);
						e.insertAfter(x);
						e.remove();
						if (g.width != "auto") {
							x.css("width", i + g.jitter);
							h.verbose("Specifying width during animation", i);
						}
						if (g.height != "auto") {
							x.css("height", o + g.jitter);
							h.verbose("Specifying height during animation", o);
						}
					},
					nextSide: function (e) {
						A = e;
						f = S.filter(e);
						A = S.index(f);
						if (f.length === 0) {
							h.set.defaultSide();
							h.error(y.side);
						}
						h.verbose("Next side manually set to", f);
					},
					active: function () {
						h.verbose("Setting new side to active", f);
						S.removeClass(w.active);
						f.addClass(w.active);
						g.onChange.call(f[0]);
						h.set.defaultSide();
					}
				},
				flip: {
					up: function () {
						if (!h.is.complete() || h.is.animating() || g.allowRepeats) {
							if (h.is.animating()) {
								h.queue("flip up");
							} else {
								h.debug("Flipping up", f);
								var e = h.get.transform.up();
								h.set.stageSize();
								h.stage.above();
								h.animate(e);
							}
						} else {
							h.debug("Side already visible", f);
						}
					},
					down: function () {
						if (!h.is.complete() || h.is.animating() || g.allowRepeats) {
							if (h.is.animating()) {
								h.queue("flip down");
							} else {
								h.debug("Flipping down", f);
								var e = h.get.transform.down();
								h.set.stageSize();
								h.stage.below();
								h.animate(e);
							}
						} else {
							h.debug("Side already visible", f);
						}
					},
					left: function () {
						if (!h.is.complete() || h.is.animating() || g.allowRepeats) {
							if (h.is.animating()) {
								h.queue("flip left");
							} else {
								h.debug("Flipping left", f);
								var e = h.get.transform.left();
								h.set.stageSize();
								h.stage.left();
								h.animate(e);
							}
						} else {
							h.debug("Side already visible", f);
						}
					},
					right: function () {
						if (!h.is.complete() || h.is.animating() || g.allowRepeats) {
							if (h.is.animating()) {
								h.queue("flip right");
							} else {
								h.debug("Flipping right", f);
								var e = h.get.transform.right();
								h.set.stageSize();
								h.stage.right();
								h.animate(e);
							}
						} else {
							h.debug("Side already visible", f);
						}
					},
					over: function () {
						if (!h.is.complete() || h.is.animating() || g.allowRepeats) {
							if (h.is.animating()) {
								h.queue("flip over");
							} else {
								h.debug("Flipping over", f);
								h.set.stageSize();
								h.stage.behind();
								h.animate(h.get.transform.over());
							}
							return;
						} else {
							h.debug("Side already visible", f);
							return;
						}
					},
					back: function () {
						if (!h.is.complete() || h.is.animating() || g.allowRepeats) {
							if (h.is.animating()) {
								h.queue("flip back");
							} else {
								h.debug("Flipping back", f);
								h.set.stageSize();
								h.stage.behind();
								h.animate(h.get.transform.back());
							}
							return;
						} else {
							h.debug("Side already visible", f);
							return;
						}
					}
				},
				get: {
					transform: {
						up: function () {
							var e = {
								y: -(t.outerHeight(true) - f.outerHeight(true)) / 2,
								z: -t.outerHeight(true) / 2
							};
							return {
								transform: "translateY(" + e.y + "px) translateZ(" + e.z + "px) rotateX(-90deg)"
							};
						},
						down: function () {
							var e = {
								y: -(t.outerHeight(true) - f.outerHeight(true)) / 2,
								z: -t.outerHeight(true) / 2
							};
							return {
								transform: "translateY(" + e.y + "px) translateZ(" + e.z + "px) rotateX(90deg)"
							};
						},
						left: function () {
							var e = {
								x: -(t.outerWidth(true) - f.outerWidth(true)) / 2,
								z: -t.outerWidth(true) / 2
							};
							return {
								transform: "translateX(" + e.x + "px) translateZ(" + e.z + "px) rotateY(90deg)"
							};
						},
						right: function () {
							var e = {
								x: -(t.outerWidth(true) - f.outerWidth(true)) / 2,
								z: -t.outerWidth(true) / 2
							};
							return {
								transform: "translateX(" + e.x + "px) translateZ(" + e.z + "px) rotateY(-90deg)"
							};
						},
						over: function () {
							return {
								transform: "translateX(" + {
									x: -(t.outerWidth(true) - f.outerWidth(true)) / 2
								}.x + "px) rotateY(180deg)"
							};
						},
						back: function () {
							return {
								transform: "translateX(" + {
									x: -(t.outerWidth(true) - f.outerWidth(true)) / 2
								}.x + "px) rotateY(-180deg)"
							};
						}
					},
					transitionEvent: function () {
						var e;
						var t = n.createElement("element");
						var o = {
							transition: "transitionend",
							OTransition: "oTransitionEnd",
							MozTransition: "transitionend",
							WebkitTransition: "webkitTransitionEnd"
						};
						for (e in o) {
							if (t.style[e] !== i) {
								return o[e];
							}
						}
					},
					nextSide: function () {
						if (t.next(b.side).length > 0) {
							return t.next(b.side);
						} else {
							return x.find(b.side).first();
						}
					}
				},
				stage: {
					above: function () {
						var e = {
							origin: (t.outerHeight(true) - f.outerHeight(true)) / 2,
							depth: {
								active: f.outerHeight(true) / 2,
								next: t.outerHeight(true) / 2
							}
						};
						h.verbose("Setting the initial animation position as above", f, e);
						C.css({
							transform: "translateZ(-" + e.depth.active + "px)"
						});
						t.css({
							transform: "rotateY(0deg) translateZ(" + e.depth.active + "px)"
						});
						f.addClass(w.animating).css({
							top: e.origin + "px",
							transform: "rotateX(90deg) translateZ(" + e.depth.next + "px)"
						});
					},
					below: function () {
						var e = {
							origin: (t.outerHeight(true) - f.outerHeight(true)) / 2,
							depth: {
								active: f.outerHeight(true) / 2,
								next: t.outerHeight(true) / 2
							}
						};
						h.verbose("Setting the initial animation position as below", f, e);
						C.css({
							transform: "translateZ(-" + e.depth.active + "px)"
						});
						t.css({
							transform: "rotateY(0deg) translateZ(" + e.depth.active + "px)"
						});
						f.addClass(w.animating).css({
							top: e.origin + "px",
							transform: "rotateX(-90deg) translateZ(" + e.depth.next + "px)"
						});
					},
					left: function () {
						var e = {
							active: t.outerWidth(true),
							next: f.outerWidth(true)
						};
						var n = {
							origin: (e.active - e.next) / 2,
							depth: {
								active: e.next / 2,
								next: e.active / 2
							}
						};
						h.verbose("Setting the initial animation position as left", f, n);
						C.css({
							transform: "translateZ(-" + n.depth.active + "px)"
						});
						t.css({
							transform: "rotateY(0deg) translateZ(" + n.depth.active + "px)"
						});
						f.addClass(w.animating).css({
							left: n.origin + "px",
							transform: "rotateY(-90deg) translateZ(" + n.depth.next + "px)"
						});
					},
					right: function () {
						var e = {
							active: t.outerWidth(true),
							next: f.outerWidth(true)
						};
						var n = {
							origin: (e.active - e.next) / 2,
							depth: {
								active: e.next / 2,
								next: e.active / 2
							}
						};
						h.verbose("Setting the initial animation position as left", f, n);
						C.css({
							transform: "translateZ(-" + n.depth.active + "px)"
						});
						t.css({
							transform: "rotateY(0deg) translateZ(" + n.depth.active + "px)"
						});
						f.addClass(w.animating).css({
							left: n.origin + "px",
							transform: "rotateY(90deg) translateZ(" + n.depth.next + "px)"
						});
					},
					behind: function () {
						var e = {
							active: t.outerWidth(true),
							next: f.outerWidth(true)
						};
						var n = {
							origin: (e.active - e.next) / 2,
							depth: {
								active: e.next / 2,
								next: e.active / 2
							}
						};
						h.verbose("Setting the initial animation position as behind", f, n);
						t.css({
							transform: "rotateY(0deg)"
						});
						f.addClass(w.animating).css({
							left: n.origin + "px",
							transform: "rotateY(-180deg)"
						});
					}
				},
				setting: function (t, n) {
					h.debug("Changing setting", t, n);
					if (e.isPlainObject(t)) {
						e.extend(true, g, t);
					} else {
						if (n === i) {
							return g[t];
						}
						if (e.isPlainObject(g[t])) {
							e.extend(true, g[t], n);
						} else {
							g[t] = n;
						}
					}
				},
				internal: function (t, n) {
					if (e.isPlainObject(t)) {
						e.extend(true, h, t);
					} else {
						if (n === i) {
							return h[t];
						}
						h[t] = n;
					}
				},
				debug: function () {
					if (!g.silent && g.debug) {
						if (g.performance) {
							h.performance.log(arguments);
						} else {
							h.debug = Function.prototype.bind.call(console.info, console, g.name + ":");
							h.debug.apply(console, arguments);
						}
					}
				},
				verbose: function () {
					if (!g.silent && g.verbose && g.debug) {
						if (g.performance) {
							h.performance.log(arguments);
						} else {
							h.verbose = Function.prototype.bind.call(console.info, console, g.name + ":");
							h.verbose.apply(console, arguments);
						}
					}
				},
				error: function () {
					if (!g.silent) {
						h.error = Function.prototype.bind.call(console.error, console, g.name + ":");
						h.error.apply(console, arguments);
					}
				},
				performance: {
					log: function (e) {
						var t;
						var n;
						var i;
						if (g.performance) {
							t = new Date().getTime();
							i = r || t;
							n = t - i;
							r = t;
							l.push({
								Name: e[0],
								Arguments: [].slice.call(e, 1) || "",
								Element: T,
								"Execution Time": n
							});
						}
						clearTimeout(h.performance.timer);
						h.performance.timer = setTimeout(h.performance.display, 500);
					},
					display: function () {
						var t = g.name + ":";
						var n = 0;
						r = false;
						clearTimeout(h.performance.timer);
						e.each(l, function (e, t) {
							n += t["Execution Time"];
						});
						t += " " + n + "ms";
						if (m) {
							t += " '" + m + "'";
						}
						if (s.length > 1) {
							t += " (" + s.length + ")";
						}
						if ((console.group !== i || console.table !== i) && l.length > 0) {
							console.groupCollapsed(t);
							if (console.table) {
								console.table(l);
							} else {
								e.each(l, function (e, t) {
									console.log(t.Name + ": " + t["Execution Time"] + "ms");
								});
							}
							console.groupEnd();
						}
						l = [];
					}
				},
				invoke: function (t, n, o) {
					var s;
					var r;
					var l;
					var c = P;
					n = n || d;
					o = T || o;
					if (typeof t == "string" && c !== i) {
						t = t.split(/[\. ]/);
						s = t.length - 1;
						e.each(t, function (n, o) {
							var a = n != s ? o + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t;
							if (e.isPlainObject(c[a]) && n != s) {
								c = c[a];
							} else {
								if (c[a] !== i) {
									r = c[a];
									return false;
								}
								if (!e.isPlainObject(c[o]) || n == s) {
									return c[o] !== i && (r = c[o], false);
								}
								c = c[o];
							}
						});
					}
					if (e.isFunction(r)) {
						l = r.apply(o, n);
					} else if (r !== i) {
						l = r;
					}
					if (e.isArray(a)) {
						a.push(l);
					} else if (a !== i) {
						a = [a, l];
					} else if (l !== i) {
						a = l;
					}
					return r;
				}
			};
			if (u) {
				if (P === i) {
					h.initialize();
				}
				h.invoke(c);
			} else {
				if (P !== i) {
					P.invoke("destroy");
				}
				h.initialize();
			}
		});
		if (a !== i) {
			return a;
		} else {
			return this;
		}
	};
	e.fn.shape.settings = {
		name: "Shape",
		silent: false,
		debug: false,
		verbose: false,
		jitter: 0,
		performance: true,
		namespace: "shape",
		width: "initial",
		height: "initial",
		beforeChange: function () {},
		onChange: function () {},
		allowRepeats: false,
		duration: false,
		error: {
			side: "You tried to switch to a side that does not exist.",
			method: "The method you called is not defined"
		},
		className: {
			animating: "animating",
			hidden: "hidden",
			loading: "loading",
			active: "active"
		},
		selector: {
			sides: ".sides",
			side: ".side"
		}
	};
})(jQuery, window, document);
(function (e, t, n, i) {
	"use strict";

	t = t !== undefined && t.Math == Math ? t : typeof self != "undefined" && self.Math == Math ? self : Function("return this")();
	e.fn.sidebar = function (o) {
		var a;
		var s = e(this);
		var r = e(t);
		var l = e(n);
		var c = e("html");
		var u = e("head");
		var d = s.selector || "";
		var p = new Date().getTime();
		var f = [];
		var h = arguments[0];
		var m = typeof h == "string";
		var g = [].slice.call(arguments, 1);
		var v = t.requestAnimationFrame || t.mozRequestAnimationFrame || t.webkitRequestAnimationFrame || t.msRequestAnimationFrame || function (e) {
			setTimeout(e, 0);
		};
		s.each(function () {
			var s;
			var b;
			var y;
			var w;
			var _;
			var k;
			var x = e.isPlainObject(o) ? e.extend(true, {}, e.fn.sidebar.settings, o) : e.extend({}, e.fn.sidebar.settings);
			var C = x.selector;
			var S = x.className;
			var A = x.namespace;
			var T = x.regExp;
			var P = x.error;
			var j = "." + A;
			var E = "module-" + A;
			var N = e(this);
			var O = e(x.context);
			var D = N.children(C.sidebar);
			var I = O.children(C.fixed);
			var $ = O.children(C.pusher);
			var M = this;
			var z = N.data(E);
			k = {
				initialize: function () {
					k.debug("Initializing sidebar", o);
					k.create.id();
					_ = k.get.transitionEvent();
					if (k.is.ios()) {
						k.set.ios();
					}
					if (x.delaySetup) {
						v(k.setup.layout);
					} else {
						k.setup.layout();
					}
					v(function () {
						k.setup.cache();
					});
					k.instantiate();
				},
				instantiate: function () {
					k.verbose("Storing instance of module", k);
					z = k;
					N.data(E, k);
				},
				create: {
					id: function () {
						y = (Math.random().toString(16) + "000000000").substr(2, 8);
						b = "." + y;
						k.verbose("Creating unique id for element", y);
					}
				},
				destroy: function () {
					k.verbose("Destroying previous module for", N);
					N.off(j).removeData(E);
					if (k.is.ios()) {
						k.remove.ios();
					}
					O.off(b);
					r.off(b);
					l.off(b);
				},
				event: {
					clickaway: function (e) {
						var t = $.find(e.target).length > 0 || $.is(e.target);
						var n = O.is(e.target);
						if (t) {
							k.verbose("User clicked on dimmed page");
							k.hide();
						}
						if (n) {
							k.verbose("User clicked on dimmable context (scaled out page)");
							k.hide();
						}
					},
					touch: function (e) {},
					containScroll: function (e) {
						if (M.scrollTop <= 0) {
							M.scrollTop = 1;
						}
						if (M.scrollTop + M.offsetHeight >= M.scrollHeight) {
							M.scrollTop = M.scrollHeight - M.offsetHeight - 1;
						}
					},
					scroll: function (t) {
						if (e(t.target).closest(C.sidebar).length === 0) {
							t.preventDefault();
						}
					}
				},
				bind: {
					clickaway: function () {
						k.verbose("Adding clickaway events to context", O);
						if (x.closable) {
							O.on("click" + b, k.event.clickaway).on("touchend" + b, k.event.clickaway);
						}
					},
					scrollLock: function () {
						if (x.scrollLock) {
							k.debug("Disabling page scroll");
							r.on("DOMMouseScroll" + b, k.event.scroll);
						}
						k.verbose("Adding events to contain sidebar scroll");
						l.on("touchmove" + b, k.event.touch);
						N.on("scroll" + j, k.event.containScroll);
					}
				},
				unbind: {
					clickaway: function () {
						k.verbose("Removing clickaway events from context", O);
						O.off(b);
					},
					scrollLock: function () {
						k.verbose("Removing scroll lock from page");
						l.off(b);
						r.off(b);
						N.off("scroll" + j);
					}
				},
				add: {
					inlineCSS: function () {
						var t;
						var n = k.cache.width || N.outerWidth();
						var i = k.cache.height || N.outerHeight();
						var o = k.is.rtl();
						var a = k.get.direction();
						var r = {
							left: n,
							right: -n,
							top: i,
							bottom: -i
						};
						if (o) {
							k.verbose("RTL detected, flipping widths");
							r.left = -n;
							r.right = n;
						}
						t = "<style>";
						if (a === "left" || a === "right") {
							k.debug("Adding CSS rules for animation distance", n);
							t += " .ui.visible." + a + ".sidebar ~ .fixed, .ui.visible." + a + ".sidebar ~ .pusher {   -webkit-transform: translate3d(" + r[a] + "px, 0, 0);           transform: translate3d(" + r[a] + "px, 0, 0); }";
						} else if (a === "top" || a == "bottom") {
							t += " .ui.visible." + a + ".sidebar ~ .fixed, .ui.visible." + a + ".sidebar ~ .pusher {   -webkit-transform: translate3d(0, " + r[a] + "px, 0);           transform: translate3d(0, " + r[a] + "px, 0); }";
						}
						if (k.is.ie()) {
							if (a === "left" || a === "right") {
								k.debug("Adding CSS rules for animation distance", n);
								t += " body.pushable > .ui.visible." + a + ".sidebar ~ .pusher:after {   -webkit-transform: translate3d(" + r[a] + "px, 0, 0);           transform: translate3d(" + r[a] + "px, 0, 0); }";
							} else if (a === "top" || a == "bottom") {
								t += " body.pushable > .ui.visible." + a + ".sidebar ~ .pusher:after {   -webkit-transform: translate3d(0, " + r[a] + "px, 0);           transform: translate3d(0, " + r[a] + "px, 0); }";
							}
							t += " body.pushable > .ui.visible.left.sidebar ~ .ui.visible.right.sidebar ~ .pusher:after, body.pushable > .ui.visible.right.sidebar ~ .ui.visible.left.sidebar ~ .pusher:after {   -webkit-transform: translate3d(0px, 0, 0);           transform: translate3d(0px, 0, 0); }";
						}
						s = e(t += "</style>").appendTo(u);
						k.debug("Adding sizing css to head", s);
					}
				},
				refresh: function () {
					k.verbose("Refreshing selector cache");
					O = e(x.context);
					D = O.children(C.sidebar);
					$ = O.children(C.pusher);
					I = O.children(C.fixed);
					k.clear.cache();
				},
				refreshSidebars: function () {
					k.verbose("Refreshing other sidebars");
					D = O.children(C.sidebar);
				},
				repaint: function () {
					k.verbose("Forcing repaint event");
					M.style.display = "none";
					M.offsetHeight;
					M.scrollTop = M.scrollTop;
					M.style.display = "";
				},
				setup: {
					cache: function () {
						k.cache = {
							width: N.outerWidth(),
							height: N.outerHeight(),
							rtl: N.css("direction") == "rtl"
						};
					},
					layout: function () {
						if (O.children(C.pusher).length === 0) {
							k.debug("Adding wrapper element for sidebar");
							k.error(P.pusher);
							$ = e("<div class=\"pusher\" />");
							O.children().not(C.omitted).not(D).wrapAll($);
							k.refresh();
						}
						if (N.nextAll(C.pusher).length === 0 || N.nextAll(C.pusher)[0] !== $[0]) {
							k.debug("Moved sidebar to correct parent element");
							k.error(P.movedSidebar, M);
							N.detach().prependTo(O);
							k.refresh();
						}
						k.clear.cache();
						k.set.pushable();
						k.set.direction();
					}
				},
				attachEvents: function (t, n) {
					var i = e(t);
					n = e.isFunction(k[n]) ? k[n] : k.toggle;
					if (i.length > 0) {
						k.debug("Attaching sidebar events to element", t, n);
						i.on("click" + j, n);
					} else {
						k.error(P.notFound, t);
					}
				},
				show: function (t) {
					t = e.isFunction(t) ? t : function () {};
					if (k.is.hidden()) {
						k.refreshSidebars();
						if (x.overlay) {
							k.error(P.overlay);
							x.transition = "overlay";
						}
						k.refresh();
						if (k.othersActive()) {
							k.debug("Other sidebars currently visible");
							if (x.exclusive) {
								if (x.transition != "overlay") {
									k.hideOthers(k.show);
									return;
								}
								k.hideOthers();
							} else {
								x.transition = "overlay";
							}
						}
						k.pushPage(function () {
							t.call(M);
							x.onShow.call(M);
						});
						x.onChange.call(M);
						x.onVisible.call(M);
					} else {
						k.debug("Sidebar is already visible");
					}
				},
				hide: function (t) {
					t = e.isFunction(t) ? t : function () {};
					if (k.is.visible() || k.is.animating()) {
						k.debug("Hiding sidebar", t);
						k.refreshSidebars();
						k.pullPage(function () {
							t.call(M);
							x.onHidden.call(M);
						});
						x.onChange.call(M);
						x.onHide.call(M);
					}
				},
				othersAnimating: function () {
					return D.not(N).filter("." + S.animating).length > 0;
				},
				othersVisible: function () {
					return D.not(N).filter("." + S.visible).length > 0;
				},
				othersActive: function () {
					return k.othersVisible() || k.othersAnimating();
				},
				hideOthers: function (e) {
					var t = D.not(N).filter("." + S.visible);
					var n = t.length;
					var i = 0;
					e = e || function () {};
					t.sidebar("hide", function () {
						if (++i == n) {
							e();
						}
					});
				},
				toggle: function () {
					k.verbose("Determining toggled direction");
					if (k.is.hidden()) {
						k.show();
					} else {
						k.hide();
					}
				},
				pushPage: function (t) {
					var n;
					var i;
					var o;
					var a = k.get.transition();
					var s = a === "overlay" || k.othersActive() ? N : $;
					t = e.isFunction(t) ? t : function () {};
					if (x.transition == "scale down") {
						k.scrollToTop();
					}
					k.set.transition(a);
					k.repaint();
					n = function () {
						k.bind.clickaway();
						k.add.inlineCSS();
						k.set.animating();
						k.set.visible();
					};
					i = function () {
						k.set.dimmed();
					};
					o = function (e) {
						if (e.target == s[0]) {
							s.off(_ + b, o);
							k.remove.animating();
							k.bind.scrollLock();
							t.call(M);
						}
					};
					s.off(_ + b);
					s.on(_ + b, o);
					v(n);
					if (x.dimPage && !k.othersVisible()) {
						v(i);
					}
				},
				pullPage: function (t) {
					var n;
					var i;
					var o = k.get.transition();
					var a = o == "overlay" || k.othersActive() ? N : $;
					t = e.isFunction(t) ? t : function () {};
					k.verbose("Removing context push state", k.get.direction());
					k.unbind.clickaway();
					k.unbind.scrollLock();
					n = function () {
						k.set.transition(o);
						k.set.animating();
						k.remove.visible();
						if (x.dimPage && !k.othersVisible()) {
							$.removeClass(S.dimmed);
						}
					};
					i = function (e) {
						if (e.target == a[0]) {
							a.off(_ + b, i);
							k.remove.animating();
							k.remove.transition();
							k.remove.inlineCSS();
							if (o == "scale down" || x.returnScroll && k.is.mobile()) {
								k.scrollBack();
							}
							t.call(M);
						}
					};
					a.off(_ + b);
					a.on(_ + b, i);
					v(n);
				},
				scrollToTop: function () {
					k.verbose("Scrolling to top of page to avoid animation issues");
					w = e(t).scrollTop();
					N.scrollTop(0);
					t.scrollTo(0, 0);
				},
				scrollBack: function () {
					k.verbose("Scrolling back to original page position");
					t.scrollTo(0, w);
				},
				clear: {
					cache: function () {
						k.verbose("Clearing cached dimensions");
						k.cache = {};
					}
				},
				set: {
					ios: function () {
						c.addClass(S.ios);
					},
					pushed: function () {
						O.addClass(S.pushed);
					},
					pushable: function () {
						O.addClass(S.pushable);
					},
					dimmed: function () {
						$.addClass(S.dimmed);
					},
					active: function () {
						N.addClass(S.active);
					},
					animating: function () {
						N.addClass(S.animating);
					},
					transition: function (e) {
						e = e || k.get.transition();
						N.addClass(e);
					},
					direction: function (e) {
						e = e || k.get.direction();
						N.addClass(S[e]);
					},
					visible: function () {
						N.addClass(S.visible);
					},
					overlay: function () {
						N.addClass(S.overlay);
					}
				},
				remove: {
					inlineCSS: function () {
						k.debug("Removing inline css styles", s);
						if (s && s.length > 0) {
							s.remove();
						}
					},
					ios: function () {
						c.removeClass(S.ios);
					},
					pushed: function () {
						O.removeClass(S.pushed);
					},
					pushable: function () {
						O.removeClass(S.pushable);
					},
					active: function () {
						N.removeClass(S.active);
					},
					animating: function () {
						N.removeClass(S.animating);
					},
					transition: function (e) {
						e = e || k.get.transition();
						N.removeClass(e);
					},
					direction: function (e) {
						e = e || k.get.direction();
						N.removeClass(S[e]);
					},
					visible: function () {
						N.removeClass(S.visible);
					},
					overlay: function () {
						N.removeClass(S.overlay);
					}
				},
				get: {
					direction: function () {
						if (N.hasClass(S.top)) {
							return S.top;
						} else if (N.hasClass(S.right)) {
							return S.right;
						} else if (N.hasClass(S.bottom)) {
							return S.bottom;
						} else {
							return S.left;
						}
					},
					transition: function () {
						var e;
						var t = k.get.direction();
						e = k.is.mobile() ? x.mobileTransition == "auto" ? x.defaultTransition.mobile[t] : x.mobileTransition : x.transition == "auto" ? x.defaultTransition.computer[t] : x.transition;
						k.verbose("Determined transition", e);
						return e;
					},
					transitionEvent: function () {
						var e;
						var t = n.createElement("element");
						var o = {
							transition: "transitionend",
							OTransition: "oTransitionEnd",
							MozTransition: "transitionend",
							WebkitTransition: "webkitTransitionEnd"
						};
						for (e in o) {
							if (t.style[e] !== i) {
								return o[e];
							}
						}
					}
				},
				is: {
					ie: function () {
						var e = !t.ActiveXObject && "ActiveXObject" in t;
						var n = "ActiveXObject" in t;
						return e || n;
					},
					ios: function () {
						var e = navigator.userAgent;
						var t = e.match(T.ios);
						var n = e.match(T.mobileChrome);
						return !!t && !n && (k.verbose("Browser was found to be iOS", e), true);
					},
					mobile: function () {
						var e = navigator.userAgent;
						if (e.match(T.mobile)) {
							k.verbose("Browser was found to be mobile", e);
							return true;
						} else {
							k.verbose("Browser is not mobile, using regular transition", e);
							return false;
						}
					},
					hidden: function () {
						return !k.is.visible();
					},
					visible: function () {
						return N.hasClass(S.visible);
					},
					open: function () {
						return k.is.visible();
					},
					closed: function () {
						return k.is.hidden();
					},
					vertical: function () {
						return N.hasClass(S.top);
					},
					animating: function () {
						return O.hasClass(S.animating);
					},
					rtl: function () {
						if (k.cache.rtl === i) {
							k.cache.rtl = N.css("direction") == "rtl";
						}
						return k.cache.rtl;
					}
				},
				setting: function (t, n) {
					k.debug("Changing setting", t, n);
					if (e.isPlainObject(t)) {
						e.extend(true, x, t);
					} else {
						if (n === i) {
							return x[t];
						}
						if (e.isPlainObject(x[t])) {
							e.extend(true, x[t], n);
						} else {
							x[t] = n;
						}
					}
				},
				internal: function (t, n) {
					if (e.isPlainObject(t)) {
						e.extend(true, k, t);
					} else {
						if (n === i) {
							return k[t];
						}
						k[t] = n;
					}
				},
				debug: function () {
					if (!x.silent && x.debug) {
						if (x.performance) {
							k.performance.log(arguments);
						} else {
							k.debug = Function.prototype.bind.call(console.info, console, x.name + ":");
							k.debug.apply(console, arguments);
						}
					}
				},
				verbose: function () {
					if (!x.silent && x.verbose && x.debug) {
						if (x.performance) {
							k.performance.log(arguments);
						} else {
							k.verbose = Function.prototype.bind.call(console.info, console, x.name + ":");
							k.verbose.apply(console, arguments);
						}
					}
				},
				error: function () {
					if (!x.silent) {
						k.error = Function.prototype.bind.call(console.error, console, x.name + ":");
						k.error.apply(console, arguments);
					}
				},
				performance: {
					log: function (e) {
						var t;
						var n;
						var i;
						if (x.performance) {
							t = new Date().getTime();
							i = p || t;
							n = t - i;
							p = t;
							f.push({
								Name: e[0],
								Arguments: [].slice.call(e, 1) || "",
								Element: M,
								"Execution Time": n
							});
						}
						clearTimeout(k.performance.timer);
						k.performance.timer = setTimeout(k.performance.display, 500);
					},
					display: function () {
						var t = x.name + ":";
						var n = 0;
						p = false;
						clearTimeout(k.performance.timer);
						e.each(f, function (e, t) {
							n += t["Execution Time"];
						});
						t += " " + n + "ms";
						if (d) {
							t += " '" + d + "'";
						}
						if ((console.group !== i || console.table !== i) && f.length > 0) {
							console.groupCollapsed(t);
							if (console.table) {
								console.table(f);
							} else {
								e.each(f, function (e, t) {
									console.log(t.Name + ": " + t["Execution Time"] + "ms");
								});
							}
							console.groupEnd();
						}
						f = [];
					}
				},
				invoke: function (t, n, o) {
					var s;
					var r;
					var l;
					var c = z;
					n = n || g;
					o = M || o;
					if (typeof t == "string" && c !== i) {
						t = t.split(/[\. ]/);
						s = t.length - 1;
						e.each(t, function (n, o) {
							var a = n != s ? o + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t;
							if (e.isPlainObject(c[a]) && n != s) {
								c = c[a];
							} else {
								if (c[a] !== i) {
									r = c[a];
									return false;
								}
								if (!e.isPlainObject(c[o]) || n == s) {
									if (c[o] !== i) {
										r = c[o];
										return false;
									} else {
										k.error(P.method, t);
										return false;
									}
								}
								c = c[o];
							}
						});
					}
					if (e.isFunction(r)) {
						l = r.apply(o, n);
					} else if (r !== i) {
						l = r;
					}
					if (e.isArray(a)) {
						a.push(l);
					} else if (a !== i) {
						a = [a, l];
					} else if (l !== i) {
						a = l;
					}
					return r;
				}
			};
			if (m) {
				if (z === i) {
					k.initialize();
				}
				k.invoke(h);
			} else {
				if (z !== i) {
					k.invoke("destroy");
				}
				k.initialize();
			}
		});
		if (a !== i) {
			return a;
		} else {
			return this;
		}
	};
	e.fn.sidebar.settings = {
		name: "Sidebar",
		namespace: "sidebar",
		silent: false,
		debug: false,
		verbose: false,
		performance: true,
		transition: "auto",
		mobileTransition: "auto",
		defaultTransition: {
			computer: {
				left: "uncover",
				right: "uncover",
				top: "overlay",
				bottom: "overlay"
			},
			mobile: {
				left: "uncover",
				right: "uncover",
				top: "overlay",
				bottom: "overlay"
			}
		},
		context: "body",
		exclusive: false,
		closable: true,
		dimPage: true,
		scrollLock: false,
		returnScroll: false,
		delaySetup: false,
		duration: 500,
		onChange: function () {},
		onShow: function () {},
		onHide: function () {},
		onHidden: function () {},
		onVisible: function () {},
		className: {
			active: "active",
			animating: "animating",
			dimmed: "dimmed",
			ios: "ios",
			pushable: "pushable",
			pushed: "pushed",
			right: "right",
			top: "top",
			left: "left",
			bottom: "bottom",
			visible: "visible"
		},
		selector: {
			fixed: ".fixed",
			omitted: "script, link, style, .ui.modal, .ui.dimmer, .ui.nag, .ui.fixed",
			pusher: ".pusher",
			sidebar: ".ui.sidebar"
		},
		regExp: {
			ios: /(iPad|iPhone|iPod)/g,
			mobileChrome: /(CriOS)/g,
			mobile: /Mobile|iP(hone|od|ad)|Android|BlackBerry|IEMobile|Kindle|NetFront|Silk-Accelerated|(hpw|web)OS|Fennec|Minimo|Opera M(obi|ini)|Blazer|Dolfin|Dolphin|Skyfire|Zune/g
		},
		error: {
			method: "The method you called is not defined.",
			pusher: "Had to add pusher element. For optimal performance make sure body content is inside a pusher element",
			movedSidebar: "Had to move sidebar. For optimal performance make sure sidebar and pusher are direct children of your body tag",
			overlay: "The overlay setting is no longer supported, use animation: overlay",
			notFound: "There were no elements that matched the specified selector"
		}
	};
})(jQuery, window, document);
(function (e, t, n, i) {
	"use strict";

	t = t !== undefined && t.Math == Math ? t : typeof self != "undefined" && self.Math == Math ? self : Function("return this")();
	e.fn.sticky = function (o) {
		var a;
		var s = e(this);
		var r = s.selector || "";
		var l = new Date().getTime();
		var c = [];
		var u = arguments[0];
		var d = typeof u == "string";
		var p = [].slice.call(arguments, 1);
		s.each(function () {
			var s;
			var f;
			var h;
			var m;
			var g;
			var v = e.isPlainObject(o) ? e.extend(true, {}, e.fn.sticky.settings, o) : e.extend({}, e.fn.sticky.settings);
			var b = v.className;
			var y = v.namespace;
			var w = v.error;
			var _ = "." + y;
			var k = "module-" + y;
			var x = e(this);
			var C = e(t);
			var S = e(v.scrollContext);
			x.selector;
			var A = x.data(k);
			var T = t.requestAnimationFrame || t.mozRequestAnimationFrame || t.webkitRequestAnimationFrame || t.msRequestAnimationFrame || function (e) {
				setTimeout(e, 0);
			};
			var P = this;
			g = {
				initialize: function () {
					g.determineContainer();
					g.determineContext();
					g.verbose("Initializing sticky", v, s);
					g.save.positions();
					g.checkErrors();
					g.bind.events();
					if (v.observeChanges) {
						g.observeChanges();
					}
					g.instantiate();
				},
				instantiate: function () {
					g.verbose("Storing instance of module", g);
					A = g;
					x.data(k, g);
				},
				destroy: function () {
					g.verbose("Destroying previous instance");
					g.reset();
					if (h) {
						h.disconnect();
					}
					if (m) {
						m.disconnect();
					}
					C.off("load" + _, g.event.load).off("resize" + _, g.event.resize);
					S.off("scrollchange" + _, g.event.scrollchange);
					x.removeData(k);
				},
				observeChanges: function () {
					if ("MutationObserver" in t) {
						h = new MutationObserver(g.event.documentChanged);
						m = new MutationObserver(g.event.changed);
						h.observe(n, {
							childList: true,
							subtree: true
						});
						m.observe(P, {
							childList: true,
							subtree: true
						});
						m.observe(f[0], {
							childList: true,
							subtree: true
						});
						g.debug("Setting up mutation observer", m);
					}
				},
				determineContainer: function () {
					s = v.container ? e(v.container) : x.offsetParent();
				},
				determineContext: function () {
					if ((f = v.context ? e(v.context) : s).length === 0) {
						g.error(w.invalidContext, v.context, x);
						return;
					} else {
						return undefined;
					}
				},
				checkErrors: function () {
					if (g.is.hidden()) {
						g.error(w.visible, x);
					}
					if (g.cache.element.height > g.cache.context.height) {
						g.reset();
						g.error(w.elementSize, x);
						return;
					} else {
						return undefined;
					}
				},
				bind: {
					events: function () {
						C.on("load" + _, g.event.load).on("resize" + _, g.event.resize);
						S.off("scroll" + _).on("scroll" + _, g.event.scroll).on("scrollchange" + _, g.event.scrollchange);
					}
				},
				event: {
					changed: function (e) {
						clearTimeout(g.timer);
						g.timer = setTimeout(function () {
							g.verbose("DOM tree modified, updating sticky menu", e);
							g.refresh();
						}, 100);
					},
					documentChanged: function (t) {
						[].forEach.call(t, function (t) {
							if (t.removedNodes) {
								[].forEach.call(t.removedNodes, function (t) {
									if (t == P || e(t).find(P).length > 0) {
										g.debug("Element removed from DOM, tearing down events");
										g.destroy();
									}
								});
							}
						});
					},
					load: function () {
						g.verbose("Page contents finished loading");
						T(g.refresh);
					},
					resize: function () {
						g.verbose("Window resized");
						T(g.refresh);
					},
					scroll: function () {
						T(function () {
							S.triggerHandler("scrollchange" + _, S.scrollTop());
						});
					},
					scrollchange: function (e, t) {
						g.stick(t);
						v.onScroll.call(P);
					}
				},
				refresh: function (e) {
					g.reset();
					if (!v.context) {
						g.determineContext();
					}
					if (e) {
						g.determineContainer();
					}
					g.save.positions();
					g.stick();
					v.onReposition.call(P);
				},
				supports: {
					sticky: function () {
						var t = e("<div/>");
						t[0];
						t.addClass(b.supported);
						return t.css("position").match("sticky");
					}
				},
				save: {
					lastScroll: function (e) {
						g.lastScroll = e;
					},
					elementScroll: function (e) {
						g.elementScroll = e;
					},
					positions: function () {
						var e = {
							height: S.height()
						};
						var t = {
							margin: {
								top: parseInt(x.css("margin-top"), 10),
								bottom: parseInt(x.css("margin-bottom"), 10)
							},
							offset: x.offset(),
							width: x.outerWidth(),
							height: x.outerHeight()
						};
						var n = {
							offset: f.offset(),
							height: f.outerHeight()
						};
						s.outerHeight();
						if (!g.is.standardScroll()) {
							g.debug("Non-standard scroll. Removing scroll offset from element offset");
							e.top = S.scrollTop();
							e.left = S.scrollLeft();
							t.offset.top += e.top;
							n.offset.top += e.top;
							t.offset.left += e.left;
							n.offset.left += e.left;
						}
						g.cache = {
							fits: t.height < e.height,
							scrollContext: {
								height: e.height
							},
							element: {
								margin: t.margin,
								top: t.offset.top - t.margin.top,
								left: t.offset.left,
								width: t.width,
								height: t.height,
								bottom: t.offset.top + t.height
							},
							context: {
								top: n.offset.top,
								height: n.height,
								bottom: n.offset.top + n.height
							}
						};
						g.set.containerSize();
						g.set.size();
						g.stick();
						g.debug("Caching element positions", g.cache);
					}
				},
				get: {
					direction: function (e) {
						var t = "down";
						e = e || S.scrollTop();
						if (g.lastScroll !== i) {
							if (g.lastScroll < e) {
								t = "down";
							} else if (g.lastScroll > e) {
								t = "up";
							}
						}
						return t;
					},
					scrollChange: function (e) {
						e = e || S.scrollTop();
						if (g.lastScroll) {
							return e - g.lastScroll;
						} else {
							return 0;
						}
					},
					currentElementScroll: function () {
						if (g.elementScroll) {
							return g.elementScroll;
						} else if (g.is.top()) {
							return Math.abs(parseInt(x.css("top"), 10)) || 0;
						} else {
							return Math.abs(parseInt(x.css("bottom"), 10)) || 0;
						}
					},
					elementScroll: function (e) {
						e = e || S.scrollTop();
						var t = g.cache.element;
						var n = g.cache.scrollContext;
						var i = g.get.scrollChange(e);
						var o = t.height - n.height + v.offset;
						var a = g.get.currentElementScroll();
						var s = a + i;
						return a = g.cache.fits || s < 0 ? 0 : s > o ? o : s;
					}
				},
				remove: {
					lastScroll: function () {
						delete g.lastScroll;
					},
					elementScroll: function (e) {
						delete g.elementScroll;
					},
					offset: function () {
						x.css("margin-top", "");
					}
				},
				set: {
					offset: function () {
						g.verbose("Setting offset on element", v.offset);
						x.css("margin-top", v.offset);
					},
					containerSize: function () {
						var e = s.get(0).tagName;
						if (e === "HTML" || e == "body") {
							g.determineContainer();
						} else if (Math.abs(s.outerHeight() - g.cache.context.height) > v.jitter) {
							g.debug("Context has padding, specifying exact height for container", g.cache.context.height);
							s.css({
								height: g.cache.context.height
							});
						}
					},
					minimumSize: function () {
						var e = g.cache.element;
						s.css("min-height", e.height);
					},
					scroll: function (e) {
						g.debug("Setting scroll on element", e);
						if (g.elementScroll != e) {
							if (g.is.top()) {
								x.css("bottom", "").css("top", -e);
							}
							if (g.is.bottom()) {
								x.css("top", "").css("bottom", e);
							}
						}
					},
					size: function () {
						if (g.cache.element.height !== 0 && g.cache.element.width !== 0) {
							P.style.setProperty("width", g.cache.element.width + "px", "important");
							P.style.setProperty("height", g.cache.element.height + "px", "important");
						}
					}
				},
				is: {
					standardScroll: function () {
						return S[0] == t;
					},
					top: function () {
						return x.hasClass(b.top);
					},
					bottom: function () {
						return x.hasClass(b.bottom);
					},
					initialPosition: function () {
						return !g.is.fixed() && !g.is.bound();
					},
					hidden: function () {
						return !x.is(":visible");
					},
					bound: function () {
						return x.hasClass(b.bound);
					},
					fixed: function () {
						return x.hasClass(b.fixed);
					}
				},
				stick: function (e) {
					var t = e || S.scrollTop();
					var n = g.cache;
					var i = n.fits;
					var o = n.element;
					var a = n.scrollContext;
					var s = n.context;
					var r = g.is.bottom() && v.pushing ? v.bottomOffset : v.offset;
					var e = {
						top: t + r,
						bottom: t + r + a.height
					};
					g.get.direction(e.top);
					var l = i ? 0 : g.get.elementScroll(e.top);
					var c = !i;
					if (o.height !== 0) {
						if (g.is.initialPosition()) {
							if (e.top >= s.bottom) {
								g.debug("Initial element position is bottom of container");
								g.bindBottom();
							} else if (e.top > o.top) {
								if (o.height + e.top - l >= s.bottom) {
									g.debug("Initial element position is bottom of container");
									g.bindBottom();
								} else {
									g.debug("Initial element position is fixed");
									g.fixTop();
								}
							}
						} else if (g.is.fixed()) {
							if (g.is.top()) {
								if (e.top <= o.top) {
									g.debug("Fixed element reached top of container");
									g.setInitialPosition();
								} else if (o.height + e.top - l >= s.bottom) {
									g.debug("Fixed element reached bottom of container");
									g.bindBottom();
								} else if (c) {
									g.set.scroll(l);
									g.save.lastScroll(e.top);
									g.save.elementScroll(l);
								}
							} else if (g.is.bottom()) {
								if (e.bottom - o.height <= o.top) {
									g.debug("Bottom fixed rail has reached top of container");
									g.setInitialPosition();
								} else if (e.bottom >= s.bottom) {
									g.debug("Bottom fixed rail has reached bottom of container");
									g.bindBottom();
								} else if (c) {
									g.set.scroll(l);
									g.save.lastScroll(e.top);
									g.save.elementScroll(l);
								}
							}
						} else if (g.is.bottom()) {
							if (e.top <= o.top) {
								g.debug("Jumped from bottom fixed to top fixed, most likely used home/end button");
								g.setInitialPosition();
							} else if (v.pushing) {
								if (g.is.bound() && e.bottom <= s.bottom) {
									g.debug("Fixing bottom attached element to bottom of browser.");
									g.fixBottom();
								}
							} else if (g.is.bound() && e.top <= s.bottom - o.height) {
								g.debug("Fixing bottom attached element to top of browser.");
								g.fixTop();
							}
						}
					}
				},
				bindTop: function () {
					g.debug("Binding element to top of parent container");
					g.remove.offset();
					x.css({
						left: "",
						top: "",
						marginBottom: ""
					}).removeClass(b.fixed).removeClass(b.bottom).addClass(b.bound).addClass(b.top);
					v.onTop.call(P);
					v.onUnstick.call(P);
				},
				bindBottom: function () {
					g.debug("Binding element to bottom of parent container");
					g.remove.offset();
					x.css({
						left: "",
						top: ""
					}).removeClass(b.fixed).removeClass(b.top).addClass(b.bound).addClass(b.bottom);
					v.onBottom.call(P);
					v.onUnstick.call(P);
				},
				setInitialPosition: function () {
					g.debug("Returning to initial position");
					g.unfix();
					g.unbind();
				},
				fixTop: function () {
					g.debug("Fixing element to top of page");
					g.set.minimumSize();
					g.set.offset();
					x.css({
						left: g.cache.element.left,
						bottom: "",
						marginBottom: ""
					}).removeClass(b.bound).removeClass(b.bottom).addClass(b.fixed).addClass(b.top);
					v.onStick.call(P);
				},
				fixBottom: function () {
					g.debug("Sticking element to bottom of page");
					g.set.minimumSize();
					g.set.offset();
					x.css({
						left: g.cache.element.left,
						bottom: "",
						marginBottom: ""
					}).removeClass(b.bound).removeClass(b.top).addClass(b.fixed).addClass(b.bottom);
					v.onStick.call(P);
				},
				unbind: function () {
					if (g.is.bound()) {
						g.debug("Removing container bound position on element");
						g.remove.offset();
						x.removeClass(b.bound).removeClass(b.top).removeClass(b.bottom);
					}
				},
				unfix: function () {
					if (g.is.fixed()) {
						g.debug("Removing fixed position on element");
						g.remove.offset();
						x.removeClass(b.fixed).removeClass(b.top).removeClass(b.bottom);
						v.onUnstick.call(P);
					}
				},
				reset: function () {
					g.debug("Resetting elements position");
					g.unbind();
					g.unfix();
					g.resetCSS();
					g.remove.offset();
					g.remove.lastScroll();
				},
				resetCSS: function () {
					x.css({
						width: "",
						height: ""
					});
					s.css({
						height: ""
					});
				},
				setting: function (t, n) {
					if (e.isPlainObject(t)) {
						e.extend(true, v, t);
					} else {
						if (n === i) {
							return v[t];
						}
						v[t] = n;
					}
				},
				internal: function (t, n) {
					if (e.isPlainObject(t)) {
						e.extend(true, g, t);
					} else {
						if (n === i) {
							return g[t];
						}
						g[t] = n;
					}
				},
				debug: function () {
					if (!v.silent && v.debug) {
						if (v.performance) {
							g.performance.log(arguments);
						} else {
							g.debug = Function.prototype.bind.call(console.info, console, v.name + ":");
							g.debug.apply(console, arguments);
						}
					}
				},
				verbose: function () {
					if (!v.silent && v.verbose && v.debug) {
						if (v.performance) {
							g.performance.log(arguments);
						} else {
							g.verbose = Function.prototype.bind.call(console.info, console, v.name + ":");
							g.verbose.apply(console, arguments);
						}
					}
				},
				error: function () {
					if (!v.silent) {
						g.error = Function.prototype.bind.call(console.error, console, v.name + ":");
						g.error.apply(console, arguments);
					}
				},
				performance: {
					log: function (e) {
						var t;
						var n;
						var i;
						if (v.performance) {
							t = new Date().getTime();
							i = l || t;
							n = t - i;
							l = t;
							c.push({
								Name: e[0],
								Arguments: [].slice.call(e, 1) || "",
								Element: P,
								"Execution Time": n
							});
						}
						clearTimeout(g.performance.timer);
						g.performance.timer = setTimeout(g.performance.display, 0);
					},
					display: function () {
						var t = v.name + ":";
						var n = 0;
						l = false;
						clearTimeout(g.performance.timer);
						e.each(c, function (e, t) {
							n += t["Execution Time"];
						});
						t += " " + n + "ms";
						if (r) {
							t += " '" + r + "'";
						}
						if ((console.group !== i || console.table !== i) && c.length > 0) {
							console.groupCollapsed(t);
							if (console.table) {
								console.table(c);
							} else {
								e.each(c, function (e, t) {
									console.log(t.Name + ": " + t["Execution Time"] + "ms");
								});
							}
							console.groupEnd();
						}
						c = [];
					}
				},
				invoke: function (t, n, o) {
					var s;
					var r;
					var l;
					var c = A;
					n = n || p;
					o = P || o;
					if (typeof t == "string" && c !== i) {
						t = t.split(/[\. ]/);
						s = t.length - 1;
						e.each(t, function (n, o) {
							var a = n != s ? o + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t;
							if (e.isPlainObject(c[a]) && n != s) {
								c = c[a];
							} else {
								if (c[a] !== i) {
									r = c[a];
									return false;
								}
								if (!e.isPlainObject(c[o]) || n == s) {
									return c[o] !== i && (r = c[o], false);
								}
								c = c[o];
							}
						});
					}
					if (e.isFunction(r)) {
						l = r.apply(o, n);
					} else if (r !== i) {
						l = r;
					}
					if (e.isArray(a)) {
						a.push(l);
					} else if (a !== i) {
						a = [a, l];
					} else if (l !== i) {
						a = l;
					}
					return r;
				}
			};
			if (d) {
				if (A === i) {
					g.initialize();
				}
				g.invoke(u);
			} else {
				if (A !== i) {
					A.invoke("destroy");
				}
				g.initialize();
			}
		});
		if (a !== i) {
			return a;
		} else {
			return this;
		}
	};
	e.fn.sticky.settings = {
		name: "Sticky",
		namespace: "sticky",
		silent: false,
		debug: false,
		verbose: true,
		performance: true,
		pushing: false,
		context: false,
		container: false,
		scrollContext: t,
		offset: 0,
		bottomOffset: 0,
		jitter: 5,
		observeChanges: false,
		onReposition: function () {},
		onScroll: function () {},
		onStick: function () {},
		onUnstick: function () {},
		onTop: function () {},
		onBottom: function () {},
		error: {
			container: "Sticky element must be inside a relative container",
			visible: "Element is hidden, you must call refresh after element becomes visible. Use silent setting to surpress this warning in production.",
			method: "The method you called is not defined.",
			invalidContext: "Context specified does not exist",
			elementSize: "Sticky element is larger than its container, cannot create sticky."
		},
		className: {
			bound: "bound",
			fixed: "fixed",
			supported: "native",
			top: "top",
			bottom: "bottom"
		}
	};
})(jQuery, window, document);
(function (e, t, n, i) {
	"use strict";

	t = t !== undefined && t.Math == Math ? t : typeof self != "undefined" && self.Math == Math ? self : Function("return this")();
	e.fn.tab = function (o) {
		var a;
		var s = e(e.isFunction(this) ? t : this);
		var r = s.selector || "";
		var l = new Date().getTime();
		var c = [];
		var u = arguments[0];
		var d = typeof u == "string";
		var p = [].slice.call(arguments, 1);
		var f = false;
		s.each(function () {
			var h;
			var m;
			var g;
			var v;
			var b;
			var y;
			var w = e.isPlainObject(o) ? e.extend(true, {}, e.fn.tab.settings, o) : e.extend({}, e.fn.tab.settings);
			var _ = w.className;
			var k = w.metadata;
			var x = w.selector;
			var C = w.error;
			var S = "." + w.namespace;
			var A = "module-" + w.namespace;
			var T = e(this);
			var P = {};
			var j = true;
			var E = 0;
			var N = this;
			var O = T.data(A);
			b = {
				initialize: function () {
					b.debug("Initializing tab menu item", T);
					b.fix.callbacks();
					b.determineTabs();
					b.debug("Determining tabs", w.context, m);
					if (w.auto) {
						b.set.auto();
					}
					b.bind.events();
					if (w.history && !f) {
						b.initializeHistory();
						f = true;
					}
					b.instantiate();
				},
				instantiate: function () {
					b.verbose("Storing instance of module", b);
					O = b;
					T.data(A, b);
				},
				destroy: function () {
					b.debug("Destroying tabs", T);
					T.removeData(A).off(S);
				},
				bind: {
					events: function () {
						if (!e.isWindow(N)) {
							b.debug("Attaching tab activation events to element", T);
							T.on("click" + S, b.event.click);
						}
					}
				},
				determineTabs: function () {
					var t;
					if (w.context === "parent") {
						if (T.closest(x.ui).length > 0) {
							t = T.closest(x.ui);
							b.verbose("Using closest UI element as parent", t);
						} else {
							t = T;
						}
						h = t.parent();
						b.verbose("Determined parent element for creating context", h);
					} else if (w.context) {
						h = e(w.context);
						b.verbose("Using selector for tab context", w.context, h);
					} else {
						h = e("body");
					}
					if (w.childrenOnly) {
						m = h.children(x.tabs);
						b.debug("Searching tab context children for tabs", h, m);
					} else {
						m = h.find(x.tabs);
						b.debug("Searching tab context for tabs", h, m);
					}
				},
				fix: {
					callbacks: function () {
						if (e.isPlainObject(o) && (o.onTabLoad || o.onTabInit)) {
							if (o.onTabLoad) {
								o.onLoad = o.onTabLoad;
								delete o.onTabLoad;
								b.error(C.legacyLoad, o.onLoad);
							}
							if (o.onTabInit) {
								o.onFirstLoad = o.onTabInit;
								delete o.onTabInit;
								b.error(C.legacyInit, o.onFirstLoad);
							}
							w = e.extend(true, {}, e.fn.tab.settings, o);
						}
					}
				},
				initializeHistory: function () {
					b.debug("Initializing page state");
					if (e.address === i) {
						b.error(C.state);
						return false;
					}
					if (w.historyType == "state") {
						b.debug("Using HTML5 to manage state");
						if (w.path === false) {
							b.error(C.path);
							return false;
						}
						e.address.history(true).state(w.path);
					}
					e.address.bind("change", b.event.history.change);
				},
				event: {
					click: function (t) {
						var n = e(this).data(k.tab);
						if (n !== i) {
							if (w.history) {
								b.verbose("Updating page state", t);
								e.address.value(n);
							} else {
								b.verbose("Changing tab", t);
								b.changeTab(n);
							}
							t.preventDefault();
						} else {
							b.debug("No tab specified");
						}
					},
					history: {
						change: function (t) {
							var n = t.pathNames.join("/") || b.get.initialPath();
							var o = w.templates.determineTitle(n) || false;
							b.performance.display();
							b.debug("History change event", n, t);
							y = t;
							if (n !== i) {
								b.changeTab(n);
							}
							if (o) {
								e.address.title(o);
							}
						}
					}
				},
				refresh: function () {
					if (g) {
						b.debug("Refreshing tab", g);
						b.changeTab(g);
					}
				},
				cache: {
					read: function (e) {
						return e !== i && P[e];
					},
					add: function (e, t) {
						e = e || g;
						b.debug("Adding cached content for", e);
						P[e] = t;
					},
					remove: function (e) {
						e = e || g;
						b.debug("Removing cached content for", e);
						delete P[e];
					}
				},
				set: {
					auto: function () {
						var t = typeof w.path == "string" ? w.path.replace(/\/$/, "") + "/{$tab}" : "/{$tab}";
						b.verbose("Setting up automatic tab retrieval from server", t);
						if (e.isPlainObject(w.apiSettings)) {
							w.apiSettings.url = t;
						} else {
							w.apiSettings = {
								url: t
							};
						}
					},
					loading: function (e) {
						var t = b.get.tabElement(e);
						if (!t.hasClass(_.loading)) {
							b.verbose("Setting loading state for", t);
							t.addClass(_.loading).siblings(m).removeClass(_.active + " " + _.loading);
							if (t.length > 0) {
								w.onRequest.call(t[0], e);
							}
						}
					},
					state: function (t) {
						e.address.value(t);
					}
				},
				changeTab: function (n) {
					var i = t.history && t.history.pushState && w.ignoreFirstLoad && j;
					var o = w.auto || e.isPlainObject(w.apiSettings);
					var a = o && !i ? b.utilities.pathToArray(n) : b.get.defaultPathArray(n);
					n = b.utilities.arrayToPath(a);
					e.each(a, function (t, s) {
						var r;
						var l;
						var c;
						var u;
						var d = a.slice(0, t + 1);
						var p = b.utilities.arrayToPath(d);
						var f = b.is.tab(p);
						var m = t + 1 == a.length;
						var x = b.get.tabElement(p);
						b.verbose("Looking for tab", s);
						if (f) {
							b.verbose("Tab was found", s);
							g = p;
							v = b.utilities.filterArray(a, d);
							if (m) {
								u = true;
							} else {
								l = a.slice(0, t + 2);
								c = b.utilities.arrayToPath(l);
								if (u = !b.is.tab(c)) {
									b.verbose("Tab parameters found", l);
								}
							}
							if (u && o) {
								if (i) {
									b.debug("Ignoring remote content on first tab load", p);
									j = false;
									b.cache.add(n, x.html());
									b.activate.all(p);
									w.onFirstLoad.call(x[0], p, v, y);
									w.onLoad.call(x[0], p, v, y);
								} else {
									b.activate.navigation(p);
									b.fetch.content(p, n);
								}
								return false;
							}
							b.debug("Opened local tab", p);
							b.activate.all(p);
							if (!b.cache.read(p)) {
								b.cache.add(p, true);
								b.debug("First time tab loaded calling tab init");
								w.onFirstLoad.call(x[0], p, v, y);
							}
							w.onLoad.call(x[0], p, v, y);
						} else {
							if (n.search("/") != -1 || n === "") {
								b.error(C.missingTab, T, h, p);
								return false;
							}
							r = e("#" + n + ", a[name=\"" + n + "\"]");
							p = r.closest("[data-tab]").data(k.tab);
							x = b.get.tabElement(p);
							if (r && r.length > 0 && p) {
								b.debug("Anchor link used, opening parent tab", x, r);
								if (!x.hasClass(_.active)) {
									setTimeout(function () {
										b.scrollTo(r);
									}, 0);
								}
								b.activate.all(p);
								if (!b.cache.read(p)) {
									b.cache.add(p, true);
									b.debug("First time tab loaded calling tab init");
									w.onFirstLoad.call(x[0], p, v, y);
								}
								w.onLoad.call(x[0], p, v, y);
								return false;
							}
						}
					});
				},
				scrollTo: function (t) {
					var i = !!t && !!(t.length > 0) && t.offset().top;
					if (i !== false) {
						b.debug("Forcing scroll to an in-page link in a hidden tab", i, t);
						e(n).scrollTop(i);
					}
				},
				update: {
					content: function (t, n, o) {
						var a = b.get.tabElement(t);
						var s = a[0];
						o = o !== i ? o : w.evaluateScripts;
						if (typeof w.cacheType == "string" && w.cacheType.toLowerCase() == "dom" && typeof n != "string") {
							a.empty().append(e(n).clone(true));
						} else if (o) {
							b.debug("Updating HTML and evaluating inline scripts", t, n);
							a.html(n);
						} else {
							b.debug("Updating HTML", t, n);
							s.innerHTML = n;
						}
					}
				},
				fetch: {
					content: function (t, n) {
						var o;
						var a;
						var s = b.get.tabElement(t);
						var r = {
							dataType: "html",
							encodeParameters: false,
							on: "now",
							cache: w.alwaysRefresh,
							headers: {
								"X-Remote": true
							},
							onSuccess: function (e) {
								if (w.cacheType == "response") {
									b.cache.add(n, e);
								}
								b.update.content(t, e);
								if (t == g) {
									b.debug("Content loaded", t);
									b.activate.tab(t);
								} else {
									b.debug("Content loaded in background", t);
								}
								w.onFirstLoad.call(s[0], t, v, y);
								w.onLoad.call(s[0], t, v, y);
								if (w.loadOnce) {
									b.cache.add(n, true);
								} else if (typeof w.cacheType == "string" && w.cacheType.toLowerCase() == "dom" && s.children().length > 0) {
									setTimeout(function () {
										var e = s.children().clone(true);
										e = e.not("script");
										b.cache.add(n, e);
									}, 0);
								} else {
									b.cache.add(n, s.html());
								}
							},
							urlData: {
								tab: n
							}
						};
						var l = s.api("get request") || false;
						var c = l && l.state() === "pending";
						n = n || t;
						a = b.cache.read(n);
						if (w.cache && a) {
							b.activate.tab(t);
							b.debug("Adding cached content", n);
							if (!w.loadOnce) {
								if (w.evaluateScripts == "once") {
									b.update.content(t, a, false);
								} else {
									b.update.content(t, a);
								}
							}
							w.onLoad.call(s[0], t, v, y);
						} else if (c) {
							b.set.loading(t);
							b.debug("Content is already loading", n);
						} else if (e.api !== i) {
							o = e.extend(true, {}, w.apiSettings, r);
							b.debug("Retrieving remote content", n, o);
							b.set.loading(t);
							s.api(o);
						} else {
							b.error(C.api);
						}
					}
				},
				activate: {
					all: function (e) {
						b.activate.tab(e);
						b.activate.navigation(e);
					},
					tab: function (e) {
						var t = b.get.tabElement(e);
						var n = w.deactivate == "siblings" ? t.siblings(m) : m.not(t);
						var i = t.hasClass(_.active);
						b.verbose("Showing tab content for", t);
						if (!i) {
							t.addClass(_.active);
							n.removeClass(_.active + " " + _.loading);
							if (t.length > 0) {
								w.onVisible.call(t[0], e);
							}
						}
					},
					navigation: function (e) {
						var t = b.get.navElement(e);
						var n = w.deactivate == "siblings" ? t.siblings(s) : s.not(t);
						var i = t.hasClass(_.active);
						b.verbose("Activating tab navigation for", t, e);
						if (!i) {
							t.addClass(_.active);
							n.removeClass(_.active + " " + _.loading);
						}
					}
				},
				deactivate: {
					all: function () {
						b.deactivate.navigation();
						b.deactivate.tabs();
					},
					navigation: function () {
						s.removeClass(_.active);
					},
					tabs: function () {
						m.removeClass(_.active + " " + _.loading);
					}
				},
				is: {
					tab: function (e) {
						return e !== i && b.get.tabElement(e).length > 0;
					}
				},
				get: {
					initialPath: function () {
						return s.eq(0).data(k.tab) || m.eq(0).data(k.tab);
					},
					path: function () {
						return e.address.value();
					},
					defaultPathArray: function (e) {
						return b.utilities.pathToArray(b.get.defaultPath(e));
					},
					defaultPath: function (e) {
						var t = s.filter("[data-" + k.tab + "^=\"" + e + "/\"]").eq(0).data(k.tab) || false;
						if (t) {
							b.debug("Found default tab", t);
							if (E < w.maxDepth) {
								E++;
								return b.get.defaultPath(t);
							}
							b.error(C.recursion);
						} else {
							b.debug("No default tabs found for", e, m);
						}
						E = 0;
						return e;
					},
					navElement: function (e) {
						e = e || g;
						return s.filter("[data-" + k.tab + "=\"" + e + "\"]");
					},
					tabElement: function (e) {
						var t;
						var n;
						var i;
						var o;
						e = e || g;
						i = b.utilities.pathToArray(e);
						o = b.utilities.last(i);
						t = m.filter("[data-" + k.tab + "=\"" + e + "\"]");
						n = m.filter("[data-" + k.tab + "=\"" + o + "\"]");
						if (t.length > 0) {
							return t;
						} else {
							return n;
						}
					},
					tab: function () {
						return g;
					}
				},
				utilities: {
					filterArray: function (t, n) {
						return e.grep(t, function (t) {
							return e.inArray(t, n) == -1;
						});
					},
					last: function (t) {
						return !!e.isArray(t) && t[t.length - 1];
					},
					pathToArray: function (e) {
						if (e === i) {
							e = g;
						}
						if (typeof e == "string") {
							return e.split("/");
						} else {
							return [e];
						}
					},
					arrayToPath: function (t) {
						return !!e.isArray(t) && t.join("/");
					}
				},
				setting: function (t, n) {
					b.debug("Changing setting", t, n);
					if (e.isPlainObject(t)) {
						e.extend(true, w, t);
					} else {
						if (n === i) {
							return w[t];
						}
						if (e.isPlainObject(w[t])) {
							e.extend(true, w[t], n);
						} else {
							w[t] = n;
						}
					}
				},
				internal: function (t, n) {
					if (e.isPlainObject(t)) {
						e.extend(true, b, t);
					} else {
						if (n === i) {
							return b[t];
						}
						b[t] = n;
					}
				},
				debug: function () {
					if (!w.silent && w.debug) {
						if (w.performance) {
							b.performance.log(arguments);
						} else {
							b.debug = Function.prototype.bind.call(console.info, console, w.name + ":");
							b.debug.apply(console, arguments);
						}
					}
				},
				verbose: function () {
					if (!w.silent && w.verbose && w.debug) {
						if (w.performance) {
							b.performance.log(arguments);
						} else {
							b.verbose = Function.prototype.bind.call(console.info, console, w.name + ":");
							b.verbose.apply(console, arguments);
						}
					}
				},
				error: function () {
					if (!w.silent) {
						b.error = Function.prototype.bind.call(console.error, console, w.name + ":");
						b.error.apply(console, arguments);
					}
				},
				performance: {
					log: function (e) {
						var t;
						var n;
						var i;
						if (w.performance) {
							t = new Date().getTime();
							i = l || t;
							n = t - i;
							l = t;
							c.push({
								Name: e[0],
								Arguments: [].slice.call(e, 1) || "",
								Element: N,
								"Execution Time": n
							});
						}
						clearTimeout(b.performance.timer);
						b.performance.timer = setTimeout(b.performance.display, 500);
					},
					display: function () {
						var t = w.name + ":";
						var n = 0;
						l = false;
						clearTimeout(b.performance.timer);
						e.each(c, function (e, t) {
							n += t["Execution Time"];
						});
						t += " " + n + "ms";
						if (r) {
							t += " '" + r + "'";
						}
						if ((console.group !== i || console.table !== i) && c.length > 0) {
							console.groupCollapsed(t);
							if (console.table) {
								console.table(c);
							} else {
								e.each(c, function (e, t) {
									console.log(t.Name + ": " + t["Execution Time"] + "ms");
								});
							}
							console.groupEnd();
						}
						c = [];
					}
				},
				invoke: function (t, n, o) {
					var s;
					var r;
					var l;
					var c = O;
					n = n || p;
					o = N || o;
					if (typeof t == "string" && c !== i) {
						t = t.split(/[\. ]/);
						s = t.length - 1;
						e.each(t, function (n, o) {
							var a = n != s ? o + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t;
							if (e.isPlainObject(c[a]) && n != s) {
								c = c[a];
							} else {
								if (c[a] !== i) {
									r = c[a];
									return false;
								}
								if (!e.isPlainObject(c[o]) || n == s) {
									if (c[o] !== i) {
										r = c[o];
										return false;
									} else {
										b.error(C.method, t);
										return false;
									}
								}
								c = c[o];
							}
						});
					}
					if (e.isFunction(r)) {
						l = r.apply(o, n);
					} else if (r !== i) {
						l = r;
					}
					if (e.isArray(a)) {
						a.push(l);
					} else if (a !== i) {
						a = [a, l];
					} else if (l !== i) {
						a = l;
					}
					return r;
				}
			};
			if (d) {
				if (O === i) {
					b.initialize();
				}
				b.invoke(u);
			} else {
				if (O !== i) {
					O.invoke("destroy");
				}
				b.initialize();
			}
		});
		if (a !== i) {
			return a;
		} else {
			return this;
		}
	};
	e.tab = function () {
		e(t).tab.apply(this, arguments);
	};
	e.fn.tab.settings = {
		name: "Tab",
		namespace: "tab",
		silent: false,
		debug: false,
		verbose: false,
		performance: true,
		auto: false,
		history: false,
		historyType: "hash",
		path: false,
		context: false,
		childrenOnly: false,
		maxDepth: 25,
		deactivate: "siblings",
		alwaysRefresh: false,
		cache: true,
		loadOnce: false,
		cacheType: "response",
		ignoreFirstLoad: false,
		apiSettings: false,
		evaluateScripts: "once",
		onFirstLoad: function (e, t, n) {},
		onLoad: function (e, t, n) {},
		onVisible: function (e, t, n) {},
		onRequest: function (e, t, n) {},
		templates: {
			determineTitle: function (e) {}
		},
		error: {
			api: "You attempted to load content without API module",
			method: "The method you called is not defined",
			missingTab: "Activated tab cannot be found. Tabs are case-sensitive.",
			noContent: "The tab you specified is missing a content url.",
			path: "History enabled, but no path was specified",
			recursion: "Max recursive depth reached",
			legacyInit: "onTabInit has been renamed to onFirstLoad in 2.0, please adjust your code.",
			legacyLoad: "onTabLoad has been renamed to onLoad in 2.0. Please adjust your code",
			state: "History requires Asual's Address library <https://github.com/asual/jquery-address>"
		},
		metadata: {
			tab: "tab",
			loaded: "loaded",
			promise: "promise"
		},
		className: {
			loading: "loading",
			active: "active"
		},
		selector: {
			tabs: ".ui.tab",
			ui: ".ui"
		}
	};
})(jQuery, window, document);
(function (e, t, n, i) {
	"use strict";

	t = t !== undefined && t.Math == Math ? t : typeof self != "undefined" && self.Math == Math ? self : Function("return this")();
	e.fn.transition = function () {
		var o;
		var a = e(this);
		var s = a.selector || "";
		var r = new Date().getTime();
		var l = [];
		var c = arguments;
		var u = c[0];
		var d = [].slice.call(arguments, 1);
		var p = typeof u == "string";
		if (!t.requestAnimationFrame && !t.mozRequestAnimationFrame && !t.webkitRequestAnimationFrame) {
			t.msRequestAnimationFrame;
		}
		a.each(function (t) {
			var f;
			var h;
			var m;
			var g;
			var v;
			var b;
			var y;
			var w;
			var _;
			var k = e(this);
			var x = this;
			(_ = {
				initialize: function () {
					f = _.get.settings.apply(x, c);
					g = f.className;
					m = f.error;
					v = f.metadata;
					w = "." + f.namespace;
					y = "module-" + f.namespace;
					h = k.data(y) || _;
					b = _.get.animationEndEvent();
					p &&= _.invoke(u);
					if (p === false) {
						_.verbose("Converted arguments into settings object", f);
						if (f.interval) {
							_.delay(f.animate);
						} else {
							_.animate();
						}
						_.instantiate();
					}
				},
				instantiate: function () {
					_.verbose("Storing instance of module", _);
					h = _;
					k.data(y, h);
				},
				destroy: function () {
					_.verbose("Destroying previous module for", x);
					k.removeData(y);
				},
				refresh: function () {
					_.verbose("Refreshing display type on next animation");
					delete _.displayType;
				},
				forceRepaint: function () {
					_.verbose("Forcing element repaint");
					var e = k.parent();
					var t = k.next();
					if (t.length === 0) {
						k.detach().appendTo(e);
					} else {
						k.detach().insertBefore(t);
					}
				},
				repaint: function () {
					_.verbose("Repainting element");
					x.offsetWidth;
				},
				delay: function (e) {
					var n;
					var o = _.get.animationDirection();
					o ||= _.can.transition() ? _.get.direction() : "static";
					e = e !== i ? e : f.interval;
					n = f.reverse == "auto" && o == g.outward || f.reverse == 1 ? (a.length - t) * f.interval : t * f.interval;
					_.debug("Delaying animation by", n);
					setTimeout(_.animate, n);
				},
				animate: function (e) {
					f = e || f;
					if (!_.is.supported()) {
						_.error(m.support);
						return false;
					}
					_.debug("Preparing animation", f.animation);
					if (_.is.animating()) {
						if (f.queue) {
							if (!f.allowRepeats && _.has.direction() && _.is.occurring() && _.queuing !== true) {
								_.debug("Animation is currently occurring, preventing queueing same animation", f.animation);
							} else {
								_.queue(f.animation);
							}
							return false;
						}
						if (!f.allowRepeats && _.is.occurring()) {
							_.debug("Animation is already occurring, will not execute repeated animation", f.animation);
							return false;
						}
						_.debug("New animation started, completing previous early", f.animation);
						h.complete();
					}
					if (_.can.animate()) {
						_.set.animating(f.animation);
					} else {
						_.error(m.noAnimation, f.animation, x);
					}
				},
				reset: function () {
					_.debug("Resetting animation to beginning conditions");
					_.remove.animationCallbacks();
					_.restore.conditions();
					_.remove.animating();
				},
				queue: function (e) {
					_.debug("Queueing animation of", e);
					_.queuing = true;
					k.one(b + ".queue" + w, function () {
						_.queuing = false;
						_.repaint();
						_.animate.apply(this, f);
					});
				},
				complete: function (e) {
					_.debug("Animation complete", f.animation);
					_.remove.completeCallback();
					_.remove.failSafe();
					if (!_.is.looping()) {
						if (_.is.outward()) {
							_.verbose("Animation is outward, hiding element");
							_.restore.conditions();
							_.hide();
						} else if (_.is.inward()) {
							_.verbose("Animation is outward, showing element");
							_.restore.conditions();
							_.show();
						} else {
							_.verbose("Static animation completed");
							_.restore.conditions();
							f.onComplete.call(x);
						}
					}
				},
				force: {
					visible: function () {
						var e = k.attr("style");
						var t = _.get.userStyle();
						var n = _.get.displayType();
						var o = t + "display: " + n + " !important;";
						var a = k.css("display");
						var s = e === i || e === "";
						if (a !== n) {
							_.verbose("Overriding default display to show element", n);
							k.attr("style", o);
						} else if (s) {
							k.removeAttr("style");
						}
					},
					hidden: function () {
						var e = k.attr("style");
						var t = k.css("display");
						var n = e === i || e === "";
						if (t === "none" || _.is.hidden()) {
							if (n) {
								k.removeAttr("style");
							}
						} else {
							_.verbose("Overriding default display to hide element");
							k.css("display", "none");
						}
					}
				},
				has: {
					direction: function (t) {
						var n = false;
						if (typeof (t = t || f.animation) == "string") {
							t = t.split(" ");
							e.each(t, function (e, t) {
								if (t === g.inward || t === g.outward) {
									n = true;
								}
							});
						}
						return n;
					},
					inlineDisplay: function () {
						var t = k.attr("style") || "";
						return e.isArray(t.match(/display.*?;/, ""));
					}
				},
				set: {
					animating: function (e) {
						var t;
						_.remove.completeCallback();
						e = e || f.animation;
						t = _.get.animationClass(e);
						_.save.animation(t);
						_.force.visible();
						_.remove.hidden();
						_.remove.direction();
						_.start.animation(t);
					},
					duration: function (e, t) {
						if ((t = typeof (t = t || f.duration) == "number" ? t + "ms" : t) || t === 0) {
							_.verbose("Setting animation duration", t);
							k.css({
								"animation-duration": t
							});
						}
					},
					direction: function (e) {
						if ((e = e || _.get.direction()) == g.inward) {
							_.set.inward();
						} else {
							_.set.outward();
						}
					},
					looping: function () {
						_.debug("Transition set to loop");
						k.addClass(g.looping);
					},
					hidden: function () {
						k.addClass(g.transition).addClass(g.hidden);
					},
					inward: function () {
						_.debug("Setting direction to inward");
						k.removeClass(g.outward).addClass(g.inward);
					},
					outward: function () {
						_.debug("Setting direction to outward");
						k.removeClass(g.inward).addClass(g.outward);
					},
					visible: function () {
						k.addClass(g.transition).addClass(g.visible);
					}
				},
				start: {
					animation: function (e) {
						e = e || _.get.animationClass();
						_.debug("Starting tween", e);
						k.addClass(e).one(b + ".complete" + w, _.complete);
						if (f.useFailSafe) {
							_.add.failSafe();
						}
						_.set.duration(f.duration);
						f.onStart.call(x);
					}
				},
				save: {
					animation: function (e) {
						_.cache ||= {};
						_.cache.animation = e;
					},
					displayType: function (e) {
						if (e !== "none") {
							k.data(v.displayType, e);
						}
					},
					transitionExists: function (t, n) {
						e.fn.transition.exists[t] = n;
						_.verbose("Saving existence of transition", t, n);
					}
				},
				restore: {
					conditions: function () {
						var e = _.get.currentAnimation();
						if (e) {
							k.removeClass(e);
							_.verbose("Removing animation class", _.cache);
						}
						_.remove.duration();
					}
				},
				add: {
					failSafe: function () {
						var e = _.get.duration();
						_.timer = setTimeout(function () {
							k.triggerHandler(b);
						}, e + f.failSafeDelay);
						_.verbose("Adding fail safe timer", _.timer);
					}
				},
				remove: {
					animating: function () {
						k.removeClass(g.animating);
					},
					animationCallbacks: function () {
						_.remove.queueCallback();
						_.remove.completeCallback();
					},
					queueCallback: function () {
						k.off(".queue" + w);
					},
					completeCallback: function () {
						k.off(".complete" + w);
					},
					display: function () {
						k.css("display", "");
					},
					direction: function () {
						k.removeClass(g.inward).removeClass(g.outward);
					},
					duration: function () {
						k.css("animation-duration", "");
					},
					failSafe: function () {
						_.verbose("Removing fail safe timer", _.timer);
						if (_.timer) {
							clearTimeout(_.timer);
						}
					},
					hidden: function () {
						k.removeClass(g.hidden);
					},
					visible: function () {
						k.removeClass(g.visible);
					},
					looping: function () {
						_.debug("Transitions are no longer looping");
						if (_.is.looping()) {
							_.reset();
							k.removeClass(g.looping);
						}
					},
					transition: function () {
						k.removeClass(g.visible).removeClass(g.hidden);
					}
				},
				get: {
					settings: function (t, n, i) {
						if (typeof t == "object") {
							return e.extend(true, {}, e.fn.transition.settings, t);
						} else if (typeof i == "function") {
							return e.extend({}, e.fn.transition.settings, {
								animation: t,
								onComplete: i,
								duration: n
							});
						} else if (typeof n == "string" || typeof n == "number") {
							return e.extend({}, e.fn.transition.settings, {
								animation: t,
								duration: n
							});
						} else if (typeof n == "object") {
							return e.extend({}, e.fn.transition.settings, n, {
								animation: t
							});
						} else if (typeof n == "function") {
							return e.extend({}, e.fn.transition.settings, {
								animation: t,
								onComplete: n
							});
						} else {
							return e.extend({}, e.fn.transition.settings, {
								animation: t
							});
						}
					},
					animationClass: function (e) {
						var t = e || f.animation;
						var n = _.can.transition() && !_.has.direction() ? _.get.direction() + " " : "";
						return g.animating + " " + g.transition + " " + n + t;
					},
					currentAnimation: function () {
						return !!_.cache && _.cache.animation !== i && _.cache.animation;
					},
					currentDirection: function () {
						if (_.is.inward()) {
							return g.inward;
						} else {
							return g.outward;
						}
					},
					direction: function () {
						if (_.is.hidden() || !_.is.visible()) {
							return g.inward;
						} else {
							return g.outward;
						}
					},
					animationDirection: function (t) {
						var n;
						if (typeof (t = t || f.animation) == "string") {
							t = t.split(" ");
							e.each(t, function (e, t) {
								if (t === g.inward) {
									n = g.inward;
								} else if (t === g.outward) {
									n = g.outward;
								}
							});
						}
						return n || false;
					},
					duration: function (e) {
						if ((e = e || f.duration) === false) {
							e = k.css("animation-duration") || 0;
						}
						if (typeof e == "string") {
							if (e.indexOf("ms") > -1) {
								return parseFloat(e);
							} else {
								return parseFloat(e) * 1000;
							}
						} else {
							return e;
						}
					},
					displayType: function (e) {
						e = e === i || e;
						if (f.displayType) {
							return f.displayType;
						} else {
							if (e && k.data(v.displayType) === i) {
								_.can.transition(true);
							}
							return k.data(v.displayType);
						}
					},
					userStyle: function (e) {
						return (e = e || k.attr("style") || "").replace(/display.*?;/, "");
					},
					transitionExists: function (t) {
						return e.fn.transition.exists[t];
					},
					animationStartEvent: function () {
						var e;
						var t = n.createElement("div");
						var o = {
							animation: "animationstart",
							OAnimation: "oAnimationStart",
							MozAnimation: "mozAnimationStart",
							WebkitAnimation: "webkitAnimationStart"
						};
						for (e in o) {
							if (t.style[e] !== i) {
								return o[e];
							}
						}
						return false;
					},
					animationEndEvent: function () {
						var e;
						var t = n.createElement("div");
						var o = {
							animation: "animationend",
							OAnimation: "oAnimationEnd",
							MozAnimation: "mozAnimationEnd",
							WebkitAnimation: "webkitAnimationEnd"
						};
						for (e in o) {
							if (t.style[e] !== i) {
								return o[e];
							}
						}
						return false;
					}
				},
				can: {
					transition: function (t) {
						var n;
						var o;
						var a;
						var s;
						var r;
						var l;
						var c = f.animation;
						var u = _.get.transitionExists(c);
						var d = _.get.displayType(false);
						if (u === i || t) {
							_.verbose("Determining whether animation exists");
							n = k.attr("class");
							o = k.prop("tagName");
							a = e("<" + o + " />").addClass(n).insertAfter(k);
							s = a.addClass(c).removeClass(g.inward).removeClass(g.outward).addClass(g.animating).addClass(g.transition).css("animationName");
							r = a.addClass(g.inward).css("animationName");
							if (!d) {
								d = a.attr("class", n).removeAttr("style").removeClass(g.hidden).removeClass(g.visible).show().css("display");
								_.verbose("Determining final display state", d);
								_.save.displayType(d);
							}
							a.remove();
							if (s != r) {
								_.debug("Direction exists for animation", c);
								l = true;
							} else {
								if (s == "none" || !s) {
									_.debug("No animation defined in css", c);
									return;
								}
								_.debug("Static animation found", c, d);
								l = false;
							}
							_.save.transitionExists(c, l);
						}
						if (u !== i) {
							return u;
						} else {
							return l;
						}
					},
					animate: function () {
						return _.can.transition() !== i;
					}
				},
				is: {
					animating: function () {
						return k.hasClass(g.animating);
					},
					inward: function () {
						return k.hasClass(g.inward);
					},
					outward: function () {
						return k.hasClass(g.outward);
					},
					looping: function () {
						return k.hasClass(g.looping);
					},
					occurring: function (e) {
						e = e || f.animation;
						e = "." + e.replace(" ", ".");
						return k.filter(e).length > 0;
					},
					visible: function () {
						return k.is(":visible");
					},
					hidden: function () {
						return k.css("visibility") === "hidden";
					},
					supported: function () {
						return b !== false;
					}
				},
				hide: function () {
					_.verbose("Hiding element");
					if (_.is.animating()) {
						_.reset();
					}
					x.blur();
					_.remove.display();
					_.remove.visible();
					_.set.hidden();
					_.force.hidden();
					f.onHide.call(x);
					f.onComplete.call(x);
				},
				show: function (e) {
					_.verbose("Showing element", e);
					_.remove.hidden();
					_.set.visible();
					_.force.visible();
					f.onShow.call(x);
					f.onComplete.call(x);
				},
				toggle: function () {
					if (_.is.visible()) {
						_.hide();
					} else {
						_.show();
					}
				},
				stop: function () {
					_.debug("Stopping current animation");
					k.triggerHandler(b);
				},
				stopAll: function () {
					_.debug("Stopping all animation");
					_.remove.queueCallback();
					k.triggerHandler(b);
				},
				clear: {
					queue: function () {
						_.debug("Clearing animation queue");
						_.remove.queueCallback();
					}
				},
				enable: function () {
					_.verbose("Starting animation");
					k.removeClass(g.disabled);
				},
				disable: function () {
					_.debug("Stopping animation");
					k.addClass(g.disabled);
				},
				setting: function (t, n) {
					_.debug("Changing setting", t, n);
					if (e.isPlainObject(t)) {
						e.extend(true, f, t);
					} else {
						if (n === i) {
							return f[t];
						}
						if (e.isPlainObject(f[t])) {
							e.extend(true, f[t], n);
						} else {
							f[t] = n;
						}
					}
				},
				internal: function (t, n) {
					if (e.isPlainObject(t)) {
						e.extend(true, _, t);
					} else {
						if (n === i) {
							return _[t];
						}
						_[t] = n;
					}
				},
				debug: function () {
					if (!f.silent && f.debug) {
						if (f.performance) {
							_.performance.log(arguments);
						} else {
							_.debug = Function.prototype.bind.call(console.info, console, f.name + ":");
							_.debug.apply(console, arguments);
						}
					}
				},
				verbose: function () {
					if (!f.silent && f.verbose && f.debug) {
						if (f.performance) {
							_.performance.log(arguments);
						} else {
							_.verbose = Function.prototype.bind.call(console.info, console, f.name + ":");
							_.verbose.apply(console, arguments);
						}
					}
				},
				error: function () {
					if (!f.silent) {
						_.error = Function.prototype.bind.call(console.error, console, f.name + ":");
						_.error.apply(console, arguments);
					}
				},
				performance: {
					log: function (e) {
						var t;
						var n;
						var i;
						if (f.performance) {
							t = new Date().getTime();
							i = r || t;
							n = t - i;
							r = t;
							l.push({
								Name: e[0],
								Arguments: [].slice.call(e, 1) || "",
								Element: x,
								"Execution Time": n
							});
						}
						clearTimeout(_.performance.timer);
						_.performance.timer = setTimeout(_.performance.display, 500);
					},
					display: function () {
						var t = f.name + ":";
						var n = 0;
						r = false;
						clearTimeout(_.performance.timer);
						e.each(l, function (e, t) {
							n += t["Execution Time"];
						});
						t += " " + n + "ms";
						if (s) {
							t += " '" + s + "'";
						}
						if (a.length > 1) {
							t += " (" + a.length + ")";
						}
						if ((console.group !== i || console.table !== i) && l.length > 0) {
							console.groupCollapsed(t);
							if (console.table) {
								console.table(l);
							} else {
								e.each(l, function (e, t) {
									console.log(t.Name + ": " + t["Execution Time"] + "ms");
								});
							}
							console.groupEnd();
						}
						l = [];
					}
				},
				invoke: function (t, n, a) {
					var s;
					var r;
					var l;
					var c = h;
					n = n || d;
					a = x || a;
					if (typeof t == "string" && c !== i) {
						t = t.split(/[\. ]/);
						s = t.length - 1;
						e.each(t, function (n, o) {
							var a = n != s ? o + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t;
							if (e.isPlainObject(c[a]) && n != s) {
								c = c[a];
							} else {
								if (c[a] !== i) {
									r = c[a];
									return false;
								}
								if (!e.isPlainObject(c[o]) || n == s) {
									return c[o] !== i && (r = c[o], false);
								}
								c = c[o];
							}
						});
					}
					if (e.isFunction(r)) {
						l = r.apply(a, n);
					} else if (r !== i) {
						l = r;
					}
					if (e.isArray(o)) {
						o.push(l);
					} else if (o !== i) {
						o = [o, l];
					} else if (l !== i) {
						o = l;
					}
					return r !== i && r;
				}
			}).initialize();
		});
		if (o !== i) {
			return o;
		} else {
			return this;
		}
	};
	e.fn.transition.exists = {};
	e.fn.transition.settings = {
		name: "Transition",
		silent: false,
		debug: false,
		verbose: false,
		performance: true,
		namespace: "transition",
		interval: 0,
		reverse: "auto",
		onStart: function () {},
		onComplete: function () {},
		onShow: function () {},
		onHide: function () {},
		useFailSafe: true,
		failSafeDelay: 100,
		allowRepeats: false,
		displayType: false,
		animation: "fade",
		duration: false,
		queue: true,
		metadata: {
			displayType: "display"
		},
		className: {
			animating: "animating",
			disabled: "disabled",
			hidden: "hidden",
			inward: "in",
			loading: "loading",
			looping: "looping",
			outward: "out",
			transition: "transition",
			visible: "visible"
		},
		error: {
			noAnimation: "Element is no longer attached to DOM. Unable to animate.  Use silent setting to surpress this warning in production.",
			repeated: "That animation is already occurring, cancelling repeated animation",
			method: "The method you called is not defined",
			support: "This browser does not support CSS animations"
		}
	};
})(jQuery, window, document);
(function (e, t, n, i) {
	"use strict";

	var t = t !== undefined && t.Math == Math ? t : typeof self != "undefined" && self.Math == Math ? self : Function("return this")();
	e.api = e.fn.api = function (n) {
		var o;
		var a = e(e.isFunction(this) ? t : this);
		var s = a.selector || "";
		var r = new Date().getTime();
		var l = [];
		var c = arguments[0];
		var u = typeof c == "string";
		var d = [].slice.call(arguments, 1);
		a.each(function () {
			var a;
			var p;
			var f;
			var h;
			var m;
			var g;
			var v = e.isPlainObject(n) ? e.extend(true, {}, e.fn.api.settings, n) : e.extend({}, e.fn.api.settings);
			var b = v.namespace;
			var y = v.metadata;
			var w = v.selector;
			var _ = v.error;
			var k = v.className;
			var x = "." + b;
			var C = "module-" + b;
			var S = e(this);
			var A = S.closest(w.form);
			var T = v.stateContext ? e(v.stateContext) : S;
			var P = this;
			var j = T[0];
			var E = S.data(C);
			g = {
				initialize: function () {
					if (!u) {
						g.bind.events();
					}
					g.instantiate();
				},
				instantiate: function () {
					g.verbose("Storing instance of module", g);
					E = g;
					S.data(C, E);
				},
				destroy: function () {
					g.verbose("Destroying previous module for", P);
					S.removeData(C).off(x);
				},
				bind: {
					events: function () {
						var e = g.get.event();
						if (e) {
							g.verbose("Attaching API events to element", e);
							S.on(e + x, g.event.trigger);
						} else if (v.on == "now") {
							g.debug("Querying API endpoint immediately");
							g.query();
						}
					}
				},
				decode: {
					json: function (e) {
						if (e !== i && typeof e == "string") {
							try {
								e = JSON.parse(e);
							} catch (e) {}
						}
						return e;
					}
				},
				read: {
					cachedResponse: function (e) {
						var n;
						if (t.Storage === i) {
							g.error(_.noStorage);
							return;
						} else {
							n = sessionStorage.getItem(e);
							g.debug("Using cached response", e, n);
							return n = g.decode.json(n);
						}
					}
				},
				write: {
					cachedResponse: function (n, o) {
						if (o && o === "") {
							g.debug("Response empty, not caching", o);
							return;
						} else if (t.Storage === i) {
							g.error(_.noStorage);
							return;
						} else {
							if (e.isPlainObject(o)) {
								o = JSON.stringify(o);
							}
							sessionStorage.setItem(n, o);
							g.verbose("Storing cached response for url", n, o);
							return;
						}
					}
				},
				query: function () {
					if (!g.is.disabled()) {
						if (g.is.loading()) {
							if (!v.interruptRequests) {
								g.debug("Cancelling request, previous request is still pending");
								return;
							}
							g.debug("Interrupting previous request");
							g.abort();
						}
						if (v.defaultData) {
							e.extend(true, v.urlData, g.get.defaultData());
						}
						if (v.serializeForm) {
							v.data = g.add.formData(v.data);
						}
						if ((p = g.get.settings()) === false) {
							g.cancelled = true;
							g.error(_.beforeSend);
							return;
						} else {
							g.cancelled = false;
							if ((f = g.get.templatedURL()) || g.is.mocked()) {
								if ((f = g.add.urlData(f)) || g.is.mocked()) {
									p.url = v.base + f;
									a = e.extend(true, {}, v, {
										type: v.method || v.type,
										data: h,
										url: v.base + f,
										beforeSend: v.beforeXHR,
										success: function () {},
										failure: function () {},
										complete: function () {}
									});
									g.debug("Querying URL", a.url);
									g.verbose("Using AJAX settings", a);
									if (v.cache === "local" && g.read.cachedResponse(f)) {
										g.debug("Response returned from local cache");
										g.request = g.create.request();
										g.request.resolveWith(j, [g.read.cachedResponse(f)]);
										return;
									} else {
										if (v.throttle) {
											if (v.throttleFirstRequest || g.timer) {
												g.debug("Throttling request", v.throttle);
												clearTimeout(g.timer);
												g.timer = setTimeout(function () {
													if (g.timer) {
														delete g.timer;
													}
													g.debug("Sending throttled request", h, a.method);
													g.send.request();
												}, v.throttle);
											} else {
												g.debug("Sending request", h, a.method);
												g.send.request();
												g.timer = setTimeout(function () {}, v.throttle);
											}
										} else {
											g.debug("Sending request", h, a.method);
											g.send.request();
										}
										return;
									}
								} else {
									return undefined;
								}
							} else {
								g.error(_.missingURL);
								return;
							}
						}
					}
					g.debug("Element is disabled API request aborted");
				},
				should: {
					removeError: function () {
						return v.hideError === true || v.hideError === "auto" && !g.is.form();
					}
				},
				is: {
					disabled: function () {
						return S.filter(w.disabled).length > 0;
					},
					expectingJSON: function () {
						return v.dataType === "json" || v.dataType === "jsonp";
					},
					form: function () {
						return S.is("form") || T.is("form");
					},
					mocked: function () {
						return v.mockResponse || v.mockResponseAsync || v.response || v.responseAsync;
					},
					input: function () {
						return S.is("input");
					},
					loading: function () {
						return !!g.request && g.request.state() == "pending";
					},
					abortedRequest: function (e) {
						if (e && e.readyState !== i && e.readyState === 0) {
							g.verbose("XHR request determined to be aborted");
							return true;
						} else {
							g.verbose("XHR request was not aborted");
							return false;
						}
					},
					validResponse: function (t) {
						if (g.is.expectingJSON() && e.isFunction(v.successTest)) {
							g.debug("Checking JSON returned success", v.successTest, t);
							if (v.successTest(t)) {
								g.debug("Response passed success test", t);
								return true;
							} else {
								g.debug("Response failed success test", t);
								return false;
							}
						} else {
							g.verbose("Response is not JSON, skipping validation", v.successTest, t);
							return true;
						}
					}
				},
				was: {
					cancelled: function () {
						return g.cancelled || false;
					},
					succesful: function () {
						return g.request && g.request.state() == "resolved";
					},
					failure: function () {
						return g.request && g.request.state() == "rejected";
					},
					complete: function () {
						return g.request && (g.request.state() == "resolved" || g.request.state() == "rejected");
					}
				},
				add: {
					urlData: function (t, n) {
						var o;
						var a;
						if (t) {
							o = t.match(v.regExp.required);
							a = t.match(v.regExp.optional);
							n = n || v.urlData;
							if (o) {
								g.debug("Looking for required URL variables", o);
								e.each(o, function (o, a) {
									var s = a.indexOf("$") !== -1 ? a.substr(2, a.length - 3) : a.substr(1, a.length - 2);
									var r = e.isPlainObject(n) && n[s] !== i ? n[s] : S.data(s) !== i ? S.data(s) : T.data(s) !== i ? T.data(s) : n[s];
									if (r === i) {
										g.error(_.requiredParameter, s, t);
										t = false;
										return false;
									} else {
										g.verbose("Found required variable", s, r);
										r = v.encodeParameters ? g.get.urlEncodedValue(r) : r;
										t = t.replace(a, r);
										return;
									}
								});
							}
							if (a) {
								g.debug("Looking for optional URL variables", o);
								e.each(a, function (o, a) {
									var s = a.indexOf("$") !== -1 ? a.substr(3, a.length - 4) : a.substr(2, a.length - 3);
									var r = e.isPlainObject(n) && n[s] !== i ? n[s] : S.data(s) !== i ? S.data(s) : T.data(s) !== i ? T.data(s) : n[s];
									if (r !== i) {
										g.verbose("Optional variable Found", s, r);
										t = t.replace(a, r);
									} else {
										g.verbose("Optional variable not found", s);
										t = t.indexOf("/" + a) !== -1 ? t.replace("/" + a, "") : t.replace(a, "");
									}
								});
							}
						}
						return t;
					},
					formData: function (t) {
						var n = e.fn.serializeObject !== i;
						var o = n ? A.serializeObject() : A.serialize();
						t = t || v.data;
						if (e.isPlainObject(t)) {
							if (n) {
								g.debug("Extending existing data with form data", t, o);
								t = e.extend(true, {}, t, o);
							} else {
								g.error(_.missingSerialize);
								g.debug("Cant extend data. Replacing data with form data", t, o);
								t = o;
							}
						} else {
							g.debug("Adding form data", o);
							t = o;
						}
						return t;
					}
				},
				send: {
					request: function () {
						g.set.loading();
						g.request = g.create.request();
						if (g.is.mocked()) {
							g.mockedXHR = g.create.mockedXHR();
						} else {
							g.xhr = g.create.xhr();
						}
						v.onRequest.call(j, g.request, g.xhr);
					}
				},
				event: {
					trigger: function (e) {
						g.query();
						if (e.type == "submit" || e.type == "click") {
							e.preventDefault();
						}
					},
					xhr: {
						always: function () {},
						done: function (t, n, i) {
							var o = this;
							var a = new Date().getTime() - m;
							var s = v.loadingDuration - a;
							var r = !!e.isFunction(v.onResponse) && (g.is.expectingJSON() ? v.onResponse.call(o, e.extend(true, {}, t)) : v.onResponse.call(o, t));
							s = s > 0 ? s : 0;
							if (r) {
								g.debug("Modified API response in onResponse callback", v.onResponse, r, t);
								t = r;
							}
							if (s > 0) {
								g.debug("Response completed early delaying state change by", s);
							}
							setTimeout(function () {
								if (g.is.validResponse(t)) {
									g.request.resolveWith(o, [t, i]);
								} else {
									g.request.rejectWith(o, [i, "invalid"]);
								}
							}, s);
						},
						fail: function (e, t, n) {
							var i = this;
							var o = new Date().getTime() - m;
							var a = v.loadingDuration - o;
							if ((a = a > 0 ? a : 0) > 0) {
								g.debug("Response completed early delaying state change by", a);
							}
							setTimeout(function () {
								if (g.is.abortedRequest(e)) {
									g.request.rejectWith(i, [e, "aborted", n]);
								} else {
									g.request.rejectWith(i, [e, "error", t, n]);
								}
							}, a);
						}
					},
					request: {
						done: function (e, t) {
							g.debug("Successful API Response", e);
							if (v.cache === "local" && f) {
								g.write.cachedResponse(f, e);
								g.debug("Saving server response locally", g.cache);
							}
							v.onSuccess.call(j, e, S, t);
						},
						complete: function (e, t) {
							var n;
							var i;
							if (g.was.succesful()) {
								i = e;
								n = t;
							} else {
								n = e;
								i = g.get.responseFromXHR(n);
							}
							g.remove.loading();
							v.onComplete.call(j, i, S, n);
						},
						fail: function (e, t, n) {
							var o = g.get.responseFromXHR(e);
							var s = g.get.errorFromRequest(o, t, n);
							if (t == "aborted") {
								g.debug("XHR Aborted (Most likely caused by page navigation or CORS Policy)", t, n);
								v.onAbort.call(j, t, S, e);
								return true;
							} else {
								if (t == "invalid") {
									g.debug("JSON did not pass success test. A server-side error has most likely occurred", o);
								} else if (t == "error" && e !== i) {
									g.debug("XHR produced a server error", t, n);
									if (e.status != 200 && n !== i && n !== "") {
										g.error(_.statusMessage + n, a.url);
									}
									v.onError.call(j, s, S, e);
								}
								if (v.errorDuration && t !== "aborted") {
									g.debug("Adding error state");
									g.set.error();
									if (g.should.removeError()) {
										setTimeout(g.remove.error, v.errorDuration);
									}
								}
								g.debug("API Request failed", s, e);
								v.onFailure.call(j, o, S, e);
								return;
							}
						}
					}
				},
				create: {
					request: function () {
						return e.Deferred().always(g.event.request.complete).done(g.event.request.done).fail(g.event.request.fail);
					},
					mockedXHR: function () {
						var t;
						var n;
						var i;
						var o = v.mockResponse || v.response;
						var a = v.mockResponseAsync || v.responseAsync;
						i = e.Deferred().always(g.event.xhr.complete).done(g.event.xhr.done).fail(g.event.xhr.fail);
						if (o) {
							if (e.isFunction(o)) {
								g.debug("Using specified synchronous callback", o);
								n = o.call(j, p);
							} else {
								g.debug("Using settings specified response", o);
								n = o;
							}
							i.resolveWith(j, [n, false, {
								responseText: n
							}]);
						} else if (e.isFunction(a)) {
							t = function (e) {
								g.debug("Async callback returned response", e);
								if (e) {
									i.resolveWith(j, [e, false, {
										responseText: e
									}]);
								} else {
									i.rejectWith(j, [{
										responseText: e
									}, false, false]);
								}
							};
							g.debug("Using specified async response callback", a);
							a.call(j, p, t);
						}
						return i;
					},
					xhr: function () {
						var t;
						t = e.ajax(a).always(g.event.xhr.always).done(g.event.xhr.done).fail(g.event.xhr.fail);
						g.verbose("Created server request", t, a);
						return t;
					}
				},
				set: {
					error: function () {
						g.verbose("Adding error state to element", T);
						T.addClass(k.error);
					},
					loading: function () {
						g.verbose("Adding loading state to element", T);
						T.addClass(k.loading);
						m = new Date().getTime();
					}
				},
				remove: {
					error: function () {
						g.verbose("Removing error state from element", T);
						T.removeClass(k.error);
					},
					loading: function () {
						g.verbose("Removing loading state from element", T);
						T.removeClass(k.loading);
					}
				},
				get: {
					responseFromXHR: function (t) {
						return !!e.isPlainObject(t) && (g.is.expectingJSON() ? g.decode.json(t.responseText) : t.responseText);
					},
					errorFromRequest: function (t, n, o) {
						if (e.isPlainObject(t) && t.error !== i) {
							return t.error;
						} else if (v.error[n] !== i) {
							return v.error[n];
						} else {
							return o;
						}
					},
					request: function () {
						return g.request || false;
					},
					xhr: function () {
						return g.xhr || false;
					},
					settings: function () {
						var t;
						if (t = v.beforeSend.call(j, v)) {
							if (t.success !== i) {
								g.debug("Legacy success callback detected", t);
								g.error(_.legacyParameters, t.success);
								t.onSuccess = t.success;
							}
							if (t.failure !== i) {
								g.debug("Legacy failure callback detected", t);
								g.error(_.legacyParameters, t.failure);
								t.onFailure = t.failure;
							}
							if (t.complete !== i) {
								g.debug("Legacy complete callback detected", t);
								g.error(_.legacyParameters, t.complete);
								t.onComplete = t.complete;
							}
						}
						if (t === i) {
							g.error(_.noReturnedValue);
						}
						if (t === false) {
							return t;
						} else if (t !== i) {
							return e.extend(true, {}, t);
						} else {
							return e.extend(true, {}, v);
						}
					},
					urlEncodedValue: function (e) {
						var n = t.decodeURIComponent(e);
						var i = t.encodeURIComponent(e);
						if (n !== e) {
							g.debug("URL value is already encoded, avoiding double encoding", e);
							return e;
						} else {
							g.verbose("Encoding value using encodeURIComponent", e, i);
							return i;
						}
					},
					defaultData: function () {
						var t = {};
						if (!e.isWindow(P)) {
							if (g.is.input()) {
								t.value = S.val();
							} else if (!g.is.form()) {
								t.text = S.text();
							}
						}
						return t;
					},
					event: function () {
						if (e.isWindow(P) || v.on == "now") {
							g.debug("API called without element, no events attached");
							return false;
						} else if (v.on == "auto") {
							if (S.is("input")) {
								if (P.oninput !== i) {
									return "input";
								} else if (P.onpropertychange !== i) {
									return "propertychange";
								} else {
									return "keyup";
								}
							} else if (S.is("form")) {
								return "submit";
							} else {
								return "click";
							}
						} else {
							return v.on;
						}
					},
					templatedURL: function (e) {
						e = e || S.data(y.action) || v.action || false;
						if (f = S.data(y.url) || v.url || false) {
							g.debug("Using specified url", f);
							return f;
						}
						if (e) {
							g.debug("Looking up url for action", e, v.api);
							if (v.api[e] === i && !g.is.mocked()) {
								g.error(_.missingAction, v.action, v.api);
								return;
							}
							f = v.api[e];
						} else if (g.is.form()) {
							f = S.attr("action") || T.attr("action") || false;
							g.debug("No url or action specified, defaulting to form action", f);
						}
						return f;
					}
				},
				abort: function () {
					var e = g.get.xhr();
					if (e && e.state() !== "resolved") {
						g.debug("Cancelling API request");
						e.abort();
					}
				},
				reset: function () {
					g.remove.error();
					g.remove.loading();
				},
				setting: function (t, n) {
					g.debug("Changing setting", t, n);
					if (e.isPlainObject(t)) {
						e.extend(true, v, t);
					} else {
						if (n === i) {
							return v[t];
						}
						if (e.isPlainObject(v[t])) {
							e.extend(true, v[t], n);
						} else {
							v[t] = n;
						}
					}
				},
				internal: function (t, n) {
					if (e.isPlainObject(t)) {
						e.extend(true, g, t);
					} else {
						if (n === i) {
							return g[t];
						}
						g[t] = n;
					}
				},
				debug: function () {
					if (!v.silent && v.debug) {
						if (v.performance) {
							g.performance.log(arguments);
						} else {
							g.debug = Function.prototype.bind.call(console.info, console, v.name + ":");
							g.debug.apply(console, arguments);
						}
					}
				},
				verbose: function () {
					if (!v.silent && v.verbose && v.debug) {
						if (v.performance) {
							g.performance.log(arguments);
						} else {
							g.verbose = Function.prototype.bind.call(console.info, console, v.name + ":");
							g.verbose.apply(console, arguments);
						}
					}
				},
				error: function () {
					if (!v.silent) {
						g.error = Function.prototype.bind.call(console.error, console, v.name + ":");
						g.error.apply(console, arguments);
					}
				},
				performance: {
					log: function (e) {
						var t;
						var n;
						var i;
						if (v.performance) {
							t = new Date().getTime();
							i = r || t;
							n = t - i;
							r = t;
							l.push({
								Name: e[0],
								Arguments: [].slice.call(e, 1) || "",
								"Execution Time": n
							});
						}
						clearTimeout(g.performance.timer);
						g.performance.timer = setTimeout(g.performance.display, 500);
					},
					display: function () {
						var t = v.name + ":";
						var n = 0;
						r = false;
						clearTimeout(g.performance.timer);
						e.each(l, function (e, t) {
							n += t["Execution Time"];
						});
						t += " " + n + "ms";
						if (s) {
							t += " '" + s + "'";
						}
						if ((console.group !== i || console.table !== i) && l.length > 0) {
							console.groupCollapsed(t);
							if (console.table) {
								console.table(l);
							} else {
								e.each(l, function (e, t) {
									console.log(t.Name + ": " + t["Execution Time"] + "ms");
								});
							}
							console.groupEnd();
						}
						l = [];
					}
				},
				invoke: function (t, n, a) {
					var s;
					var r;
					var l;
					var c = E;
					n = n || d;
					a = P || a;
					if (typeof t == "string" && c !== i) {
						t = t.split(/[\. ]/);
						s = t.length - 1;
						e.each(t, function (n, o) {
							var a = n != s ? o + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t;
							if (e.isPlainObject(c[a]) && n != s) {
								c = c[a];
							} else {
								if (c[a] !== i) {
									r = c[a];
									return false;
								}
								if (!e.isPlainObject(c[o]) || n == s) {
									if (c[o] !== i) {
										r = c[o];
										return false;
									} else {
										g.error(_.method, t);
										return false;
									}
								}
								c = c[o];
							}
						});
					}
					if (e.isFunction(r)) {
						l = r.apply(a, n);
					} else if (r !== i) {
						l = r;
					}
					if (e.isArray(o)) {
						o.push(l);
					} else if (o !== i) {
						o = [o, l];
					} else if (l !== i) {
						o = l;
					}
					return r;
				}
			};
			if (u) {
				if (E === i) {
					g.initialize();
				}
				g.invoke(c);
			} else {
				if (E !== i) {
					E.invoke("destroy");
				}
				g.initialize();
			}
		});
		if (o !== i) {
			return o;
		} else {
			return this;
		}
	};
	e.api.settings = {
		name: "API",
		namespace: "api",
		debug: false,
		verbose: false,
		performance: true,
		api: {},
		cache: true,
		interruptRequests: true,
		on: "auto",
		stateContext: false,
		loadingDuration: 0,
		hideError: "auto",
		errorDuration: 2000,
		encodeParameters: true,
		action: false,
		url: false,
		base: "",
		urlData: {},
		defaultData: true,
		serializeForm: false,
		throttle: 0,
		throttleFirstRequest: true,
		method: "get",
		data: {},
		dataType: "json",
		mockResponse: false,
		mockResponseAsync: false,
		response: false,
		responseAsync: false,
		beforeSend: function (e) {
			return e;
		},
		beforeXHR: function (e) {},
		onRequest: function (e, t) {},
		onResponse: false,
		onSuccess: function (e, t) {},
		onComplete: function (e, t) {},
		onFailure: function (e, t) {},
		onError: function (e, t) {},
		onAbort: function (e, t) {},
		successTest: false,
		error: {
			beforeSend: "The before send function has aborted the request",
			error: "There was an error with your request",
			exitConditions: "API Request Aborted. Exit conditions met",
			JSONParse: "JSON could not be parsed during error handling",
			legacyParameters: "You are using legacy API success callback names",
			method: "The method you called is not defined",
			missingAction: "API action used but no url was defined",
			missingSerialize: "jquery-serialize-object is required to add form data to an existing data object",
			missingURL: "No URL specified for api event",
			noReturnedValue: "The beforeSend callback must return a settings object, beforeSend ignored.",
			noStorage: "Caching responses locally requires session storage",
			parseError: "There was an error parsing your request",
			requiredParameter: "Missing a required URL parameter: ",
			statusMessage: "Server gave an error: ",
			timeout: "Your request timed out"
		},
		regExp: {
			required: /\{\$*[A-z0-9]+\}/g,
			optional: /\{\/\$*[A-z0-9]+\}/g
		},
		className: {
			loading: "loading",
			error: "error"
		},
		selector: {
			disabled: ".disabled",
			form: "form"
		},
		metadata: {
			action: "action",
			url: "url"
		}
	};
})(jQuery, window, document);
(function (e, t, n, i) {
	"use strict";

	t = t !== undefined && t.Math == Math ? t : typeof self != "undefined" && self.Math == Math ? self : Function("return this")();
	e.fn.state = function (t) {
		var o;
		var a = e(this);
		var s = a.selector || "";
		n.documentElement;
		var r = new Date().getTime();
		var l = [];
		var c = arguments[0];
		var u = typeof c == "string";
		var d = [].slice.call(arguments, 1);
		a.each(function () {
			var n;
			var p = e.isPlainObject(t) ? e.extend(true, {}, e.fn.state.settings, t) : e.extend({}, e.fn.state.settings);
			var f = p.error;
			var h = p.metadata;
			var m = p.className;
			var g = p.namespace;
			var v = p.states;
			var b = p.text;
			var y = "." + g;
			var w = g + "-module";
			var _ = e(this);
			var k = this;
			var x = _.data(w);
			n = {
				initialize: function () {
					n.verbose("Initializing module");
					if (p.automatic) {
						n.add.defaults();
					}
					if (p.context && s !== "") {
						e(p.context).on(s, "mouseenter" + y, n.change.text).on(s, "mouseleave" + y, n.reset.text).on(s, "click" + y, n.toggle.state);
					} else {
						_.on("mouseenter" + y, n.change.text).on("mouseleave" + y, n.reset.text).on("click" + y, n.toggle.state);
					}
					n.instantiate();
				},
				instantiate: function () {
					n.verbose("Storing instance of module", n);
					x = n;
					_.data(w, n);
				},
				destroy: function () {
					n.verbose("Destroying previous module", x);
					_.off(y).removeData(w);
				},
				refresh: function () {
					n.verbose("Refreshing selector cache");
					_ = e(k);
				},
				add: {
					defaults: function () {
						var o = t && e.isPlainObject(t.states) ? t.states : {};
						e.each(p.defaults, function (t, a) {
							if (n.is[t] !== i && n.is[t]()) {
								n.verbose("Adding default states", t, k);
								e.extend(p.states, a, o);
							}
						});
					}
				},
				is: {
					active: function () {
						return _.hasClass(m.active);
					},
					loading: function () {
						return _.hasClass(m.loading);
					},
					inactive: function () {
						return !_.hasClass(m.active);
					},
					state: function (e) {
						return m[e] !== i && _.hasClass(m[e]);
					},
					enabled: function () {
						return !_.is(p.filter.active);
					},
					disabled: function () {
						return _.is(p.filter.active);
					},
					textEnabled: function () {
						return !_.is(p.filter.text);
					},
					button: function () {
						return _.is(".button:not(a, .submit)");
					},
					input: function () {
						return _.is("input");
					},
					progress: function () {
						return _.is(".ui.progress");
					}
				},
				allow: function (e) {
					n.debug("Now allowing state", e);
					v[e] = true;
				},
				disallow: function (e) {
					n.debug("No longer allowing", e);
					v[e] = false;
				},
				allows: function (e) {
					return v[e] || false;
				},
				enable: function () {
					_.removeClass(m.disabled);
				},
				disable: function () {
					_.addClass(m.disabled);
				},
				setState: function (e) {
					if (n.allows(e)) {
						_.addClass(m[e]);
					}
				},
				removeState: function (e) {
					if (n.allows(e)) {
						_.removeClass(m[e]);
					}
				},
				toggle: {
					state: function () {
						var t;
						if (n.allows("active") && n.is.enabled()) {
							n.refresh();
							if (e.fn.api !== i) {
								t = _.api("get request");
								if (_.api("was cancelled")) {
									n.debug("API Request cancelled by beforesend");
									p.activateTest = function () {
										return false;
									};
									p.deactivateTest = function () {
										return false;
									};
								} else if (t) {
									n.listenTo(t);
									return;
								}
							}
							n.change.state();
						}
					}
				},
				listenTo: function (t) {
					n.debug("API request detected, waiting for state signal", t);
					if (t) {
						if (b.loading) {
							n.update.text(b.loading);
						}
						e.when(t).then(function () {
							if (t.state() == "resolved") {
								n.debug("API request succeeded");
								p.activateTest = function () {
									return true;
								};
								p.deactivateTest = function () {
									return true;
								};
							} else {
								n.debug("API request failed");
								p.activateTest = function () {
									return false;
								};
								p.deactivateTest = function () {
									return false;
								};
							}
							n.change.state();
						});
					}
				},
				change: {
					state: function () {
						n.debug("Determining state change direction");
						if (n.is.inactive()) {
							n.activate();
						} else {
							n.deactivate();
						}
						if (p.sync) {
							n.sync();
						}
						p.onChange.call(k);
					},
					text: function () {
						if (n.is.textEnabled()) {
							if (n.is.disabled()) {
								n.verbose("Changing text to disabled text", b.hover);
								n.update.text(b.disabled);
							} else if (n.is.active()) {
								if (b.hover) {
									n.verbose("Changing text to hover text", b.hover);
									n.update.text(b.hover);
								} else if (b.deactivate) {
									n.verbose("Changing text to deactivating text", b.deactivate);
									n.update.text(b.deactivate);
								}
							} else if (b.hover) {
								n.verbose("Changing text to hover text", b.hover);
								n.update.text(b.hover);
							} else if (b.activate) {
								n.verbose("Changing text to activating text", b.activate);
								n.update.text(b.activate);
							}
						}
					}
				},
				activate: function () {
					if (p.activateTest.call(k)) {
						n.debug("Setting state to active");
						_.addClass(m.active);
						n.update.text(b.active);
						p.onActivate.call(k);
					}
				},
				deactivate: function () {
					if (p.deactivateTest.call(k)) {
						n.debug("Setting state to inactive");
						_.removeClass(m.active);
						n.update.text(b.inactive);
						p.onDeactivate.call(k);
					}
				},
				sync: function () {
					n.verbose("Syncing other buttons to current state");
					if (n.is.active()) {
						a.not(_).state("activate");
					} else {
						a.not(_).state("deactivate");
					}
				},
				get: {
					text: function () {
						if (p.selector.text) {
							return _.find(p.selector.text).text();
						} else {
							return _.html();
						}
					},
					textFor: function (e) {
						return b[e] || false;
					}
				},
				flash: {
					text: function (e, t, i) {
						var o = n.get.text();
						n.debug("Flashing text message", e, t);
						e = e || p.text.flash;
						t = t || p.flashDuration;
						i = i || function () {};
						n.update.text(e);
						setTimeout(function () {
							n.update.text(o);
							i.call(k);
						}, t);
					}
				},
				reset: {
					text: function () {
						var e = b.active || _.data(h.storedText);
						var t = b.inactive || _.data(h.storedText);
						if (n.is.textEnabled()) {
							if (n.is.active() && e) {
								n.verbose("Resetting active text", e);
								n.update.text(e);
							} else if (t) {
								n.verbose("Resetting inactive text", e);
								n.update.text(t);
							}
						}
					}
				},
				update: {
					text: function (e) {
						var t = n.get.text();
						if (e && e !== t) {
							n.debug("Updating text", e);
							if (p.selector.text) {
								_.data(h.storedText, e).find(p.selector.text).text(e);
							} else {
								_.data(h.storedText, e).html(e);
							}
						} else {
							n.debug("Text is already set, ignoring update", e);
						}
					}
				},
				setting: function (t, o) {
					n.debug("Changing setting", t, o);
					if (e.isPlainObject(t)) {
						e.extend(true, p, t);
					} else {
						if (o === i) {
							return p[t];
						}
						if (e.isPlainObject(p[t])) {
							e.extend(true, p[t], o);
						} else {
							p[t] = o;
						}
					}
				},
				internal: function (t, o) {
					if (e.isPlainObject(t)) {
						e.extend(true, n, t);
					} else {
						if (o === i) {
							return n[t];
						}
						n[t] = o;
					}
				},
				debug: function () {
					if (!p.silent && p.debug) {
						if (p.performance) {
							n.performance.log(arguments);
						} else {
							n.debug = Function.prototype.bind.call(console.info, console, p.name + ":");
							n.debug.apply(console, arguments);
						}
					}
				},
				verbose: function () {
					if (!p.silent && p.verbose && p.debug) {
						if (p.performance) {
							n.performance.log(arguments);
						} else {
							n.verbose = Function.prototype.bind.call(console.info, console, p.name + ":");
							n.verbose.apply(console, arguments);
						}
					}
				},
				error: function () {
					if (!p.silent) {
						n.error = Function.prototype.bind.call(console.error, console, p.name + ":");
						n.error.apply(console, arguments);
					}
				},
				performance: {
					log: function (e) {
						var t;
						var i;
						var o;
						if (p.performance) {
							t = new Date().getTime();
							o = r || t;
							i = t - o;
							r = t;
							l.push({
								Name: e[0],
								Arguments: [].slice.call(e, 1) || "",
								Element: k,
								"Execution Time": i
							});
						}
						clearTimeout(n.performance.timer);
						n.performance.timer = setTimeout(n.performance.display, 500);
					},
					display: function () {
						var t = p.name + ":";
						var o = 0;
						r = false;
						clearTimeout(n.performance.timer);
						e.each(l, function (e, t) {
							o += t["Execution Time"];
						});
						t += " " + o + "ms";
						if (s) {
							t += " '" + s + "'";
						}
						if ((console.group !== i || console.table !== i) && l.length > 0) {
							console.groupCollapsed(t);
							if (console.table) {
								console.table(l);
							} else {
								e.each(l, function (e, t) {
									console.log(t.Name + ": " + t["Execution Time"] + "ms");
								});
							}
							console.groupEnd();
						}
						l = [];
					}
				},
				invoke: function (t, a, s) {
					var r;
					var l;
					var c;
					var u = x;
					a = a || d;
					s = k || s;
					if (typeof t == "string" && u !== i) {
						t = t.split(/[\. ]/);
						r = t.length - 1;
						e.each(t, function (o, a) {
							var s = o != r ? a + t[o + 1].charAt(0).toUpperCase() + t[o + 1].slice(1) : t;
							if (e.isPlainObject(u[s]) && o != r) {
								u = u[s];
							} else {
								if (u[s] !== i) {
									l = u[s];
									return false;
								}
								if (!e.isPlainObject(u[a]) || o == r) {
									if (u[a] !== i) {
										l = u[a];
										return false;
									} else {
										n.error(f.method, t);
										return false;
									}
								}
								u = u[a];
							}
						});
					}
					if (e.isFunction(l)) {
						c = l.apply(s, a);
					} else if (l !== i) {
						c = l;
					}
					if (e.isArray(o)) {
						o.push(c);
					} else if (o !== i) {
						o = [o, c];
					} else if (c !== i) {
						o = c;
					}
					return l;
				}
			};
			if (u) {
				if (x === i) {
					n.initialize();
				}
				n.invoke(c);
			} else {
				if (x !== i) {
					x.invoke("destroy");
				}
				n.initialize();
			}
		});
		if (o !== i) {
			return o;
		} else {
			return this;
		}
	};
	e.fn.state.settings = {
		name: "State",
		debug: false,
		verbose: false,
		namespace: "state",
		performance: true,
		onActivate: function () {},
		onDeactivate: function () {},
		onChange: function () {},
		activateTest: function () {
			return true;
		},
		deactivateTest: function () {
			return true;
		},
		automatic: true,
		sync: false,
		flashDuration: 1000,
		filter: {
			text: ".loading, .disabled",
			active: ".disabled"
		},
		context: false,
		error: {
			beforeSend: "The before send function has cancelled state change",
			method: "The method you called is not defined."
		},
		metadata: {
			promise: "promise",
			storedText: "stored-text"
		},
		className: {
			active: "active",
			disabled: "disabled",
			error: "error",
			loading: "loading",
			success: "success",
			warning: "warning"
		},
		selector: {
			text: false
		},
		defaults: {
			input: {
				disabled: true,
				loading: true,
				active: true
			},
			button: {
				disabled: true,
				loading: true,
				active: true
			},
			progress: {
				active: true,
				success: true,
				warning: true,
				error: true
			}
		},
		states: {
			active: true,
			disabled: true,
			error: true,
			loading: true,
			success: true,
			warning: true
		},
		text: {
			disabled: false,
			flash: false,
			hover: false,
			active: false,
			inactive: false,
			activate: false,
			deactivate: false
		}
	};
})(jQuery, window, document);
(function (e, t, n, i) {
	"use strict";

	t = t !== undefined && t.Math == Math ? t : typeof self != "undefined" && self.Math == Math ? self : Function("return this")();
	e.fn.visibility = function (o) {
		var a;
		var s = e(this);
		var r = s.selector || "";
		var l = new Date().getTime();
		var c = [];
		var u = arguments[0];
		var d = typeof u == "string";
		var p = [].slice.call(arguments, 1);
		var f = s.length;
		var h = 0;
		s.each(function () {
			var s;
			var m;
			var g;
			var v;
			var b = e.isPlainObject(o) ? e.extend(true, {}, e.fn.visibility.settings, o) : e.extend({}, e.fn.visibility.settings);
			var y = b.className;
			var w = b.namespace;
			var _ = b.error;
			var k = b.metadata;
			var x = "." + w;
			var C = "module-" + w;
			var S = e(t);
			var A = e(this);
			var T = e(b.context);
			A.selector;
			var P = A.data(C);
			var j = t.requestAnimationFrame || t.mozRequestAnimationFrame || t.webkitRequestAnimationFrame || t.msRequestAnimationFrame || function (e) {
				setTimeout(e, 0);
			};
			var E = this;
			var N = false;
			v = {
				initialize: function () {
					v.debug("Initializing", b);
					v.setup.cache();
					if (v.should.trackChanges()) {
						if (b.type == "image") {
							v.setup.image();
						}
						if (b.type == "fixed") {
							v.setup.fixed();
						}
						if (b.observeChanges) {
							v.observeChanges();
						}
						v.bind.events();
					}
					v.save.position();
					if (!v.is.visible()) {
						v.error(_.visible, A);
					}
					if (b.initialCheck) {
						v.checkVisibility();
					}
					v.instantiate();
				},
				instantiate: function () {
					v.debug("Storing instance", v);
					A.data(C, v);
					P = v;
				},
				destroy: function () {
					v.verbose("Destroying previous module");
					if (g) {
						g.disconnect();
					}
					if (m) {
						m.disconnect();
					}
					S.off("load" + x, v.event.load).off("resize" + x, v.event.resize);
					T.off("scroll" + x, v.event.scroll).off("scrollchange" + x, v.event.scrollchange);
					if (b.type == "fixed") {
						v.resetFixed();
						v.remove.placeholder();
					}
					A.off(x).removeData(C);
				},
				observeChanges: function () {
					if ("MutationObserver" in t) {
						m = new MutationObserver(v.event.contextChanged);
						g = new MutationObserver(v.event.changed);
						m.observe(n, {
							childList: true,
							subtree: true
						});
						g.observe(E, {
							childList: true,
							subtree: true
						});
						v.debug("Setting up mutation observer", g);
					}
				},
				bind: {
					events: function () {
						v.verbose("Binding visibility events to scroll and resize");
						if (b.refreshOnLoad) {
							S.on("load" + x, v.event.load);
						}
						S.on("resize" + x, v.event.resize);
						T.off("scroll" + x).on("scroll" + x, v.event.scroll).on("scrollchange" + x, v.event.scrollchange);
					}
				},
				event: {
					changed: function (e) {
						v.verbose("DOM tree modified, updating visibility calculations");
						v.timer = setTimeout(function () {
							v.verbose("DOM tree modified, updating sticky menu");
							v.refresh();
						}, 100);
					},
					contextChanged: function (t) {
						[].forEach.call(t, function (t) {
							if (t.removedNodes) {
								[].forEach.call(t.removedNodes, function (t) {
									if (t == E || e(t).find(E).length > 0) {
										v.debug("Element removed from DOM, tearing down events");
										v.destroy();
									}
								});
							}
						});
					},
					resize: function () {
						v.debug("Window resized");
						if (b.refreshOnResize) {
							j(v.refresh);
						}
					},
					load: function () {
						v.debug("Page finished loading");
						j(v.refresh);
					},
					scroll: function () {
						if (b.throttle) {
							clearTimeout(v.timer);
							v.timer = setTimeout(function () {
								T.triggerHandler("scrollchange" + x, [T.scrollTop()]);
							}, b.throttle);
						} else {
							j(function () {
								T.triggerHandler("scrollchange" + x, [T.scrollTop()]);
							});
						}
					},
					scrollchange: function (e, t) {
						v.checkVisibility(t);
					}
				},
				precache: function (t, i) {
					if (!(t instanceof Array)) {
						t = [t];
					}
					for (var o = t.length, a = 0, s = [], r = n.createElement("img"), l = function () {
						if (++a >= t.length && e.isFunction(i)) {
							i();
						}
					}; o--;) {
						r = n.createElement("img");
						r.onload = l;
						r.onerror = l;
						r.src = t[o];
						s.push(r);
					}
				},
				enableCallbacks: function () {
					v.debug("Allowing callbacks to occur");
					N = false;
				},
				disableCallbacks: function () {
					v.debug("Disabling all callbacks temporarily");
					N = true;
				},
				should: {
					trackChanges: function () {
						if (d) {
							v.debug("One time query, no need to bind events");
							return false;
						} else {
							v.debug("Callbacks being attached");
							return true;
						}
					}
				},
				setup: {
					cache: function () {
						v.cache = {
							occurred: {},
							screen: {},
							element: {}
						};
					},
					image: function () {
						var e = A.data(k.src);
						if (e) {
							v.verbose("Lazy loading image", e);
							b.once = true;
							b.observeChanges = false;
							b.onOnScreen = function () {
								v.debug("Image on screen", E);
								v.precache(e, function () {
									v.set.image(e, function () {
										if (++h == f) {
											b.onAllLoaded.call(this);
										}
										b.onLoad.call(this);
									});
								});
							};
						}
					},
					fixed: function () {
						v.debug("Setting up fixed");
						b.once = false;
						b.observeChanges = false;
						b.initialCheck = true;
						b.refreshOnLoad = true;
						if (!o.transition) {
							b.transition = false;
						}
						v.create.placeholder();
						v.debug("Added placeholder", s);
						b.onTopPassed = function () {
							v.debug("Element passed, adding fixed position", A);
							v.show.placeholder();
							v.set.fixed();
							if (b.transition && e.fn.transition !== i) {
								A.transition(b.transition, b.duration);
							}
						};
						b.onTopPassedReverse = function () {
							v.debug("Element returned to position, removing fixed", A);
							v.hide.placeholder();
							v.remove.fixed();
						};
					}
				},
				create: {
					placeholder: function () {
						v.verbose("Creating fixed position placeholder");
						s = A.clone(false).css("display", "none").addClass(y.placeholder).insertAfter(A);
					}
				},
				show: {
					placeholder: function () {
						v.verbose("Showing placeholder");
						s.css("display", "block").css("visibility", "hidden");
					}
				},
				hide: {
					placeholder: function () {
						v.verbose("Hiding placeholder");
						s.css("display", "none").css("visibility", "");
					}
				},
				set: {
					fixed: function () {
						v.verbose("Setting element to fixed position");
						A.addClass(y.fixed).css({
							position: "fixed",
							top: b.offset + "px",
							left: "auto",
							zIndex: b.zIndex
						});
						b.onFixed.call(E);
					},
					image: function (t, n) {
						A.attr("src", t);
						if (b.transition) {
							if (e.fn.transition !== i) {
								if (A.hasClass(y.visible)) {
									v.debug("Transition already occurred on this image, skipping animation");
									return;
								}
								A.transition(b.transition, b.duration, n);
							} else {
								A.fadeIn(b.duration, n);
							}
						} else {
							A.show();
						}
					}
				},
				is: {
					onScreen: function () {
						return v.get.elementCalculations().onScreen;
					},
					offScreen: function () {
						return v.get.elementCalculations().offScreen;
					},
					visible: function () {
						return !!v.cache && !!v.cache.element && (v.cache.element.width !== 0 || v.cache.element.offset.top !== 0);
					},
					verticallyScrollableContext: function () {
						var e = T.get(0) !== t && T.css("overflow-y");
						return e == "auto" || e == "scroll";
					},
					horizontallyScrollableContext: function () {
						var e = T.get(0) !== t && T.css("overflow-x");
						return e == "auto" || e == "scroll";
					}
				},
				refresh: function () {
					v.debug("Refreshing constants (width/height)");
					if (b.type == "fixed") {
						v.resetFixed();
					}
					v.reset();
					v.save.position();
					if (b.checkOnRefresh) {
						v.checkVisibility();
					}
					b.onRefresh.call(E);
				},
				resetFixed: function () {
					v.remove.fixed();
					v.remove.occurred();
				},
				reset: function () {
					v.verbose("Resetting all cached values");
					if (e.isPlainObject(v.cache)) {
						v.cache.screen = {};
						v.cache.element = {};
					}
				},
				checkVisibility: function (e) {
					v.verbose("Checking visibility of element", v.cache.element);
					if (!N && v.is.visible()) {
						v.save.scroll(e);
						v.save.calculations();
						v.passed();
						v.passingReverse();
						v.topVisibleReverse();
						v.bottomVisibleReverse();
						v.topPassedReverse();
						v.bottomPassedReverse();
						v.onScreen();
						v.offScreen();
						v.passing();
						v.topVisible();
						v.bottomVisible();
						v.topPassed();
						v.bottomPassed();
						if (b.onUpdate) {
							b.onUpdate.call(E, v.get.elementCalculations());
						}
					}
				},
				passed: function (t, n) {
					var o = v.get.elementCalculations();
					if (t && n) {
						b.onPassed[t] = n;
					} else {
						if (t !== i) {
							return v.get.pixelsPassed(t) > o.pixelsPassed;
						}
						if (o.passing) {
							e.each(b.onPassed, function (e, t) {
								if (o.bottomVisible || o.pixelsPassed > v.get.pixelsPassed(e)) {
									v.execute(t, e);
								} else if (!b.once) {
									v.remove.occurred(t);
								}
							});
						}
					}
				},
				onScreen: function (e) {
					var t = v.get.elementCalculations();
					var n = e || b.onOnScreen;
					var o = "onScreen";
					if (e) {
						v.debug("Adding callback for onScreen", e);
						b.onOnScreen = e;
					}
					if (t.onScreen) {
						v.execute(n, o);
					} else if (!b.once) {
						v.remove.occurred(o);
					}
					if (e !== i) {
						return t.onOnScreen;
					} else {
						return undefined;
					}
				},
				offScreen: function (e) {
					var t = v.get.elementCalculations();
					var n = e || b.onOffScreen;
					var o = "offScreen";
					if (e) {
						v.debug("Adding callback for offScreen", e);
						b.onOffScreen = e;
					}
					if (t.offScreen) {
						v.execute(n, o);
					} else if (!b.once) {
						v.remove.occurred(o);
					}
					if (e !== i) {
						return t.onOffScreen;
					} else {
						return undefined;
					}
				},
				passing: function (e) {
					var t = v.get.elementCalculations();
					var n = e || b.onPassing;
					var o = "passing";
					if (e) {
						v.debug("Adding callback for passing", e);
						b.onPassing = e;
					}
					if (t.passing) {
						v.execute(n, o);
					} else if (!b.once) {
						v.remove.occurred(o);
					}
					if (e !== i) {
						return t.passing;
					} else {
						return undefined;
					}
				},
				topVisible: function (e) {
					var t = v.get.elementCalculations();
					var n = e || b.onTopVisible;
					var o = "topVisible";
					if (e) {
						v.debug("Adding callback for top visible", e);
						b.onTopVisible = e;
					}
					if (t.topVisible) {
						v.execute(n, o);
					} else if (!b.once) {
						v.remove.occurred(o);
					}
					if (e === i) {
						return t.topVisible;
					} else {
						return undefined;
					}
				},
				bottomVisible: function (e) {
					var t = v.get.elementCalculations();
					var n = e || b.onBottomVisible;
					var o = "bottomVisible";
					if (e) {
						v.debug("Adding callback for bottom visible", e);
						b.onBottomVisible = e;
					}
					if (t.bottomVisible) {
						v.execute(n, o);
					} else if (!b.once) {
						v.remove.occurred(o);
					}
					if (e === i) {
						return t.bottomVisible;
					} else {
						return undefined;
					}
				},
				topPassed: function (e) {
					var t = v.get.elementCalculations();
					var n = e || b.onTopPassed;
					var o = "topPassed";
					if (e) {
						v.debug("Adding callback for top passed", e);
						b.onTopPassed = e;
					}
					if (t.topPassed) {
						v.execute(n, o);
					} else if (!b.once) {
						v.remove.occurred(o);
					}
					if (e === i) {
						return t.topPassed;
					} else {
						return undefined;
					}
				},
				bottomPassed: function (e) {
					var t = v.get.elementCalculations();
					var n = e || b.onBottomPassed;
					var o = "bottomPassed";
					if (e) {
						v.debug("Adding callback for bottom passed", e);
						b.onBottomPassed = e;
					}
					if (t.bottomPassed) {
						v.execute(n, o);
					} else if (!b.once) {
						v.remove.occurred(o);
					}
					if (e === i) {
						return t.bottomPassed;
					} else {
						return undefined;
					}
				},
				passingReverse: function (e) {
					var t = v.get.elementCalculations();
					var n = e || b.onPassingReverse;
					var o = "passingReverse";
					if (e) {
						v.debug("Adding callback for passing reverse", e);
						b.onPassingReverse = e;
					}
					if (t.passing) {
						if (!b.once) {
							v.remove.occurred(o);
						}
					} else if (v.get.occurred("passing")) {
						v.execute(n, o);
					}
					if (e !== i) {
						return !t.passing;
					} else {
						return undefined;
					}
				},
				topVisibleReverse: function (e) {
					var t = v.get.elementCalculations();
					var n = e || b.onTopVisibleReverse;
					var o = "topVisibleReverse";
					if (e) {
						v.debug("Adding callback for top visible reverse", e);
						b.onTopVisibleReverse = e;
					}
					if (t.topVisible) {
						if (!b.once) {
							v.remove.occurred(o);
						}
					} else if (v.get.occurred("topVisible")) {
						v.execute(n, o);
					}
					if (e === i) {
						return !t.topVisible;
					} else {
						return undefined;
					}
				},
				bottomVisibleReverse: function (e) {
					var t = v.get.elementCalculations();
					var n = e || b.onBottomVisibleReverse;
					var o = "bottomVisibleReverse";
					if (e) {
						v.debug("Adding callback for bottom visible reverse", e);
						b.onBottomVisibleReverse = e;
					}
					if (t.bottomVisible) {
						if (!b.once) {
							v.remove.occurred(o);
						}
					} else if (v.get.occurred("bottomVisible")) {
						v.execute(n, o);
					}
					if (e === i) {
						return !t.bottomVisible;
					} else {
						return undefined;
					}
				},
				topPassedReverse: function (e) {
					var t = v.get.elementCalculations();
					var n = e || b.onTopPassedReverse;
					var o = "topPassedReverse";
					if (e) {
						v.debug("Adding callback for top passed reverse", e);
						b.onTopPassedReverse = e;
					}
					if (t.topPassed) {
						if (!b.once) {
							v.remove.occurred(o);
						}
					} else if (v.get.occurred("topPassed")) {
						v.execute(n, o);
					}
					if (e === i) {
						return !t.onTopPassed;
					} else {
						return undefined;
					}
				},
				bottomPassedReverse: function (e) {
					var t = v.get.elementCalculations();
					var n = e || b.onBottomPassedReverse;
					var o = "bottomPassedReverse";
					if (e) {
						v.debug("Adding callback for bottom passed reverse", e);
						b.onBottomPassedReverse = e;
					}
					if (t.bottomPassed) {
						if (!b.once) {
							v.remove.occurred(o);
						}
					} else if (v.get.occurred("bottomPassed")) {
						v.execute(n, o);
					}
					if (e === i) {
						return !t.bottomPassed;
					} else {
						return undefined;
					}
				},
				execute: function (e, t) {
					var n = v.get.elementCalculations();
					var i = v.get.screenCalculations();
					if (e = e || false) {
						if (b.continuous) {
							v.debug("Callback being called continuously", t, n);
							e.call(E, n, i);
						} else if (!v.get.occurred(t)) {
							v.debug("Conditions met", t, n);
							e.call(E, n, i);
						}
					}
					v.save.occurred(t);
				},
				remove: {
					fixed: function () {
						v.debug("Removing fixed position");
						A.removeClass(y.fixed).css({
							position: "",
							top: "",
							left: "",
							zIndex: ""
						});
						b.onUnfixed.call(E);
					},
					placeholder: function () {
						v.debug("Removing placeholder content");
						if (s) {
							s.remove();
						}
					},
					occurred: function (e) {
						if (e) {
							var t = v.cache.occurred;
							if (t[e] !== i && t[e] === true) {
								v.debug("Callback can now be called again", e);
								v.cache.occurred[e] = false;
							}
						} else {
							v.cache.occurred = {};
						}
					}
				},
				save: {
					calculations: function () {
						v.verbose("Saving all calculations necessary to determine positioning");
						v.save.direction();
						v.save.screenCalculations();
						v.save.elementCalculations();
					},
					occurred: function (e) {
						if (e) {
							if (v.cache.occurred[e] === i || v.cache.occurred[e] !== true) {
								v.verbose("Saving callback occurred", e);
								v.cache.occurred[e] = true;
							}
						}
					},
					scroll: function (e) {
						e = e + b.offset || T.scrollTop() + b.offset;
						v.cache.scroll = e;
					},
					direction: function () {
						var e;
						var t = v.get.scroll();
						var n = v.get.lastScroll();
						e = t > n && n ? "down" : n > t && n ? "up" : "static";
						v.cache.direction = e;
						return v.cache.direction;
					},
					elementPosition: function () {
						var e = v.cache.element;
						var t = v.get.screenSize();
						v.verbose("Saving element position");
						e.fits = e.height < t.height;
						e.offset = A.offset();
						e.width = A.outerWidth();
						e.height = A.outerHeight();
						if (v.is.verticallyScrollableContext()) {
							e.offset.top += T.scrollTop() - T.offset().top;
						}
						if (v.is.horizontallyScrollableContext()) {
							e.offset.left += T.scrollLeft - T.offset().left;
						}
						v.cache.element = e;
						return e;
					},
					elementCalculations: function () {
						var e = v.get.screenCalculations();
						var t = v.get.elementPosition();
						if (b.includeMargin) {
							t.margin = {};
							t.margin.top = parseInt(A.css("margin-top"), 10);
							t.margin.bottom = parseInt(A.css("margin-bottom"), 10);
							t.top = t.offset.top - t.margin.top;
							t.bottom = t.offset.top + t.height + t.margin.bottom;
						} else {
							t.top = t.offset.top;
							t.bottom = t.offset.top + t.height;
						}
						t.topPassed = e.top >= t.top;
						t.bottomPassed = e.top >= t.bottom;
						t.topVisible = e.bottom >= t.top && !t.bottomPassed;
						t.bottomVisible = e.bottom >= t.bottom && !t.topPassed;
						t.pixelsPassed = 0;
						t.percentagePassed = 0;
						t.onScreen = t.topVisible && !t.bottomPassed;
						t.passing = t.topPassed && !t.bottomPassed;
						t.offScreen = !t.onScreen;
						if (t.passing) {
							t.pixelsPassed = e.top - t.top;
							t.percentagePassed = (e.top - t.top) / t.height;
						}
						v.cache.element = t;
						v.verbose("Updated element calculations", t);
						return t;
					},
					screenCalculations: function () {
						var e = v.get.scroll();
						v.save.direction();
						v.cache.screen.top = e;
						v.cache.screen.bottom = e + v.cache.screen.height;
						return v.cache.screen;
					},
					screenSize: function () {
						v.verbose("Saving window position");
						v.cache.screen = {
							height: T.height()
						};
					},
					position: function () {
						v.save.screenSize();
						v.save.elementPosition();
					}
				},
				get: {
					pixelsPassed: function (e) {
						var t = v.get.elementCalculations();
						if (e.search("%") > -1) {
							return t.height * (parseInt(e, 10) / 100);
						} else {
							return parseInt(e, 10);
						}
					},
					occurred: function (e) {
						return v.cache.occurred !== i && (v.cache.occurred[e] || false);
					},
					direction: function () {
						if (v.cache.direction === i) {
							v.save.direction();
						}
						return v.cache.direction;
					},
					elementPosition: function () {
						if (v.cache.element === i) {
							v.save.elementPosition();
						}
						return v.cache.element;
					},
					elementCalculations: function () {
						if (v.cache.element === i) {
							v.save.elementCalculations();
						}
						return v.cache.element;
					},
					screenCalculations: function () {
						if (v.cache.screen === i) {
							v.save.screenCalculations();
						}
						return v.cache.screen;
					},
					screenSize: function () {
						if (v.cache.screen === i) {
							v.save.screenSize();
						}
						return v.cache.screen;
					},
					scroll: function () {
						if (v.cache.scroll === i) {
							v.save.scroll();
						}
						return v.cache.scroll;
					},
					lastScroll: function () {
						if (v.cache.screen === i) {
							v.debug("First scroll event, no last scroll could be found");
							return false;
						} else {
							return v.cache.screen.top;
						}
					}
				},
				setting: function (t, n) {
					if (e.isPlainObject(t)) {
						e.extend(true, b, t);
					} else {
						if (n === i) {
							return b[t];
						}
						b[t] = n;
					}
				},
				internal: function (t, n) {
					if (e.isPlainObject(t)) {
						e.extend(true, v, t);
					} else {
						if (n === i) {
							return v[t];
						}
						v[t] = n;
					}
				},
				debug: function () {
					if (!b.silent && b.debug) {
						if (b.performance) {
							v.performance.log(arguments);
						} else {
							v.debug = Function.prototype.bind.call(console.info, console, b.name + ":");
							v.debug.apply(console, arguments);
						}
					}
				},
				verbose: function () {
					if (!b.silent && b.verbose && b.debug) {
						if (b.performance) {
							v.performance.log(arguments);
						} else {
							v.verbose = Function.prototype.bind.call(console.info, console, b.name + ":");
							v.verbose.apply(console, arguments);
						}
					}
				},
				error: function () {
					if (!b.silent) {
						v.error = Function.prototype.bind.call(console.error, console, b.name + ":");
						v.error.apply(console, arguments);
					}
				},
				performance: {
					log: function (e) {
						var t;
						var n;
						var i;
						if (b.performance) {
							t = new Date().getTime();
							i = l || t;
							n = t - i;
							l = t;
							c.push({
								Name: e[0],
								Arguments: [].slice.call(e, 1) || "",
								Element: E,
								"Execution Time": n
							});
						}
						clearTimeout(v.performance.timer);
						v.performance.timer = setTimeout(v.performance.display, 500);
					},
					display: function () {
						var t = b.name + ":";
						var n = 0;
						l = false;
						clearTimeout(v.performance.timer);
						e.each(c, function (e, t) {
							n += t["Execution Time"];
						});
						t += " " + n + "ms";
						if (r) {
							t += " '" + r + "'";
						}
						if ((console.group !== i || console.table !== i) && c.length > 0) {
							console.groupCollapsed(t);
							if (console.table) {
								console.table(c);
							} else {
								e.each(c, function (e, t) {
									console.log(t.Name + ": " + t["Execution Time"] + "ms");
								});
							}
							console.groupEnd();
						}
						c = [];
					}
				},
				invoke: function (t, n, o) {
					var s;
					var r;
					var l;
					var c = P;
					n = n || p;
					o = E || o;
					if (typeof t == "string" && c !== i) {
						t = t.split(/[\. ]/);
						s = t.length - 1;
						e.each(t, function (n, o) {
							var a = n != s ? o + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t;
							if (e.isPlainObject(c[a]) && n != s) {
								c = c[a];
							} else {
								if (c[a] !== i) {
									r = c[a];
									return false;
								}
								if (!e.isPlainObject(c[o]) || n == s) {
									if (c[o] !== i) {
										r = c[o];
										return false;
									} else {
										v.error(_.method, t);
										return false;
									}
								}
								c = c[o];
							}
						});
					}
					if (e.isFunction(r)) {
						l = r.apply(o, n);
					} else if (r !== i) {
						l = r;
					}
					if (e.isArray(a)) {
						a.push(l);
					} else if (a !== i) {
						a = [a, l];
					} else if (l !== i) {
						a = l;
					}
					return r;
				}
			};
			if (d) {
				if (P === i) {
					v.initialize();
				}
				P.save.scroll();
				P.save.calculations();
				v.invoke(u);
			} else {
				if (P !== i) {
					P.invoke("destroy");
				}
				v.initialize();
			}
		});
		if (a !== i) {
			return a;
		} else {
			return this;
		}
	};
	e.fn.visibility.settings = {
		name: "Visibility",
		namespace: "visibility",
		debug: false,
		verbose: false,
		performance: true,
		observeChanges: true,
		initialCheck: true,
		refreshOnLoad: true,
		refreshOnResize: true,
		checkOnRefresh: true,
		once: true,
		continuous: false,
		offset: 0,
		includeMargin: false,
		context: t,
		throttle: false,
		type: false,
		zIndex: "10",
		transition: "fade in",
		duration: 1000,
		onPassed: {},
		onOnScreen: false,
		onOffScreen: false,
		onPassing: false,
		onTopVisible: false,
		onBottomVisible: false,
		onTopPassed: false,
		onBottomPassed: false,
		onPassingReverse: false,
		onTopVisibleReverse: false,
		onBottomVisibleReverse: false,
		onTopPassedReverse: false,
		onBottomPassedReverse: false,
		onLoad: function () {},
		onAllLoaded: function () {},
		onFixed: function () {},
		onUnfixed: function () {},
		onUpdate: false,
		onRefresh: function () {},
		metadata: {
			src: "src"
		},
		className: {
			fixed: "fixed",
			placeholder: "placeholder",
			visible: "visible"
		},
		error: {
			method: "The method you called is not defined.",
			visible: "Element is hidden, you must call refresh after element becomes visible"
		}
	};
})(jQuery, window, document);
(function (e, t) {
	if (typeof exports == "object" && typeof module != "undefined") {
		module.exports = t();
	} else if (typeof define == "function" && define.amd) {
		define(t);
	} else {
		e.Sweetalert2 = t();
	}
})(this, function () {
	"use strict";

	var e = {
		title: "",
		titleText: "",
		text: "",
		html: "",
		type: null,
		toast: false,
		customClass: "",
		target: "body",
		backdrop: true,
		animation: true,
		allowOutsideClick: true,
		allowEscapeKey: true,
		allowEnterKey: true,
		showConfirmButton: true,
		showCancelButton: false,
		preConfirm: null,
		confirmButtonText: "OK",
		confirmButtonAriaLabel: "",
		confirmButtonColor: "#3085d6",
		confirmButtonClass: null,
		cancelButtonText: "Cancel",
		cancelButtonAriaLabel: "",
		cancelButtonColor: "#aaa",
		cancelButtonClass: null,
		buttonsStyling: true,
		reverseButtons: false,
		focusConfirm: true,
		focusCancel: false,
		showCloseButton: false,
		closeButtonAriaLabel: "Close this dialog",
		showLoaderOnConfirm: false,
		imageUrl: null,
		imageWidth: null,
		imageHeight: null,
		imageAlt: "",
		imageClass: null,
		timer: null,
		width: 500,
		padding: 20,
		background: "#fff",
		input: null,
		inputPlaceholder: "",
		inputValue: "",
		inputOptions: {},
		inputAutoTrim: true,
		inputClass: null,
		inputAttributes: {},
		inputValidator: null,
		grow: false,
		position: "center",
		progressSteps: [],
		currentProgressStep: null,
		progressStepsDistance: "40px",
		onBeforeOpen: null,
		onOpen: null,
		onClose: null,
		useRejections: false,
		expectRejections: false
	};
	var t = ["useRejections", "expectRejections"];
	function n(e) {
		var t = {};
		for (var n in e) {
			t[e[n]] = "swal2-" + e[n];
		}
		return t;
	}
	var i = n(["container", "shown", "iosfix", "popup", "modal", "no-backdrop", "toast", "toast-shown", "overlay", "fade", "show", "hide", "noanimation", "close", "title", "content", "contentwrapper", "buttonswrapper", "confirm", "cancel", "icon", "image", "input", "has-input", "file", "range", "select", "radio", "checkbox", "textarea", "inputerror", "validationerror", "progresssteps", "activeprogressstep", "progresscircle", "progressline", "loading", "styled", "top", "top-left", "top-right", "center", "center-left", "center-right", "bottom", "bottom-left", "bottom-right", "grow-row", "grow-column", "grow-fullscreen"]);
	var o = n(["success", "warning", "info", "question", "error"]);
	function a(e, t) {
		if ((e = String(e).replace(/[^0-9a-f]/gi, "")).length < 6) {
			e = e[0] + e[0] + e[1] + e[1] + e[2] + e[2];
		}
		t = t || 0;
		var n = "#";
		for (var i = 0; i < 3; i++) {
			var o = parseInt(e.substr(i * 2, 2), 16);
			n += ("00" + (o = Math.round(Math.min(Math.max(0, o + o * t), 255)).toString(16))).substr(o.length);
		}
		return n;
	}
	function s(e) {
		console.warn("SweetAlert2: " + e);
	}
	function r(e) {
		console.error("SweetAlert2: " + e);
	}
	var l = [];
	function c(e) {
		if (l.indexOf(e) === -1) {
			l.push(e);
			s(e);
		}
	}
	var u = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function (e) {
		return typeof e;
	} : function (e) {
		if (e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype) {
			return "symbol";
		} else {
			return typeof e;
		}
	};
	var d = Object.assign || function (e) {
		for (var t = 1; t < arguments.length; t++) {
			var n = arguments[t];
			for (var i in n) {
				if (Object.prototype.hasOwnProperty.call(n, i)) {
					e[i] = n[i];
				}
			}
		}
		return e;
	};
	var p = d({}, e);
	var f = [];
	var h = undefined;
	var m = undefined;
	if (typeof Promise == "undefined") {
		r("This package requires a Promise library, please include a shim to enable it in this browser (See: https://github.com/limonte/sweetalert2/wiki/Migration-from-SweetAlert-to-SweetAlert2#1-ie-support)");
	}
	function g(e) {
		for (var t in e) {
			if (!w.isValidParameter(t)) {
				s("Unknown parameter \"" + t + "\"");
			}
			if (w.isDeprecatedParameter(t)) {
				c("The parameter \"" + t + "\" is deprecated and will be removed in the next major release.");
			}
		}
	}
	function v(t) {
		if (typeof t.target == "string" && !document.querySelector(t.target) || typeof t.target != "string" && !t.target.appendChild) {
			s("Target parameter is not valid, defaulting to \"body\"");
			t.target = "body";
		}
		var n = undefined;
		var a = S();
		var l = typeof t.target == "string" ? document.querySelector(t.target) : t.target;
		n = a && l && a.parentNode !== l.parentNode ? k(t) : a || k(t);
		var c = t.width === e.width && t.toast ? "auto" : t.width;
		n.style.width = typeof c == "number" ? c + "px" : c;
		var d = t.padding === e.padding && t.toast ? "inherit" : t.padding;
		n.style.padding = typeof d == "number" ? d + "px" : d;
		n.style.background = t.background;
		for (var p = n.querySelectorAll("[class^=swal2-success-circular-line], .swal2-success-fix"), f = 0; f < p.length; f++) {
			p[f].style.background = t.background;
		}
		var h = C();
		var m = P();
		var g = j();
		var v = $();
		var b = D();
		var y = I();
		var _ = M();
		if (t.titleText) {
			m.innerText = t.titleText;
		} else {
			m.innerHTML = t.title.split("\n").join("<br />");
		}
		if (!t.backdrop) {
			B(document.body, i["no-backdrop"]);
		}
		if (t.text || t.html) {
			if (u(t.html) === "object") {
				g.innerHTML = "";
				if (0 in t.html) {
					for (var x = 0; x in t.html; x++) {
						g.appendChild(t.html[x].cloneNode(true));
					}
				} else {
					g.appendChild(t.html.cloneNode(true));
				}
			} else if (t.html) {
				g.innerHTML = t.html;
			} else if (t.text) {
				g.textContent = t.text;
			}
			U(g);
		} else {
			W(g);
		}
		if (t.position in i) {
			B(h, i[t.position]);
		}
		if (t.grow && typeof t.grow == "string") {
			var T = "grow-" + t.grow;
			if (T in i) {
				B(h, i[T]);
			}
		}
		if (t.showCloseButton) {
			_.setAttribute("aria-label", t.closeButtonAriaLabel);
			U(_);
		} else {
			W(_);
		}
		n.className = i.popup;
		if (t.toast) {
			B(document.body, i["toast-shown"]);
			B(n, i.toast);
		} else {
			B(n, i.modal);
		}
		if (t.customClass) {
			B(n, t.customClass);
		}
		var O = N();
		var z = parseInt(t.currentProgressStep === null ? w.getQueueStep() : t.currentProgressStep, 10);
		if (t.progressSteps.length) {
			U(O);
			G(O);
			if (z >= t.progressSteps.length) {
				s("Invalid currentProgressStep parameter, it should be less than progressSteps.length (currentProgressStep like JS arrays starts from 0)");
			}
			t.progressSteps.forEach(function (e, n) {
				var o = document.createElement("li");
				B(o, i.progresscircle);
				o.innerHTML = e;
				if (n === z) {
					B(o, i.activeprogressstep);
				}
				O.appendChild(o);
				if (n !== t.progressSteps.length - 1) {
					var a = document.createElement("li");
					B(a, i.progressline);
					a.style.width = t.progressStepsDistance;
					O.appendChild(a);
				}
			});
		} else {
			W(O);
		}
		for (var F = A(), L = 0; L < F.length; L++) {
			W(F[L]);
		}
		if (t.type) {
			var R = false;
			for (var H in o) {
				if (t.type === H) {
					R = true;
					break;
				}
			}
			if (!R) {
				r("Unknown alert type: " + t.type);
				return false;
			}
			var V = n.querySelector("." + i.icon + "." + o[t.type]);
			U(V);
			if (t.animation) {
				switch (t.type) {
					case "success":
						B(V, "swal2-animate-success-icon");
						B(V.querySelector(".swal2-success-line-tip"), "swal2-animate-success-line-tip");
						B(V.querySelector(".swal2-success-line-long"), "swal2-animate-success-line-long");
						break;
					case "error":
						B(V, "swal2-animate-error-icon");
						B(V.querySelector(".swal2-x-mark"), "swal2-animate-x-mark");
				}
			}
		}
		var Y = E();
		if (t.imageUrl) {
			Y.setAttribute("src", t.imageUrl);
			Y.setAttribute("alt", t.imageAlt);
			U(Y);
			if (t.imageWidth) {
				Y.setAttribute("width", t.imageWidth);
			} else {
				Y.removeAttribute("width");
			}
			if (t.imageHeight) {
				Y.setAttribute("height", t.imageHeight);
			} else {
				Y.removeAttribute("height");
			}
			Y.className = i.image;
			if (t.imageClass) {
				B(Y, t.imageClass);
			}
		} else {
			W(Y);
		}
		if (t.showCancelButton) {
			y.style.display = "inline-block";
		} else {
			W(y);
		}
		if (t.showConfirmButton) {
			K(b, "display");
		} else {
			W(b);
		}
		if (t.showConfirmButton || t.showCancelButton) {
			U(v);
		} else {
			W(v);
		}
		b.innerHTML = t.confirmButtonText;
		y.innerHTML = t.cancelButtonText;
		b.setAttribute("aria-label", t.confirmButtonAriaLabel);
		y.setAttribute("aria-label", t.cancelButtonAriaLabel);
		if (t.buttonsStyling) {
			b.style.backgroundColor = t.confirmButtonColor;
			y.style.backgroundColor = t.cancelButtonColor;
		}
		b.className = i.confirm;
		B(b, t.confirmButtonClass);
		y.className = i.cancel;
		B(y, t.cancelButtonClass);
		if (t.buttonsStyling) {
			B(b, i.styled);
			B(y, i.styled);
		} else {
			q(b, i.styled);
			q(y, i.styled);
			b.style.backgroundColor = b.style.borderLeftColor = b.style.borderRightColor = "";
			y.style.backgroundColor = y.style.borderLeftColor = y.style.borderRightColor = "";
		}
		if (t.animation === true) {
			q(n, i.noanimation);
		} else {
			B(n, i.noanimation);
		}
		if (t.showLoaderOnConfirm && !t.preConfirm) {
			s("showLoaderOnConfirm is set to true, but preConfirm is not defined.\nshowLoaderOnConfirm should be used together with preConfirm, see usage example:\nhttps://limonte.github.io/sweetalert2/#ajax-request");
		}
	}
	function b() {
		if (_.previousBodyPadding === null && document.body.scrollHeight > window.innerHeight) {
			_.previousBodyPadding = document.body.style.paddingRight;
			document.body.style.paddingRight = Z() + "px";
		}
	}
	function y() {
		if (/iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream && !R(document.body, i.iosfix)) {
			var e = document.body.scrollTop;
			document.body.style.top = e * -1 + "px";
			B(document.body, i.iosfix);
		}
	}
	var w = function e() {
		for (var t = arguments.length, n = Array(t), o = 0; o < t; o++) {
			n[o] = arguments[o];
		}
		if (n[0] === undefined) {
			r("SweetAlert2 expects at least 1 attribute!");
			return false;
		}
		var s = d({}, p);
		switch (u(n[0])) {
			case "string":
				s.title = n[0];
				s.html = n[1];
				s.type = n[2];
				break;
			case "object":
				g(n[0]);
				d(s, n[0]);
				s.extraParams = n[0].extraParams;
				if (s.input === "email" && s.inputValidator === null) {
					function l(e) {
						return new Promise(function (t, n) {
							if (/^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9.-]+\.[a-zA-Z0-9-]{2,24}$/.test(e)) {
								t();
							} else {
								n("Invalid email address");
							}
						});
					}
					s.inputValidator = s.expectRejections ? l : e.adaptInputValidator(l);
				}
				if (s.input === "url" && s.inputValidator === null) {
					function c(e) {
						return new Promise(function (t, n) {
							if (/^https?:\/\/(www\.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_+.~#?&//=]*)$/.test(e)) {
								t();
							} else {
								n("Invalid URL");
							}
						});
					}
					s.inputValidator = s.expectRejections ? c : e.adaptInputValidator(c);
				}
				break;
			default:
				r("Unexpected type of argument! Expected \"string\" or \"object\", got " + u(n[0]));
				return false;
		}
		v(s);
		var f = C();
		var w = S();
		return new Promise(function (t, n) {
			function o(n) {
				e.closePopup(s.onClose);
				t(s.useRejections ? n : {
					value: n
				});
			}
			function l(i) {
				e.closePopup(s.onClose);
				if (s.useRejections) {
					n(i);
				} else {
					t({
						dismiss: i
					});
				}
			}
			function c(t) {
				e.closePopup(s.onClose);
				n(t);
			}
			if (s.timer) {
				w.timeout = setTimeout(function () {
					return l("timer");
				}, s.timer);
			}
			function d(e) {
				if (!(e = e || s.input)) {
					return null;
				}
				switch (e) {
					case "select":
					case "textarea":
					case "file":
						return V(w, i[e]);
					case "checkbox":
						return w.querySelector("." + i.checkbox + " input");
					case "radio":
						return w.querySelector("." + i.radio + " input:checked") || w.querySelector("." + i.radio + " input:first-child");
					case "range":
						return w.querySelector("." + i.range + " input");
					default:
						return V(w, i.input);
				}
			}
			if (s.input) {
				setTimeout(function () {
					var e = d();
					if (e) {
						H(e);
					}
				}, 0);
			}
			var p = function (t) {
				if (s.showLoaderOnConfirm) {
					e.showLoading();
				}
				if (s.preConfirm) {
					var n = Promise.resolve().then(function () {
						return s.preConfirm(t, s.extraParams);
					});
					if (s.expectRejections) {
						n.then(function (e) {
							return o(e || t);
						}, function (t) {
							e.hideLoading();
							if (t) {
								e.showValidationError(t);
							}
						});
					} else {
						n.then(function (n) {
							if (Y(O())) {
								e.hideLoading();
							} else {
								o(n || t);
							}
						}, function (e) {
							return c(e);
						});
					}
				} else {
					o(t);
				}
			};
			var g = function (t) {
				var n = t || window.event;
				var i = n.target || n.srcElement;
				var o = D();
				var r = I();
				var u = o && (o === i || o.contains(i));
				var f = r && (r === i || r.contains(i));
				switch (n.type) {
					case "mouseover":
					case "mouseup":
						if (s.buttonsStyling) {
							if (u) {
								o.style.backgroundColor = a(s.confirmButtonColor, -0.1);
							} else if (f) {
								r.style.backgroundColor = a(s.cancelButtonColor, -0.1);
							}
						}
						break;
					case "mouseout":
						if (s.buttonsStyling) {
							if (u) {
								o.style.backgroundColor = s.confirmButtonColor;
							} else if (f) {
								r.style.backgroundColor = s.cancelButtonColor;
							}
						}
						break;
					case "mousedown":
						if (s.buttonsStyling) {
							if (u) {
								o.style.backgroundColor = a(s.confirmButtonColor, -0.2);
							} else if (f) {
								r.style.backgroundColor = a(s.cancelButtonColor, -0.2);
							}
						}
						break;
					case "click":
						if (u && e.isVisible()) {
							e.disableButtons();
							if (s.input) {
								var h = function () {
									var e = d();
									if (!e) {
										return null;
									}
									switch (s.input) {
										case "checkbox":
											if (e.checked) {
												return 1;
											} else {
												return 0;
											}
										case "radio":
											if (e.checked) {
												return e.value;
											} else {
												return null;
											}
										case "file":
											if (e.files.length) {
												return e.files[0];
											} else {
												return null;
											}
										default:
											if (s.inputAutoTrim) {
												return e.value.trim();
											} else {
												return e.value;
											}
									}
								}();
								if (s.inputValidator) {
									e.disableInput();
									var m = Promise.resolve().then(function () {
										return s.inputValidator(h, s.extraParams);
									});
									if (s.expectRejections) {
										m.then(function () {
											e.enableButtons();
											e.enableInput();
											p(h);
										}, function (t) {
											e.enableButtons();
											e.enableInput();
											if (t) {
												e.showValidationError(t);
											}
										});
									} else {
										m.then(function (t) {
											e.enableButtons();
											e.enableInput();
											if (t) {
												e.showValidationError(t);
											} else {
												p(h);
											}
										}, function (e) {
											return c(e);
										});
									}
								} else {
									p(h);
								}
							} else {
								p(true);
							}
						} else if (f && e.isVisible()) {
							e.disableButtons();
							l("cancel");
						}
				}
			};
			for (var k = w.querySelectorAll("button"), x = 0; x < k.length; x++) {
				k[x].onclick = g;
				k[x].onmouseover = g;
				k[x].onmouseout = g;
				k[x].onmousedown = g;
			}
			M().onclick = function () {
				l("close");
			};
			if (s.toast) {
				w.onclick = function (t) {
					if (t.target === w && !s.showConfirmButton && !s.showCancelButton) {
						if (s.allowOutsideClick) {
							e.closePopup(s.onClose);
							l("overlay");
						}
					}
				};
			} else {
				f.onclick = function (e) {
					if (e.target === f && s.allowOutsideClick) {
						l("overlay");
					}
				};
			}
			var A = $();
			var T = D();
			var L = I();
			if (s.reverseButtons) {
				T.parentNode.insertBefore(L, T);
			} else {
				T.parentNode.insertBefore(T, L);
			}
			function G(e, t) {
				for (var n = z(s.focusCancel), i = 0; i < n.length; i++) {
					if ((e += t) === n.length) {
						e = 0;
					} else if (e === -1) {
						e = n.length - 1;
					}
					var o = n[e];
					if (Y(o)) {
						return o.focus();
					}
				}
			}
			if (!m) {
				h = window.onkeydown;
				m = true;
				window.onkeydown = function (t) {
					var n = t || window.event;
					if (n.key !== "Enter" || n.isComposing) {
						if (n.key === "Tab") {
							var i = n.target || n.srcElement;
							for (var o = z(s.focusCancel), a = -1, r = 0; r < o.length; r++) {
								if (i === o[r]) {
									a = r;
									break;
								}
							}
							if (n.shiftKey) {
								G(a, -1);
							} else {
								G(a, 1);
							}
							n.stopPropagation();
							n.preventDefault();
						} else if (["ArrowLeft", "ArrowRight", "ArrowUp", "ArrowDown", "Left", "Right", "Up", "Down"].indexOf(n.key) !== -1) {
							if (document.activeElement === T && Y(L)) {
								L.focus();
							} else if (document.activeElement === L && Y(T)) {
								T.focus();
							}
						} else if ((n.key === "Escape" || n.key === "Esc") && s.allowEscapeKey === true) {
							l("esc");
						}
					} else if (n.target === d()) {
						if (n.target.tagName.toLowerCase() === "textarea") {
							return;
						}
						e.clickConfirm();
						n.preventDefault();
					}
				};
			}
			if (s.buttonsStyling) {
				T.style.borderLeftColor = s.confirmButtonColor;
				T.style.borderRightColor = s.confirmButtonColor;
			}
			e.hideLoading = e.disableLoading = function () {
				if (!s.showConfirmButton) {
					W(T);
					if (!s.showCancelButton) {
						W($());
					}
				}
				q(A, i.loading);
				q(w, i.loading);
				w.removeAttribute("aria-busy");
				T.disabled = false;
				L.disabled = false;
			};
			e.getTitle = function () {
				return P();
			};
			e.getContent = function () {
				return j();
			};
			e.getInput = function () {
				return d();
			};
			e.getImage = function () {
				return E();
			};
			e.getButtonsWrapper = function () {
				return $();
			};
			e.getConfirmButton = function () {
				return D();
			};
			e.getCancelButton = function () {
				return I();
			};
			e.enableButtons = function () {
				T.disabled = false;
				L.disabled = false;
			};
			e.disableButtons = function () {
				T.disabled = true;
				L.disabled = true;
			};
			e.enableConfirmButton = function () {
				T.disabled = false;
			};
			e.disableConfirmButton = function () {
				T.disabled = true;
			};
			e.enableInput = function () {
				var e = d();
				if (!e) {
					return false;
				}
				if (e.type === "radio") {
					for (var t = e.parentNode.parentNode.querySelectorAll("input"), n = 0; n < t.length; n++) {
						t[n].disabled = false;
					}
				} else {
					e.disabled = false;
				}
			};
			e.disableInput = function () {
				var e = d();
				if (!e) {
					return false;
				}
				if (e && e.type === "radio") {
					for (var t = e.parentNode.parentNode.querySelectorAll("input"), n = 0; n < t.length; n++) {
						t[n].disabled = true;
					}
				} else {
					e.disabled = true;
				}
			};
			e.showValidationError = function (e) {
				var t = O();
				t.innerHTML = e;
				U(t);
				var n = d();
				if (n) {
					n.setAttribute("aria-invalid", true);
					n.setAttribute("aria-describedBy", i.validationerror);
					H(n);
					B(n, i.inputerror);
				}
			};
			e.resetValidationError = function () {
				var e = O();
				W(e);
				var t = d();
				if (t) {
					t.removeAttribute("aria-invalid");
					t.removeAttribute("aria-describedBy");
					q(t, i.inputerror);
				}
			};
			e.getProgressSteps = function () {
				return s.progressSteps;
			};
			e.setProgressSteps = function (e) {
				s.progressSteps = e;
				v(s);
			};
			e.showProgressSteps = function () {
				U(N());
			};
			e.hideProgressSteps = function () {
				W(N());
			};
			e.enableButtons();
			e.hideLoading();
			e.resetValidationError();
			if (s.input) {
				B(document.body, i["has-input"]);
			}
			for (var K = ["input", "file", "range", "select", "radio", "checkbox", "textarea"], X = undefined, Z = 0; Z < K.length; Z++) {
				var Q = i[K[Z]];
				var ee = V(w, Q);
				if (X = d(K[Z])) {
					for (var te in X.attributes) {
						if (X.attributes.hasOwnProperty(te)) {
							var ne = X.attributes[te].name;
							if (ne !== "type" && ne !== "value") {
								X.removeAttribute(ne);
							}
						}
					}
					for (var ie in s.inputAttributes) {
						X.setAttribute(ie, s.inputAttributes[ie]);
					}
				}
				ee.className = Q;
				if (s.inputClass) {
					B(ee, s.inputClass);
				}
				W(ee);
			}
			var oe = undefined;
			switch (s.input) {
				case "text":
				case "email":
				case "password":
				case "number":
				case "tel":
				case "url":
					(X = V(w, i.input)).value = s.inputValue;
					X.placeholder = s.inputPlaceholder;
					X.type = s.input;
					U(X);
					break;
				case "file":
					(X = V(w, i.file)).placeholder = s.inputPlaceholder;
					X.type = s.input;
					U(X);
					break;
				case "range":
					var ae = V(w, i.range);
					var se = ae.querySelector("input");
					var re = ae.querySelector("output");
					se.value = s.inputValue;
					se.type = s.input;
					re.value = s.inputValue;
					U(ae);
					break;
				case "select":
					var le = V(w, i.select);
					le.innerHTML = "";
					if (s.inputPlaceholder) {
						var ce = document.createElement("option");
						ce.innerHTML = s.inputPlaceholder;
						ce.value = "";
						ce.disabled = true;
						ce.selected = true;
						le.appendChild(ce);
					}
					oe = function (e) {
						for (var t in e) {
							var n = document.createElement("option");
							n.value = t;
							n.innerHTML = e[t];
							if (s.inputValue.toString() === t) {
								n.selected = true;
							}
							le.appendChild(n);
						}
						U(le);
						le.focus();
					};
					break;
				case "radio":
					var ue = V(w, i.radio);
					ue.innerHTML = "";
					oe = function (e) {
						for (var t in e) {
							var n = document.createElement("input");
							var o = document.createElement("label");
							var a = document.createElement("span");
							n.type = "radio";
							n.name = i.radio;
							n.value = t;
							if (s.inputValue.toString() === t) {
								n.checked = true;
							}
							a.innerHTML = e[t];
							o.appendChild(n);
							o.appendChild(a);
							o.for = n.id;
							ue.appendChild(o);
						}
						U(ue);
						var r = ue.querySelectorAll("input");
						if (r.length) {
							r[0].focus();
						}
					};
					break;
				case "checkbox":
					var de = V(w, i.checkbox);
					var pe = d("checkbox");
					pe.type = "checkbox";
					pe.value = 1;
					pe.id = i.checkbox;
					pe.checked = Boolean(s.inputValue);
					var fe = de.getElementsByTagName("span");
					if (fe.length) {
						de.removeChild(fe[0]);
					}
					(fe = document.createElement("span")).innerHTML = s.inputPlaceholder;
					de.appendChild(fe);
					U(de);
					break;
				case "textarea":
					var he = V(w, i.textarea);
					he.value = s.inputValue;
					he.placeholder = s.inputPlaceholder;
					U(he);
					break;
				case null:
					break;
				default:
					r("Unexpected type of input! Expected \"text\", \"email\", \"password\", \"number\", \"tel\", \"select\", \"radio\", \"checkbox\", \"textarea\", \"file\" or \"url\", got \"" + s.input + "\"");
			}
			if (s.input === "select" || s.input === "radio") {
				if (s.inputOptions instanceof Promise) {
					e.showLoading();
					s.inputOptions.then(function (t) {
						e.hideLoading();
						oe(t);
					});
				} else if (u(s.inputOptions) === "object") {
					oe(s.inputOptions);
				} else {
					r("Unexpected type of inputOptions! Expected object or Promise, got " + u(s.inputOptions));
				}
			}
			(function (e, t, n) {
				var o = C();
				var a = S();
				if (t !== null && typeof t == "function") {
					t(a);
				}
				if (e) {
					B(a, i.show);
					B(o, i.fade);
					q(a, i.hide);
				} else {
					q(a, i.fade);
				}
				U(a);
				o.style.overflowY = "hidden";
				if (J && !R(a, i.noanimation)) {
					a.addEventListener(J, function e() {
						a.removeEventListener(J, e);
						o.style.overflowY = "auto";
					});
				} else {
					o.style.overflowY = "auto";
				}
				B(document.documentElement, i.shown);
				B(document.body, i.shown);
				B(o, i.shown);
				if (F()) {
					b();
					y();
				}
				_.previousActiveElement = document.activeElement;
				if (n !== null && typeof n == "function") {
					setTimeout(function () {
						n(a);
					});
				}
			})(s.animation, s.onBeforeOpen, s.onOpen);
			if (!s.toast) {
				if (s.allowEnterKey) {
					if (s.focusCancel && Y(L)) {
						L.focus();
					} else if (s.focusConfirm && Y(T)) {
						T.focus();
					} else {
						G(-1, 1);
					}
				} else if (document.activeElement) {
					document.activeElement.blur();
				}
			}
			C().scrollTop = 0;
		});
	};
	w.isVisible = function () {
		return !!S();
	};
	w.queue = function (e) {
		f = e;
		function t() {
			f = [];
			document.body.removeAttribute("data-swal2-queue-step");
		}
		var n = [];
		return new Promise(function (e, i) {
			(function i(o, a) {
				if (o < f.length) {
					document.body.setAttribute("data-swal2-queue-step", o);
					w(f[o]).then(function (s) {
						if (s.value !== undefined) {
							n.push(s.value);
							i(o + 1, a);
						} else {
							t();
							e({
								dismiss: s.dismiss
							});
						}
					});
				} else {
					t();
					e({
						value: n
					});
				}
			})(0);
		});
	};
	w.getQueueStep = function () {
		return document.body.getAttribute("data-swal2-queue-step");
	};
	w.insertQueueStep = function (e, t) {
		if (t && t < f.length) {
			return f.splice(t, 0, e);
		} else {
			return f.push(e);
		}
	};
	w.deleteQueueStep = function (e) {
		if (f[e] !== undefined) {
			f.splice(e, 1);
		}
	};
	w.close = w.closePopup = w.closeModal = w.closeToast = function (e) {
		var t = C();
		var n = S();
		if (n) {
			q(n, i.show);
			B(n, i.hide);
			clearTimeout(n.timeout);
			if (!L()) {
				X();
				window.onkeydown = h;
				m = false;
			}
			function o() {
				if (t.parentNode) {
					t.parentNode.removeChild(t);
				}
				q(document.documentElement, i.shown);
				q(document.body, i.shown);
				q(document.body, i["no-backdrop"]);
				q(document.body, i["has-input"]);
				q(document.body, i["toast-shown"]);
				if (F()) {
					if (_.previousBodyPadding !== null) {
						document.body.style.paddingRight = _.previousBodyPadding;
						_.previousBodyPadding = null;
					}
					(function () {
						if (R(document.body, i.iosfix)) {
							var e = parseInt(document.body.style.top, 10);
							q(document.body, i.iosfix);
							document.body.style.top = "";
							document.body.scrollTop = e * -1;
						}
					})();
				}
			}
			if (J && !R(n, i.noanimation)) {
				n.addEventListener(J, function e() {
					n.removeEventListener(J, e);
					if (R(n, i.hide)) {
						o();
					}
				});
			} else {
				o();
			}
			if (e !== null && typeof e == "function") {
				setTimeout(function () {
					e(n);
				});
			}
		}
	};
	w.clickConfirm = function () {
		return D().click();
	};
	w.clickCancel = function () {
		return I().click();
	};
	w.showLoading = w.enableLoading = function () {
		var e = S();
		if (!e) {
			w("");
		}
		e = S();
		var t = $();
		var n = D();
		var o = I();
		U(t);
		U(n, "inline-block");
		B(t, i.loading);
		B(e, i.loading);
		n.disabled = true;
		o.disabled = true;
		e.setAttribute("aria-busy", true);
		e.focus();
	};
	w.isValidParameter = function (t) {
		return e.hasOwnProperty(t) || t === "extraParams";
	};
	w.isDeprecatedParameter = function (e) {
		return t.indexOf(e) !== -1;
	};
	w.setDefaults = function (e) {
		if (!e || (e === undefined ? "undefined" : u(e)) !== "object") {
			return r("the argument for setDefaults() is required and has to be a object");
		}
		g(e);
		for (var t in e) {
			if (w.isValidParameter(t)) {
				p[t] = e[t];
			}
		}
	};
	w.resetDefaults = function () {
		p = d({}, e);
	};
	w.adaptInputValidator = function (e) {
		return function (t, n) {
			return e.call(this, t, n).then(function () {}, function (e) {
				return e;
			});
		};
	};
	w.noop = function () {};
	w.version = "7.0.3";
	w.default = w;
	var _ = {
		previousActiveElement: null,
		previousBodyPadding: null
	};
	function k(e) {
		var t = C();
		if (t) {
			t.parentNode.removeChild(t);
			q(document.body, i["no-backdrop"]);
			q(document.body, i["has-input"]);
			q(document.body, i["toast-shown"]);
		}
		if (typeof document != "undefined") {
			var n = document.createElement("div");
			n.className = i.container;
			n.innerHTML = x;
			(typeof e.target == "string" ? document.querySelector(e.target) : e.target).appendChild(n);
			var o = S();
			var a = V(o, i.input);
			var s = V(o, i.file);
			var l = o.querySelector("." + i.range + " input");
			var c = o.querySelector("." + i.range + " output");
			var u = V(o, i.select);
			var d = o.querySelector("." + i.checkbox + " input");
			var p = V(o, i.textarea);
			function f() {
				if (w.isVisible()) {
					w.resetValidationError();
				}
			}
			a.oninput = f;
			s.onchange = f;
			u.onchange = f;
			d.onchange = f;
			p.oninput = f;
			l.oninput = function () {
				f();
				c.value = l.value;
			};
			l.onchange = function () {
				f();
				l.previousSibling.value = l.value;
			};
			return o;
		}
		r("SweetAlert2 requires document to initialize");
	}
	var x = ("\n <div role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"" + i.title + "\" aria-describedby=\"" + i.content + "\" class=\"" + i.popup + "\" tabindex=\"-1\">\n   <ul class=\"" + i.progresssteps + "\"></ul>\n   <div class=\"" + i.icon + " " + o.error + "\">\n     <span class=\"swal2-x-mark\"><span class=\"swal2-x-mark-line-left\"></span><span class=\"swal2-x-mark-line-right\"></span></span>\n   </div>\n   <div class=\"" + i.icon + " " + o.question + "\">?</div>\n   <div class=\"" + i.icon + " " + o.warning + "\">!</div>\n   <div class=\"" + i.icon + " " + o.info + "\">i</div>\n   <div class=\"" + i.icon + " " + o.success + "\">\n     <div class=\"swal2-success-circular-line-left\"></div>\n     <span class=\"swal2-success-line-tip\"></span> <span class=\"swal2-success-line-long\"></span>\n     <div class=\"swal2-success-ring\"></div> <div class=\"swal2-success-fix\"></div>\n     <div class=\"swal2-success-circular-line-right\"></div>\n   </div>\n   <img class=\"" + i.image + "\" />\n   <div class=\"" + i.contentwrapper + "\">\n   <h2 class=\"" + i.title + "\" id=\"" + i.title + "\"></h2>\n   <div id=\"" + i.content + "\" class=\"" + i.content + "\"></div>\n   </div>\n   <input class=\"" + i.input + "\" />\n   <input type=\"file\" class=\"" + i.file + "\" />\n   <div class=\"" + i.range + "\">\n     <output></output>\n     <input type=\"range\" />\n   </div>\n   <select class=\"" + i.select + "\"></select>\n   <div class=\"" + i.radio + "\"></div>\n   <label for=\"" + i.checkbox + "\" class=\"" + i.checkbox + "\">\n     <input type=\"checkbox\" />\n   </label>\n   <textarea class=\"" + i.textarea + "\"></textarea>\n   <div class=\"" + i.validationerror + "\" id=\"" + i.validationerror + "\"></div>\n   <div class=\"" + i.buttonswrapper + "\">\n     <button type=\"button\" class=\"" + i.confirm + "\">OK</button>\n     <button type=\"button\" class=\"" + i.cancel + "\">Cancel</button>\n   </div>\n   <button type=\"button\" class=\"" + i.close + "\">×</button>\n </div>\n").replace(/(^|\n)\s*/g, "");
	function C() {
		return document.body.querySelector("." + i.container);
	}
	function S() {
		if (C()) {
			return C().querySelector("." + i.popup);
		} else {
			return null;
		}
	}
	function A() {
		return S().querySelectorAll("." + i.icon);
	}
	function T(e) {
		if (C()) {
			return C().querySelector("." + e);
		} else {
			return null;
		}
	}
	function P() {
		return T(i.title);
	}
	function j() {
		return T(i.content);
	}
	function E() {
		return T(i.image);
	}
	function N() {
		return T(i.progresssteps);
	}
	function O() {
		return T(i.validationerror);
	}
	function D() {
		return T(i.confirm);
	}
	function I() {
		return T(i.cancel);
	}
	function $() {
		return T(i.buttonswrapper);
	}
	function M() {
		return T(i.close);
	}
	function z() {
		var e = Array.from(S().querySelectorAll("[tabindex]:not([tabindex=\"-1\"]):not([tabindex=\"0\"])")).sort(function (e, t) {
			e = parseInt(e.getAttribute("tabindex"));
			t = parseInt(t.getAttribute("tabindex"));
			if (e > t) {
				return 1;
			} else if (e < t) {
				return -1;
			} else {
				return 0;
			}
		});
		var t = Array.prototype.slice.call(S().querySelectorAll("button, input:not([type=hidden]), textarea, select, a, [tabindex=\"0\"]"));
		return function (e) {
			var t = [];
			for (var n in e) {
				if (t.indexOf(e[n]) === -1) {
					t.push(e[n]);
				}
			}
			return t;
		}(e.concat(t));
	}
	function F() {
		return !document.body.classList.contains(i["toast-shown"]);
	}
	function L() {
		return document.body.classList.contains(i["toast-shown"]);
	}
	function R(e, t) {
		return !!e.classList && e.classList.contains(t);
	}
	function H(e) {
		e.focus();
		if (e.type !== "file") {
			var t = e.value;
			e.value = "";
			e.value = t;
		}
	}
	function B(e, t) {
		if (e && t) {
			t.split(/\s+/).filter(Boolean).forEach(function (t) {
				e.classList.add(t);
			});
		}
	}
	function q(e, t) {
		if (e && t) {
			t.split(/\s+/).filter(Boolean).forEach(function (t) {
				e.classList.remove(t);
			});
		}
	}
	function V(e, t) {
		for (var n = 0; n < e.childNodes.length; n++) {
			if (R(e.childNodes[n], t)) {
				return e.childNodes[n];
			}
		}
	}
	function U(e, t) {
		t ||= e === S() || e === $() ? "flex" : "block";
		e.style.opacity = "";
		e.style.display = t;
	}
	function W(e) {
		e.style.opacity = "";
		e.style.display = "none";
	}
	function G(e) {
		while (e.firstChild) {
			e.removeChild(e.firstChild);
		}
	}
	function Y(e) {
		return e.offsetWidth || e.offsetHeight || e.getClientRects().length;
	}
	function K(e, t) {
		if (e.style.removeProperty) {
			e.style.removeProperty(t);
		} else {
			e.style.removeAttribute(t);
		}
	}
	var J = function () {
		var e = document.createElement("div");
		var t = {
			WebkitAnimation: "webkitAnimationEnd",
			OAnimation: "oAnimationEnd oanimationend",
			animation: "animationend"
		};
		for (var n in t) {
			if (t.hasOwnProperty(n) && e.style[n] !== undefined) {
				return t[n];
			}
		}
		return false;
	}();
	function X() {
		if (_.previousActiveElement && _.previousActiveElement.focus) {
			var e = window.scrollX;
			var t = window.scrollY;
			_.previousActiveElement.focus();
			if (e && t) {
				window.scrollTo(e, t);
			}
		}
	}
	function Z() {
		if ("ontouchstart" in window || navigator.msMaxTouchPoints) {
			return 0;
		}
		var e = document.createElement("div");
		e.style.width = "50px";
		e.style.height = "50px";
		e.style.overflow = "scroll";
		document.body.appendChild(e);
		var t = e.offsetWidth - e.clientWidth;
		document.body.removeChild(e);
		return t;
	}
	(function (e = "") {
		var t = document.head || document.getElementsByTagName("head")[0];
		var n = document.createElement("style");
		n.type = "text/css";
		t.appendChild(n);
		if (n.styleSheet) {
			n.styleSheet.cssText = e;
		} else {
			n.appendChild(document.createTextNode(e));
		}
	})("body.swal2-shown:not(.swal2-no-backdrop) {\n  overflow-y: hidden; }\n\nbody.swal2-toast-shown {\n  overflow-y: auto; }\n  body.swal2-toast-shown.swal2-has-input > .swal2-container > .swal2-toast {\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n        -ms-flex-direction: column;\n            flex-direction: column; }\n    body.swal2-toast-shown.swal2-has-input > .swal2-container > .swal2-toast .swal2-icon {\n      margin: 0 0 15px; }\n    body.swal2-toast-shown.swal2-has-input > .swal2-container > .swal2-toast .swal2-buttonswrapper {\n      -webkit-box-flex: 1;\n          -ms-flex: 1;\n              flex: 1;\n      -ms-flex-item-align: stretch;\n          align-self: stretch;\n      -webkit-box-pack: end;\n          -ms-flex-pack: end;\n              justify-content: flex-end; }\n    body.swal2-toast-shown.swal2-has-input > .swal2-container > .swal2-toast .swal2-loading {\n      -webkit-box-pack: center;\n          -ms-flex-pack: center;\n              justify-content: center; }\n    body.swal2-toast-shown.swal2-has-input > .swal2-container > .swal2-toast .swal2-input {\n      height: 32px;\n      font-size: 14px;\n      margin: 5px auto; }\n  body.swal2-toast-shown > .swal2-container {\n    position: fixed;\n    background-color: transparent; }\n    body.swal2-toast-shown > .swal2-container.swal2-shown {\n      background-color: transparent; }\n    body.swal2-toast-shown > .swal2-container.swal2-top {\n      top: 0;\n      left: 50%;\n      bottom: auto;\n      right: auto;\n      -webkit-transform: translateX(-50%);\n              transform: translateX(-50%); }\n    body.swal2-toast-shown > .swal2-container.swal2-top-right {\n      top: 0;\n      left: auto;\n      bottom: auto;\n      right: 0; }\n    body.swal2-toast-shown > .swal2-container.swal2-top-left {\n      top: 0;\n      left: 0;\n      bottom: auto;\n      right: auto; }\n    body.swal2-toast-shown > .swal2-container.swal2-center-left {\n      top: 50%;\n      left: 0;\n      bottom: auto;\n      right: auto;\n      -webkit-transform: translateY(-50%);\n              transform: translateY(-50%); }\n    body.swal2-toast-shown > .swal2-container.swal2-center {\n      top: 50%;\n      left: 50%;\n      bottom: auto;\n      right: auto;\n      -webkit-transform: translate(-50%, -50%);\n              transform: translate(-50%, -50%); }\n    body.swal2-toast-shown > .swal2-container.swal2-center-right {\n      top: 50%;\n      left: auto;\n      bottom: auto;\n      right: 0;\n      -webkit-transform: translateY(-50%);\n              transform: translateY(-50%); }\n    body.swal2-toast-shown > .swal2-container.swal2-bottom-left {\n      top: auto;\n      left: 0;\n      bottom: 0;\n      right: auto; }\n    body.swal2-toast-shown > .swal2-container.swal2-bottom {\n      top: auto;\n      left: 50%;\n      bottom: 0;\n      right: auto;\n      -webkit-transform: translateX(-50%);\n              transform: translateX(-50%); }\n    body.swal2-toast-shown > .swal2-container.swal2-bottom-right {\n      top: auto;\n      left: auto;\n      bottom: 0;\n      right: 0; }\n\nbody.swal2-iosfix {\n  position: fixed;\n  left: 0;\n  right: 0; }\n\nbody.swal2-no-backdrop > .swal2-shown {\n  top: auto;\n  bottom: auto;\n  left: auto;\n  right: auto;\n  background-color: transparent; }\n  body.swal2-no-backdrop > .swal2-shown > .swal2-modal {\n    -webkit-box-shadow: 0 0 10px rgba(0, 0, 0, 0.4);\n            box-shadow: 0 0 10px rgba(0, 0, 0, 0.4); }\n  body.swal2-no-backdrop > .swal2-shown.swal2-top {\n    top: 0;\n    left: 50%;\n    -webkit-transform: translateX(-50%);\n            transform: translateX(-50%); }\n  body.swal2-no-backdrop > .swal2-shown.swal2-top-left {\n    top: 0;\n    left: 0; }\n  body.swal2-no-backdrop > .swal2-shown.swal2-top-right {\n    top: 0;\n    right: 0; }\n  body.swal2-no-backdrop > .swal2-shown.swal2-center {\n    top: 50%;\n    left: 50%;\n    -webkit-transform: translate(-50%, -50%);\n            transform: translate(-50%, -50%); }\n  body.swal2-no-backdrop > .swal2-shown.swal2-center-left {\n    top: 50%;\n    left: 0;\n    -webkit-transform: translateY(-50%);\n            transform: translateY(-50%); }\n  body.swal2-no-backdrop > .swal2-shown.swal2-center-right {\n    top: 50%;\n    right: 0;\n    -webkit-transform: translateY(-50%);\n            transform: translateY(-50%); }\n  body.swal2-no-backdrop > .swal2-shown.swal2-bottom {\n    bottom: 0;\n    left: 50%;\n    -webkit-transform: translateX(-50%);\n            transform: translateX(-50%); }\n  body.swal2-no-backdrop > .swal2-shown.swal2-bottom-left {\n    bottom: 0;\n    left: 0; }\n  body.swal2-no-backdrop > .swal2-shown.swal2-bottom-right {\n    bottom: 0;\n    right: 0; }\n\n.swal2-container {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: row;\n          flex-direction: row;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n  position: fixed;\n  padding: 10px;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: transparent;\n  z-index: 1060; }\n  .swal2-container.swal2-top {\n    -webkit-box-align: start;\n        -ms-flex-align: start;\n            align-items: flex-start; }\n  .swal2-container.swal2-top-left {\n    -webkit-box-align: start;\n        -ms-flex-align: start;\n            align-items: flex-start;\n    -webkit-box-pack: start;\n        -ms-flex-pack: start;\n            justify-content: flex-start; }\n  .swal2-container.swal2-top-right {\n    -webkit-box-align: start;\n        -ms-flex-align: start;\n            align-items: flex-start;\n    -webkit-box-pack: end;\n        -ms-flex-pack: end;\n            justify-content: flex-end; }\n  .swal2-container.swal2-center {\n    -webkit-box-align: center;\n        -ms-flex-align: center;\n            align-items: center; }\n  .swal2-container.swal2-center-left {\n    -webkit-box-align: center;\n        -ms-flex-align: center;\n            align-items: center;\n    -webkit-box-pack: start;\n        -ms-flex-pack: start;\n            justify-content: flex-start; }\n  .swal2-container.swal2-center-right {\n    -webkit-box-align: center;\n        -ms-flex-align: center;\n            align-items: center;\n    -webkit-box-pack: end;\n        -ms-flex-pack: end;\n            justify-content: flex-end; }\n  .swal2-container.swal2-bottom {\n    -webkit-box-align: end;\n        -ms-flex-align: end;\n            align-items: flex-end; }\n  .swal2-container.swal2-bottom-left {\n    -webkit-box-align: end;\n        -ms-flex-align: end;\n            align-items: flex-end;\n    -webkit-box-pack: start;\n        -ms-flex-pack: start;\n            justify-content: flex-start; }\n  .swal2-container.swal2-bottom-right {\n    -webkit-box-align: end;\n        -ms-flex-align: end;\n            align-items: flex-end;\n    -webkit-box-pack: end;\n        -ms-flex-pack: end;\n            justify-content: flex-end; }\n  .swal2-container.swal2-grow-fullscreen > .swal2-modal {\n    display: -webkit-box !important;\n    display: -ms-flexbox !important;\n    display: flex !important;\n    -webkit-box-flex: 1;\n        -ms-flex: 1;\n            flex: 1;\n    -ms-flex-item-align: stretch;\n        align-self: stretch;\n    -webkit-box-pack: center;\n        -ms-flex-pack: center;\n            justify-content: center; }\n  .swal2-container.swal2-grow-row > .swal2-modal {\n    display: -webkit-box !important;\n    display: -ms-flexbox !important;\n    display: flex !important;\n    -webkit-box-flex: 1;\n        -ms-flex: 1;\n            flex: 1;\n    -ms-flex-line-pack: center;\n        align-content: center;\n    -webkit-box-pack: center;\n        -ms-flex-pack: center;\n            justify-content: center; }\n  .swal2-container.swal2-grow-column {\n    -webkit-box-flex: 1;\n        -ms-flex: 1;\n            flex: 1;\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n        -ms-flex-direction: column;\n            flex-direction: column; }\n    .swal2-container.swal2-grow-column.swal2-top, .swal2-container.swal2-grow-column.swal2-center, .swal2-container.swal2-grow-column.swal2-bottom {\n      -webkit-box-align: center;\n          -ms-flex-align: center;\n              align-items: center; }\n    .swal2-container.swal2-grow-column.swal2-top-left, .swal2-container.swal2-grow-column.swal2-center-left, .swal2-container.swal2-grow-column.swal2-bottom-left {\n      -webkit-box-align: start;\n          -ms-flex-align: start;\n              align-items: flex-start; }\n    .swal2-container.swal2-grow-column.swal2-top-right, .swal2-container.swal2-grow-column.swal2-center-right, .swal2-container.swal2-grow-column.swal2-bottom-right {\n      -webkit-box-align: end;\n          -ms-flex-align: end;\n              align-items: flex-end; }\n    .swal2-container.swal2-grow-column > .swal2-modal {\n      display: -webkit-box !important;\n      display: -ms-flexbox !important;\n      display: flex !important;\n      -webkit-box-flex: 1;\n          -ms-flex: 1;\n              flex: 1;\n      -ms-flex-line-pack: center;\n          align-content: center;\n      -webkit-box-pack: center;\n          -ms-flex-pack: center;\n              justify-content: center; }\n  .swal2-container:not(.swal2-top):not(.swal2-top-left):not(.swal2-top-right):not(.swal2-center-left):not(.swal2-center-right):not(.swal2-bottom):not(.swal2-bottom-left):not(.swal2-bottom-right) > .swal2-modal {\n    margin: auto; }\n  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n    .swal2-container .swal2-modal {\n      margin: 0 !important; } }\n  .swal2-container.swal2-fade {\n    -webkit-transition: background-color .1s;\n    transition: background-color .1s; }\n  .swal2-container.swal2-shown {\n    background-color: rgba(0, 0, 0, 0.4); }\n\n.swal2-popup {\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: column;\n          flex-direction: column;\n  background-color: #fff;\n  font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-radius: 5px;\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box;\n  text-align: center;\n  overflow-x: hidden;\n  overflow-y: auto;\n  display: none;\n  position: relative;\n  max-width: 100%; }\n  .swal2-popup.swal2-toast {\n    width: 300px;\n    padding: 0 15px;\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: normal;\n        -ms-flex-direction: row;\n            flex-direction: row;\n    -webkit-box-align: center;\n        -ms-flex-align: center;\n            align-items: center;\n    overflow-y: hidden;\n    -webkit-box-shadow: 0 0 10px #d9d9d9;\n            box-shadow: 0 0 10px #d9d9d9; }\n    .swal2-popup.swal2-toast .swal2-title {\n      max-width: 300px;\n      font-size: 16px;\n      text-align: left; }\n    .swal2-popup.swal2-toast .swal2-content {\n      font-size: 14px;\n      text-align: left; }\n    .swal2-popup.swal2-toast .swal2-icon {\n      width: 32px;\n      height: 32px;\n      margin: 0 15px 0 0; }\n      .swal2-popup.swal2-toast .swal2-icon.swal2-success .swal2-success-ring {\n        width: 32px;\n        height: 32px; }\n      .swal2-popup.swal2-toast .swal2-icon.swal2-info, .swal2-popup.swal2-toast .swal2-icon.swal2-warning, .swal2-popup.swal2-toast .swal2-icon.swal2-question {\n        font-size: 26px;\n        line-height: 32px; }\n      .swal2-popup.swal2-toast .swal2-icon.swal2-error [class^='swal2-x-mark-line'] {\n        top: 14px;\n        width: 22px; }\n        .swal2-popup.swal2-toast .swal2-icon.swal2-error [class^='swal2-x-mark-line'][class$='left'] {\n          left: 5px; }\n        .swal2-popup.swal2-toast .swal2-icon.swal2-error [class^='swal2-x-mark-line'][class$='right'] {\n          right: 5px; }\n    .swal2-popup.swal2-toast .swal2-buttonswrapper {\n      margin: 0 0 0 5px; }\n    .swal2-popup.swal2-toast .swal2-styled {\n      margin: 0 0 0 5px;\n      padding: 5px 10px; }\n      .swal2-popup.swal2-toast .swal2-styled:focus {\n        -webkit-box-shadow: 0 0 0 1px #fff, 0 0 0 2px rgba(50, 100, 150, 0.4);\n                box-shadow: 0 0 0 1px #fff, 0 0 0 2px rgba(50, 100, 150, 0.4); }\n    .swal2-popup.swal2-toast .swal2-validationerror {\n      width: 100%;\n      margin: 5px -20px; }\n    .swal2-popup.swal2-toast .swal2-success {\n      border-color: #a5dc86; }\n      .swal2-popup.swal2-toast .swal2-success [class^='swal2-success-circular-line'] {\n        border-radius: 50%;\n        position: absolute;\n        width: 32px;\n        height: 64px;\n        -webkit-transform: rotate(45deg);\n                transform: rotate(45deg); }\n        .swal2-popup.swal2-toast .swal2-success [class^='swal2-success-circular-line'][class$='left'] {\n          border-radius: 64px 0 0 64px;\n          top: -4px;\n          left: -15px;\n          -webkit-transform: rotate(-45deg);\n                  transform: rotate(-45deg);\n          -webkit-transform-origin: 32px 32px;\n                  transform-origin: 32px 32px; }\n        .swal2-popup.swal2-toast .swal2-success [class^='swal2-success-circular-line'][class$='right'] {\n          border-radius: 0 64px 64px 0;\n          top: -5px;\n          left: 14px;\n          -webkit-transform-origin: 0 32px;\n                  transform-origin: 0 32px; }\n      .swal2-popup.swal2-toast .swal2-success .swal2-success-ring {\n        width: 32px;\n        height: 32px; }\n      .swal2-popup.swal2-toast .swal2-success .swal2-success-fix {\n        width: 7px;\n        height: 90px;\n        left: 28px;\n        top: 8px; }\n      .swal2-popup.swal2-toast .swal2-success [class^='swal2-success-line'] {\n        height: 5px; }\n        .swal2-popup.swal2-toast .swal2-success [class^='swal2-success-line'][class$='tip'] {\n          width: 12px;\n          left: 3px;\n          top: 18px; }\n        .swal2-popup.swal2-toast .swal2-success [class^='swal2-success-line'][class$='long'] {\n          width: 22px;\n          right: 3px;\n          top: 15px; }\n    .swal2-popup.swal2-toast .swal2-animate-success-line-tip {\n      -webkit-animation: animate-toast-success-tip .75s;\n              animation: animate-toast-success-tip .75s; }\n    .swal2-popup.swal2-toast .swal2-animate-success-line-long {\n      -webkit-animation: animate-toast-success-long .75s;\n              animation: animate-toast-success-long .75s; }\n  .swal2-popup:focus {\n    outline: none; }\n  .swal2-popup.swal2-loading {\n    overflow-y: hidden; }\n  .swal2-popup .swal2-title {\n    color: #595959;\n    font-size: 30px;\n    text-align: center;\n    font-weight: 600;\n    text-transform: none;\n    position: relative;\n    margin: 0 0 .4em;\n    padding: 0;\n    display: block;\n    word-wrap: break-word; }\n  .swal2-popup .swal2-buttonswrapper {\n    -webkit-box-align: center;\n        -ms-flex-align: center;\n            align-items: center;\n    -webkit-box-pack: center;\n        -ms-flex-pack: center;\n            justify-content: center;\n    margin-top: 15px; }\n    .swal2-popup .swal2-buttonswrapper:not(.swal2-loading) .swal2-styled[disabled] {\n      opacity: .4;\n      cursor: no-drop; }\n    .swal2-popup .swal2-buttonswrapper.swal2-loading .swal2-styled.swal2-confirm {\n      -webkit-box-sizing: border-box;\n              box-sizing: border-box;\n      border: 4px solid transparent;\n      border-color: transparent;\n      width: 40px;\n      height: 40px;\n      padding: 0;\n      margin: 7.5px;\n      vertical-align: top;\n      background-color: transparent !important;\n      color: transparent;\n      cursor: default;\n      border-radius: 100%;\n      -webkit-animation: rotate-loading 1.5s linear 0s infinite normal;\n              animation: rotate-loading 1.5s linear 0s infinite normal;\n      -webkit-user-select: none;\n         -moz-user-select: none;\n          -ms-user-select: none;\n              user-select: none; }\n    .swal2-popup .swal2-buttonswrapper.swal2-loading .swal2-styled.swal2-cancel {\n      margin-left: 30px;\n      margin-right: 30px; }\n    .swal2-popup .swal2-buttonswrapper.swal2-loading :not(.swal2-styled).swal2-confirm::after {\n      display: inline-block;\n      content: '';\n      margin-left: 5px;\n      vertical-align: -1px;\n      height: 15px;\n      width: 15px;\n      border: 3px solid #999999;\n      -webkit-box-shadow: 1px 1px 1px #fff;\n              box-shadow: 1px 1px 1px #fff;\n      border-right-color: transparent;\n      border-radius: 50%;\n      -webkit-animation: rotate-loading 1.5s linear 0s infinite normal;\n              animation: rotate-loading 1.5s linear 0s infinite normal; }\n  .swal2-popup .swal2-styled {\n    border: 0;\n    border-radius: 3px;\n    -webkit-box-shadow: none;\n            box-shadow: none;\n    color: #fff;\n    cursor: pointer;\n    font-size: 17px;\n    font-weight: 500;\n    margin: 15px 5px 0;\n    padding: 10px 32px; }\n    .swal2-popup .swal2-styled:focus {\n      outline: none;\n      -webkit-box-shadow: 0 0 0 2px #fff, 0 0 0 4px rgba(50, 100, 150, 0.4);\n              box-shadow: 0 0 0 2px #fff, 0 0 0 4px rgba(50, 100, 150, 0.4); }\n  .swal2-popup .swal2-image {\n    margin: 20px auto;\n    max-width: 100%; }\n  .swal2-popup .swal2-close {\n    background: transparent;\n    border: 0;\n    margin: 0;\n    padding: 0;\n    width: 38px;\n    height: 40px;\n    font-size: 36px;\n    line-height: 40px;\n    font-family: serif;\n    position: absolute;\n    top: 5px;\n    right: 8px;\n    cursor: pointer;\n    color: #cccccc;\n    -webkit-transition: color .1s ease;\n    transition: color .1s ease; }\n    .swal2-popup .swal2-close:hover {\n      color: #d55; }\n  .swal2-popup > .swal2-input,\n  .swal2-popup > .swal2-file,\n  .swal2-popup > .swal2-textarea,\n  .swal2-popup > .swal2-select,\n  .swal2-popup > .swal2-radio,\n  .swal2-popup > .swal2-checkbox {\n    display: none; }\n  .swal2-popup .swal2-content {\n    font-size: 18px;\n    text-align: center;\n    font-weight: 300;\n    position: relative;\n    float: none;\n    margin: 0;\n    padding: 0;\n    line-height: normal;\n    color: #545454;\n    word-wrap: break-word; }\n  .swal2-popup .swal2-input,\n  .swal2-popup .swal2-file,\n  .swal2-popup .swal2-textarea,\n  .swal2-popup .swal2-select,\n  .swal2-popup .swal2-radio,\n  .swal2-popup .swal2-checkbox {\n    margin: 20px auto; }\n  .swal2-popup .swal2-input,\n  .swal2-popup .swal2-file,\n  .swal2-popup .swal2-textarea {\n    width: 100%;\n    -webkit-box-sizing: border-box;\n            box-sizing: border-box;\n    font-size: 18px;\n    border-radius: 3px;\n    border: 1px solid #d9d9d9;\n    -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.06);\n            box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.06);\n    -webkit-transition: border-color .3s, -webkit-box-shadow .3s;\n    transition: border-color .3s, -webkit-box-shadow .3s;\n    transition: border-color .3s, box-shadow .3s;\n    transition: border-color .3s, box-shadow .3s, -webkit-box-shadow .3s; }\n    .swal2-popup .swal2-input.swal2-inputerror,\n    .swal2-popup .swal2-file.swal2-inputerror,\n    .swal2-popup .swal2-textarea.swal2-inputerror {\n      border-color: #f27474 !important;\n      -webkit-box-shadow: 0 0 2px #f27474 !important;\n              box-shadow: 0 0 2px #f27474 !important; }\n    .swal2-popup .swal2-input:focus,\n    .swal2-popup .swal2-file:focus,\n    .swal2-popup .swal2-textarea:focus {\n      outline: none;\n      border: 1px solid #b4dbed;\n      -webkit-box-shadow: 0 0 3px #c4e6f5;\n              box-shadow: 0 0 3px #c4e6f5; }\n    .swal2-popup .swal2-input::-webkit-input-placeholder,\n    .swal2-popup .swal2-file::-webkit-input-placeholder,\n    .swal2-popup .swal2-textarea::-webkit-input-placeholder {\n      color: #cccccc; }\n    .swal2-popup .swal2-input:-ms-input-placeholder,\n    .swal2-popup .swal2-file:-ms-input-placeholder,\n    .swal2-popup .swal2-textarea:-ms-input-placeholder {\n      color: #cccccc; }\n    .swal2-popup .swal2-input::-ms-input-placeholder,\n    .swal2-popup .swal2-file::-ms-input-placeholder,\n    .swal2-popup .swal2-textarea::-ms-input-placeholder {\n      color: #cccccc; }\n    .swal2-popup .swal2-input::placeholder,\n    .swal2-popup .swal2-file::placeholder,\n    .swal2-popup .swal2-textarea::placeholder {\n      color: #cccccc; }\n  .swal2-popup .swal2-range input {\n    float: left;\n    width: 80%; }\n  .swal2-popup .swal2-range output {\n    float: right;\n    width: 20%;\n    font-size: 20px;\n    font-weight: 600;\n    text-align: center; }\n  .swal2-popup .swal2-range input,\n  .swal2-popup .swal2-range output {\n    height: 43px;\n    line-height: 43px;\n    vertical-align: middle;\n    margin: 20px auto;\n    padding: 0; }\n  .swal2-popup .swal2-input {\n    height: 43px;\n    padding: 0 12px; }\n    .swal2-popup .swal2-input[type='number'] {\n      max-width: 150px; }\n  .swal2-popup .swal2-file {\n    font-size: 20px; }\n  .swal2-popup .swal2-textarea {\n    height: 108px;\n    padding: 12px; }\n  .swal2-popup .swal2-select {\n    color: #545454;\n    font-size: inherit;\n    padding: 5px 10px;\n    min-width: 40%;\n    max-width: 100%; }\n  .swal2-popup .swal2-radio {\n    border: 0; }\n    .swal2-popup .swal2-radio label:not(:first-child) {\n      margin-left: 20px; }\n    .swal2-popup .swal2-radio input,\n    .swal2-popup .swal2-radio span {\n      vertical-align: middle; }\n    .swal2-popup .swal2-radio input {\n      margin: 0 3px 0 0; }\n  .swal2-popup .swal2-checkbox {\n    color: #545454; }\n    .swal2-popup .swal2-checkbox input,\n    .swal2-popup .swal2-checkbox span {\n      vertical-align: middle; }\n  .swal2-popup .swal2-validationerror {\n    background-color: #f0f0f0;\n    margin: 0 -20px;\n    overflow: hidden;\n    padding: 10px;\n    color: gray;\n    font-size: 16px;\n    font-weight: 300;\n    display: none; }\n    .swal2-popup .swal2-validationerror::before {\n      content: '!';\n      display: inline-block;\n      width: 24px;\n      height: 24px;\n      border-radius: 50%;\n      background-color: #ea7d7d;\n      color: #fff;\n      line-height: 24px;\n      text-align: center;\n      margin-right: 10px; }\n\n@supports (-ms-accelerator: true) {\n  .swal2-range input {\n    width: 100% !important; }\n  .swal2-range output {\n    display: none; } }\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .swal2-range input {\n    width: 100% !important; }\n  .swal2-range output {\n    display: none; } }\n\n.swal2-icon {\n  width: 80px;\n  height: 80px;\n  border: 4px solid transparent;\n  border-radius: 50%;\n  margin: 20px auto 30px;\n  padding: 0;\n  position: relative;\n  -webkit-box-sizing: content-box;\n          box-sizing: content-box;\n  cursor: default;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none; }\n  .swal2-icon.swal2-error {\n    border-color: #f27474; }\n    .swal2-icon.swal2-error .swal2-x-mark {\n      position: relative;\n      display: block; }\n    .swal2-icon.swal2-error [class^='swal2-x-mark-line'] {\n      position: absolute;\n      height: 5px;\n      width: 47px;\n      background-color: #f27474;\n      display: block;\n      top: 37px;\n      border-radius: 2px; }\n      .swal2-icon.swal2-error [class^='swal2-x-mark-line'][class$='left'] {\n        -webkit-transform: rotate(45deg);\n                transform: rotate(45deg);\n        left: 17px; }\n      .swal2-icon.swal2-error [class^='swal2-x-mark-line'][class$='right'] {\n        -webkit-transform: rotate(-45deg);\n                transform: rotate(-45deg);\n        right: 16px; }\n  .swal2-icon.swal2-warning {\n    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\n    color: #f8bb86;\n    border-color: #facea8;\n    font-size: 60px;\n    line-height: 80px;\n    text-align: center; }\n  .swal2-icon.swal2-info {\n    font-family: 'Open Sans', sans-serif;\n    color: #3fc3ee;\n    border-color: #9de0f6;\n    font-size: 60px;\n    line-height: 80px;\n    text-align: center; }\n  .swal2-icon.swal2-question {\n    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\n    color: #87adbd;\n    border-color: #c9dae1;\n    font-size: 60px;\n    line-height: 80px;\n    text-align: center; }\n  .swal2-icon.swal2-success {\n    border-color: #a5dc86; }\n    .swal2-icon.swal2-success [class^='swal2-success-circular-line'] {\n      border-radius: 50%;\n      position: absolute;\n      width: 60px;\n      height: 120px;\n      -webkit-transform: rotate(45deg);\n              transform: rotate(45deg); }\n      .swal2-icon.swal2-success [class^='swal2-success-circular-line'][class$='left'] {\n        border-radius: 120px 0 0 120px;\n        top: -7px;\n        left: -33px;\n        -webkit-transform: rotate(-45deg);\n                transform: rotate(-45deg);\n        -webkit-transform-origin: 60px 60px;\n                transform-origin: 60px 60px; }\n      .swal2-icon.swal2-success [class^='swal2-success-circular-line'][class$='right'] {\n        border-radius: 0 120px 120px 0;\n        top: -11px;\n        left: 30px;\n        -webkit-transform: rotate(-45deg);\n                transform: rotate(-45deg);\n        -webkit-transform-origin: 0 60px;\n                transform-origin: 0 60px; }\n    .swal2-icon.swal2-success .swal2-success-ring {\n      width: 80px;\n      height: 80px;\n      border: 4px solid rgba(165, 220, 134, 0.2);\n      border-radius: 50%;\n      -webkit-box-sizing: content-box;\n              box-sizing: content-box;\n      position: absolute;\n      left: -4px;\n      top: -4px;\n      z-index: 2; }\n    .swal2-icon.swal2-success .swal2-success-fix {\n      width: 7px;\n      height: 90px;\n      position: absolute;\n      left: 28px;\n      top: 8px;\n      z-index: 1;\n      -webkit-transform: rotate(-45deg);\n              transform: rotate(-45deg); }\n    .swal2-icon.swal2-success [class^='swal2-success-line'] {\n      height: 5px;\n      background-color: #a5dc86;\n      display: block;\n      border-radius: 2px;\n      position: absolute;\n      z-index: 2; }\n      .swal2-icon.swal2-success [class^='swal2-success-line'][class$='tip'] {\n        width: 25px;\n        left: 14px;\n        top: 46px;\n        -webkit-transform: rotate(45deg);\n                transform: rotate(45deg); }\n      .swal2-icon.swal2-success [class^='swal2-success-line'][class$='long'] {\n        width: 47px;\n        right: 8px;\n        top: 38px;\n        -webkit-transform: rotate(-45deg);\n                transform: rotate(-45deg); }\n\n.swal2-progresssteps {\n  font-weight: 600;\n  margin: 0 0 20px;\n  padding: 0; }\n  .swal2-progresssteps li {\n    display: inline-block;\n    position: relative; }\n  .swal2-progresssteps .swal2-progresscircle {\n    background: #3085d6;\n    border-radius: 2em;\n    color: #fff;\n    height: 2em;\n    line-height: 2em;\n    text-align: center;\n    width: 2em;\n    z-index: 20; }\n    .swal2-progresssteps .swal2-progresscircle:first-child {\n      margin-left: 0; }\n    .swal2-progresssteps .swal2-progresscircle:last-child {\n      margin-right: 0; }\n    .swal2-progresssteps .swal2-progresscircle.swal2-activeprogressstep {\n      background: #3085d6; }\n      .swal2-progresssteps .swal2-progresscircle.swal2-activeprogressstep ~ .swal2-progresscircle {\n        background: #add8e6; }\n      .swal2-progresssteps .swal2-progresscircle.swal2-activeprogressstep ~ .swal2-progressline {\n        background: #add8e6; }\n  .swal2-progresssteps .swal2-progressline {\n    background: #3085d6;\n    height: .4em;\n    margin: 0 -1px;\n    z-index: 10; }\n\n[class^='swal2'] {\n  -webkit-tap-highlight-color: transparent; }\n\n@-webkit-keyframes showSweetToast {\n  0% {\n    -webkit-transform: translateY(-10px) rotateZ(2deg);\n            transform: translateY(-10px) rotateZ(2deg);\n    opacity: 0; }\n  33% {\n    -webkit-transform: translateY(0) rotateZ(-2deg);\n            transform: translateY(0) rotateZ(-2deg);\n    opacity: .5; }\n  66% {\n    -webkit-transform: translateY(5px) rotateZ(2deg);\n            transform: translateY(5px) rotateZ(2deg);\n    opacity: .7; }\n  100% {\n    -webkit-transform: translateY(0) rotateZ(0);\n            transform: translateY(0) rotateZ(0);\n    opacity: 1; } }\n\n@keyframes showSweetToast {\n  0% {\n    -webkit-transform: translateY(-10px) rotateZ(2deg);\n            transform: translateY(-10px) rotateZ(2deg);\n    opacity: 0; }\n  33% {\n    -webkit-transform: translateY(0) rotateZ(-2deg);\n            transform: translateY(0) rotateZ(-2deg);\n    opacity: .5; }\n  66% {\n    -webkit-transform: translateY(5px) rotateZ(2deg);\n            transform: translateY(5px) rotateZ(2deg);\n    opacity: .7; }\n  100% {\n    -webkit-transform: translateY(0) rotateZ(0);\n            transform: translateY(0) rotateZ(0);\n    opacity: 1; } }\n\n@-webkit-keyframes hideSweetToast {\n  0% {\n    opacity: 1; }\n  33% {\n    opacity: .5; }\n  100% {\n    -webkit-transform: rotateZ(1deg);\n            transform: rotateZ(1deg);\n    opacity: 0; } }\n\n@keyframes hideSweetToast {\n  0% {\n    opacity: 1; }\n  33% {\n    opacity: .5; }\n  100% {\n    -webkit-transform: rotateZ(1deg);\n            transform: rotateZ(1deg);\n    opacity: 0; } }\n\n@-webkit-keyframes showSweetAlert {\n  0% {\n    -webkit-transform: scale(0.7);\n            transform: scale(0.7); }\n  45% {\n    -webkit-transform: scale(1.05);\n            transform: scale(1.05); }\n  80% {\n    -webkit-transform: scale(0.95);\n            transform: scale(0.95); }\n  100% {\n    -webkit-transform: scale(1);\n            transform: scale(1); } }\n\n@keyframes showSweetAlert {\n  0% {\n    -webkit-transform: scale(0.7);\n            transform: scale(0.7); }\n  45% {\n    -webkit-transform: scale(1.05);\n            transform: scale(1.05); }\n  80% {\n    -webkit-transform: scale(0.95);\n            transform: scale(0.95); }\n  100% {\n    -webkit-transform: scale(1);\n            transform: scale(1); } }\n\n@-webkit-keyframes hideSweetAlert {\n  0% {\n    -webkit-transform: scale(1);\n            transform: scale(1);\n    opacity: 1; }\n  100% {\n    -webkit-transform: scale(0.5);\n            transform: scale(0.5);\n    opacity: 0; } }\n\n@keyframes hideSweetAlert {\n  0% {\n    -webkit-transform: scale(1);\n            transform: scale(1);\n    opacity: 1; }\n  100% {\n    -webkit-transform: scale(0.5);\n            transform: scale(0.5);\n    opacity: 0; } }\n\n.swal2-show {\n  -webkit-animation: showSweetAlert .3s;\n          animation: showSweetAlert .3s; }\n  .swal2-show.swal2-toast {\n    -webkit-animation: showSweetToast .5s;\n            animation: showSweetToast .5s; }\n  .swal2-show.swal2-noanimation {\n    -webkit-animation: none;\n            animation: none; }\n\n.swal2-hide {\n  -webkit-animation: hideSweetAlert .15s forwards;\n          animation: hideSweetAlert .15s forwards; }\n  .swal2-hide.swal2-toast {\n    -webkit-animation: hideSweetToast .2s forwards;\n            animation: hideSweetToast .2s forwards; }\n  .swal2-hide.swal2-noanimation {\n    -webkit-animation: none;\n            animation: none; }\n\n@-webkit-keyframes animate-success-tip {\n  0% {\n    width: 0;\n    left: 1px;\n    top: 19px; }\n  54% {\n    width: 0;\n    left: 1px;\n    top: 19px; }\n  70% {\n    width: 50px;\n    left: -8px;\n    top: 37px; }\n  84% {\n    width: 17px;\n    left: 21px;\n    top: 48px; }\n  100% {\n    width: 25px;\n    left: 14px;\n    top: 45px; } }\n\n@keyframes animate-success-tip {\n  0% {\n    width: 0;\n    left: 1px;\n    top: 19px; }\n  54% {\n    width: 0;\n    left: 1px;\n    top: 19px; }\n  70% {\n    width: 50px;\n    left: -8px;\n    top: 37px; }\n  84% {\n    width: 17px;\n    left: 21px;\n    top: 48px; }\n  100% {\n    width: 25px;\n    left: 14px;\n    top: 45px; } }\n\n@-webkit-keyframes animate-success-long {\n  0% {\n    width: 0;\n    right: 46px;\n    top: 54px; }\n  65% {\n    width: 0;\n    right: 46px;\n    top: 54px; }\n  84% {\n    width: 55px;\n    right: 0;\n    top: 35px; }\n  100% {\n    width: 47px;\n    right: 8px;\n    top: 38px; } }\n\n@keyframes animate-success-long {\n  0% {\n    width: 0;\n    right: 46px;\n    top: 54px; }\n  65% {\n    width: 0;\n    right: 46px;\n    top: 54px; }\n  84% {\n    width: 55px;\n    right: 0;\n    top: 35px; }\n  100% {\n    width: 47px;\n    right: 8px;\n    top: 38px; } }\n\n@-webkit-keyframes animate-toast-success-tip {\n  0% {\n    width: 0;\n    left: 1px;\n    top: 9px; }\n  54% {\n    width: 0;\n    left: 1px;\n    top: 9px; }\n  70% {\n    width: 24px;\n    left: -4px;\n    top: 17px; }\n  84% {\n    width: 8px;\n    left: 10px;\n    top: 20px; }\n  100% {\n    width: 12px;\n    left: 3px;\n    top: 18px; } }\n\n@keyframes animate-toast-success-tip {\n  0% {\n    width: 0;\n    left: 1px;\n    top: 9px; }\n  54% {\n    width: 0;\n    left: 1px;\n    top: 9px; }\n  70% {\n    width: 24px;\n    left: -4px;\n    top: 17px; }\n  84% {\n    width: 8px;\n    left: 10px;\n    top: 20px; }\n  100% {\n    width: 12px;\n    left: 3px;\n    top: 18px; } }\n\n@-webkit-keyframes animate-toast-success-long {\n  0% {\n    width: 0;\n    right: 22px;\n    top: 26px; }\n  65% {\n    width: 0;\n    right: 22px;\n    top: 26px; }\n  84% {\n    width: 26px;\n    right: 0;\n    top: 15px; }\n  100% {\n    width: 22px;\n    right: 3px;\n    top: 15px; } }\n\n@keyframes animate-toast-success-long {\n  0% {\n    width: 0;\n    right: 22px;\n    top: 26px; }\n  65% {\n    width: 0;\n    right: 22px;\n    top: 26px; }\n  84% {\n    width: 26px;\n    right: 0;\n    top: 15px; }\n  100% {\n    width: 22px;\n    right: 3px;\n    top: 15px; } }\n\n@-webkit-keyframes rotatePlaceholder {\n  0% {\n    -webkit-transform: rotate(-45deg);\n            transform: rotate(-45deg); }\n  5% {\n    -webkit-transform: rotate(-45deg);\n            transform: rotate(-45deg); }\n  12% {\n    -webkit-transform: rotate(-405deg);\n            transform: rotate(-405deg); }\n  100% {\n    -webkit-transform: rotate(-405deg);\n            transform: rotate(-405deg); } }\n\n@keyframes rotatePlaceholder {\n  0% {\n    -webkit-transform: rotate(-45deg);\n            transform: rotate(-45deg); }\n  5% {\n    -webkit-transform: rotate(-45deg);\n            transform: rotate(-45deg); }\n  12% {\n    -webkit-transform: rotate(-405deg);\n            transform: rotate(-405deg); }\n  100% {\n    -webkit-transform: rotate(-405deg);\n            transform: rotate(-405deg); } }\n\n.swal2-animate-success-line-tip {\n  -webkit-animation: animate-success-tip .75s;\n          animation: animate-success-tip .75s; }\n\n.swal2-animate-success-line-long {\n  -webkit-animation: animate-success-long .75s;\n          animation: animate-success-long .75s; }\n\n.swal2-success.swal2-animate-success-icon .swal2-success-circular-line-right {\n  -webkit-animation: rotatePlaceholder 4.25s ease-in;\n          animation: rotatePlaceholder 4.25s ease-in; }\n\n@-webkit-keyframes animate-error-icon {\n  0% {\n    -webkit-transform: rotateX(100deg);\n            transform: rotateX(100deg);\n    opacity: 0; }\n  100% {\n    -webkit-transform: rotateX(0deg);\n            transform: rotateX(0deg);\n    opacity: 1; } }\n\n@keyframes animate-error-icon {\n  0% {\n    -webkit-transform: rotateX(100deg);\n            transform: rotateX(100deg);\n    opacity: 0; }\n  100% {\n    -webkit-transform: rotateX(0deg);\n            transform: rotateX(0deg);\n    opacity: 1; } }\n\n.swal2-animate-error-icon {\n  -webkit-animation: animate-error-icon .5s;\n          animation: animate-error-icon .5s; }\n\n@-webkit-keyframes animate-x-mark {\n  0% {\n    -webkit-transform: scale(0.4);\n            transform: scale(0.4);\n    margin-top: 26px;\n    opacity: 0; }\n  50% {\n    -webkit-transform: scale(0.4);\n            transform: scale(0.4);\n    margin-top: 26px;\n    opacity: 0; }\n  80% {\n    -webkit-transform: scale(1.15);\n            transform: scale(1.15);\n    margin-top: -6px; }\n  100% {\n    -webkit-transform: scale(1);\n            transform: scale(1);\n    margin-top: 0;\n    opacity: 1; } }\n\n@keyframes animate-x-mark {\n  0% {\n    -webkit-transform: scale(0.4);\n            transform: scale(0.4);\n    margin-top: 26px;\n    opacity: 0; }\n  50% {\n    -webkit-transform: scale(0.4);\n            transform: scale(0.4);\n    margin-top: 26px;\n    opacity: 0; }\n  80% {\n    -webkit-transform: scale(1.15);\n            transform: scale(1.15);\n    margin-top: -6px; }\n  100% {\n    -webkit-transform: scale(1);\n            transform: scale(1);\n    margin-top: 0;\n    opacity: 1; } }\n\n.swal2-animate-x-mark {\n  -webkit-animation: animate-x-mark .5s;\n          animation: animate-x-mark .5s; }\n\n@-webkit-keyframes rotate-loading {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg); }\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg); } }\n\n@keyframes rotate-loading {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg); }\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg); } }\n");
	return w;
});
if (window.Sweetalert2) {
	window.sweetAlert = window.swal = window.Sweetalert2;
}
(function (e) {
	(typeof define == "function" && define.amd ? define : function (e, t) {
		if (typeof module != "undefined" && module.exports) {
			module.exports = t(require("jquery"));
		} else {
			window.toastr = t(window.jQuery);
		}
	})(["jquery"], function (e) {
		return function () {
			function t(t, n) {
				t ||= l();
				if ((u = e("#" + t.containerId)).length) {
					return u;
				} else {
					if (n) {
						u = o(t);
					}
					return u;
				}
			}
			function n(t) {
				var n = u.children();
				for (var o = n.length - 1; o >= 0; o--) {
					i(e(n[o]), t);
				}
			}
			function i(t, n, i) {
				var o = !!i && !!i.force && i.force;
				return !!t && (!!o || e(":focus", t).length === 0) && !(t[n.hideMethod]({
					duration: n.hideDuration,
					easing: n.hideEasing,
					complete: function () {
						c(t);
					}
				}), 0);
			}
			function o(t) {
				(u = e("<div/>").attr("id", t.containerId).addClass(t.positionClass)).appendTo(e(t.target));
				return u;
			}
			function a() {
				return {
					tapToDismiss: true,
					toastClass: "toast",
					containerId: "toast-container",
					debug: false,
					showMethod: "fadeIn",
					showDuration: 300,
					showEasing: "swing",
					onShown: undefined,
					hideMethod: "fadeOut",
					hideDuration: 1000,
					hideEasing: "swing",
					onHidden: undefined,
					closeMethod: false,
					closeDuration: false,
					closeEasing: false,
					closeOnHover: true,
					extendedTimeOut: 1000,
					iconClasses: {
						error: "toast-error",
						info: "toast-info",
						success: "toast-success",
						warning: "toast-warning"
					},
					iconClass: "toast-info",
					positionClass: "toast-top-right",
					timeOut: 5000,
					titleClass: "toast-title",
					messageClass: "toast-message",
					escapeHtml: false,
					target: "body",
					closeHtml: "<button type=\"button\">&times;</button>",
					closeClass: "toast-close-button",
					newestOnTop: true,
					preventDuplicates: false,
					progressBar: false,
					progressClass: "toast-progress",
					rtl: false
				};
			}
			function s(e) {
				if (d) {
					d(e);
				}
			}
			function r(n) {
				function i(e) {
					if (e == null) {
						e = "";
					}
					return e.replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&#39;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
				}
				function o() {
					var e = "";
					switch (n.iconClass) {
						case "toast-success":
						case "toast-info":
							e = "polite";
							break;
						default:
							e = "assertive";
					}
					S.attr("aria-live", e);
				}
				function a() {
					if (n.iconClass) {
						S.addClass(k.toastClass).addClass(x);
					}
				}
				function r() {
					if (k.newestOnTop) {
						u.prepend(S);
					} else {
						u.append(S);
					}
				}
				function d() {
					if (n.title) {
						var e = n.title;
						if (k.escapeHtml) {
							e = i(n.title);
						}
						A.append(e).addClass(k.titleClass);
						S.append(A);
					}
				}
				function h() {
					if (n.message) {
						var e = n.message;
						if (k.escapeHtml) {
							e = i(n.message);
						}
						T.append(e).addClass(k.messageClass);
						S.append(T);
					}
				}
				function m() {
					if (k.closeButton) {
						j.addClass(k.closeClass).attr("role", "button");
						S.prepend(j);
					}
				}
				function g() {
					if (k.progressBar) {
						P.addClass(k.progressClass);
						S.prepend(P);
					}
				}
				function v() {
					if (k.rtl) {
						S.addClass("rtl");
					}
				}
				function b(t) {
					var n = t && k.closeMethod !== false ? k.closeMethod : k.hideMethod;
					var i = t && k.closeDuration !== false ? k.closeDuration : k.hideDuration;
					var o = t && k.closeEasing !== false ? k.closeEasing : k.hideEasing;
					if (!e(":focus", S).length || t) {
						clearTimeout(E.intervalId);
						return S[n]({
							duration: i,
							easing: o,
							complete: function () {
								c(S);
								clearTimeout(C);
								if (k.onHidden && N.state !== "hidden") {
									k.onHidden();
								}
								N.state = "hidden";
								N.endTime = new Date();
								s(N);
							}
						});
					}
				}
				function y() {
					if (k.timeOut > 0 || k.extendedTimeOut > 0) {
						C = setTimeout(b, k.extendedTimeOut);
						E.maxHideTime = parseFloat(k.extendedTimeOut);
						E.hideEta = new Date().getTime() + E.maxHideTime;
					}
				}
				function w() {
					clearTimeout(C);
					E.hideEta = 0;
					S.stop(true, true)[k.showMethod]({
						duration: k.showDuration,
						easing: k.showEasing
					});
				}
				function _() {
					var e = (E.hideEta - new Date().getTime()) / E.maxHideTime * 100;
					P.width(e + "%");
				}
				var k = l();
				var x = n.iconClass || k.iconClass;
				if (n.optionsOverride !== undefined) {
					k = e.extend(k, n.optionsOverride);
					x = n.optionsOverride.iconClass || x;
				}
				if (!function (e, t) {
					if (e.preventDuplicates) {
						if (t.message === p) {
							return true;
						}
						p = t.message;
					}
					return false;
				}(k, n)) {
					f++;
					u = t(k, true);
					var C = null;
					var S = e("<div/>");
					var A = e("<div/>");
					var T = e("<div/>");
					var P = e("<div/>");
					var j = e(k.closeHtml);
					var E = {
						intervalId: null,
						hideEta: null,
						maxHideTime: null
					};
					var N = {
						toastId: f,
						state: "visible",
						startTime: new Date(),
						options: k,
						map: n
					};
					a();
					d();
					h();
					m();
					g();
					v();
					r();
					o();
					S.hide();
					S[k.showMethod]({
						duration: k.showDuration,
						easing: k.showEasing,
						complete: k.onShown
					});
					if (k.timeOut > 0) {
						C = setTimeout(b, k.timeOut);
						E.maxHideTime = parseFloat(k.timeOut);
						E.hideEta = new Date().getTime() + E.maxHideTime;
						if (k.progressBar) {
							E.intervalId = setInterval(_, 10);
						}
					}
					if (k.closeOnHover) {
						S.hover(w, y);
					}
					if (!k.onclick && k.tapToDismiss) {
						S.click(b);
					}
					if (k.closeButton && j) {
						j.click(function (e) {
							if (e.stopPropagation) {
								e.stopPropagation();
							} else if (e.cancelBubble !== undefined && e.cancelBubble !== true) {
								e.cancelBubble = true;
							}
							if (k.onCloseClick) {
								k.onCloseClick(e);
							}
							b(true);
						});
					}
					if (k.onclick) {
						S.click(function (e) {
							k.onclick(e);
							b();
						});
					}
					s(N);
					if (k.debug && console) {
						console.log(N);
					}
					return S;
				}
			}
			function l() {
				return e.extend({}, a(), m.options);
			}
			function c(e) {
				u ||= t();
				if (!e.is(":visible")) {
					e.remove();
					e = null;
					if (u.children().length === 0) {
						u.remove();
						p = undefined;
					}
				}
			}
			var u;
			var d;
			var p;
			var f = 0;
			var h = {
				error: "error",
				info: "info",
				success: "success",
				warning: "warning"
			};
			var m = {
				clear: function (e, o) {
					var a = l();
					if (!u) {
						t(a);
					}
					if (!i(e, a, o)) {
						n(a);
					}
				},
				remove: function (n) {
					var i = l();
					if (!u) {
						t(i);
					}
					if (n && e(":focus", n).length === 0) {
						c(n);
						return;
					} else {
						if (u.children().length) {
							u.remove();
						}
						return;
					}
				},
				error: function (e, t, n) {
					return r({
						type: h.error,
						iconClass: l().iconClasses.error,
						message: e,
						optionsOverride: n,
						title: t
					});
				},
				getContainer: t,
				info: function (e, t, n) {
					return r({
						type: h.info,
						iconClass: l().iconClasses.info,
						message: e,
						optionsOverride: n,
						title: t
					});
				},
				options: {},
				subscribe: function (e) {
					d = e;
				},
				success: function (e, t, n) {
					return r({
						type: h.success,
						iconClass: l().iconClasses.success,
						message: e,
						optionsOverride: n,
						title: t
					});
				},
				version: "2.1.4",
				warning: function (e, t, n) {
					return r({
						type: h.warning,
						iconClass: l().iconClasses.warning,
						message: e,
						optionsOverride: n,
						title: t
					});
				}
			};
			return m;
		}();
	});
})();
function Vector2(e, t) {
	this.x = e || 0;
	this.y = t || 0;
}
Vector2.prototype = {
	reset: function (e, t) {
		this.x = e;
		this.y = t;
		return this;
	},
	toString: function (e) {
		e = e || 3;
		var t = Math.pow(10, e);
		return "[" + Math.round(this.x * t) / t + ", " + Math.round(this.y * t) / t + "]";
	},
	clone: function () {
		return new Vector2(this.x, this.y);
	},
	copyTo: function (e) {
		e.x = this.x;
		e.y = this.y;
	},
	copyFrom: function (e) {
		this.x = e.x;
		this.y = e.y;
	},
	magnitude: function () {
		return Math.sqrt(this.x * this.x + this.y * this.y);
	},
	magnitudeSquared: function () {
		return this.x * this.x + this.y * this.y;
	},
	normalise: function () {
		var e = this.magnitude();
		this.x = this.x / e;
		this.y = this.y / e;
		return this;
	},
	reverse: function () {
		this.x = -this.x;
		this.y = -this.y;
		return this;
	},
	plusEq: function (e) {
		this.x += e.x;
		this.y += e.y;
		return this;
	},
	plusNew: function (e) {
		return new Vector2(this.x + e.x, this.y + e.y);
	},
	minusEq: function (e) {
		this.x -= e.x;
		this.y -= e.y;
		return this;
	},
	minusNew: function (e) {
		return new Vector2(this.x - e.x, this.y - e.y);
	},
	multiplyEq: function (e) {
		this.x *= e;
		this.y *= e;
		return this;
	},
	multiplyNew: function (e) {
		return this.clone().multiplyEq(e);
	},
	divideEq: function (e) {
		this.x /= e;
		this.y /= e;
		return this;
	},
	divideNew: function (e) {
		return this.clone().divideEq(e);
	},
	dot: function (e) {
		return this.x * e.x + this.y * e.y;
	},
	angle: function (e) {
		return Math.atan2(this.y, this.x) * (e ? 1 : Vector2Const.TO_DEGREES);
	},
	rotate: function (e, t) {
		var n = Math.cos(e * (t ? 1 : Vector2Const.TO_RADIANS));
		var i = Math.sin(e * (t ? 1 : Vector2Const.TO_RADIANS));
		Vector2Const.temp.copyFrom(this);
		this.x = Vector2Const.temp.x * n - Vector2Const.temp.y * i;
		this.y = Vector2Const.temp.x * i + Vector2Const.temp.y * n;
		return this;
	},
	equals: function (e) {
		return this.x == e.x && this.y == e.x;
	},
	isCloseTo: function (e, t) {
		return !!this.equals(e) || (Vector2Const.temp.copyFrom(this), Vector2Const.temp.minusEq(e), Vector2Const.temp.magnitudeSquared() < t * t);
	},
	rotateAroundPoint: function (e, t, n) {
		Vector2Const.temp.copyFrom(this);
		Vector2Const.temp.minusEq(e);
		Vector2Const.temp.rotate(t, n);
		Vector2Const.temp.plusEq(e);
		this.copyFrom(Vector2Const.temp);
	},
	isMagLessThan: function (e) {
		return this.magnitudeSquared() < e * e;
	},
	isMagGreaterThan: function (e) {
		return this.magnitudeSquared() > e * e;
	}
};
Vector2Const = {
	TO_DEGREES: 180 / Math.PI,
	TO_RADIANS: Math.PI / 180,
	temp: new Vector2()
};
(function (e) {
	function t(i) {
		if (n[i]) {
			return n[i].exports;
		}
		var o = n[i] = {
			i: i,
			l: false,
			exports: {}
		};
		e[i].call(o.exports, o, o.exports, t);
		o.l = true;
		return o.exports;
	}
	var n = {};
	t.m = e;
	t.c = n;
	t.i = function (e) {
		return e;
	};
	t.d = function (e, n, i) {
		if (!t.o(e, n)) {
			Object.defineProperty(e, n, {
				configurable: false,
				enumerable: true,
				get: i
			});
		}
	};
	t.n = function (e) {
		var n = e && e.__esModule ? function () {
			return e.default;
		} : function () {
			return e;
		};
		t.d(n, "a", n);
		return n;
	};
	t.o = function (e, t) {
		return Object.prototype.hasOwnProperty.call(e, t);
	};
	t.p = "/agar.rs/assets/js/";
	t(t.s = 53);
})([function (e, t) {
	e.exports = function (e, t, n, i) {
		var o;
		var a = e = e || {};
		var s = typeof e.default;
		if (s === "object" || s === "function") {
			o = e;
			a = e.default;
		}
		var r = typeof a == "function" ? a.options : a;
		if (t) {
			r.render = t.render;
			r.staticRenderFns = t.staticRenderFns;
		}
		if (n) {
			r._scopeId = n;
		}
		if (i) {
			var l = Object.create(r.computed || null);
			Object.keys(i).forEach(function (e) {
				var t = i[e];
				l[e] = function () {
					return t;
				};
			});
			r.computed = l;
		}
		return {
			esModule: o,
			exports: a,
			options: r
		};
	};
}, function (e, t) {
	e.exports = function () {
		var e = [];
		e.toString = function () {
			var e = [];
			for (var t = 0; t < this.length; t++) {
				var n = this[t];
				if (n[2]) {
					e.push("@media " + n[2] + "{" + n[1] + "}");
				} else {
					e.push(n[1]);
				}
			}
			return e.join("");
		};
		e.i = function (t, n) {
			if (typeof t == "string") {
				t = [[null, t, ""]];
			}
			var i = {};
			for (var o = 0; o < this.length; o++) {
				var a = this[o][0];
				if (typeof a == "number") {
					i[a] = true;
				}
			}
			for (o = 0; o < t.length; o++) {
				var s = t[o];
				if (typeof s[0] != "number" || !i[s[0]]) {
					if (n && !s[2]) {
						s[2] = n;
					} else if (n) {
						s[2] = "(" + s[2] + ") and (" + n + ")";
					}
					e.push(s);
				}
			}
		};
		return e;
	};
}, function (e, t, n) {
	function i(e) {
		for (var t = 0; t < e.length; t++) {
			var n = e[t];
			var i = u[n.id];
			if (i) {
				i.refs++;
				for (s = 0; s < i.parts.length; s++) {
					i.parts[s](n.parts[s]);
				}
				for (; s < n.parts.length; s++) {
					i.parts.push(a(n.parts[s]));
				}
				if (i.parts.length > n.parts.length) {
					i.parts.length = n.parts.length;
				}
			} else {
				var o = [];
				for (var s = 0; s < n.parts.length; s++) {
					o.push(a(n.parts[s]));
				}
				u[n.id] = {
					id: n.id,
					refs: 1,
					parts: o
				};
			}
		}
	}
	function o() {
		var e = document.createElement("style");
		e.type = "text/css";
		d.appendChild(e);
		return e;
	}
	function a(e) {
		var t;
		var n;
		var i = document.querySelector("style[data-vue-ssr-id~=\"" + e.id + "\"]");
		if (i) {
			if (h) {
				return m;
			}
			i.parentNode.removeChild(i);
		}
		if (g) {
			var a = f++;
			i = p ||= o();
			t = s.bind(null, i, a, false);
			n = s.bind(null, i, a, true);
		} else {
			i = o();
			t = r.bind(null, i);
			n = function () {
				i.parentNode.removeChild(i);
			};
		}
		t(e);
		return function (i) {
			if (i) {
				if (i.css === e.css && i.media === e.media && i.sourceMap === e.sourceMap) {
					return;
				}
				t(e = i);
			} else {
				n();
			}
		};
	}
	function s(e, t, n, i) {
		var o = n ? "" : i.css;
		if (e.styleSheet) {
			e.styleSheet.cssText = v(t, o);
		} else {
			var a = document.createTextNode(o);
			var s = e.childNodes;
			if (s[t]) {
				e.removeChild(s[t]);
			}
			if (s.length) {
				e.insertBefore(a, s[t]);
			} else {
				e.appendChild(a);
			}
		}
	}
	function r(e, t) {
		var n = t.css;
		var i = t.media;
		var o = t.sourceMap;
		if (i) {
			e.setAttribute("media", i);
		}
		if (o) {
			n += "\n/*# sourceURL=" + o.sources[0] + " */";
			n += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(o)))) + " */";
		}
		if (e.styleSheet) {
			e.styleSheet.cssText = n;
		} else {
			while (e.firstChild) {
				e.removeChild(e.firstChild);
			}
			e.appendChild(document.createTextNode(n));
		}
	}
	var l = typeof document != "undefined";
	if (typeof DEBUG != "undefined" && DEBUG && !l) {
		throw new Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");
	}
	var c = n(167);
	var u = {};
	var d = l && (document.head || document.getElementsByTagName("head")[0]);
	var p = null;
	var f = 0;
	var h = false;
	function m() {}
	var g = typeof navigator != "undefined" && /msie [6-9]\b/.test(navigator.userAgent.toLowerCase());
	e.exports = function (e, t, n) {
		h = n;
		var o = c(e, t);
		i(o);
		return function (t) {
			var n = [];
			for (var a = 0; a < o.length; a++) {
				var s = o[a];
				(r = u[s.id]).refs--;
				n.push(r);
			}
			if (t) {
				o = c(e, t);
				i(o);
			} else {
				o = [];
			}
			for (a = 0; a < n.length; a++) {
				var r = n[a];
				if (r.refs === 0) {
					for (var l = 0; l < r.parts.length; l++) {
						r.parts[l]();
					}
					delete u[r.id];
				}
			}
		};
	};
	var v = function () {
		var e = [];
		return function (t, n) {
			e[t] = n;
			return e.filter(Boolean).join("\n");
		};
	}();
}, function (e, t, n) {
	"use strict";

	function i(e) {
		if (C) {
			e._devtoolHook = C;
			C.emit("vuex:init", e);
			C.on("vuex:travel-to-state", function (t) {
				e.replaceState(t);
			});
			e.subscribe(function (e, t) {
				C.emit("vuex:mutation", e, t);
			});
		}
	}
	function o(e, t) {
		Object.keys(e).forEach(function (n) {
			return t(e[n], n);
		});
	}
	function a(e) {
		return e !== null && typeof e == "object";
	}
	function s(e) {
		return e && typeof e.then == "function";
	}
	function r(e, t, n) {
		t.update(n);
		if (n.modules) {
			for (var i in n.modules) {
				if (!t.getChild(i)) {
					return;
				}
				r(e.concat(i), t.getChild(i), n.modules[i]);
			}
		}
	}
	function l(e, t) {
		e._actions = Object.create(null);
		e._mutations = Object.create(null);
		e._wrappedGetters = Object.create(null);
		e._modulesNamespaceMap = Object.create(null);
		var n = e.state;
		u(e, n, [], e._modules.root, true);
		c(e, n, t);
	}
	function c(e, t, n) {
		var i = e._vm;
		e.getters = {};
		var a = {};
		o(e._wrappedGetters, function (t, n) {
			a[n] = function () {
				return t(e);
			};
			Object.defineProperty(e.getters, n, {
				get: function () {
					return e._vm[n];
				},
				enumerable: true
			});
		});
		var s = P.config.silent;
		P.config.silent = true;
		e._vm = new P({
			data: {
				$$state: t
			},
			computed: a
		});
		P.config.silent = s;
		if (e.strict) {
			g(e);
		}
		if (i) {
			if (n) {
				e._withCommit(function () {
					i._data.$$state = null;
				});
			}
			P.nextTick(function () {
				return i.$destroy();
			});
		}
	}
	function u(e, t, n, i, o) {
		var a = !n.length;
		var s = e._modules.getNamespace(n);
		if (i.namespaced) {
			e._modulesNamespaceMap[s] = i;
		}
		if (!a && !o) {
			var r = v(t, n.slice(0, -1));
			var l = n[n.length - 1];
			e._withCommit(function () {
				P.set(r, l, i.state);
			});
		}
		var c = i.context = d(e, s, n);
		i.forEachMutation(function (t, n) {
			f(e, s + n, t, c);
		});
		i.forEachAction(function (t, n) {
			h(e, s + n, t, c);
		});
		i.forEachGetter(function (t, n) {
			m(e, s + n, t, c);
		});
		i.forEachChild(function (i, a) {
			u(e, t, n.concat(a), i, o);
		});
	}
	function d(e, t, n) {
		var i = t === "";
		var o = {
			dispatch: i ? e.dispatch : function (n, i, o) {
				var a = b(n, i, o);
				var s = a.payload;
				var r = a.options;
				var l = a.type;
				if (!r || !r.root) {
					l = t + l;
				}
				return e.dispatch(l, s);
			},
			commit: i ? e.commit : function (n, i, o) {
				var a = b(n, i, o);
				var s = a.payload;
				var r = a.options;
				var l = a.type;
				if (!r || !r.root) {
					l = t + l;
				}
				e.commit(l, s, r);
			}
		};
		Object.defineProperties(o, {
			getters: {
				get: i ? function () {
					return e.getters;
				} : function () {
					return p(e, t);
				}
			},
			state: {
				get: function () {
					return v(e.state, n);
				}
			}
		});
		return o;
	}
	function p(e, t) {
		var n = {};
		var i = t.length;
		Object.keys(e.getters).forEach(function (o) {
			if (o.slice(0, i) === t) {
				var a = o.slice(i);
				Object.defineProperty(n, a, {
					get: function () {
						return e.getters[o];
					},
					enumerable: true
				});
			}
		});
		return n;
	}
	function f(e, t, n, i) {
		(e._mutations[t] ||= []).push(function (t) {
			n.call(e, i.state, t);
		});
	}
	function h(e, t, n, i) {
		(e._actions[t] ||= []).push(function (t, o) {
			var a = n.call(e, {
				dispatch: i.dispatch,
				commit: i.commit,
				getters: i.getters,
				state: i.state,
				rootGetters: e.getters,
				rootState: e.state
			}, t, o);
			if (!s(a)) {
				a = Promise.resolve(a);
			}
			if (e._devtoolHook) {
				return a.catch(function (t) {
					e._devtoolHook.emit("vuex:error", t);
					throw t;
				});
			} else {
				return a;
			}
		});
	}
	function m(e, t, n, i) {
		e._wrappedGetters[t] ||= function (e) {
			return n(i.state, i.getters, e.state, e.getters);
		};
	}
	function g(e) {
		e._vm.$watch(function () {
			return this._data.$$state;
		}, function () {}, {
			deep: true,
			sync: true
		});
	}
	function v(e, t) {
		if (t.length) {
			return t.reduce(function (e, t) {
				return e[t];
			}, e);
		} else {
			return e;
		}
	}
	function b(e, t, n) {
		if (a(e) && e.type) {
			n = t;
			t = e;
			e = e.type;
		}
		return {
			type: e,
			payload: t,
			options: n
		};
	}
	function y(e) {
		if (!P || e !== P) {
			P = e;
			x(P);
		}
	}
	function w(e) {
		if (Array.isArray(e)) {
			return e.map(function (e) {
				return {
					key: e,
					val: e
				};
			});
		} else {
			return Object.keys(e).map(function (t) {
				return {
					key: t,
					val: e[t]
				};
			});
		}
	}
	function _(e) {
		return function (t, n) {
			if (typeof t != "string") {
				n = t;
				t = "";
			} else if (t.charAt(t.length - 1) !== "/") {
				t += "/";
			}
			return e(t, n);
		};
	}
	function k(e, t, n) {
		return e._modulesNamespaceMap[n];
	}
	Object.defineProperty(t, "__esModule", {
		value: true
	});
	n.d(t, "Store", function () {
		return j;
	});
	n.d(t, "install", function () {
		return y;
	});
	n.d(t, "mapState", function () {
		return N;
	});
	n.d(t, "mapMutations", function () {
		return O;
	});
	n.d(t, "mapGetters", function () {
		return D;
	});
	n.d(t, "mapActions", function () {
		return I;
	});
	n.d(t, "createNamespacedHelpers", function () {
		return $;
	});
	function x(e) {
		function t() {
			var e = this.$options;
			if (e.store) {
				this.$store = typeof e.store == "function" ? e.store() : e.store;
			} else if (e.parent && e.parent.$store) {
				this.$store = e.parent.$store;
			}
		}
		if (Number(e.version.split(".")[0]) >= 2) {
			e.mixin({
				beforeCreate: t
			});
		} else {
			var n = e.prototype._init;
			e.prototype._init = function (e = {}) {
				e.init = e.init ? [t].concat(e.init) : t;
				n.call(this, e);
			};
		}
	}
	var C = typeof window != "undefined" && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;
	function S(e, t) {
		this.runtime = t;
		this._children = Object.create(null);
		this._rawModule = e;
		var n = e.state;
		this.state = (typeof n == "function" ? n() : n) || {};
	}
	var A = {
		namespaced: {
			configurable: true
		}
	};
	A.namespaced.get = function () {
		return !!this._rawModule.namespaced;
	};
	S.prototype.addChild = function (e, t) {
		this._children[e] = t;
	};
	S.prototype.removeChild = function (e) {
		delete this._children[e];
	};
	S.prototype.getChild = function (e) {
		return this._children[e];
	};
	S.prototype.update = function (e) {
		this._rawModule.namespaced = e.namespaced;
		if (e.actions) {
			this._rawModule.actions = e.actions;
		}
		if (e.mutations) {
			this._rawModule.mutations = e.mutations;
		}
		if (e.getters) {
			this._rawModule.getters = e.getters;
		}
	};
	S.prototype.forEachChild = function (e) {
		o(this._children, e);
	};
	S.prototype.forEachGetter = function (e) {
		if (this._rawModule.getters) {
			o(this._rawModule.getters, e);
		}
	};
	S.prototype.forEachAction = function (e) {
		if (this._rawModule.actions) {
			o(this._rawModule.actions, e);
		}
	};
	S.prototype.forEachMutation = function (e) {
		if (this._rawModule.mutations) {
			o(this._rawModule.mutations, e);
		}
	};
	Object.defineProperties(S.prototype, A);
	function T(e) {
		this.register([], e, false);
	}
	T.prototype.get = function (e) {
		return e.reduce(function (e, t) {
			return e.getChild(t);
		}, this.root);
	};
	T.prototype.getNamespace = function (e) {
		var t = this.root;
		return e.reduce(function (e, n) {
			t = t.getChild(n);
			return e + (t.namespaced ? n + "/" : "");
		}, "");
	};
	T.prototype.update = function (e) {
		r([], this.root, e);
	};
	T.prototype.register = function (e, t, n) {
		var i = this;
		if (n === undefined) {
			n = true;
		}
		var a = new S(t, n);
		if (e.length === 0) {
			this.root = a;
		} else {
			this.get(e.slice(0, -1)).addChild(e[e.length - 1], a);
		}
		if (t.modules) {
			o(t.modules, function (t, o) {
				i.register(e.concat(o), t, n);
			});
		}
	};
	T.prototype.unregister = function (e) {
		var t = this.get(e.slice(0, -1));
		var n = e[e.length - 1];
		if (t.getChild(n).runtime) {
			t.removeChild(n);
		}
	};
	var P;
	function j(e) {
		var t = this;
		if (e === undefined) {
			e = {};
		}
		if (!P && typeof window != "undefined" && window.Vue) {
			y(window.Vue);
		}
		var n = e.plugins;
		if (n === undefined) {
			n = [];
		}
		var o = e.strict;
		if (o === undefined) {
			o = false;
		}
		var a = e.state;
		if (a === undefined) {
			a = {};
		}
		if (typeof a == "function") {
			a = a();
		}
		this._committing = false;
		this._actions = Object.create(null);
		this._mutations = Object.create(null);
		this._wrappedGetters = Object.create(null);
		this._modules = new T(e);
		this._modulesNamespaceMap = Object.create(null);
		this._subscribers = [];
		this._watcherVM = new P();
		var s = this;
		var r = this;
		var l = r.dispatch;
		var d = r.commit;
		this.dispatch = function (e, t) {
			return l.call(s, e, t);
		};
		this.commit = function (e, t, n) {
			return d.call(s, e, t, n);
		};
		this.strict = o;
		u(this, a, [], this._modules.root);
		c(this, a);
		n.forEach(function (e) {
			return e(t);
		});
		if (P.config.devtools) {
			i(this);
		}
	}
	var E = {
		state: {
			configurable: true
		}
	};
	E.state.get = function () {
		return this._vm._data.$$state;
	};
	E.state.set = function (e) {};
	j.prototype.commit = function (e, t, n) {
		var i = this;
		var o = b(e, t, n);
		var a = o.type;
		var s = o.payload;
		o.options;
		var r = {
			type: a,
			payload: s
		};
		var l = this._mutations[a];
		if (l) {
			this._withCommit(function () {
				l.forEach(function (e) {
					e(s);
				});
			});
			this._subscribers.forEach(function (e) {
				return e(r, i.state);
			});
		}
	};
	j.prototype.dispatch = function (e, t) {
		var n = b(e, t);
		var i = n.type;
		var o = n.payload;
		var a = this._actions[i];
		if (a) {
			if (a.length > 1) {
				return Promise.all(a.map(function (e) {
					return e(o);
				}));
			} else {
				return a[0](o);
			}
		}
	};
	j.prototype.subscribe = function (e) {
		var t = this._subscribers;
		if (t.indexOf(e) < 0) {
			t.push(e);
		}
		return function () {
			var n = t.indexOf(e);
			if (n > -1) {
				t.splice(n, 1);
			}
		};
	};
	j.prototype.watch = function (e, t, n) {
		var i = this;
		return this._watcherVM.$watch(function () {
			return e(i.state, i.getters);
		}, t, n);
	};
	j.prototype.replaceState = function (e) {
		var t = this;
		this._withCommit(function () {
			t._vm._data.$$state = e;
		});
	};
	j.prototype.registerModule = function (e, t) {
		if (typeof e == "string") {
			e = [e];
		}
		this._modules.register(e, t);
		u(this, this.state, e, this._modules.get(e));
		c(this, this.state);
	};
	j.prototype.unregisterModule = function (e) {
		var t = this;
		if (typeof e == "string") {
			e = [e];
		}
		this._modules.unregister(e);
		this._withCommit(function () {
			var n = v(t.state, e.slice(0, -1));
			P.delete(n, e[e.length - 1]);
		});
		l(this);
	};
	j.prototype.hotUpdate = function (e) {
		this._modules.update(e);
		l(this, true);
	};
	j.prototype._withCommit = function (e) {
		var t = this._committing;
		this._committing = true;
		e();
		this._committing = t;
	};
	Object.defineProperties(j.prototype, E);
	var N = _(function (e, t) {
		var n = {};
		w(t).forEach(function (t) {
			var i = t.key;
			var o = t.val;
			n[i] = function () {
				var t = this.$store.state;
				var n = this.$store.getters;
				if (e) {
					var i = k(this.$store, 0, e);
					if (!i) {
						return;
					}
					t = i.context.state;
					n = i.context.getters;
				}
				if (typeof o == "function") {
					return o.call(this, t, n);
				} else {
					return t[o];
				}
			};
			n[i].vuex = true;
		});
		return n;
	});
	var O = _(function (e, t) {
		var n = {};
		w(t).forEach(function (t) {
			var i = t.key;
			var o = t.val;
			n[i] = function () {
				var t = [];
				for (var n = arguments.length; n--;) {
					t[n] = arguments[n];
				}
				var i = this.$store.commit;
				if (e) {
					var a = k(this.$store, 0, e);
					if (!a) {
						return;
					}
					i = a.context.commit;
				}
				if (typeof o == "function") {
					return o.apply(this, [i].concat(t));
				} else {
					return i.apply(this.$store, [o].concat(t));
				}
			};
		});
		return n;
	});
	var D = _(function (e, t) {
		var n = {};
		w(t).forEach(function (t) {
			var i = t.key;
			var o = t.val;
			o = e + o;
			n[i] = function () {
				if (!e || k(this.$store, 0, e)) {
					return this.$store.getters[o];
				}
			};
			n[i].vuex = true;
		});
		return n;
	});
	var I = _(function (e, t) {
		var n = {};
		w(t).forEach(function (t) {
			var i = t.key;
			var o = t.val;
			n[i] = function () {
				var t = [];
				for (var n = arguments.length; n--;) {
					t[n] = arguments[n];
				}
				var i = this.$store.dispatch;
				if (e) {
					var a = k(this.$store, 0, e);
					if (!a) {
						return;
					}
					i = a.context.dispatch;
				}
				if (typeof o == "function") {
					return o.apply(this, [i].concat(t));
				} else {
					return i.apply(this.$store, [o].concat(t));
				}
			};
		});
		return n;
	});
	function $(e) {
		return {
			mapState: N.bind(null, e),
			mapGetters: D.bind(null, e),
			mapMutations: O.bind(null, e),
			mapActions: I.bind(null, e)
		};
	}
	var M = {
		Store: j,
		install: y,
		version: "2.4.1",
		mapState: N,
		mapMutations: O,
		mapGetters: D,
		mapActions: I,
		createNamespacedHelpers: $
	};
	t.default = M;
}, function (e, t, n) {
	var i = n(0)(n(27), n(140), null, null);
	e.exports = i.exports;
}, function (e, t, n) {
	n(142);
	var i = n(0)(n(26), n(111), null, null);
	e.exports = i.exports;
}, function (e, t, n) {
	n(158);
	var i = n(0)(n(22), n(131), null, null);
	e.exports = i.exports;
}, function (e, t, n) {
	"use strict";

	Object.defineProperty(t, "__esModule", {
		value: true
	});
	(function (e) {
		function n(e) {
			return e === undefined || e === null;
		}
		function i(e) {
			return e !== undefined && e !== null;
		}
		function o(e) {
			return e === true;
		}
		function a(e) {
			return e === false;
		}
		function s(e) {
			return typeof e == "string" || typeof e == "number" || typeof e == "boolean";
		}
		function r(e) {
			return e !== null && typeof e == "object";
		}
		function l(e) {
			return bo.call(e) === "[object Object]";
		}
		function c(e) {
			return bo.call(e) === "[object RegExp]";
		}
		function u(e) {
			var t = parseFloat(e);
			return t >= 0 && Math.floor(t) === t && isFinite(e);
		}
		function d(e) {
			if (e == null) {
				return "";
			} else if (typeof e == "object") {
				return JSON.stringify(e, null, 2);
			} else {
				return String(e);
			}
		}
		function p(e) {
			var t = parseFloat(e);
			if (isNaN(t)) {
				return e;
			} else {
				return t;
			}
		}
		function f(e, t) {
			var n = Object.create(null);
			for (var i = e.split(","), o = 0; o < i.length; o++) {
				n[i[o]] = true;
			}
			if (t) {
				return function (e) {
					return n[e.toLowerCase()];
				};
			} else {
				return function (e) {
					return n[e];
				};
			}
		}
		function h(e, t) {
			if (e.length) {
				var n = e.indexOf(t);
				if (n > -1) {
					return e.splice(n, 1);
				}
			}
		}
		function m(e, t) {
			return _o.call(e, t);
		}
		function g(e) {
			var t = Object.create(null);
			return function (n) {
				return t[n] ||= e(n);
			};
		}
		function v(e, t) {
			function n(n) {
				var i = arguments.length;
				if (i) {
					if (i > 1) {
						return e.apply(t, arguments);
					} else {
						return e.call(t, n);
					}
				} else {
					return e.call(t);
				}
			}
			n._length = e.length;
			return n;
		}
		function b(e, t) {
			t = t || 0;
			for (var n = e.length - t, i = new Array(n); n--;) {
				i[n] = e[n + t];
			}
			return i;
		}
		function y(e, t) {
			for (var n in t) {
				e[n] = t[n];
			}
			return e;
		}
		function w(e) {
			var t = {};
			for (var n = 0; n < e.length; n++) {
				if (e[n]) {
					y(t, e[n]);
				}
			}
			return t;
		}
		function _(e, t, n) {}
		function k(e, t) {
			if (e === t) {
				return true;
			}
			var n = r(e);
			var i = r(t);
			if (!n || !i) {
				return !n && !i && String(e) === String(t);
			}
			try {
				var o = Array.isArray(e);
				var a = Array.isArray(t);
				if (o && a) {
					return e.length === t.length && e.every(function (e, n) {
						return k(e, t[n]);
					});
				}
				if (o || a) {
					return false;
				}
				var s = Object.keys(e);
				var l = Object.keys(t);
				return s.length === l.length && s.every(function (n) {
					return k(e[n], t[n]);
				});
			} catch (e) {
				return false;
			}
		}
		function x(e, t) {
			for (var n = 0; n < e.length; n++) {
				if (k(e[n], t)) {
					return n;
				}
			}
			return -1;
		}
		function C(e) {
			var t = false;
			return function () {
				if (!t) {
					t = true;
					e.apply(this, arguments);
				}
			};
		}
		function S(e) {
			var t = (e + "").charCodeAt(0);
			return t === 36 || t === 95;
		}
		function A(e, t, n, i) {
			Object.defineProperty(e, t, {
				value: n,
				enumerable: !!i,
				writable: true,
				configurable: true
			});
		}
		function T(e) {
			if (!Io.test(e)) {
				var t = e.split(".");
				return function (e) {
					for (var n = 0; n < t.length; n++) {
						if (!e) {
							return;
						}
						e = e[t[n]];
					}
					return e;
				};
			}
		}
		function P(e, t, n) {
			if (Oo.errorHandler) {
				Oo.errorHandler.call(null, e, t, n);
			} else {
				if (!zo || typeof console == "undefined") {
					throw e;
				}
				console.error(e);
			}
		}
		function j(e) {
			return typeof e == "function" && /native code/.test(e.toString());
		}
		function E(e) {
			if (ta.target) {
				na.push(ta.target);
			}
			ta.target = e;
		}
		function N() {
			ta.target = na.pop();
		}
		function O(e, t, n) {
			e.__proto__ = t;
		}
		function D(e, t, n) {
			for (var i = 0, o = n.length; i < o; i++) {
				var a = n[i];
				A(e, a, t[a]);
			}
		}
		function I(e, t) {
			if (r(e)) {
				var n;
				if (m(e, "__ob__") && e.__ob__ instanceof ra) {
					n = e.__ob__;
				} else if (sa.shouldConvert && !Jo() && (Array.isArray(e) || l(e)) && Object.isExtensible(e) && !e._isVue) {
					n = new ra(e);
				}
				if (t && n) {
					n.vmCount++;
				}
				return n;
			}
		}
		function $(e, t, n, i, o) {
			var a = new ta();
			var s = Object.getOwnPropertyDescriptor(e, t);
			if (!s || s.configurable !== false) {
				var r = s && s.get;
				var l = s && s.set;
				var c = !o && I(n);
				Object.defineProperty(e, t, {
					enumerable: true,
					configurable: true,
					get: function () {
						var t = r ? r.call(e) : n;
						if (ta.target) {
							a.depend();
							if (c) {
								c.dep.depend();
								if (Array.isArray(t)) {
									F(t);
								}
							}
						}
						return t;
					},
					set: function (t) {
						var i = r ? r.call(e) : n;
						if (t !== i && (t === t || i === i)) {
							if (l) {
								l.call(e, t);
							} else {
								n = t;
							}
							c = !o && I(t);
							a.notify();
						}
					}
				});
			}
		}
		function M(e, t, n) {
			if (Array.isArray(e) && u(t)) {
				e.length = Math.max(e.length, t);
				e.splice(t, 1, n);
				return n;
			}
			if (m(e, t)) {
				e[t] = n;
				return n;
			}
			var i = e.__ob__;
			if (e._isVue || i && i.vmCount) {
				return n;
			} else if (i) {
				$(i.value, t, n);
				i.dep.notify();
				return n;
			} else {
				e[t] = n;
				return n;
			}
		}
		function z(e, t) {
			if (Array.isArray(e) && u(t)) {
				e.splice(t, 1);
			} else {
				var n = e.__ob__;
				if (!e._isVue && (!n || !n.vmCount)) {
					if (m(e, t)) {
						delete e[t];
						if (n) {
							n.dep.notify();
						}
					}
				}
			}
		}
		function F(e) {
			var t = undefined;
			for (var n = 0, i = e.length; n < i; n++) {
				if ((t = e[n]) && t.__ob__) {
					t.__ob__.dep.depend();
				}
				if (Array.isArray(t)) {
					F(t);
				}
			}
		}
		function L(e, t) {
			if (!t) {
				return e;
			}
			var n;
			var i;
			var o;
			for (var a = Object.keys(t), s = 0; s < a.length; s++) {
				n = a[s];
				i = e[n];
				o = t[n];
				if (m(e, n)) {
					if (l(i) && l(o)) {
						L(i, o);
					}
				} else {
					M(e, n, o);
				}
			}
			return e;
		}
		function R(e, t, n) {
			if (n) {
				if (e || t) {
					return function () {
						var i = typeof t == "function" ? t.call(n) : t;
						var o = typeof e == "function" ? e.call(n) : e;
						if (i) {
							return L(i, o);
						} else {
							return o;
						}
					};
				} else {
					return undefined;
				}
			} else if (t) {
				if (e) {
					return function () {
						return L(typeof t == "function" ? t.call(this) : t, typeof e == "function" ? e.call(this) : e);
					};
				} else {
					return t;
				}
			} else {
				return e;
			}
		}
		function H(e, t) {
			if (t) {
				if (e) {
					return e.concat(t);
				} else if (Array.isArray(t)) {
					return t;
				} else {
					return [t];
				}
			} else {
				return e;
			}
		}
		function B(e, t) {
			var n = Object.create(e || null);
			if (t) {
				return y(n, t);
			} else {
				return n;
			}
		}
		function q(e) {
			var t = e.props;
			if (t) {
				var n;
				var i;
				var o;
				var a = {};
				if (Array.isArray(t)) {
					for (n = t.length; n--;) {
						if (typeof (i = t[n]) == "string") {
							o = xo(i);
							a[o] = {
								type: null
							};
						}
					}
				} else if (l(t)) {
					for (var s in t) {
						i = t[s];
						o = xo(s);
						a[o] = l(i) ? i : {
							type: i
						};
					}
				}
				e.props = a;
			}
		}
		function V(e) {
			var t = e.inject;
			if (Array.isArray(t)) {
				var n = e.inject = {};
				for (var i = 0; i < t.length; i++) {
					n[t[i]] = t[i];
				}
			}
		}
		function U(e) {
			var t = e.directives;
			if (t) {
				for (var n in t) {
					var i = t[n];
					if (typeof i == "function") {
						t[n] = {
							bind: i,
							update: i
						};
					}
				}
			}
		}
		function W(e, t, n) {
			function i(i) {
				var o = la[i] || ca;
				l[i] = o(e[i], t[i], n, i);
			}
			if (typeof t == "function") {
				t = t.options;
			}
			q(t);
			V(t);
			U(t);
			var o = t.extends;
			if (o) {
				e = W(e, o, n);
			}
			if (t.mixins) {
				for (var a = 0, s = t.mixins.length; a < s; a++) {
					e = W(e, t.mixins[a], n);
				}
			}
			var r;
			var l = {};
			for (r in e) {
				i(r);
			}
			for (r in t) {
				if (!m(e, r)) {
					i(r);
				}
			}
			return l;
		}
		function G(e, t, n, i) {
			if (typeof n == "string") {
				var o = e[t];
				if (m(o, n)) {
					return o[n];
				}
				var a = xo(n);
				if (m(o, a)) {
					return o[a];
				}
				var s = Co(a);
				if (m(o, s)) {
					return o[s];
				} else {
					return o[n] || o[a] || o[s];
				}
			}
		}
		function Y(e, t, n, i) {
			var o = t[e];
			var a = !m(n, e);
			var s = n[e];
			if (X(Boolean, o.type)) {
				if (a && !m(o, "default")) {
					s = false;
				} else if (!X(String, o.type) && (s === "" || s === Ao(e))) {
					s = true;
				}
			}
			if (s === undefined) {
				s = K(i, o, e);
				var r = sa.shouldConvert;
				sa.shouldConvert = true;
				I(s);
				sa.shouldConvert = r;
			}
			return s;
		}
		function K(e, t, n) {
			if (m(t, "default")) {
				var i = t.default;
				if (e && e.$options.propsData && e.$options.propsData[n] === undefined && e._props[n] !== undefined) {
					return e._props[n];
				} else if (typeof i == "function" && J(t.type) !== "Function") {
					return i.call(e);
				} else {
					return i;
				}
			}
		}
		function J(e) {
			var t = e && e.toString().match(/^\s*function (\w+)/);
			if (t) {
				return t[1];
			} else {
				return "";
			}
		}
		function X(e, t) {
			if (!Array.isArray(t)) {
				return J(t) === J(e);
			}
			for (var n = 0, i = t.length; n < i; n++) {
				if (J(t[n]) === J(e)) {
					return true;
				}
			}
			return false;
		}
		function Z(e) {
			return new ua(undefined, undefined, undefined, String(e));
		}
		function Q(e, t) {
			var n = new ua(e.tag, e.data, e.children, e.text, e.elm, e.context, e.componentOptions, e.asyncFactory);
			n.ns = e.ns;
			n.isStatic = e.isStatic;
			n.key = e.key;
			n.isComment = e.isComment;
			n.isCloned = true;
			if (t && e.children) {
				n.children = ee(e.children);
			}
			return n;
		}
		function ee(e, t) {
			for (var n = e.length, i = new Array(n), o = 0; o < n; o++) {
				i[o] = Q(e[o], t);
			}
			return i;
		}
		function te(e) {
			function t() {
				var e = arguments;
				var n = t.fns;
				if (!Array.isArray(n)) {
					return n.apply(null, arguments);
				}
				for (var i = n.slice(), o = 0; o < i.length; o++) {
					i[o].apply(null, e);
				}
			}
			t.fns = e;
			return t;
		}
		function ne(e, t) {
			if (e.plain) {
				return -1;
			} else if (t.plain) {
				return 1;
			} else {
				return 0;
			}
		}
		function ie(e, t, i, o, a) {
			var s;
			var r;
			var l;
			var c;
			var u = [];
			var d = false;
			for (s in e) {
				r = e[s];
				l = t[s];
				if (!(c = ha(s)).plain) {
					d = true;
				}
				if (!n(r)) {
					if (n(l)) {
						if (n(r.fns)) {
							r = e[s] = te(r);
						}
						c.handler = r;
						u.push(c);
					} else if (r !== l) {
						l.fns = r;
						e[s] = l;
					}
				}
			}
			if (u.length) {
				if (d) {
					u.sort(ne);
				}
				for (var p = 0; p < u.length; p++) {
					var f = u[p];
					i(f.name, f.handler, f.once, f.capture, f.passive);
				}
			}
			for (s in t) {
				if (n(e[s])) {
					c = ha(s);
					o(c.name, t[s], c.capture);
				}
			}
		}
		function oe(e, t, a) {
			function s() {
				a.apply(this, arguments);
				h(r.fns, s);
			}
			var r;
			var l = e[t];
			if (n(l)) {
				r = te([s]);
			} else if (i(l.fns) && o(l.merged)) {
				(r = l).fns.push(s);
			} else {
				r = te([l, s]);
			}
			r.merged = true;
			e[t] = r;
		}
		function ae(e, t, o) {
			var a = t.options.props;
			if (!n(a)) {
				var s = {};
				var r = e.attrs;
				var l = e.props;
				if (i(r) || i(l)) {
					for (var c in a) {
						var u = Ao(c);
						if (!se(s, l, c, u, true)) {
							se(s, r, c, u, false);
						}
					}
				}
				return s;
			}
		}
		function se(e, t, n, o, a) {
			if (i(t)) {
				if (m(t, n)) {
					e[n] = t[n];
					if (!a) {
						delete t[n];
					}
					return true;
				}
				if (m(t, o)) {
					e[n] = t[o];
					if (!a) {
						delete t[o];
					}
					return true;
				}
			}
			return false;
		}
		function re(e) {
			for (var t = 0; t < e.length; t++) {
				if (Array.isArray(e[t])) {
					return Array.prototype.concat.apply([], e);
				}
			}
			return e;
		}
		function le(e) {
			if (s(e)) {
				return [Z(e)];
			} else if (Array.isArray(e)) {
				return ue(e);
			} else {
				return undefined;
			}
		}
		function ce(e) {
			return i(e) && i(e.text) && a(e.isComment);
		}
		function ue(e, t) {
			var a;
			var r;
			var l;
			var c = [];
			for (a = 0; a < e.length; a++) {
				r = e[a];
				if (!n(r) && typeof r != "boolean") {
					l = c[c.length - 1];
					if (Array.isArray(r)) {
						c.push.apply(c, ue(r, (t || "") + "_" + a));
					} else if (s(r)) {
						if (ce(l)) {
							l.text += String(r);
						} else if (r !== "") {
							c.push(Z(r));
						}
					} else if (ce(r) && ce(l)) {
						c[c.length - 1] = Z(l.text + r.text);
					} else {
						if (o(e._isVList) && i(r.tag) && n(r.key) && i(t)) {
							r.key = "__vlist" + t + "_" + a + "__";
						}
						c.push(r);
					}
				}
			}
			return c;
		}
		function de(e, t) {
			if (e.__esModule && e.default) {
				e = e.default;
			}
			if (r(e)) {
				return t.extend(e);
			} else {
				return e;
			}
		}
		function pe(e, t, n, i, o) {
			var a = fa();
			a.asyncFactory = e;
			a.asyncMeta = {
				data: t,
				context: n,
				children: i,
				tag: o
			};
			return a;
		}
		function fe(e, t, a) {
			if (o(e.error) && i(e.errorComp)) {
				return e.errorComp;
			}
			if (i(e.resolved)) {
				return e.resolved;
			}
			if (o(e.loading) && i(e.loadingComp)) {
				return e.loadingComp;
			}
			if (!i(e.contexts)) {
				var s = e.contexts = [a];
				var l = true;
				function c() {
					for (var e = 0, t = s.length; e < t; e++) {
						s[e].$forceUpdate();
					}
				}
				var u = C(function (n) {
					e.resolved = de(n, t);
					if (!l) {
						c();
					}
				});
				var d = C(function (t) {
					if (i(e.errorComp)) {
						e.error = true;
						c();
					}
				});
				var p = e(u, d);
				if (r(p)) {
					if (typeof p.then == "function") {
						if (n(e.resolved)) {
							p.then(u, d);
						}
					} else if (i(p.component) && typeof p.component.then == "function") {
						p.component.then(u, d);
						if (i(p.error)) {
							e.errorComp = de(p.error, t);
						}
						if (i(p.loading)) {
							e.loadingComp = de(p.loading, t);
							if (p.delay === 0) {
								e.loading = true;
							} else {
								setTimeout(function () {
									if (n(e.resolved) && n(e.error)) {
										e.loading = true;
										c();
									}
								}, p.delay || 200);
							}
						}
						if (i(p.timeout)) {
							setTimeout(function () {
								if (n(e.resolved)) {
									d(null);
								}
							}, p.timeout);
						}
					}
				}
				l = false;
				if (e.loading) {
					return e.loadingComp;
				} else {
					return e.resolved;
				}
			}
			e.contexts.push(a);
		}
		function he(e) {
			return e.isComment && e.asyncFactory;
		}
		function me(e) {
			if (Array.isArray(e)) {
				for (var t = 0; t < e.length; t++) {
					var n = e[t];
					if (i(n) && (i(n.componentOptions) || he(n))) {
						return n;
					}
				}
			}
		}
		function ge(e) {
			e._events = Object.create(null);
			e._hasHookEvent = false;
			var t = e.$options._parentListeners;
			if (t) {
				ye(e, t);
			}
		}
		function ve(e, t, n) {
			if (n) {
				pa.$once(e, t);
			} else {
				pa.$on(e, t);
			}
		}
		function be(e, t) {
			pa.$off(e, t);
		}
		function ye(e, t, n) {
			pa = e;
			ie(t, n || {}, ve, be, e);
		}
		function we(e, t) {
			var n = {};
			if (!e) {
				return n;
			}
			var i = [];
			for (var o = 0, a = e.length; o < a; o++) {
				var s = e[o];
				var r = s.data;
				if (r && r.attrs && r.attrs.slot) {
					delete r.attrs.slot;
				}
				if (s.context !== t && s.functionalContext !== t || !r || r.slot == null) {
					i.push(s);
				} else {
					var l = s.data.slot;
					var c = n[l] ||= [];
					if (s.tag === "template") {
						c.push.apply(c, s.children);
					} else {
						c.push(s);
					}
				}
			}
			if (!i.every(_e)) {
				n.default = i;
			}
			return n;
		}
		function _e(e) {
			return e.isComment || e.text === " ";
		}
		function ke(e, t) {
			t = t || {};
			for (var n = 0; n < e.length; n++) {
				if (Array.isArray(e[n])) {
					ke(e[n], t);
				} else {
					t[e[n].key] = e[n].fn;
				}
			}
			return t;
		}
		function xe(e) {
			var t = e.$options;
			var n = t.parent;
			if (n && !t.abstract) {
				while (n.$options.abstract && n.$parent) {
					n = n.$parent;
				}
				n.$children.push(e);
			}
			e.$parent = n;
			e.$root = n ? n.$root : e;
			e.$children = [];
			e.$refs = {};
			e._watcher = null;
			e._inactive = null;
			e._directInactive = false;
			e._isMounted = false;
			e._isDestroyed = false;
			e._isBeingDestroyed = false;
		}
		function Ce(e, t, n) {
			e.$el = t;
			e.$options.render ||= fa;
			je(e, "beforeMount");
			var i;
			i = function () {
				e._update(e._render(), n);
			};
			e._watcher = new xa(e, i, _);
			n = false;
			if (e.$vnode == null) {
				e._isMounted = true;
				je(e, "mounted");
			}
			return e;
		}
		function Se(e, t, n, i, o) {
			var a = !!o || !!e.$options._renderChildren || !!i.data.scopedSlots || e.$scopedSlots !== Do;
			e.$options._parentVnode = i;
			e.$vnode = i;
			if (e._vnode) {
				e._vnode.parent = i;
			}
			e.$options._renderChildren = o;
			e.$attrs = i.data && i.data.attrs || Do;
			e.$listeners = n || Do;
			if (t && e.$options.props) {
				sa.shouldConvert = false;
				var s = e._props;
				for (var r = e.$options._propKeys || [], l = 0; l < r.length; l++) {
					var c = r[l];
					s[c] = Y(c, e.$options.props, t, e);
				}
				sa.shouldConvert = true;
				e.$options.propsData = t;
			}
			if (n) {
				var u = e.$options._parentListeners;
				e.$options._parentListeners = n;
				ye(e, n, u);
			}
			if (a) {
				e.$slots = we(o, i.context);
				e.$forceUpdate();
			}
		}
		function Ae(e) {
			while (e &&= e.$parent) {
				if (e._inactive) {
					return true;
				}
			}
			return false;
		}
		function Te(e, t) {
			if (t) {
				e._directInactive = false;
				if (Ae(e)) {
					return;
				}
			} else if (e._directInactive) {
				return;
			}
			if (e._inactive || e._inactive === null) {
				e._inactive = false;
				for (var n = 0; n < e.$children.length; n++) {
					Te(e.$children[n]);
				}
				je(e, "activated");
			}
		}
		function Pe(e, t) {
			if ((!t || !(e._directInactive = true, Ae(e))) && !e._inactive) {
				e._inactive = true;
				for (var n = 0; n < e.$children.length; n++) {
					Pe(e.$children[n]);
				}
				je(e, "deactivated");
			}
		}
		function je(e, t) {
			var n = e.$options[t];
			if (n) {
				for (var i = 0, o = n.length; i < o; i++) {
					try {
						n[i].call(e);
					} catch (n) {
						P(n, e, t + " hook");
					}
				}
			}
			if (e._hasHookEvent) {
				e.$emit("hook:" + t);
			}
		}
		function Ee() {
			_a = ga.length = va.length = 0;
			ba = {};
			ya = wa = false;
		}
		function Ne() {
			wa = true;
			var e;
			var t;
			ga.sort(function (e, t) {
				return e.id - t.id;
			});
			_a = 0;
			for (; _a < ga.length; _a++) {
				e = ga[_a];
				t = e.id;
				ba[t] = null;
				e.run();
			}
			var n = va.slice();
			var i = ga.slice();
			Ee();
			Ie(n);
			Oe(i);
			if (Xo && Oo.devtools) {
				Xo.emit("flush");
			}
		}
		function Oe(e) {
			for (var t = e.length; t--;) {
				var n = e[t];
				var i = n.vm;
				if (i._watcher === n && i._isMounted) {
					je(i, "updated");
				}
			}
		}
		function De(e) {
			e._inactive = false;
			va.push(e);
		}
		function Ie(e) {
			for (var t = 0; t < e.length; t++) {
				e[t]._inactive = true;
				Te(e[t], true);
			}
		}
		function $e(e) {
			var t = e.id;
			if (ba[t] == null) {
				ba[t] = true;
				if (wa) {
					for (var n = ga.length - 1; n > _a && ga[n].id > e.id;) {
						n--;
					}
					ga.splice(n + 1, 0, e);
				} else {
					ga.push(e);
				}
				if (!ya) {
					ya = true;
					Qo(Ne);
				}
			}
		}
		function Me(e) {
			Ca.clear();
			ze(e, Ca);
		}
		function ze(e, t) {
			var n;
			var i;
			var o = Array.isArray(e);
			if ((o || r(e)) && Object.isExtensible(e)) {
				if (e.__ob__) {
					var a = e.__ob__.dep.id;
					if (t.has(a)) {
						return;
					}
					t.add(a);
				}
				if (o) {
					for (n = e.length; n--;) {
						ze(e[n], t);
					}
				} else {
					i = Object.keys(e);
					n = i.length;
					while (n--) {
						ze(e[i[n]], t);
					}
				}
			}
		}
		function Fe(e, t, n) {
			Sa.get = function () {
				return this[t][n];
			};
			Sa.set = function (e) {
				this[t][n] = e;
			};
			Object.defineProperty(e, n, Sa);
		}
		function Le(e) {
			e._watchers = [];
			var t = e.$options;
			if (t.props) {
				Re(e, t.props);
			}
			if (t.methods) {
				We(e, t.methods);
			}
			if (t.data) {
				He(e);
			} else {
				I(e._data = {}, true);
			}
			if (t.computed) {
				qe(e, t.computed);
			}
			if (t.watch && t.watch !== Uo) {
				Ge(e, t.watch);
			}
		}
		function Re(e, t) {
			var n = e.$options.propsData || {};
			var i = e._props = {};
			var o = e.$options._propKeys = [];
			var a = !e.$parent;
			sa.shouldConvert = a;
			for (var s in t) {
				(function (a) {
					o.push(a);
					var s = Y(a, t, n, e);
					$(i, a, s);
					if (!(a in e)) {
						Fe(e, "_props", a);
					}
				})(s);
			}
			sa.shouldConvert = true;
		}
		function He(e) {
			var t = e.$options.data;
			if (!l(t = e._data = typeof t == "function" ? Be(t, e) : t || {})) {
				t = {};
			}
			var n = Object.keys(t);
			var i = e.$options.props;
			for (var o = (e.$options.methods, n.length); o--;) {
				var a = n[o];
				if ((!i || !m(i, a)) && !S(a)) {
					Fe(e, "_data", a);
				}
			}
			I(t, true);
		}
		function Be(e, t) {
			try {
				return e.call(t);
			} catch (e) {
				P(e, t, "data()");
				return {};
			}
		}
		function qe(e, t) {
			var n = e._computedWatchers = Object.create(null);
			var i = Jo();
			for (var o in t) {
				var a = t[o];
				var s = typeof a == "function" ? a : a.get;
				if (!i) {
					n[o] = new xa(e, s || _, _, Aa);
				}
				if (!(o in e)) {
					Ve(e, o, a);
				}
			}
		}
		function Ve(e, t, n) {
			var i = !Jo();
			if (typeof n == "function") {
				Sa.get = i ? Ue(t) : n;
				Sa.set = _;
			} else {
				Sa.get = n.get ? i && n.cache !== false ? Ue(t) : n.get : _;
				Sa.set = n.set ? n.set : _;
			}
			Object.defineProperty(e, t, Sa);
		}
		function Ue(e) {
			return function () {
				var t = this._computedWatchers && this._computedWatchers[e];
				if (t) {
					if (t.dirty) {
						t.evaluate();
					}
					if (ta.target) {
						t.depend();
					}
					return t.value;
				}
			};
		}
		function We(e, t) {
			e.$options.props;
			for (var n in t) {
				e[n] = t[n] == null ? _ : v(t[n], e);
			}
		}
		function Ge(e, t) {
			for (var n in t) {
				var i = t[n];
				if (Array.isArray(i)) {
					for (var o = 0; o < i.length; o++) {
						Ye(e, n, i[o]);
					}
				} else {
					Ye(e, n, i);
				}
			}
		}
		function Ye(e, t, n, i) {
			if (l(n)) {
				i = n;
				n = n.handler;
			}
			if (typeof n == "string") {
				n = e[n];
			}
			return e.$watch(t, n, i);
		}
		function Ke(e) {
			var t = e.$options.provide;
			if (t) {
				e._provided = typeof t == "function" ? t.call(e) : t;
			}
		}
		function Je(e) {
			var t = Xe(e.$options.inject, e);
			if (t) {
				sa.shouldConvert = false;
				Object.keys(t).forEach(function (n) {
					$(e, n, t[n]);
				});
				sa.shouldConvert = true;
			}
		}
		function Xe(e, t) {
			if (e) {
				var n = Object.create(null);
				for (var i = Zo ? Reflect.ownKeys(e).filter(function (t) {
					return Object.getOwnPropertyDescriptor(e, t).enumerable;
				}) : Object.keys(e), o = 0; o < i.length; o++) {
					var a = i[o];
					var s = e[a];
					for (var r = t; r;) {
						if (r._provided && s in r._provided) {
							n[a] = r._provided[s];
							break;
						}
						r = r.$parent;
					}
				}
				return n;
			}
		}
		function Ze(e, t, n, o, a) {
			var s = {};
			var r = e.options.props;
			if (i(r)) {
				for (var l in r) {
					s[l] = Y(l, r, t || Do);
				}
			} else {
				if (i(n.attrs)) {
					Qe(s, n.attrs);
				}
				if (i(n.props)) {
					Qe(s, n.props);
				}
			}
			var c = Object.create(o);
			var u = e.options.render.call(null, function (e, t, n, i) {
				return at(c, e, t, n, i, true);
			}, {
				data: n,
				props: s,
				children: a,
				parent: o,
				listeners: n.on || Do,
				injections: Xe(e.options.inject, o),
				slots: function () {
					return we(a, o);
				}
			});
			if (u instanceof ua) {
				u.functionalContext = o;
				u.functionalOptions = e.options;
				if (n.slot) {
					(u.data ||= {}).slot = n.slot;
				}
			}
			return u;
		}
		function Qe(e, t) {
			for (var n in t) {
				e[xo(n)] = t[n];
			}
		}
		function et(e, t, a, s, l) {
			if (!n(e)) {
				var c = a.$options._base;
				if (r(e)) {
					e = c.extend(e);
				}
				if (typeof e == "function") {
					var u;
					if (n(e.cid) && (u = e, (e = fe(u, c, a)) === undefined)) {
						return pe(u, t, a, s, l);
					}
					t = t || {};
					wt(e);
					if (i(t.model)) {
						ot(e.options, t);
					}
					var d = ae(t, e, l);
					if (o(e.options.functional)) {
						return Ze(e, d, t, a, s);
					}
					var p = t.on;
					t.on = t.nativeOn;
					if (o(e.options.abstract)) {
						var f = t.slot;
						t = {};
						if (f) {
							t.slot = f;
						}
					}
					nt(t);
					var h = e.options.name || l;
					return new ua("vue-component-" + e.cid + (h ? "-" + h : ""), t, undefined, undefined, undefined, a, {
						Ctor: e,
						propsData: d,
						listeners: p,
						tag: l,
						children: s
					}, u);
				}
			}
		}
		function tt(e, t, n, o) {
			var a = e.componentOptions;
			var s = {
				_isComponent: true,
				parent: t,
				propsData: a.propsData,
				_componentTag: a.tag,
				_parentVnode: e,
				_parentListeners: a.listeners,
				_renderChildren: a.children,
				_parentElm: n || null,
				_refElm: o || null
			};
			var r = e.data.inlineTemplate;
			if (i(r)) {
				s.render = r.render;
				s.staticRenderFns = r.staticRenderFns;
			}
			return new a.Ctor(s);
		}
		function nt(e) {
			e.hook ||= {};
			for (var t = 0; t < Pa.length; t++) {
				var n = Pa[t];
				var i = e.hook[n];
				var o = Ta[n];
				e.hook[n] = i ? it(o, i) : o;
			}
		}
		function it(e, t) {
			return function (n, i, o, a) {
				e(n, i, o, a);
				t(n, i, o, a);
			};
		}
		function ot(e, t) {
			var n = e.model && e.model.prop || "value";
			var o = e.model && e.model.event || "input";
			(t.props ||= {})[n] = t.model.value;
			var a = t.on ||= {};
			if (i(a[o])) {
				a[o] = [t.model.callback].concat(a[o]);
			} else {
				a[o] = t.model.callback;
			}
		}
		function at(e, t, n, i, a, r) {
			if (Array.isArray(n) || s(n)) {
				a = i;
				i = n;
				n = undefined;
			}
			if (o(r)) {
				a = Ea;
			}
			return st(e, t, n, i, a);
		}
		function st(e, t, n, o, a) {
			if (i(n) && i(n.__ob__)) {
				return fa();
			}
			if (i(n) && i(n.is)) {
				t = n.is;
			}
			if (!t) {
				return fa();
			}
			if (Array.isArray(o) && typeof o[0] == "function") {
				n = n || {};
				n.scopedSlots = {
					default: o[0]
				};
				o.length = 0;
			}
			if (a === Ea) {
				o = le(o);
			} else if (a === ja) {
				o = re(o);
			}
			var s;
			var r;
			if (typeof t == "string") {
				var l;
				r = e.$vnode && e.$vnode.ns || Oo.getTagNamespace(t);
				s = Oo.isReservedTag(t) ? new ua(Oo.parsePlatformTagName(t), n, o, undefined, undefined, e) : i(l = G(e.$options, "components", t)) ? et(l, n, e, o, t) : new ua(t, n, o, undefined, undefined, e);
			} else {
				s = et(t, n, e, o);
			}
			if (i(s)) {
				if (r) {
					rt(s, r);
				}
				return s;
			} else {
				return fa();
			}
		}
		function rt(e, t) {
			e.ns = t;
			if (e.tag !== "foreignObject" && i(e.children)) {
				for (var o = 0, a = e.children.length; o < a; o++) {
					var s = e.children[o];
					if (i(s.tag) && n(s.ns)) {
						rt(s, t);
					}
				}
			}
		}
		function lt(e, t) {
			var n;
			var o;
			var a;
			var s;
			var l;
			if (Array.isArray(e) || typeof e == "string") {
				n = new Array(e.length);
				o = 0;
				a = e.length;
				for (; o < a; o++) {
					n[o] = t(e[o], o);
				}
			} else if (typeof e == "number") {
				n = new Array(e);
				o = 0;
				for (; o < e; o++) {
					n[o] = t(o + 1, o);
				}
			} else if (r(e)) {
				s = Object.keys(e);
				n = new Array(s.length);
				o = 0;
				a = s.length;
				for (; o < a; o++) {
					l = s[o];
					n[o] = t(e[l], l, o);
				}
			}
			if (i(n)) {
				n._isVList = true;
			}
			return n;
		}
		function ct(e, t, n, i) {
			var o = this.$scopedSlots[e];
			if (o) {
				n = n || {};
				if (i) {
					n = y(y({}, i), n);
				}
				return o(n) || t;
			} else {
				return this.$slots[e] || t;
			}
		}
		function ut(e) {
			return G(this.$options, "filters", e, true) || Po;
		}
		function dt(e, t, n) {
			var i = Oo.keyCodes[t] || n;
			if (Array.isArray(i)) {
				return i.indexOf(e) === -1;
			} else {
				return i !== e;
			}
		}
		function pt(e, t, n, i, o) {
			if (n && r(n)) {
				if (Array.isArray(n)) {
					n = w(n);
				}
				var a;
				for (var s in n) {
					(function (s) {
						if (s === "class" || s === "style" || wo(s)) {
							a = e;
						} else {
							var r = e.attrs && e.attrs.type;
							a = i || Oo.mustUseProp(t, r, s) ? e.domProps ||= {} : e.attrs ||= {};
						}
						if (!(s in a) && !(a[s] = n[s], !o)) {
							(e.on ||= {})["update:" + s] = function (e) {
								n[s] = e;
							};
						}
					})(s);
				}
			}
			return e;
		}
		function ft(e, t) {
			var n = this._staticTrees[e];
			if (n && !t) {
				if (Array.isArray(n)) {
					return ee(n);
				} else {
					return Q(n);
				}
			} else {
				n = this._staticTrees[e] = this.$options.staticRenderFns[e].call(this._renderProxy);
				mt(n, "__static__" + e, false);
				return n;
			}
		}
		function ht(e, t, n) {
			mt(e, "__once__" + t + (n ? "_" + n : ""), true);
			return e;
		}
		function mt(e, t, n) {
			if (Array.isArray(e)) {
				for (var i = 0; i < e.length; i++) {
					if (e[i] && typeof e[i] != "string") {
						gt(e[i], t + "_" + i, n);
					}
				}
			} else {
				gt(e, t, n);
			}
		}
		function gt(e, t, n) {
			e.isStatic = true;
			e.key = t;
			e.isOnce = n;
		}
		function vt(e, t) {
			if (t && l(t)) {
				var n = e.on = e.on ? y({}, e.on) : {};
				for (var i in t) {
					var o = n[i];
					var a = t[i];
					n[i] = o ? [].concat(a, o) : a;
				}
			}
			return e;
		}
		function bt(e) {
			e._vnode = null;
			e._staticTrees = null;
			var t = e.$vnode = e.$options._parentVnode;
			var n = t && t.context;
			e.$slots = we(e.$options._renderChildren, n);
			e.$scopedSlots = Do;
			e._c = function (t, n, i, o) {
				return at(e, t, n, i, o, false);
			};
			e.$createElement = function (t, n, i, o) {
				return at(e, t, n, i, o, true);
			};
			var i = t && t.data;
			$(e, "$attrs", i && i.attrs || Do, null, true);
			$(e, "$listeners", e.$options._parentListeners || Do, null, true);
		}
		function yt(e, t) {
			var n = e.$options = Object.create(e.constructor.options);
			n.parent = t.parent;
			n.propsData = t.propsData;
			n._parentVnode = t._parentVnode;
			n._parentListeners = t._parentListeners;
			n._renderChildren = t._renderChildren;
			n._componentTag = t._componentTag;
			n._parentElm = t._parentElm;
			n._refElm = t._refElm;
			if (t.render) {
				n.render = t.render;
				n.staticRenderFns = t.staticRenderFns;
			}
		}
		function wt(e) {
			var t = e.options;
			if (e.super) {
				var n = wt(e.super);
				if (n !== e.superOptions) {
					e.superOptions = n;
					var i = _t(e);
					if (i) {
						y(e.extendOptions, i);
					}
					if ((t = e.options = W(n, e.extendOptions)).name) {
						t.components[t.name] = e;
					}
				}
			}
			return t;
		}
		function _t(e) {
			var t;
			var n = e.options;
			var i = e.extendOptions;
			var o = e.sealedOptions;
			for (var a in n) {
				if (n[a] !== o[a]) {
					t ||= {};
					t[a] = kt(n[a], i[a], o[a]);
				}
			}
			return t;
		}
		function kt(e, t, n) {
			if (Array.isArray(e)) {
				var i = [];
				n = Array.isArray(n) ? n : [n];
				t = Array.isArray(t) ? t : [t];
				for (var o = 0; o < e.length; o++) {
					if (t.indexOf(e[o]) >= 0 || n.indexOf(e[o]) < 0) {
						i.push(e[o]);
					}
				}
				return i;
			}
			return e;
		}
		function xt(e) {
			this._init(e);
		}
		function Ct(e) {
			e.use = function (e) {
				var t = this._installedPlugins ||= [];
				if (t.indexOf(e) > -1) {
					return this;
				}
				var n = b(arguments, 1);
				n.unshift(this);
				if (typeof e.install == "function") {
					e.install.apply(e, n);
				} else if (typeof e == "function") {
					e.apply(null, n);
				}
				t.push(e);
				return this;
			};
		}
		function St(e) {
			e.mixin = function (e) {
				this.options = W(this.options, e);
				return this;
			};
		}
		function At(e) {
			e.cid = 0;
			var t = 1;
			e.extend = function (e) {
				e = e || {};
				var n = this;
				var i = n.cid;
				var o = e._Ctor ||= {};
				if (o[i]) {
					return o[i];
				}
				var a = e.name || n.options.name;
				function s(e) {
					this._init(e);
				}
				s.prototype = Object.create(n.prototype);
				s.prototype.constructor = s;
				s.cid = t++;
				s.options = W(n.options, e);
				s.super = n;
				if (s.options.props) {
					Tt(s);
				}
				if (s.options.computed) {
					Pt(s);
				}
				s.extend = n.extend;
				s.mixin = n.mixin;
				s.use = n.use;
				Eo.forEach(function (e) {
					s[e] = n[e];
				});
				if (a) {
					s.options.components[a] = s;
				}
				s.superOptions = n.options;
				s.extendOptions = e;
				s.sealedOptions = y({}, s.options);
				o[i] = s;
				return s;
			};
		}
		function Tt(e) {
			var t = e.options.props;
			for (var n in t) {
				Fe(e.prototype, "_props", n);
			}
		}
		function Pt(e) {
			var t = e.options.computed;
			for (var n in t) {
				Ve(e.prototype, n, t[n]);
			}
		}
		function jt(e) {
			Eo.forEach(function (t) {
				e[t] = function (e, n) {
					if (n) {
						if (t === "component" && l(n)) {
							n.name = n.name || e;
							n = this.options._base.extend(n);
						}
						if (t === "directive" && typeof n == "function") {
							n = {
								bind: n,
								update: n
							};
						}
						this.options[t + "s"][e] = n;
						return n;
					} else {
						return this.options[t + "s"][e];
					}
				};
			});
		}
		function Et(e) {
			return e && (e.Ctor.options.name || e.tag);
		}
		function Nt(e, t) {
			if (Array.isArray(e)) {
				return e.indexOf(t) > -1;
			} else if (typeof e == "string") {
				return e.split(",").indexOf(t) > -1;
			} else {
				return !!c(e) && e.test(t);
			}
		}
		function Ot(e, t, n) {
			for (var i in e) {
				var o = e[i];
				if (o) {
					var a = Et(o.componentOptions);
					if (a && !n(a)) {
						if (o !== t) {
							Dt(o);
						}
						e[i] = null;
					}
				}
			}
		}
		function Dt(e) {
			if (e) {
				e.componentInstance.$destroy();
			}
		}
		function It(e) {
			var t = e.data;
			var n = e;
			for (var o = e; i(o.componentInstance);) {
				if ((o = o.componentInstance._vnode).data) {
					t = $t(o.data, t);
				}
			}
			while (i(n = n.parent)) {
				if (n.data) {
					t = $t(t, n.data);
				}
			}
			return Mt(t.staticClass, t.class);
		}
		function $t(e, t) {
			return {
				staticClass: zt(e.staticClass, t.staticClass),
				class: i(e.class) ? [e.class, t.class] : t.class
			};
		}
		function Mt(e, t) {
			if (i(e) || i(t)) {
				return zt(e, Ft(t));
			} else {
				return "";
			}
		}
		function zt(e, t) {
			if (e) {
				if (t) {
					return e + " " + t;
				} else {
					return e;
				}
			} else {
				return t || "";
			}
		}
		function Ft(e) {
			if (Array.isArray(e)) {
				return Lt(e);
			} else if (r(e)) {
				return Rt(e);
			} else if (typeof e == "string") {
				return e;
			} else {
				return "";
			}
		}
		function Lt(e) {
			var t;
			var n = "";
			for (var o = 0, a = e.length; o < a; o++) {
				if (i(t = Ft(e[o])) && t !== "") {
					if (n) {
						n += " ";
					}
					n += t;
				}
			}
			return n;
		}
		function Rt(e) {
			var t = "";
			for (var n in e) {
				if (e[n]) {
					if (t) {
						t += " ";
					}
					t += n;
				}
			}
			return t;
		}
		function Ht(e) {
			if (es(e)) {
				return "svg";
			} else if (e === "math") {
				return "math";
			} else {
				return undefined;
			}
		}
		function Bt(e) {
			if (typeof e == "string") {
				return document.querySelector(e) || document.createElement("div");
			} else {
				return e;
			}
		}
		function qt(e, t) {
			var n = e.data.ref;
			if (n) {
				var i = e.context;
				var o = e.componentInstance || e.elm;
				var a = i.$refs;
				if (t) {
					if (Array.isArray(a[n])) {
						h(a[n], o);
					} else if (a[n] === o) {
						a[n] = undefined;
					}
				} else if (e.data.refInFor) {
					if (Array.isArray(a[n])) {
						if (a[n].indexOf(o) < 0) {
							a[n].push(o);
						}
					} else {
						a[n] = [o];
					}
				} else {
					a[n] = o;
				}
			}
		}
		function Vt(e, t) {
			return e.key === t.key && (e.tag === t.tag && e.isComment === t.isComment && i(e.data) === i(t.data) && Ut(e, t) || o(e.isAsyncPlaceholder) && e.asyncFactory === t.asyncFactory && n(t.asyncFactory.error));
		}
		function Ut(e, t) {
			if (e.tag !== "input") {
				return true;
			}
			var n;
			var o = i(n = e.data) && i(n = n.attrs) && n.type;
			var a = i(n = t.data) && i(n = n.attrs) && n.type;
			return o === a || is(o) && is(a);
		}
		function Wt(e, t, n) {
			var o;
			var a;
			var s = {};
			for (o = t; o <= n; ++o) {
				a = e[o].key;
				if (i(a)) {
					s[a] = o;
				}
			}
			return s;
		}
		function Gt(e, t) {
			if (e.data.directives || t.data.directives) {
				Yt(e, t);
			}
		}
		function Yt(e, t) {
			var n;
			var i;
			var o;
			var a = e === ss;
			var s = t === ss;
			var r = Kt(e.data.directives, e.context);
			var l = Kt(t.data.directives, t.context);
			var c = [];
			var u = [];
			for (n in l) {
				i = r[n];
				o = l[n];
				if (i) {
					o.oldValue = i.value;
					Xt(o, "update", t, e);
					if (o.def && o.def.componentUpdated) {
						u.push(o);
					}
				} else {
					Xt(o, "bind", t, e);
					if (o.def && o.def.inserted) {
						c.push(o);
					}
				}
			}
			if (c.length) {
				function d() {
					for (var n = 0; n < c.length; n++) {
						Xt(c[n], "inserted", t, e);
					}
				}
				if (a) {
					oe(t.data.hook ||= {}, "insert", d);
				} else {
					d();
				}
			}
			if (u.length) {
				oe(t.data.hook ||= {}, "postpatch", function () {
					for (var n = 0; n < u.length; n++) {
						Xt(u[n], "componentUpdated", t, e);
					}
				});
			}
			if (!a) {
				for (n in r) {
					if (!l[n]) {
						Xt(r[n], "unbind", e, e, s);
					}
				}
			}
		}
		function Kt(e, t) {
			var n = Object.create(null);
			if (!e) {
				return n;
			}
			var i;
			var o;
			for (i = 0; i < e.length; i++) {
				if (!(o = e[i]).modifiers) {
					o.modifiers = cs;
				}
				n[Jt(o)] = o;
				o.def = G(t.$options, "directives", o.name, true);
			}
			return n;
		}
		function Jt(e) {
			return e.rawName || e.name + "." + Object.keys(e.modifiers || {}).join(".");
		}
		function Xt(e, t, n, i, o) {
			var a = e.def && e.def[t];
			if (a) {
				try {
					a(n.elm, e, n, i, o);
				} catch (i) {
					P(i, n.context, "directive " + e.name + " " + t + " hook");
				}
			}
		}
		function Zt(e, t) {
			var o = t.componentOptions;
			if ((!i(o) || o.Ctor.options.inheritAttrs !== false) && (!n(e.data.attrs) || !n(t.data.attrs))) {
				var a;
				var s;
				var r = t.elm;
				var l = e.data.attrs || {};
				var c = t.data.attrs || {};
				if (i(c.__ob__)) {
					c = t.data.attrs = y({}, c);
				}
				for (a in c) {
					s = c[a];
					if (l[a] !== s) {
						Qt(r, a, s);
					}
				}
				if (Ro && c.value !== l.value) {
					Qt(r, "value", c.value);
				}
				for (a in l) {
					if (n(c[a])) {
						if (Ka(a)) {
							r.removeAttributeNS(Ya, Ja(a));
						} else if (!Wa(a)) {
							r.removeAttribute(a);
						}
					}
				}
			}
		}
		function Qt(e, t, n) {
			if (Ga(t)) {
				if (Xa(n)) {
					e.removeAttribute(t);
				} else {
					n = t === "allowfullscreen" && e.tagName === "EMBED" ? "true" : t;
					e.setAttribute(t, n);
				}
			} else if (Wa(t)) {
				e.setAttribute(t, Xa(n) || n === "false" ? "false" : "true");
			} else if (Ka(t)) {
				if (Xa(n)) {
					e.removeAttributeNS(Ya, Ja(t));
				} else {
					e.setAttributeNS(Ya, t, n);
				}
			} else if (Xa(n)) {
				e.removeAttribute(t);
			} else {
				e.setAttribute(t, n);
			}
		}
		function en(e, t) {
			var o = t.elm;
			var a = t.data;
			var s = e.data;
			if (!n(a.staticClass) || !n(a.class) || !n(s) && (!n(s.staticClass) || !n(s.class))) {
				var r = It(t);
				var l = o._transitionClasses;
				if (i(l)) {
					r = zt(r, Ft(l));
				}
				if (r !== o._prevClass) {
					o.setAttribute("class", r);
					o._prevClass = r;
				}
			}
		}
		function tn(e) {
			function t() {
				(s ||= []).push(e.slice(h, o).trim());
				h = o + 1;
			}
			var n;
			var i;
			var o;
			var a;
			var s;
			var r = false;
			var l = false;
			var c = false;
			var u = false;
			var d = 0;
			var p = 0;
			var f = 0;
			var h = 0;
			for (o = 0; o < e.length; o++) {
				i = n;
				n = e.charCodeAt(o);
				if (r) {
					if (n === 39 && i !== 92) {
						r = false;
					}
				} else if (l) {
					if (n === 34 && i !== 92) {
						l = false;
					}
				} else if (c) {
					if (n === 96 && i !== 92) {
						c = false;
					}
				} else if (u) {
					if (n === 47 && i !== 92) {
						u = false;
					}
				} else if (n !== 124 || e.charCodeAt(o + 1) === 124 || e.charCodeAt(o - 1) === 124 || d || p || f) {
					switch (n) {
						case 34:
							l = true;
							break;
						case 39:
							r = true;
							break;
						case 96:
							c = true;
							break;
						case 40:
							f++;
							break;
						case 41:
							f--;
							break;
						case 91:
							p++;
							break;
						case 93:
							p--;
							break;
						case 123:
							d++;
							break;
						case 125:
							d--;
					}
					if (n === 47) {
						for (var m = o - 1, g = undefined; m >= 0 && (g = e.charAt(m)) === " "; m--);
						if (!g || !fs.test(g)) {
							u = true;
						}
					}
				} else if (a === undefined) {
					h = o + 1;
					a = e.slice(0, o).trim();
				} else {
					t();
				}
			}
			if (a === undefined) {
				a = e.slice(0, o).trim();
			} else if (h !== 0) {
				t();
			}
			if (s) {
				for (o = 0; o < s.length; o++) {
					a = nn(a, s[o]);
				}
			}
			return a;
		}
		function nn(e, t) {
			var n = t.indexOf("(");
			if (n < 0) {
				return "_f(\"" + t + "\")(" + e + ")";
			} else {
				return "_f(\"" + t.slice(0, n) + "\")(" + e + "," + t.slice(n + 1);
			}
		}
		function on(e) {
			console.error("[Vue compiler]: " + e);
		}
		function an(e, t) {
			if (e) {
				return e.map(function (e) {
					return e[t];
				}).filter(function (e) {
					return e;
				});
			} else {
				return [];
			}
		}
		function sn(e, t, n) {
			(e.props ||= []).push({
				name: t,
				value: n
			});
		}
		function rn(e, t, n) {
			(e.attrs ||= []).push({
				name: t,
				value: n
			});
		}
		function ln(e, t, n, i, o, a) {
			(e.directives ||= []).push({
				name: t,
				rawName: n,
				value: i,
				arg: o,
				modifiers: a
			});
		}
		function cn(e, t, n, i, o, a) {
			if (i && i.capture) {
				delete i.capture;
				t = "!" + t;
			}
			if (i && i.once) {
				delete i.once;
				t = "~" + t;
			}
			if (i && i.passive) {
				delete i.passive;
				t = "&" + t;
			}
			var s;
			if (i && i.native) {
				delete i.native;
				s = e.nativeEvents ||= {};
			} else {
				s = e.events ||= {};
			}
			var r = {
				value: n,
				modifiers: i
			};
			var l = s[t];
			if (Array.isArray(l)) {
				if (o) {
					l.unshift(r);
				} else {
					l.push(r);
				}
			} else {
				s[t] = l ? o ? [r, l] : [l, r] : r;
			}
		}
		function un(e, t, n) {
			var i = dn(e, ":" + t) || dn(e, "v-bind:" + t);
			if (i != null) {
				return tn(i);
			}
			if (n !== false) {
				var o = dn(e, t);
				if (o != null) {
					return JSON.stringify(o);
				}
			}
		}
		function dn(e, t) {
			var n;
			if ((n = e.attrsMap[t]) != null) {
				var i = e.attrsList;
				for (var o = 0, a = i.length; o < a; o++) {
					if (i[o].name === t) {
						i.splice(o, 1);
						break;
					}
				}
			}
			return n;
		}
		function pn(e, t, n) {
			var i = n || {};
			var o = i.number;
			var a = "$$v";
			if (i.trim) {
				a = "(typeof $$v === 'string'? $$v.trim(): $$v)";
			}
			if (o) {
				a = "_n(" + a + ")";
			}
			var s = fn(t, a);
			e.model = {
				value: "(" + t + ")",
				expression: "\"" + t + "\"",
				callback: "function ($$v) {" + s + "}"
			};
		}
		function fn(e, t) {
			var n = hn(e);
			if (n.idx === null) {
				return e + "=" + t;
			} else {
				return "$set(" + n.exp + ", " + n.idx + ", " + t + ")";
			}
		}
		function hn(e) {
			$a = e;
			Ia = $a.length;
			za = Fa = La = 0;
			if (e.indexOf("[") < 0 || e.lastIndexOf("]") < Ia - 1) {
				return {
					exp: e,
					idx: null
				};
			}
			while (!gn()) {
				Ma = mn();
				if (vn(Ma)) {
					yn(Ma);
				} else if (Ma === 91) {
					bn(Ma);
				}
			}
			return {
				exp: e.substring(0, Fa),
				idx: e.substring(Fa + 1, La)
			};
		}
		function mn() {
			return $a.charCodeAt(++za);
		}
		function gn() {
			return za >= Ia;
		}
		function vn(e) {
			return e === 34 || e === 39;
		}
		function bn(e) {
			var t = 1;
			for (Fa = za; !gn();) {
				e = mn();
				if (vn(e)) {
					yn(e);
				} else {
					if (e === 91) {
						t++;
					}
					if (e === 93) {
						t--;
					}
					if (t === 0) {
						La = za;
						break;
					}
				}
			}
		}
		function yn(e) {
			for (var t = e; !gn() && (e = mn()) !== t;);
		}
		function wn(e, t, n) {
			var i = n && n.number;
			var o = un(e, "value") || "null";
			var a = un(e, "true-value") || "true";
			var s = un(e, "false-value") || "false";
			sn(e, "checked", "Array.isArray(" + t + ")?_i(" + t + "," + o + ")>-1" + (a === "true" ? ":(" + t + ")" : ":_q(" + t + "," + a + ")"));
			cn(e, ms, "var $$a=" + t + ",$$el=$event.target,$$c=$$el.checked?(" + a + "):(" + s + ");if(Array.isArray($$a)){var $$v=" + (i ? "_n(" + o + ")" : o) + ",$$i=_i($$a,$$v);if($$el.checked){$$i<0&&(" + t + "=$$a.concat([$$v]))}else{$$i>-1&&(" + t + "=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{" + fn(t, "$$c") + "}", null, true);
		}
		function _n(e, t, n) {
			var i = n && n.number;
			var o = un(e, "value") || "null";
			sn(e, "checked", "_q(" + t + "," + (o = i ? "_n(" + o + ")" : o) + ")");
			cn(e, ms, fn(t, o), null, true);
		}
		function kn(e, t, n) {
			var i = "var $$selectedVal = " + ("Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return " + (n && n.number ? "_n(val)" : "val") + "})") + ";";
			cn(e, "change", i = i + " " + fn(t, "$event.target.multiple ? $$selectedVal : $$selectedVal[0]"), null, true);
		}
		function xn(e, t, n) {
			var i = e.attrsMap.type;
			var o = n || {};
			var a = o.lazy;
			var s = o.number;
			var r = o.trim;
			var l = !a && i !== "range";
			var c = a ? "change" : i === "range" ? hs : "input";
			var u = "$event.target.value";
			if (r) {
				u = "$event.target.value.trim()";
			}
			if (s) {
				u = "_n(" + u + ")";
			}
			var d = fn(t, u);
			if (l) {
				d = "if($event.target.composing)return;" + d;
			}
			sn(e, "value", "(" + t + ")");
			cn(e, c, d, null, true);
			if (r || s) {
				cn(e, "blur", "$forceUpdate()");
			}
		}
		function Cn(e) {
			var t;
			if (i(e[hs])) {
				t = Lo ? "change" : "input";
				e[t] = [].concat(e[hs], e[t] || []);
				delete e[hs];
			}
			if (i(e[ms])) {
				t = Vo ? "click" : "change";
				e[t] = [].concat(e[ms], e[t] || []);
				delete e[ms];
			}
		}
		function Sn(e, t, n, i, o) {
			if (n) {
				var a = t;
				var s = Ha;
				t = function (n) {
					if ((arguments.length === 1 ? a(n) : a.apply(null, arguments)) !== null) {
						An(e, t, i, s);
					}
				};
			}
			Ha.addEventListener(e, t, Wo ? {
				capture: i,
				passive: o
			} : i);
		}
		function An(e, t, n, i) {
			(i || Ha).removeEventListener(e, t, n);
		}
		function Tn(e, t) {
			if (!n(e.data.on) || !n(t.data.on)) {
				var i = t.data.on || {};
				var o = e.data.on || {};
				Ha = t.elm;
				Cn(i);
				ie(i, o, Sn, An, t.context);
			}
		}
		function Pn(e, t) {
			if (!n(e.data.domProps) || !n(t.data.domProps)) {
				var o;
				var a;
				var s = t.elm;
				var r = e.data.domProps || {};
				var l = t.data.domProps || {};
				if (i(l.__ob__)) {
					l = t.data.domProps = y({}, l);
				}
				for (o in r) {
					if (n(l[o])) {
						s[o] = "";
					}
				}
				for (o in l) {
					a = l[o];
					if (o !== "textContent" && o !== "innerHTML" || (t.children && (t.children.length = 0), a !== r[o])) {
						if (o === "value") {
							s._value = a;
							var c = n(a) ? "" : String(a);
							if (jn(s, t, c)) {
								s.value = c;
							}
						} else {
							s[o] = a;
						}
					}
				}
			}
		}
		function jn(e, t, n) {
			return !e.composing && (t.tag === "option" || En(e, n) || Nn(e, n));
		}
		function En(e, t) {
			var n = true;
			try {
				n = document.activeElement !== e;
			} catch (e) {}
			return n && e.value !== t;
		}
		function Nn(e, t) {
			var n = e.value;
			var o = e._vModifiers;
			if (i(o) && o.number) {
				return p(n) !== p(t);
			} else if (i(o) && o.trim) {
				return n.trim() !== t.trim();
			} else {
				return n !== t;
			}
		}
		function On(e) {
			var t = Dn(e.style);
			if (e.staticStyle) {
				return y(e.staticStyle, t);
			} else {
				return t;
			}
		}
		function Dn(e) {
			if (Array.isArray(e)) {
				return w(e);
			} else if (typeof e == "string") {
				return bs(e);
			} else {
				return e;
			}
		}
		function In(e, t) {
			var n;
			var i = {};
			if (t) {
				for (var o = e; o.componentInstance;) {
					if ((o = o.componentInstance._vnode).data && (n = On(o.data))) {
						y(i, n);
					}
				}
			}
			if (n = On(e.data)) {
				y(i, n);
			}
			for (var a = e; a = a.parent;) {
				if (a.data && (n = On(a.data))) {
					y(i, n);
				}
			}
			return i;
		}
		function $n(e, t) {
			var o = t.data;
			var a = e.data;
			if (!n(o.staticStyle) || !n(o.style) || !n(a.staticStyle) || !n(a.style)) {
				var s;
				var r;
				var l = t.elm;
				var c = a.staticStyle;
				var u = a.normalizedStyle || a.style || {};
				var d = c || u;
				var p = Dn(t.data.style) || {};
				t.data.normalizedStyle = i(p.__ob__) ? y({}, p) : p;
				var f = In(t, true);
				for (r in d) {
					if (n(f[r])) {
						_s(l, r, "");
					}
				}
				for (r in f) {
					if ((s = f[r]) !== d[r]) {
						_s(l, r, s == null ? "" : s);
					}
				}
			}
		}
		function Mn(e, t) {
			if (t &&= t.trim()) {
				if (e.classList) {
					if (t.indexOf(" ") > -1) {
						t.split(/\s+/).forEach(function (t) {
							return e.classList.add(t);
						});
					} else {
						e.classList.add(t);
					}
				} else {
					var n = " " + (e.getAttribute("class") || "") + " ";
					if (n.indexOf(" " + t + " ") < 0) {
						e.setAttribute("class", (n + t).trim());
					}
				}
			}
		}
		function zn(e, t) {
			if (t &&= t.trim()) {
				if (e.classList) {
					if (t.indexOf(" ") > -1) {
						t.split(/\s+/).forEach(function (t) {
							return e.classList.remove(t);
						});
					} else {
						e.classList.remove(t);
					}
					if (!e.classList.length) {
						e.removeAttribute("class");
					}
				} else {
					for (var n = " " + (e.getAttribute("class") || "") + " ", i = " " + t + " "; n.indexOf(i) >= 0;) {
						n = n.replace(i, " ");
					}
					if (n = n.trim()) {
						e.setAttribute("class", n);
					} else {
						e.removeAttribute("class");
					}
				}
			}
		}
		function Fn(e) {
			if (e) {
				if (typeof e == "object") {
					var t = {};
					if (e.css !== false) {
						y(t, Ss(e.name || "v"));
					}
					y(t, e);
					return t;
				}
				if (typeof e == "string") {
					return Ss(e);
				} else {
					return undefined;
				}
			}
		}
		function Ln(e) {
			Ds(function () {
				Ds(e);
			});
		}
		function Rn(e, t) {
			var n = e._transitionClasses ||= [];
			if (n.indexOf(t) < 0) {
				n.push(t);
				Mn(e, t);
			}
		}
		function Hn(e, t) {
			if (e._transitionClasses) {
				h(e._transitionClasses, t);
			}
			zn(e, t);
		}
		function Bn(e, t, n) {
			var i = qn(e, t);
			var o = i.type;
			var a = i.timeout;
			var s = i.propCount;
			if (!o) {
				return n();
			}
			var r = o === Ts ? Es : Os;
			var l = 0;
			function c() {
				e.removeEventListener(r, u);
				n();
			}
			function u(t) {
				if (t.target === e && ++l >= s) {
					c();
				}
			}
			setTimeout(function () {
				if (l < s) {
					c();
				}
			}, a + 1);
			e.addEventListener(r, u);
		}
		function qn(e, t) {
			var n;
			var i = window.getComputedStyle(e);
			var o = i[js + "Delay"].split(", ");
			var a = i[js + "Duration"].split(", ");
			var s = Vn(o, a);
			var r = i[Ns + "Delay"].split(", ");
			var l = i[Ns + "Duration"].split(", ");
			var c = Vn(r, l);
			var u = 0;
			var d = 0;
			if (t === Ts) {
				if (s > 0) {
					n = Ts;
					u = s;
					d = a.length;
				}
			} else if (t === Ps) {
				if (c > 0) {
					n = Ps;
					u = c;
					d = l.length;
				}
			} else {
				u = Math.max(s, c);
				n = u > 0 ? s > c ? Ts : Ps : null;
				d = n ? n === Ts ? a.length : l.length : 0;
			}
			return {
				type: n,
				timeout: u,
				propCount: d,
				hasTransform: n === Ts && Is.test(i[js + "Property"])
			};
		}
		function Vn(e, t) {
			while (e.length < t.length) {
				e = e.concat(e);
			}
			return Math.max.apply(null, t.map(function (t, n) {
				return Un(t) + Un(e[n]);
			}));
		}
		function Un(e) {
			return Number(e.slice(0, -1)) * 1000;
		}
		function Wn(e, t) {
			var o = e.elm;
			if (i(o._leaveCb)) {
				o._leaveCb.cancelled = true;
				o._leaveCb();
			}
			var a = Fn(e.data.transition);
			if (!n(a) && !i(o._enterCb) && o.nodeType === 1) {
				var s = a.css;
				var l = a.type;
				var c = a.enterClass;
				var u = a.enterToClass;
				var d = a.enterActiveClass;
				var f = a.appearClass;
				var h = a.appearToClass;
				var m = a.appearActiveClass;
				var g = a.beforeEnter;
				var v = a.enter;
				var b = a.afterEnter;
				var y = a.enterCancelled;
				var w = a.beforeAppear;
				var _ = a.appear;
				var k = a.afterAppear;
				var x = a.appearCancelled;
				var S = a.duration;
				var A = ma;
				for (var T = ma.$vnode; T && T.parent;) {
					T = T.parent;
					A = T.context;
				}
				var P = !A._isMounted || !e.isRootInsert;
				if (!P || _ || _ === "") {
					var j = P && f ? f : c;
					var E = P && m ? m : d;
					var N = P && h ? h : u;
					var O = P ? w || g : g;
					var D = P && typeof _ == "function" ? _ : v;
					var I = P ? k || b : b;
					var $ = P ? x || y : y;
					var M = p(r(S) ? S.enter : S);
					var z = s !== false && !Ro;
					var F = Kn(D);
					var L = o._enterCb = C(function () {
						if (z) {
							Hn(o, N);
							Hn(o, E);
						}
						if (L.cancelled) {
							if (z) {
								Hn(o, j);
							}
							if ($) {
								$(o);
							}
						} else if (I) {
							I(o);
						}
						o._enterCb = null;
					});
					if (!e.data.show) {
						oe(e.data.hook ||= {}, "insert", function () {
							var t = o.parentNode;
							var n = t && t._pending && t._pending[e.key];
							if (n && n.tag === e.tag && n.elm._leaveCb) {
								n.elm._leaveCb();
							}
							if (D) {
								D(o, L);
							}
						});
					}
					if (O) {
						O(o);
					}
					if (z) {
						Rn(o, j);
						Rn(o, E);
						Ln(function () {
							Rn(o, N);
							Hn(o, j);
							if (!L.cancelled && !F) {
								if (Yn(M)) {
									setTimeout(L, M);
								} else {
									Bn(o, l, L);
								}
							}
						});
					}
					if (e.data.show) {
						if (t) {
							t();
						}
						if (D) {
							D(o, L);
						}
					}
					if (!z && !F) {
						L();
					}
				}
			}
		}
		function Gn(e, t) {
			function o() {
				if (!x.cancelled) {
					if (!e.data.show) {
						(a.parentNode._pending ||= {})[e.key] = e;
					}
					if (h) {
						h(a);
					}
					if (w) {
						Rn(a, u);
						Rn(a, f);
						Ln(function () {
							Rn(a, d);
							Hn(a, u);
							if (!x.cancelled && !_) {
								if (Yn(k)) {
									setTimeout(x, k);
								} else {
									Bn(a, c, x);
								}
							}
						});
					}
					if (m) {
						m(a, x);
					}
					if (!w && !_) {
						x();
					}
				}
			}
			var a = e.elm;
			if (i(a._enterCb)) {
				a._enterCb.cancelled = true;
				a._enterCb();
			}
			var s = Fn(e.data.transition);
			if (n(s)) {
				return t();
			}
			if (!i(a._leaveCb) && a.nodeType === 1) {
				var l = s.css;
				var c = s.type;
				var u = s.leaveClass;
				var d = s.leaveToClass;
				var f = s.leaveActiveClass;
				var h = s.beforeLeave;
				var m = s.leave;
				var g = s.afterLeave;
				var v = s.leaveCancelled;
				var b = s.delayLeave;
				var y = s.duration;
				var w = l !== false && !Ro;
				var _ = Kn(m);
				var k = p(r(y) ? y.leave : y);
				var x = a._leaveCb = C(function () {
					if (a.parentNode && a.parentNode._pending) {
						a.parentNode._pending[e.key] = null;
					}
					if (w) {
						Hn(a, d);
						Hn(a, f);
					}
					if (x.cancelled) {
						if (w) {
							Hn(a, u);
						}
						if (v) {
							v(a);
						}
					} else {
						t();
						if (g) {
							g(a);
						}
					}
					a._leaveCb = null;
				});
				if (b) {
					b(o);
				} else {
					o();
				}
			}
		}
		function Yn(e) {
			return typeof e == "number" && !isNaN(e);
		}
		function Kn(e) {
			if (n(e)) {
				return false;
			}
			var t = e.fns;
			if (i(t)) {
				return Kn(Array.isArray(t) ? t[0] : t);
			} else {
				return (e._length || e.length) > 1;
			}
		}
		function Jn(e, t) {
			if (t.data.show !== true) {
				Wn(t);
			}
		}
		function Xn(e, t, n) {
			Zn(e, t, n);
			if (Lo || Ho) {
				setTimeout(function () {
					Zn(e, t, n);
				}, 0);
			}
		}
		function Zn(e, t, n) {
			var i = t.value;
			var o = e.multiple;
			if (!o || Array.isArray(i)) {
				var a;
				var s;
				for (var r = 0, l = e.options.length; r < l; r++) {
					s = e.options[r];
					if (o) {
						a = x(i, ei(s)) > -1;
						if (s.selected !== a) {
							s.selected = a;
						}
					} else if (k(ei(s), i)) {
						if (e.selectedIndex !== r) {
							e.selectedIndex = r;
						}
						return;
					}
				}
				if (!o) {
					e.selectedIndex = -1;
				}
			}
		}
		function Qn(e, t) {
			return t.every(function (t) {
				return !k(t, e);
			});
		}
		function ei(e) {
			if ("_value" in e) {
				return e._value;
			} else {
				return e.value;
			}
		}
		function ti(e) {
			e.target.composing = true;
		}
		function ni(e) {
			if (e.target.composing) {
				e.target.composing = false;
				ii(e.target, "input");
			}
		}
		function ii(e, t) {
			var n = document.createEvent("HTMLEvents");
			n.initEvent(t, true, true);
			e.dispatchEvent(n);
		}
		function oi(e) {
			if (!e.componentInstance || e.data && e.data.transition) {
				return e;
			} else {
				return oi(e.componentInstance._vnode);
			}
		}
		function ai(e) {
			var t = e && e.componentOptions;
			if (t && t.Ctor.options.abstract) {
				return ai(me(t.children));
			} else {
				return e;
			}
		}
		function si(e) {
			var t = {};
			var n = e.$options;
			for (var i in n.propsData) {
				t[i] = e[i];
			}
			var o = n._parentListeners;
			for (var a in o) {
				t[xo(a)] = o[a];
			}
			return t;
		}
		function ri(e, t) {
			if (/\d-keep-alive$/.test(t.tag)) {
				return e("keep-alive", {
					props: t.componentOptions.propsData
				});
			}
		}
		function li(e) {
			while (e = e.parent) {
				if (e.data.transition) {
					return true;
				}
			}
		}
		function ci(e, t) {
			return t.key === e.key && t.tag === e.tag;
		}
		function ui(e) {
			if (e.elm._moveCb) {
				e.elm._moveCb();
			}
			if (e.elm._enterCb) {
				e.elm._enterCb();
			}
		}
		function di(e) {
			e.data.newPos = e.elm.getBoundingClientRect();
		}
		function pi(e) {
			var t = e.data.pos;
			var n = e.data.newPos;
			var i = t.left - n.left;
			var o = t.top - n.top;
			if (i || o) {
				e.data.moved = true;
				var a = e.elm.style;
				a.transform = a.WebkitTransform = "translate(" + i + "px," + o + "px)";
				a.transitionDuration = "0s";
			}
		}
		function fi(e, t) {
			var n = t ? Us(t) : qs;
			if (n.test(e)) {
				for (var i, o, a = [], s = n.lastIndex = 0; i = n.exec(e);) {
					if ((o = i.index) > s) {
						a.push(JSON.stringify(e.slice(s, o)));
					}
					var r = tn(i[1].trim());
					a.push("_s(" + r + ")");
					s = o + i[0].length;
				}
				if (s < e.length) {
					a.push(JSON.stringify(e.slice(s)));
				}
				return a.join("+");
			}
		}
		function hi(e, t) {
			var n = t ? xr : kr;
			return e.replace(n, function (e) {
				return _r[e];
			});
		}
		function mi(e, t) {
			function n(t) {
				u += t;
				e = e.substring(t);
			}
			function i(e, n, i) {
				var o;
				var r;
				if (n == null) {
					n = u;
				}
				if (i == null) {
					i = u;
				}
				if (e) {
					r = e.toLowerCase();
				}
				if (e) {
					for (o = s.length - 1; o >= 0 && s[o].lowerCasedTag !== r; o--);
				} else {
					o = 0;
				}
				if (o >= 0) {
					for (var l = s.length - 1; l >= o; l--) {
						if (t.end) {
							t.end(s[l].tag, n, i);
						}
					}
					s.length = o;
					a = o && s[o - 1].tag;
				} else if (r === "br") {
					if (t.start) {
						t.start(e, [], true, n, i);
					}
				} else if (r === "p") {
					if (t.start) {
						t.start(e, [], false, n, i);
					}
					if (t.end) {
						t.end(e, n, i);
					}
				}
			}
			var o;
			for (var a, s = [], r = t.expectHTML, l = t.isUnaryTag || To, c = t.canBeLeftOpenTag || To, u = 0; e;) {
				o = e;
				if (a && yr(a)) {
					var d = 0;
					var p = a.toLowerCase();
					var f = wr[p] ||= new RegExp("([\\s\\S]*?)(</" + p + "[^>]*>)", "i");
					var h = e.replace(f, function (e, n, i) {
						d = i.length;
						if (!yr(p) && p !== "noscript") {
							n = n.replace(/<!--([\s\S]*?)-->/g, "$1").replace(/<!\[CDATA\[([\s\S]*?)]]>/g, "$1");
						}
						if (Sr(p, n)) {
							n = n.slice(1);
						}
						if (t.chars) {
							t.chars(n);
						}
						return "";
					});
					u += e.length - h.length;
					e = h;
					i(p, u - d, u);
				} else {
					var m = e.indexOf("<");
					if (m === 0) {
						if (sr.test(e)) {
							var g = e.indexOf("-->");
							if (g >= 0) {
								if (t.shouldKeepComment) {
									t.comment(e.substring(4, g));
								}
								n(g + 3);
								continue;
							}
						}
						if (rr.test(e)) {
							var v = e.indexOf("]>");
							if (v >= 0) {
								n(v + 2);
								continue;
							}
						}
						var b = e.match(ar);
						if (b) {
							n(b[0].length);
							continue;
						}
						var y = e.match(or);
						if (y) {
							var w = u;
							n(y[0].length);
							i(y[1], w, u);
							continue;
						}
						var _ = function () {
							var t = e.match(nr);
							if (t) {
								var i = {
									tagName: t[1],
									attrs: [],
									start: u
								};
								n(t[0].length);
								for (var o, a; !(o = e.match(ir)) && (a = e.match(Qs));) {
									n(a[0].length);
									i.attrs.push(a);
								}
								if (o) {
									i.unarySlash = o[1];
									n(o[0].length);
									i.end = u;
									return i;
								}
							}
						}();
						if (_) {
							(function (e) {
								var n = e.tagName;
								var o = e.unarySlash;
								if (r) {
									if (a === "p" && Js(n)) {
										i(a);
									}
									if (c(n) && a === n) {
										i(n);
									}
								}
								var u = l(n) || !!o;
								for (var d = e.attrs.length, p = new Array(d), f = 0; f < d; f++) {
									var h = e.attrs[f];
									if (lr && h[0].indexOf("\"\"") === -1) {
										if (h[3] === "") {
											delete h[3];
										}
										if (h[4] === "") {
											delete h[4];
										}
										if (h[5] === "") {
											delete h[5];
										}
									}
									var m = h[3] || h[4] || h[5] || "";
									p[f] = {
										name: h[1],
										value: hi(m, t.shouldDecodeNewlines)
									};
								}
								if (!u) {
									s.push({
										tag: n,
										lowerCasedTag: n.toLowerCase(),
										attrs: p
									});
									a = n;
								}
								if (t.start) {
									t.start(n, p, u, e.start, e.end);
								}
							})(_);
							if (Sr(a, e)) {
								n(1);
							}
							continue;
						}
					}
					var k = undefined;
					var x = undefined;
					var C = undefined;
					if (m >= 0) {
						for (x = e.slice(m); !or.test(x) && !nr.test(x) && !sr.test(x) && !rr.test(x) && !((C = x.indexOf("<", 1)) < 0);) {
							m += C;
							x = e.slice(m);
						}
						k = e.substring(0, m);
						n(m);
					}
					if (m < 0) {
						k = e;
						e = "";
					}
					if (t.chars && k) {
						t.chars(k);
					}
				}
				if (e === o) {
					if (t.chars) {
						t.chars(e);
					}
					break;
				}
			}
			i();
		}
		function gi(e, t) {
			function n(e) {
				if (e.pre) {
					r = false;
				}
				if (hr(e.tag)) {
					l = false;
				}
			}
			cr = t.warn || on;
			hr = t.isPreTag || To;
			mr = t.mustUseProp || To;
			gr = t.getTagNamespace || To;
			dr = an(t.modules, "transformNode");
			pr = an(t.modules, "preTransformNode");
			fr = an(t.modules, "postTransformNode");
			ur = t.delimiters;
			var i;
			var o;
			var a = [];
			var s = t.preserveWhitespace !== false;
			var r = false;
			var l = false;
			mi(e, {
				warn: cr,
				expectHTML: t.expectHTML,
				isUnaryTag: t.isUnaryTag,
				canBeLeftOpenTag: t.canBeLeftOpenTag,
				shouldDecodeNewlines: t.shouldDecodeNewlines,
				shouldKeepComment: t.comments,
				start: function (e, s, c) {
					var u = o && o.ns || gr(e);
					if (Lo && u === "svg") {
						s = $i(s);
					}
					var d = {
						type: 1,
						tag: e,
						attrsList: s,
						attrsMap: Oi(s),
						parent: o,
						children: []
					};
					if (u) {
						d.ns = u;
					}
					if (Ii(d) && !Jo()) {
						d.forbidden = true;
					}
					for (var p = 0; p < pr.length; p++) {
						pr[p](d, t);
					}
					if (!r) {
						vi(d);
						if (d.pre) {
							r = true;
						}
					}
					if (hr(d.tag)) {
						l = true;
					}
					if (r) {
						bi(d);
					} else {
						_i(d);
						ki(d);
						Ai(d);
						yi(d);
						d.plain = !d.key && !s.length;
						wi(d);
						Ti(d);
						Pi(d);
						for (var f = 0; f < dr.length; f++) {
							dr[f](d, t);
						}
						ji(d);
					}
					if (i) {
						if (!a.length) {
							if (i.if && (d.elseif || d.else)) {
								Si(i, {
									exp: d.elseif,
									block: d
								});
							}
						}
					} else {
						i = d;
					}
					if (o && !d.forbidden) {
						if (d.elseif || d.else) {
							xi(d, o);
						} else if (d.slotScope) {
							o.plain = false;
							var h = d.slotTarget || "\"default\"";
							(o.scopedSlots ||= {})[h] = d;
						} else {
							o.children.push(d);
							d.parent = o;
						}
					}
					if (c) {
						n(d);
					} else {
						o = d;
						a.push(d);
					}
					for (var m = 0; m < fr.length; m++) {
						fr[m](d, t);
					}
				},
				end: function () {
					var e = a[a.length - 1];
					var t = e.children[e.children.length - 1];
					if (t && t.type === 3 && t.text === " " && !l) {
						e.children.pop();
					}
					a.length -= 1;
					o = a[a.length - 1];
					n(e);
				},
				chars: function (e) {
					if (o && (!Lo || o.tag !== "textarea" || o.attrsMap.placeholder !== e)) {
						var t = o.children;
						if (e = l || e.trim() ? Di(o) ? e : Dr(e) : s && t.length ? " " : "") {
							var n;
							if (!r && e !== " " && (n = fi(e, ur))) {
								t.push({
									type: 2,
									expression: n,
									text: e
								});
							} else if (e !== " " || !t.length || t[t.length - 1].text !== " ") {
								t.push({
									type: 3,
									text: e
								});
							}
						}
					}
				},
				comment: function (e) {
					o.children.push({
						type: 3,
						text: e,
						isComment: true
					});
				}
			});
			return i;
		}
		function vi(e) {
			if (dn(e, "v-pre") != null) {
				e.pre = true;
			}
		}
		function bi(e) {
			var t = e.attrsList.length;
			if (t) {
				var n = e.attrs = new Array(t);
				for (var i = 0; i < t; i++) {
					n[i] = {
						name: e.attrsList[i].name,
						value: JSON.stringify(e.attrsList[i].value)
					};
				}
			} else if (!e.pre) {
				e.plain = true;
			}
		}
		function yi(e) {
			var t = un(e, "key");
			if (t) {
				e.key = t;
			}
		}
		function wi(e) {
			var t = un(e, "ref");
			if (t) {
				e.ref = t;
				e.refInFor = Ei(e);
			}
		}
		function _i(e) {
			var t;
			if (t = dn(e, "v-for")) {
				var n = t.match(Pr);
				if (!n) {
					return;
				}
				e.for = n[2].trim();
				var i = n[1].trim();
				var o = i.match(jr);
				if (o) {
					e.alias = o[1].trim();
					e.iterator1 = o[2].trim();
					if (o[3]) {
						e.iterator2 = o[3].trim();
					}
				} else {
					e.alias = i;
				}
			}
		}
		function ki(e) {
			var t = dn(e, "v-if");
			if (t) {
				e.if = t;
				Si(e, {
					exp: t,
					block: e
				});
			} else {
				if (dn(e, "v-else") != null) {
					e.else = true;
				}
				var n = dn(e, "v-else-if");
				if (n) {
					e.elseif = n;
				}
			}
		}
		function xi(e, t) {
			var n = Ci(t.children);
			if (n && n.if) {
				Si(n, {
					exp: e.elseif,
					block: e
				});
			}
		}
		function Ci(e) {
			for (var t = e.length; t--;) {
				if (e[t].type === 1) {
					return e[t];
				}
				e.pop();
			}
		}
		function Si(e, t) {
			e.ifConditions ||= [];
			e.ifConditions.push(t);
		}
		function Ai(e) {
			if (dn(e, "v-once") != null) {
				e.once = true;
			}
		}
		function Ti(e) {
			if (e.tag === "slot") {
				e.slotName = un(e, "name");
			} else {
				var t = un(e, "slot");
				if (t) {
					e.slotTarget = t === "\"\"" ? "\"default\"" : t;
					rn(e, "slot", t);
				}
				if (e.tag === "template") {
					e.slotScope = dn(e, "scope");
				}
			}
		}
		function Pi(e) {
			var t;
			if (t = un(e, "is")) {
				e.component = t;
			}
			if (dn(e, "inline-template") != null) {
				e.inlineTemplate = true;
			}
		}
		function ji(e) {
			var t;
			var n;
			var i;
			var o;
			var a;
			var s;
			var r;
			var l = e.attrsList;
			t = 0;
			n = l.length;
			for (; t < n; t++) {
				i = o = l[t].name;
				a = l[t].value;
				if (Tr.test(i)) {
					e.hasBindings = true;
					if (s = Ni(i)) {
						i = i.replace(Or, "");
					}
					if (Nr.test(i)) {
						i = i.replace(Nr, "");
						a = tn(a);
						r = false;
						if (s) {
							if (s.prop) {
								r = true;
								if ((i = xo(i)) === "innerHtml") {
									i = "innerHTML";
								}
							}
							if (s.camel) {
								i = xo(i);
							}
							if (s.sync) {
								cn(e, "update:" + xo(i), fn(a, "$event"));
							}
						}
						if (r || !e.component && mr(e.tag, e.attrsMap.type, i)) {
							sn(e, i, a);
						} else {
							rn(e, i, a);
						}
					} else if (Ar.test(i)) {
						i = i.replace(Ar, "");
						cn(e, i, a, s, false, cr);
					} else {
						var c = (i = i.replace(Tr, "")).match(Er);
						var u = c && c[1];
						if (u) {
							i = i.slice(0, -(u.length + 1));
						}
						ln(e, i, o, a, u, s);
					}
				} else {
					rn(e, i, JSON.stringify(a));
				}
			}
		}
		function Ei(e) {
			for (var t = e; t;) {
				if (t.for !== undefined) {
					return true;
				}
				t = t.parent;
			}
			return false;
		}
		function Ni(e) {
			var t = e.match(Or);
			if (t) {
				var n = {};
				t.forEach(function (e) {
					n[e.slice(1)] = true;
				});
				return n;
			}
		}
		function Oi(e) {
			var t = {};
			for (var n = 0, i = e.length; n < i; n++) {
				t[e[n].name] = e[n].value;
			}
			return t;
		}
		function Di(e) {
			return e.tag === "script" || e.tag === "style";
		}
		function Ii(e) {
			return e.tag === "style" || e.tag === "script" && (!e.attrsMap.type || e.attrsMap.type === "text/javascript");
		}
		function $i(e) {
			var t = [];
			for (var n = 0; n < e.length; n++) {
				var i = e[n];
				if (!Ir.test(i.name)) {
					i.name = i.name.replace($r, "");
					t.push(i);
				}
			}
			return t;
		}
		function Mi(e, t) {
			if (e) {
				vr = Mr(t.staticKeys || "");
				br = t.isReservedTag || To;
				zi(e);
				Fi(e, false);
			}
		}
		function zi(e) {
			e.static = Li(e);
			if (e.type === 1) {
				if (!br(e.tag) && e.tag !== "slot" && e.attrsMap["inline-template"] == null) {
					return;
				}
				for (var t = 0, n = e.children.length; t < n; t++) {
					var i = e.children[t];
					zi(i);
					if (!i.static) {
						e.static = false;
					}
				}
				if (e.ifConditions) {
					for (var o = 1, a = e.ifConditions.length; o < a; o++) {
						var s = e.ifConditions[o].block;
						zi(s);
						if (!s.static) {
							e.static = false;
						}
					}
				}
			}
		}
		function Fi(e, t) {
			if (e.type === 1) {
				if (e.static || e.once) {
					e.staticInFor = t;
				}
				if (e.static && e.children.length && (e.children.length !== 1 || e.children[0].type !== 3)) {
					e.staticRoot = true;
					return;
				}
				e.staticRoot = false;
				if (e.children) {
					for (var n = 0, i = e.children.length; n < i; n++) {
						Fi(e.children[n], t || !!e.for);
					}
				}
				if (e.ifConditions) {
					for (var o = 1, a = e.ifConditions.length; o < a; o++) {
						Fi(e.ifConditions[o].block, t);
					}
				}
			}
		}
		function Li(e) {
			return e.type !== 2 && (e.type === 3 || !!e.pre || !e.hasBindings && !e.if && !e.for && !yo(e.tag) && !!br(e.tag) && !Ri(e) && !!Object.keys(e).every(vr));
		}
		function Ri(e) {
			while (e.parent) {
				if ((e = e.parent).tag !== "template") {
					return false;
				}
				if (e.for) {
					return true;
				}
			}
			return false;
		}
		function Hi(e, t, n) {
			var i = t ? "nativeOn:{" : "on:{";
			for (var o in e) {
				i += "\"" + o + "\":" + Bi(o, e[o]) + ",";
			}
			return i.slice(0, -1) + "}";
		}
		function Bi(e, t) {
			if (!t) {
				return "function(){}";
			}
			if (Array.isArray(t)) {
				return "[" + t.map(function (t) {
					return Bi(e, t);
				}).join(",") + "]";
			}
			var n = Fr.test(t.value);
			var i = zr.test(t.value);
			if (t.modifiers) {
				var o = "";
				var a = "";
				var s = [];
				for (var r in t.modifiers) {
					if (Hr[r]) {
						a += Hr[r];
						if (Lr[r]) {
							s.push(r);
						}
					} else {
						s.push(r);
					}
				}
				if (s.length) {
					o += qi(s);
				}
				if (a) {
					o += a;
				}
				return "function($event){" + o + (n ? t.value + "($event)" : i ? "(" + t.value + ")($event)" : t.value) + "}";
			}
			if (n || i) {
				return t.value;
			} else {
				return "function($event){" + t.value + "}";
			}
		}
		function qi(e) {
			return "if(!('button' in $event)&&" + e.map(Vi).join("&&") + ")return null;";
		}
		function Vi(e) {
			var t = parseInt(e, 10);
			if (t) {
				return "$event.keyCode!==" + t;
			}
			var n = Lr[e];
			return "_k($event.keyCode," + JSON.stringify(e) + (n ? "," + JSON.stringify(n) : "") + ")";
		}
		function Ui(e, t) {
			var n = new qr(t);
			return {
				render: "with(this){return " + (e ? Wi(e, n) : "_c(\"div\")") + "}",
				staticRenderFns: n.staticRenderFns
			};
		}
		function Wi(e, t) {
			if (e.staticRoot && !e.staticProcessed) {
				return Gi(e, t);
			}
			if (e.once && !e.onceProcessed) {
				return Yi(e, t);
			}
			if (e.for && !e.forProcessed) {
				return Xi(e, t);
			}
			if (e.if && !e.ifProcessed) {
				return Ki(e, t);
			}
			if (e.tag !== "template" || e.slotTarget) {
				if (e.tag === "slot") {
					return uo(e, t);
				}
				var n;
				if (e.component) {
					n = po(e.component, e, t);
				} else {
					var i = e.plain ? undefined : Zi(e, t);
					var o = e.inlineTemplate ? null : oo(e, t, true);
					n = "_c('" + e.tag + "'" + (i ? "," + i : "") + (o ? "," + o : "") + ")";
				}
				for (var a = 0; a < t.transforms.length; a++) {
					n = t.transforms[a](e, n);
				}
				return n;
			}
			return oo(e, t) || "void 0";
		}
		function Gi(e, t) {
			e.staticProcessed = true;
			t.staticRenderFns.push("with(this){return " + Wi(e, t) + "}");
			return "_m(" + (t.staticRenderFns.length - 1) + (e.staticInFor ? ",true" : "") + ")";
		}
		function Yi(e, t) {
			e.onceProcessed = true;
			if (e.if && !e.ifProcessed) {
				return Ki(e, t);
			}
			if (e.staticInFor) {
				var n = "";
				for (var i = e.parent; i;) {
					if (i.for) {
						n = i.key;
						break;
					}
					i = i.parent;
				}
				if (n) {
					return "_o(" + Wi(e, t) + "," + t.onceId++ + "," + n + ")";
				} else {
					return Wi(e, t);
				}
			}
			return Gi(e, t);
		}
		function Ki(e, t, n, i) {
			e.ifProcessed = true;
			return Ji(e.ifConditions.slice(), t, n, i);
		}
		function Ji(e, t, n, i) {
			function o(e) {
				if (n) {
					return n(e, t);
				} else if (e.once) {
					return Yi(e, t);
				} else {
					return Wi(e, t);
				}
			}
			if (!e.length) {
				return i || "_e()";
			}
			var a = e.shift();
			if (a.exp) {
				return "(" + a.exp + ")?" + o(a.block) + ":" + Ji(e, t, n, i);
			} else {
				return "" + o(a.block);
			}
		}
		function Xi(e, t, n, i) {
			var o = e.for;
			var a = e.alias;
			var s = e.iterator1 ? "," + e.iterator1 : "";
			var r = e.iterator2 ? "," + e.iterator2 : "";
			e.forProcessed = true;
			return (i || "_l") + "((" + o + "),function(" + a + s + r + "){return " + (n || Wi)(e, t) + "})";
		}
		function Zi(e, t) {
			var n = "{";
			var i = Qi(e, t);
			if (i) {
				n += i + ",";
			}
			if (e.key) {
				n += "key:" + e.key + ",";
			}
			if (e.ref) {
				n += "ref:" + e.ref + ",";
			}
			if (e.refInFor) {
				n += "refInFor:true,";
			}
			if (e.pre) {
				n += "pre:true,";
			}
			if (e.component) {
				n += "tag:\"" + e.tag + "\",";
			}
			for (var o = 0; o < t.dataGenFns.length; o++) {
				n += t.dataGenFns[o](e);
			}
			if (e.attrs) {
				n += "attrs:{" + fo(e.attrs) + "},";
			}
			if (e.props) {
				n += "domProps:{" + fo(e.props) + "},";
			}
			if (e.events) {
				n += Hi(e.events, false, t.warn) + ",";
			}
			if (e.nativeEvents) {
				n += Hi(e.nativeEvents, true, t.warn) + ",";
			}
			if (e.slotTarget) {
				n += "slot:" + e.slotTarget + ",";
			}
			if (e.scopedSlots) {
				n += to(e.scopedSlots, t) + ",";
			}
			if (e.model) {
				n += "model:{value:" + e.model.value + ",callback:" + e.model.callback + ",expression:" + e.model.expression + "},";
			}
			if (e.inlineTemplate) {
				var a = eo(e, t);
				if (a) {
					n += a + ",";
				}
			}
			n = n.replace(/,$/, "") + "}";
			if (e.wrapData) {
				n = e.wrapData(n);
			}
			if (e.wrapListeners) {
				n = e.wrapListeners(n);
			}
			return n;
		}
		function Qi(e, t) {
			var n = e.directives;
			if (n) {
				var i;
				var o;
				var a;
				var s;
				var r = "directives:[";
				var l = false;
				i = 0;
				o = n.length;
				for (; i < o; i++) {
					a = n[i];
					s = true;
					var c = t.directives[a.name];
					if (c) {
						s = !!c(e, a, t.warn);
					}
					if (s) {
						l = true;
						r += "{name:\"" + a.name + "\",rawName:\"" + a.rawName + "\"" + (a.value ? ",value:(" + a.value + "),expression:" + JSON.stringify(a.value) : "") + (a.arg ? ",arg:\"" + a.arg + "\"" : "") + (a.modifiers ? ",modifiers:" + JSON.stringify(a.modifiers) : "") + "},";
					}
				}
				if (l) {
					return r.slice(0, -1) + "]";
				} else {
					return undefined;
				}
			}
		}
		function eo(e, t) {
			var n = e.children[0];
			if (n.type === 1) {
				var i = Ui(n, t.options);
				return "inlineTemplate:{render:function(){" + i.render + "},staticRenderFns:[" + i.staticRenderFns.map(function (e) {
					return "function(){" + e + "}";
				}).join(",") + "]}";
			}
		}
		function to(e, t) {
			return "scopedSlots:_u([" + Object.keys(e).map(function (n) {
				return no(n, e[n], t);
			}).join(",") + "])";
		}
		function no(e, t, n) {
			if (t.for && !t.forProcessed) {
				return io(e, t, n);
			} else {
				return "{key:" + e + ",fn:function(" + String(t.attrsMap.scope) + "){return " + (t.tag === "template" ? oo(t, n) || "void 0" : Wi(t, n)) + "}}";
			}
		}
		function io(e, t, n) {
			var i = t.for;
			var o = t.alias;
			var a = t.iterator1 ? "," + t.iterator1 : "";
			var s = t.iterator2 ? "," + t.iterator2 : "";
			t.forProcessed = true;
			return "_l((" + i + "),function(" + o + a + s + "){return " + no(e, t, n) + "})";
		}
		function oo(e, t, n, i, o) {
			var a = e.children;
			if (a.length) {
				var s = a[0];
				if (a.length === 1 && s.for && s.tag !== "template" && s.tag !== "slot") {
					return (i || Wi)(s, t);
				}
				var r = n ? ao(a, t.maybeComponent) : 0;
				var l = o || ro;
				return "[" + a.map(function (e) {
					return l(e, t);
				}).join(",") + "]" + (r ? "," + r : "");
			}
		}
		function ao(e, t) {
			var n = 0;
			for (var i = 0; i < e.length; i++) {
				var o = e[i];
				if (o.type === 1) {
					if (so(o) || o.ifConditions && o.ifConditions.some(function (e) {
						return so(e.block);
					})) {
						n = 2;
						break;
					}
					if (t(o) || o.ifConditions && o.ifConditions.some(function (e) {
						return t(e.block);
					})) {
						n = 1;
					}
				}
			}
			return n;
		}
		function so(e) {
			return e.for !== undefined || e.tag === "template" || e.tag === "slot";
		}
		function ro(e, t) {
			if (e.type === 1) {
				return Wi(e, t);
			} else if (e.type === 3 && e.isComment) {
				return co(e);
			} else {
				return lo(e);
			}
		}
		function lo(e) {
			return "_v(" + (e.type === 2 ? e.expression : ho(JSON.stringify(e.text))) + ")";
		}
		function co(e) {
			return "_e(" + JSON.stringify(e.text) + ")";
		}
		function uo(e, t) {
			var n = e.slotName || "\"default\"";
			var i = oo(e, t);
			var o = "_t(" + n + (i ? "," + i : "");
			var a = e.attrs && "{" + e.attrs.map(function (e) {
				return xo(e.name) + ":" + e.value;
			}).join(",") + "}";
			var s = e.attrsMap["v-bind"];
			if ((!!a || !!s) && !i) {
				o += ",null";
			}
			if (a) {
				o += "," + a;
			}
			if (s) {
				o += (a ? "" : ",null") + "," + s;
			}
			return o + ")";
		}
		function po(e, t, n) {
			var i = t.inlineTemplate ? null : oo(t, n, true);
			return "_c(" + e + "," + Zi(t, n) + (i ? "," + i : "") + ")";
		}
		function fo(e) {
			var t = "";
			for (var n = 0; n < e.length; n++) {
				var i = e[n];
				t += "\"" + i.name + "\":" + ho(i.value) + ",";
			}
			return t.slice(0, -1);
		}
		function ho(e) {
			return e.replace(/\u2028/g, "\\u2028").replace(/\u2029/g, "\\u2029");
		}
		function mo(e, t) {
			try {
				return new Function(e);
			} catch (n) {
				t.push({
					err: n,
					code: e
				});
				return _;
			}
		}
		function go(e) {
			var t = Object.create(null);
			return function (n, i, o) {
				var a = (i = i || {}).delimiters ? String(i.delimiters) + n : n;
				if (t[a]) {
					return t[a];
				}
				var s = e(n, i);
				var r = {};
				var l = [];
				r.render = mo(s.render, l);
				r.staticRenderFns = s.staticRenderFns.map(function (e) {
					return mo(e, l);
				});
				return t[a] = r;
			};
		}
		function vo(e) {
			if (e.outerHTML) {
				return e.outerHTML;
			}
			var t = document.createElement("div");
			t.appendChild(e.cloneNode(true));
			return t.innerHTML;
		}
		var bo = Object.prototype.toString;
		var yo = f("slot,component", true);
		var wo = f("key,ref,slot,is");
		var _o = Object.prototype.hasOwnProperty;
		var ko = /-(\w)/g;
		var xo = g(function (e) {
			return e.replace(ko, function (e, t) {
				if (t) {
					return t.toUpperCase();
				} else {
					return "";
				}
			});
		});
		var Co = g(function (e) {
			return e.charAt(0).toUpperCase() + e.slice(1);
		});
		var So = /\B([A-Z])/g;
		var Ao = g(function (e) {
			return e.replace(So, "-$1").toLowerCase();
		});
		function To(e, t, n) {
			return false;
		}
		function Po(e) {
			return e;
		}
		var jo = "data-server-rendered";
		var Eo = ["component", "directive", "filter"];
		var No = ["beforeCreate", "created", "beforeMount", "mounted", "beforeUpdate", "updated", "beforeDestroy", "destroyed", "activated", "deactivated"];
		var Oo = {
			optionMergeStrategies: Object.create(null),
			silent: false,
			productionTip: false,
			devtools: false,
			performance: false,
			errorHandler: null,
			warnHandler: null,
			ignoredElements: [],
			keyCodes: Object.create(null),
			isReservedTag: To,
			isReservedAttr: To,
			isUnknownElement: To,
			getTagNamespace: _,
			parsePlatformTagName: Po,
			mustUseProp: To,
			_lifecycleHooks: No
		};
		var Do = Object.freeze({});
		var Io = /[^\w.$]/;
		var $o = _;
		var Mo = "__proto__" in {};
		var zo = typeof window != "undefined";
		var Fo = zo && window.navigator.userAgent.toLowerCase();
		var Lo = Fo && /msie|trident/.test(Fo);
		var Ro = Fo && Fo.indexOf("msie 9.0") > 0;
		var Ho = Fo && Fo.indexOf("edge/") > 0;
		var Bo = Fo && Fo.indexOf("android") > 0;
		var qo = Fo && /iphone|ipad|ipod|ios/.test(Fo);
		var Vo = Fo && /chrome\/\d+/.test(Fo) && !Ho;
		var Uo = {}.watch;
		var Wo = false;
		if (zo) {
			try {
				var Go = {};
				Object.defineProperty(Go, "passive", {
					get: function () {
						Wo = true;
					}
				});
				window.addEventListener("test-passive", null, Go);
			} catch (e) {}
		}
		var Yo;
		var Ko;
		function Jo() {
			if (Yo === undefined) {
				Yo = !zo && e !== undefined && e.process.env.VUE_ENV === "server";
			}
			return Yo;
		}
		var Xo = zo && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;
		var Zo = typeof Symbol != "undefined" && j(Symbol) && typeof Reflect != "undefined" && j(Reflect.ownKeys);
		var Qo = function () {
			function e() {
				i = false;
				var e = n.slice(0);
				n.length = 0;
				for (var t = 0; t < e.length; t++) {
					e[t]();
				}
			}
			var t;
			var n = [];
			var i = false;
			if (typeof Promise != "undefined" && j(Promise)) {
				var o = Promise.resolve();
				function a(e) {
					console.error(e);
				}
				t = function () {
					o.then(e).catch(a);
					if (qo) {
						setTimeout(_);
					}
				};
			} else if (Lo || typeof MutationObserver == "undefined" || !j(MutationObserver) && MutationObserver.toString() !== "[object MutationObserverConstructor]") {
				t = function () {
					setTimeout(e, 0);
				};
			} else {
				var s = 1;
				var r = new MutationObserver(e);
				var l = document.createTextNode(String(s));
				r.observe(l, {
					characterData: true
				});
				t = function () {
					s = (s + 1) % 2;
					l.data = String(s);
				};
			}
			return function (e, o) {
				var a;
				n.push(function () {
					if (e) {
						try {
							e.call(o);
						} catch (e) {
							P(e, o, "nextTick");
						}
					} else if (a) {
						a(o);
					}
				});
				if (!i) {
					i = true;
					t();
				}
				if (!e && typeof Promise != "undefined") {
					return new Promise(function (e, t) {
						a = e;
					});
				}
			};
		}();
		Ko = typeof Set != "undefined" && j(Set) ? Set : function () {
			function e() {
				this.set = Object.create(null);
			}
			e.prototype.has = function (e) {
				return this.set[e] === true;
			};
			e.prototype.add = function (e) {
				this.set[e] = true;
			};
			e.prototype.clear = function () {
				this.set = Object.create(null);
			};
			return e;
		}();
		var ea = 0;
		function ta() {
			this.id = ea++;
			this.subs = [];
		}
		ta.prototype.addSub = function (e) {
			this.subs.push(e);
		};
		ta.prototype.removeSub = function (e) {
			h(this.subs, e);
		};
		ta.prototype.depend = function () {
			if (ta.target) {
				ta.target.addDep(this);
			}
		};
		ta.prototype.notify = function () {
			var e = this.subs.slice();
			for (var t = 0, n = e.length; t < n; t++) {
				e[t].update();
			}
		};
		ta.target = null;
		var na = [];
		var ia = Array.prototype;
		var oa = Object.create(ia);
		["push", "pop", "shift", "unshift", "splice", "sort", "reverse"].forEach(function (e) {
			var t = ia[e];
			A(oa, e, function () {
				var n = [];
				for (var i = arguments.length; i--;) {
					n[i] = arguments[i];
				}
				var o;
				var a = t.apply(this, n);
				var s = this.__ob__;
				switch (e) {
					case "push":
					case "unshift":
						o = n;
						break;
					case "splice":
						o = n.slice(2);
				}
				if (o) {
					s.observeArray(o);
				}
				s.dep.notify();
				return a;
			});
		});
		var aa = Object.getOwnPropertyNames(oa);
		var sa = {
			shouldConvert: true
		};
		function ra(e) {
			this.value = e;
			this.dep = new ta();
			this.vmCount = 0;
			A(e, "__ob__", this);
			if (Array.isArray(e)) {
				(Mo ? O : D)(e, oa, aa);
				this.observeArray(e);
			} else {
				this.walk(e);
			}
		}
		ra.prototype.walk = function (e) {
			for (var t = Object.keys(e), n = 0; n < t.length; n++) {
				$(e, t[n], e[t[n]]);
			}
		};
		ra.prototype.observeArray = function (e) {
			for (var t = 0, n = e.length; t < n; t++) {
				I(e[t]);
			}
		};
		var la = Oo.optionMergeStrategies;
		la.data = function (e, t, n) {
			if (n) {
				return R(e, t, n);
			} else if (t && typeof t != "function") {
				return e;
			} else {
				return R.call(this, e, t);
			}
		};
		No.forEach(function (e) {
			la[e] = H;
		});
		Eo.forEach(function (e) {
			la[e + "s"] = B;
		});
		la.watch = function (e, t) {
			if (e === Uo) {
				e = undefined;
			}
			if (t === Uo) {
				t = undefined;
			}
			if (!t) {
				return Object.create(e || null);
			}
			if (!e) {
				return t;
			}
			var n = {};
			y(n, e);
			for (var i in t) {
				var o = n[i];
				var a = t[i];
				if (o && !Array.isArray(o)) {
					o = [o];
				}
				n[i] = o ? o.concat(a) : Array.isArray(a) ? a : [a];
			}
			return n;
		};
		la.props = la.methods = la.inject = la.computed = function (e, t) {
			if (!e) {
				return t;
			}
			var n = Object.create(null);
			y(n, e);
			if (t) {
				y(n, t);
			}
			return n;
		};
		la.provide = R;
		function ca(e, t) {
			if (t === undefined) {
				return e;
			} else {
				return t;
			}
		}
		function ua(e, t, n, i, o, a, s, r) {
			this.tag = e;
			this.data = t;
			this.children = n;
			this.text = i;
			this.elm = o;
			this.ns = undefined;
			this.context = a;
			this.functionalContext = undefined;
			this.key = t && t.key;
			this.componentOptions = s;
			this.componentInstance = undefined;
			this.parent = undefined;
			this.raw = false;
			this.isStatic = false;
			this.isRootInsert = true;
			this.isComment = false;
			this.isCloned = false;
			this.isOnce = false;
			this.asyncFactory = r;
			this.asyncMeta = undefined;
			this.isAsyncPlaceholder = false;
		}
		var da = {
			child: {}
		};
		da.child.get = function () {
			return this.componentInstance;
		};
		Object.defineProperties(ua.prototype, da);
		var pa;
		function fa(e = "") {
			var t = new ua();
			t.text = e;
			t.isComment = true;
			return t;
		}
		var ha = g(function (e) {
			var t = e.charAt(0) === "&";
			var n = (e = t ? e.slice(1) : e).charAt(0) === "~";
			var i = (e = n ? e.slice(1) : e).charAt(0) === "!";
			e = i ? e.slice(1) : e;
			return {
				name: e,
				plain: !t && !n && !i,
				once: n,
				capture: i,
				passive: t
			};
		});
		var ma = null;
		var ga = [];
		var va = [];
		var ba = {};
		var ya = false;
		var wa = false;
		var _a = 0;
		var ka = 0;
		function xa(e, t, n, i) {
			this.vm = e;
			e._watchers.push(this);
			if (i) {
				this.deep = !!i.deep;
				this.user = !!i.user;
				this.lazy = !!i.lazy;
				this.sync = !!i.sync;
			} else {
				this.deep = this.user = this.lazy = this.sync = false;
			}
			this.cb = n;
			this.id = ++ka;
			this.active = true;
			this.dirty = this.lazy;
			this.deps = [];
			this.newDeps = [];
			this.depIds = new Ko();
			this.newDepIds = new Ko();
			this.expression = "";
			if (typeof t == "function") {
				this.getter = t;
			} else {
				this.getter = T(t);
				this.getter ||= function () {};
			}
			this.value = this.lazy ? undefined : this.get();
		}
		xa.prototype.get = function () {
			E(this);
			var e;
			var t = this.vm;
			try {
				e = this.getter.call(t, t);
			} catch (e) {
				if (!this.user) {
					throw e;
				}
				P(e, t, "getter for watcher \"" + this.expression + "\"");
			} finally {
				if (this.deep) {
					Me(e);
				}
				N();
				this.cleanupDeps();
			}
			return e;
		};
		xa.prototype.addDep = function (e) {
			var t = e.id;
			if (!this.newDepIds.has(t)) {
				this.newDepIds.add(t);
				this.newDeps.push(e);
				if (!this.depIds.has(t)) {
					e.addSub(this);
				}
			}
		};
		xa.prototype.cleanupDeps = function () {
			var e = this;
			for (var t = this.deps.length; t--;) {
				var n = e.deps[t];
				if (!e.newDepIds.has(n.id)) {
					n.removeSub(e);
				}
			}
			var i = this.depIds;
			this.depIds = this.newDepIds;
			this.newDepIds = i;
			this.newDepIds.clear();
			i = this.deps;
			this.deps = this.newDeps;
			this.newDeps = i;
			this.newDeps.length = 0;
		};
		xa.prototype.update = function () {
			if (this.lazy) {
				this.dirty = true;
			} else if (this.sync) {
				this.run();
			} else {
				$e(this);
			}
		};
		xa.prototype.run = function () {
			if (this.active) {
				var e = this.get();
				if (e !== this.value || r(e) || this.deep) {
					var t = this.value;
					this.value = e;
					if (this.user) {
						try {
							this.cb.call(this.vm, e, t);
						} catch (e) {
							P(e, this.vm, "callback for watcher \"" + this.expression + "\"");
						}
					} else {
						this.cb.call(this.vm, e, t);
					}
				}
			}
		};
		xa.prototype.evaluate = function () {
			this.value = this.get();
			this.dirty = false;
		};
		xa.prototype.depend = function () {
			var e = this;
			for (var t = this.deps.length; t--;) {
				e.deps[t].depend();
			}
		};
		xa.prototype.teardown = function () {
			var e = this;
			if (this.active) {
				if (!this.vm._isBeingDestroyed) {
					h(this.vm._watchers, this);
				}
				for (var t = this.deps.length; t--;) {
					e.deps[t].removeSub(e);
				}
				this.active = false;
			}
		};
		var Ca = new Ko();
		var Sa = {
			enumerable: true,
			configurable: true,
			get: _,
			set: _
		};
		var Aa = {
			lazy: true
		};
		var Ta = {
			init: function (e, t, n, i) {
				if (!e.componentInstance || e.componentInstance._isDestroyed) {
					(e.componentInstance = tt(e, ma, n, i)).$mount(t ? e.elm : undefined, t);
				} else if (e.data.keepAlive) {
					var o = e;
					Ta.prepatch(o, o);
				}
			},
			prepatch: function (e, t) {
				var n = t.componentOptions;
				Se(t.componentInstance = e.componentInstance, n.propsData, n.listeners, t, n.children);
			},
			insert: function (e) {
				var t = e.context;
				var n = e.componentInstance;
				if (!n._isMounted) {
					n._isMounted = true;
					je(n, "mounted");
				}
				if (e.data.keepAlive) {
					if (t._isMounted) {
						De(n);
					} else {
						Te(n, true);
					}
				}
			},
			destroy: function (e) {
				var t = e.componentInstance;
				if (!t._isDestroyed) {
					if (e.data.keepAlive) {
						Pe(t, true);
					} else {
						t.$destroy();
					}
				}
			}
		};
		var Pa = Object.keys(Ta);
		var ja = 1;
		var Ea = 2;
		var Na = 0;
		xt.prototype._init = function (e) {
			var t = this;
			t._uid = Na++;
			t._isVue = true;
			if (e && e._isComponent) {
				yt(t, e);
			} else {
				t.$options = W(wt(t.constructor), e || {}, t);
			}
			t._renderProxy = t;
			t._self = t;
			xe(t);
			ge(t);
			bt(t);
			je(t, "beforeCreate");
			Je(t);
			Le(t);
			Ke(t);
			je(t, "created");
			if (t.$options.el) {
				t.$mount(t.$options.el);
			}
		};
		(function (e) {
			var t = {
				get: function () {
					return this._data;
				}
			};
			var n = {
				get: function () {
					return this._props;
				}
			};
			Object.defineProperty(e.prototype, "$data", t);
			Object.defineProperty(e.prototype, "$props", n);
			e.prototype.$set = M;
			e.prototype.$delete = z;
			e.prototype.$watch = function (e, t, n) {
				var i = this;
				if (l(t)) {
					return Ye(i, e, t, n);
				}
				(n = n || {}).user = true;
				var o = new xa(i, e, t, n);
				if (n.immediate) {
					t.call(i, o.value);
				}
				return function () {
					o.teardown();
				};
			};
		})(xt);
		(function (e) {
			var t = /^hook:/;
			e.prototype.$on = function (e, n) {
				var i = this;
				var o = this;
				if (Array.isArray(e)) {
					for (var a = 0, s = e.length; a < s; a++) {
						i.$on(e[a], n);
					}
				} else {
					(o._events[e] ||= []).push(n);
					if (t.test(e)) {
						o._hasHookEvent = true;
					}
				}
				return o;
			};
			e.prototype.$once = function (e, t) {
				function n() {
					i.$off(e, n);
					t.apply(i, arguments);
				}
				var i = this;
				n.fn = t;
				i.$on(e, n);
				return i;
			};
			e.prototype.$off = function (e, t) {
				var n = this;
				var i = this;
				if (!arguments.length) {
					i._events = Object.create(null);
					return i;
				}
				if (Array.isArray(e)) {
					for (var o = 0, a = e.length; o < a; o++) {
						n.$off(e[o], t);
					}
					return i;
				}
				var s = i._events[e];
				if (!s) {
					return i;
				}
				if (arguments.length === 1) {
					i._events[e] = null;
					return i;
				}
				if (t) {
					var r;
					for (var l = s.length; l--;) {
						if ((r = s[l]) === t || r.fn === t) {
							s.splice(l, 1);
							break;
						}
					}
				}
				return i;
			};
			e.prototype.$emit = function (e) {
				var t = this;
				var n = t._events[e];
				if (n) {
					n = n.length > 1 ? b(n) : n;
					var i = b(arguments, 1);
					for (var o = 0, a = n.length; o < a; o++) {
						try {
							n[o].apply(t, i);
						} catch (n) {
							P(n, t, "event handler for \"" + e + "\"");
						}
					}
				}
				return t;
			};
		})(xt);
		(function (e) {
			e.prototype._update = function (e, t) {
				var n = this;
				if (n._isMounted) {
					je(n, "beforeUpdate");
				}
				var i = n.$el;
				var o = n._vnode;
				var a = ma;
				ma = n;
				n._vnode = e;
				if (o) {
					n.$el = n.__patch__(o, e);
				} else {
					n.$el = n.__patch__(n.$el, e, t, false, n.$options._parentElm, n.$options._refElm);
					n.$options._parentElm = n.$options._refElm = null;
				}
				ma = a;
				if (i) {
					i.__vue__ = null;
				}
				if (n.$el) {
					n.$el.__vue__ = n;
				}
				if (n.$vnode && n.$parent && n.$vnode === n.$parent._vnode) {
					n.$parent.$el = n.$el;
				}
			};
			e.prototype.$forceUpdate = function () {
				var e = this;
				if (e._watcher) {
					e._watcher.update();
				}
			};
			e.prototype.$destroy = function () {
				var e = this;
				if (!e._isBeingDestroyed) {
					je(e, "beforeDestroy");
					e._isBeingDestroyed = true;
					var t = e.$parent;
					if (!!t && !t._isBeingDestroyed && !e.$options.abstract) {
						h(t.$children, e);
					}
					if (e._watcher) {
						e._watcher.teardown();
					}
					for (var n = e._watchers.length; n--;) {
						e._watchers[n].teardown();
					}
					if (e._data.__ob__) {
						e._data.__ob__.vmCount--;
					}
					e._isDestroyed = true;
					e.__patch__(e._vnode, null);
					je(e, "destroyed");
					e.$off();
					if (e.$el) {
						e.$el.__vue__ = null;
					}
				}
			};
		})(xt);
		(function (e) {
			e.prototype.$nextTick = function (e) {
				return Qo(e, this);
			};
			e.prototype._render = function () {
				var e = this;
				var t = e.$options;
				var n = t.render;
				var i = t.staticRenderFns;
				var o = t._parentVnode;
				if (e._isMounted) {
					for (var a in e.$slots) {
						var s = e.$slots[a];
						if (s._rendered) {
							e.$slots[a] = ee(s, true);
						}
					}
				}
				e.$scopedSlots = o && o.data.scopedSlots || Do;
				if (i && !e._staticTrees) {
					e._staticTrees = [];
				}
				e.$vnode = o;
				var r;
				try {
					r = n.call(e._renderProxy, e.$createElement);
				} catch (t) {
					P(t, e, "render function");
					r = e._vnode;
				}
				if (!(r instanceof ua)) {
					r = fa();
				}
				r.parent = o;
				return r;
			};
			e.prototype._o = ht;
			e.prototype._n = p;
			e.prototype._s = d;
			e.prototype._l = lt;
			e.prototype._t = ct;
			e.prototype._q = k;
			e.prototype._i = x;
			e.prototype._m = ft;
			e.prototype._f = ut;
			e.prototype._k = dt;
			e.prototype._b = pt;
			e.prototype._v = Z;
			e.prototype._e = fa;
			e.prototype._u = ke;
			e.prototype._g = vt;
		})(xt);
		var Oa = [String, RegExp, Array];
		var Da = {
			KeepAlive: {
				name: "keep-alive",
				abstract: true,
				props: {
					include: Oa,
					exclude: Oa
				},
				created: function () {
					this.cache = Object.create(null);
				},
				destroyed: function () {
					var e = this;
					for (var t in e.cache) {
						Dt(e.cache[t]);
					}
				},
				watch: {
					include: function (e) {
						Ot(this.cache, this._vnode, function (t) {
							return Nt(e, t);
						});
					},
					exclude: function (e) {
						Ot(this.cache, this._vnode, function (t) {
							return !Nt(e, t);
						});
					}
				},
				render: function () {
					var e = me(this.$slots.default);
					var t = e && e.componentOptions;
					if (t) {
						var n = Et(t);
						if (n && (this.include && !Nt(this.include, n) || this.exclude && Nt(this.exclude, n))) {
							return e;
						}
						var i = e.key == null ? t.Ctor.cid + (t.tag ? "::" + t.tag : "") : e.key;
						if (this.cache[i]) {
							e.componentInstance = this.cache[i].componentInstance;
						} else {
							this.cache[i] = e;
						}
						e.data.keepAlive = true;
					}
					return e;
				}
			}
		};
		(function (e) {
			var t = {
				get: function () {
					return Oo;
				}
			};
			Object.defineProperty(e, "config", t);
			e.util = {
				warn: $o,
				extend: y,
				mergeOptions: W,
				defineReactive: $
			};
			e.set = M;
			e.delete = z;
			e.nextTick = Qo;
			e.options = Object.create(null);
			Eo.forEach(function (t) {
				e.options[t + "s"] = Object.create(null);
			});
			e.options._base = e;
			y(e.options.components, Da);
			Ct(e);
			St(e);
			At(e);
			jt(e);
		})(xt);
		Object.defineProperty(xt.prototype, "$isServer", {
			get: Jo
		});
		Object.defineProperty(xt.prototype, "$ssrContext", {
			get: function () {
				return this.$vnode && this.$vnode.ssrContext;
			}
		});
		xt.version = "2.4.4";
		var Ia;
		var $a;
		var Ma;
		var za;
		var Fa;
		var La;
		var Ra;
		var Ha;
		var Ba;
		var qa = f("style,class");
		var Va = f("input,textarea,option,select,progress");
		function Ua(e, t, n) {
			return n === "value" && Va(e) && t !== "button" || n === "selected" && e === "option" || n === "checked" && e === "input" || n === "muted" && e === "video";
		}
		var Wa = f("contenteditable,draggable,spellcheck");
		var Ga = f("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,translate,truespeed,typemustmatch,visible");
		var Ya = "http://www.w3.org/1999/xlink";
		function Ka(e) {
			return e.charAt(5) === ":" && e.slice(0, 5) === "xlink";
		}
		function Ja(e) {
			if (Ka(e)) {
				return e.slice(6, e.length);
			} else {
				return "";
			}
		}
		function Xa(e) {
			return e == null || e === false;
		}
		var Za = {
			svg: "http://www.w3.org/2000/svg",
			math: "http://www.w3.org/1998/Math/MathML"
		};
		var Qa = f("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot");
		var es = f("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view", true);
		function ts(e) {
			return Qa(e) || es(e);
		}
		var ns = Object.create(null);
		var is = f("text,number,password,search,email,tel,url");
		var os = Object.freeze({
			createElement: function (e, t) {
				var n = document.createElement(e);
				if (e !== "select") {
					return n;
				} else {
					if (t.data && t.data.attrs && t.data.attrs.multiple !== undefined) {
						n.setAttribute("multiple", "multiple");
					}
					return n;
				}
			},
			createElementNS: function (e, t) {
				return document.createElementNS(Za[e], t);
			},
			createTextNode: function (e) {
				return document.createTextNode(e);
			},
			createComment: function (e) {
				return document.createComment(e);
			},
			insertBefore: function (e, t, n) {
				e.insertBefore(t, n);
			},
			removeChild: function (e, t) {
				e.removeChild(t);
			},
			appendChild: function (e, t) {
				e.appendChild(t);
			},
			parentNode: function (e) {
				return e.parentNode;
			},
			nextSibling: function (e) {
				return e.nextSibling;
			},
			tagName: function (e) {
				return e.tagName;
			},
			setTextContent: function (e, t) {
				e.textContent = t;
			},
			setAttribute: function (e, t, n) {
				e.setAttribute(t, n);
			}
		});
		var as = {
			create: function (e, t) {
				qt(t);
			},
			update: function (e, t) {
				if (e.data.ref !== t.data.ref) {
					qt(e, true);
					qt(t);
				}
			},
			destroy: function (e) {
				qt(e, true);
			}
		};
		var ss = new ua("", {}, []);
		var rs = ["create", "activate", "update", "remove", "destroy"];
		var ls = {
			create: Gt,
			update: Gt,
			destroy: function (e) {
				Gt(e, ss);
			}
		};
		var cs = Object.create(null);
		var us = [as, ls];
		var ds = {
			create: Zt,
			update: Zt
		};
		var ps = {
			create: en,
			update: en
		};
		var fs = /[\w).+\-_$\]]/;
		var hs = "__r";
		var ms = "__c";
		var gs = {
			create: Tn,
			update: Tn
		};
		var vs = {
			create: Pn,
			update: Pn
		};
		var bs = g(function (e) {
			var t = {};
			var n = /;(?![^(]*\))/g;
			var i = /:(.+)/;
			e.split(n).forEach(function (e) {
				if (e) {
					var n = e.split(i);
					if (n.length > 1) {
						t[n[0].trim()] = n[1].trim();
					}
				}
			});
			return t;
		});
		var ys = /^--/;
		var ws = /\s*!important$/;
		function _s(e, t, n) {
			if (ys.test(t)) {
				e.style.setProperty(t, n);
			} else if (ws.test(n)) {
				e.style.setProperty(t, n.replace(ws, ""), "important");
			} else {
				var i = xs(t);
				if (Array.isArray(n)) {
					for (var o = 0, a = n.length; o < a; o++) {
						e.style[i] = n[o];
					}
				} else {
					e.style[i] = n;
				}
			}
		}
		var ks = ["Webkit", "Moz", "ms"];
		var xs = g(function (e) {
			Ba = Ba || document.createElement("div").style;
			if ((e = xo(e)) !== "filter" && e in Ba) {
				return e;
			}
			var t = e.charAt(0).toUpperCase() + e.slice(1);
			for (var n = 0; n < ks.length; n++) {
				var i = ks[n] + t;
				if (i in Ba) {
					return i;
				}
			}
		});
		var Cs = {
			create: $n,
			update: $n
		};
		var Ss = g(function (e) {
			return {
				enterClass: e + "-enter",
				enterToClass: e + "-enter-to",
				enterActiveClass: e + "-enter-active",
				leaveClass: e + "-leave",
				leaveToClass: e + "-leave-to",
				leaveActiveClass: e + "-leave-active"
			};
		});
		var As = zo && !Ro;
		var Ts = "transition";
		var Ps = "animation";
		var js = "transition";
		var Es = "transitionend";
		var Ns = "animation";
		var Os = "animationend";
		if (As) {
			if (window.ontransitionend === undefined && window.onwebkittransitionend !== undefined) {
				js = "WebkitTransition";
				Es = "webkitTransitionEnd";
			}
			if (window.onanimationend === undefined && window.onwebkitanimationend !== undefined) {
				Ns = "WebkitAnimation";
				Os = "webkitAnimationEnd";
			}
		}
		var Ds = zo && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : setTimeout;
		var Is = /\b(transform|all)(,|$)/;
		var $s = function (e) {
			function t(e) {
				return new ua(N.tagName(e).toLowerCase(), {}, [], undefined, e);
			}
			function a(e, t) {
				function n() {
					if (--n.listeners == 0) {
						r(e);
					}
				}
				n.listeners = t;
				return n;
			}
			function r(e) {
				var t = N.parentNode(e);
				if (i(t)) {
					N.removeChild(t, e);
				}
			}
			function l(e, t, n, a, s) {
				e.isRootInsert = !s;
				if (!c(e, t, n, a)) {
					var r = e.data;
					var l = e.children;
					var u = e.tag;
					if (i(u)) {
						e.elm = e.ns ? N.createElementNS(e.ns, u) : N.createElement(u, e);
						v(e);
						h(e, l, t);
						if (i(r)) {
							g(e, t);
						}
						p(n, e.elm, a);
					} else if (o(e.isComment)) {
						e.elm = N.createComment(e.text);
						p(n, e.elm, a);
					} else {
						e.elm = N.createTextNode(e.text);
						p(n, e.elm, a);
					}
				}
			}
			function c(e, t, n, a) {
				var s = e.data;
				if (i(s)) {
					var r = i(e.componentInstance) && s.keepAlive;
					if (i(s = s.hook) && i(s = s.init)) {
						s(e, false, n, a);
					}
					if (i(e.componentInstance)) {
						u(e, t);
						if (o(r)) {
							d(e, t, n, a);
						}
						return true;
					}
				}
			}
			function u(e, t) {
				if (i(e.data.pendingInsert)) {
					t.push.apply(t, e.data.pendingInsert);
					e.data.pendingInsert = null;
				}
				e.elm = e.componentInstance.$el;
				if (m(e)) {
					g(e, t);
					v(e);
				} else {
					qt(e);
					t.push(e);
				}
			}
			function d(e, t, n, o) {
				var a;
				for (var s = e; s.componentInstance;) {
					s = s.componentInstance._vnode;
					if (i(a = s.data) && i(a = a.transition)) {
						for (a = 0; a < j.activate.length; ++a) {
							j.activate[a](ss, s);
						}
						t.push(s);
						break;
					}
				}
				p(n, e.elm, o);
			}
			function p(e, t, n) {
				if (i(e)) {
					if (i(n)) {
						if (n.parentNode === e) {
							N.insertBefore(e, t, n);
						}
					} else {
						N.appendChild(e, t);
					}
				}
			}
			function h(e, t, n) {
				if (Array.isArray(t)) {
					for (var i = 0; i < t.length; ++i) {
						l(t[i], n, e.elm, null, true);
					}
				} else if (s(e.text)) {
					N.appendChild(e.elm, N.createTextNode(e.text));
				}
			}
			function m(e) {
				while (e.componentInstance) {
					e = e.componentInstance._vnode;
				}
				return i(e.tag);
			}
			function g(e, t) {
				for (var n = 0; n < j.create.length; ++n) {
					j.create[n](ss, e);
				}
				if (i(T = e.data.hook)) {
					if (i(T.create)) {
						T.create(ss, e);
					}
					if (i(T.insert)) {
						t.push(e);
					}
				}
			}
			function v(e) {
				var t;
				for (var n = e; n;) {
					if (i(t = n.context) && i(t = t.$options._scopeId)) {
						N.setAttribute(e.elm, t, "");
					}
					n = n.parent;
				}
				if (i(t = ma) && t !== e.context && i(t = t.$options._scopeId)) {
					N.setAttribute(e.elm, t, "");
				}
			}
			function b(e, t, n, i, o, a) {
				for (; i <= o; ++i) {
					l(n[i], a, e, t);
				}
			}
			function y(e) {
				var t;
				var n;
				var o = e.data;
				if (i(o)) {
					if (i(t = o.hook) && i(t = t.destroy)) {
						t(e);
					}
					t = 0;
					for (; t < j.destroy.length; ++t) {
						j.destroy[t](e);
					}
				}
				if (i(t = e.children)) {
					for (n = 0; n < e.children.length; ++n) {
						y(e.children[n]);
					}
				}
			}
			function w(e, t, n, o) {
				for (; n <= o; ++n) {
					var a = t[n];
					if (i(a)) {
						if (i(a.tag)) {
							_(a);
							y(a);
						} else {
							r(a.elm);
						}
					}
				}
			}
			function _(e, t) {
				if (i(t) || i(e.data)) {
					var n;
					var o = j.remove.length + 1;
					if (i(t)) {
						t.listeners += o;
					} else {
						t = a(e.elm, o);
					}
					if (i(n = e.componentInstance) && i(n = n._vnode) && i(n.data)) {
						_(n, t);
					}
					n = 0;
					for (; n < j.remove.length; ++n) {
						j.remove[n](e, t);
					}
					if (i(n = e.data.hook) && i(n = n.remove)) {
						n(e, t);
					} else {
						t();
					}
				} else {
					r(e.elm);
				}
			}
			function k(e, t, o, a, s) {
				var r;
				for (var c, u, d, p = 0, f = 0, h = t.length - 1, m = t[0], g = t[h], v = o.length - 1, y = o[0], _ = o[v], k = !s; p <= h && f <= v;) {
					if (n(m)) {
						m = t[++p];
					} else if (n(g)) {
						g = t[--h];
					} else if (Vt(m, y)) {
						C(m, y, a);
						m = t[++p];
						y = o[++f];
					} else if (Vt(g, _)) {
						C(g, _, a);
						g = t[--h];
						_ = o[--v];
					} else if (Vt(m, _)) {
						C(m, _, a);
						if (k) {
							N.insertBefore(e, m.elm, N.nextSibling(g.elm));
						}
						m = t[++p];
						_ = o[--v];
					} else if (Vt(g, y)) {
						C(g, y, a);
						if (k) {
							N.insertBefore(e, g.elm, m.elm);
						}
						g = t[--h];
						y = o[++f];
					} else {
						if (n(r)) {
							r = Wt(t, p, h);
						}
						c = i(y.key) ? r[y.key] : x(y, t, p, h);
						if (n(c)) {
							l(y, a, e, m.elm);
						} else {
							u = t[c];
							if (Vt(u, y)) {
								C(u, y, a);
								t[c] = undefined;
								if (k) {
									N.insertBefore(e, u.elm, m.elm);
								}
							} else {
								l(y, a, e, m.elm);
							}
						}
						y = o[++f];
					}
				}
				if (p > h) {
					d = n(o[v + 1]) ? null : o[v + 1].elm;
					b(e, d, o, f, v, a);
				} else if (f > v) {
					w(e, t, p, h);
				}
			}
			function x(e, t, n, o) {
				for (var a = n; a < o; a++) {
					var s = t[a];
					if (i(s) && Vt(e, s)) {
						return a;
					}
				}
			}
			function C(e, t, a, s) {
				if (e !== t) {
					var r = t.elm = e.elm;
					if (o(e.isAsyncPlaceholder)) {
						if (i(t.asyncFactory.resolved)) {
							A(e.elm, t, a);
						} else {
							t.isAsyncPlaceholder = true;
						}
						return;
					}
					if (o(t.isStatic) && o(e.isStatic) && t.key === e.key && (o(t.isCloned) || o(t.isOnce))) {
						t.componentInstance = e.componentInstance;
						return;
					}
					var l;
					var c = t.data;
					if (i(c) && i(l = c.hook) && i(l = l.prepatch)) {
						l(e, t);
					}
					var u = e.children;
					var d = t.children;
					if (i(c) && m(t)) {
						for (l = 0; l < j.update.length; ++l) {
							j.update[l](e, t);
						}
						if (i(l = c.hook) && i(l = l.update)) {
							l(e, t);
						}
					}
					if (n(t.text)) {
						if (i(u) && i(d)) {
							if (u !== d) {
								k(r, u, d, a, s);
							}
						} else if (i(d)) {
							if (i(e.text)) {
								N.setTextContent(r, "");
							}
							b(r, null, d, 0, d.length - 1, a);
						} else if (i(u)) {
							w(r, u, 0, u.length - 1);
						} else if (i(e.text)) {
							N.setTextContent(r, "");
						}
					} else if (e.text !== t.text) {
						N.setTextContent(r, t.text);
					}
					if (i(c) && i(l = c.hook) && i(l = l.postpatch)) {
						l(e, t);
					}
				}
			}
			function S(e, t, n) {
				if (o(n) && i(e.parent)) {
					e.parent.data.pendingInsert = t;
				} else {
					for (var a = 0; a < t.length; ++a) {
						t[a].data.hook.insert(t[a]);
					}
				}
			}
			function A(e, t, n) {
				if (o(t.isComment) && i(t.asyncFactory)) {
					t.elm = e;
					t.isAsyncPlaceholder = true;
					return true;
				}
				t.elm = e;
				var a = t.tag;
				var s = t.data;
				var r = t.children;
				if (i(s) && (i(T = s.hook) && i(T = T.init) && T(t, true), i(T = t.componentInstance))) {
					u(t, n);
					return true;
				}
				if (i(a)) {
					if (i(r)) {
						if (e.hasChildNodes()) {
							if (i(T = s) && i(T = T.domProps) && i(T = T.innerHTML)) {
								if (T !== e.innerHTML) {
									return false;
								}
							} else {
								var l = true;
								var c = e.firstChild;
								for (var d = 0; d < r.length; d++) {
									if (!c || !A(c, r[d], n)) {
										l = false;
										break;
									}
									c = c.nextSibling;
								}
								if (!l || c) {
									return false;
								}
							}
						} else {
							h(t, r, n);
						}
					}
					if (i(s)) {
						for (var p in s) {
							if (!O(p)) {
								g(t, n);
								break;
							}
						}
					}
				} else if (e.data !== t.text) {
					e.data = t.text;
				}
				return true;
			}
			var T;
			var P;
			var j = {};
			var E = e.modules;
			var N = e.nodeOps;
			for (T = 0; T < rs.length; ++T) {
				j[rs[T]] = [];
				P = 0;
				for (; P < E.length; ++P) {
					if (i(E[P][rs[T]])) {
						j[rs[T]].push(E[P][rs[T]]);
					}
				}
			}
			var O = f("attrs,style,class,staticClass,staticStyle,key");
			return function (e, a, s, r, c, u) {
				if (!n(a)) {
					var d = false;
					var p = [];
					if (n(e)) {
						d = true;
						l(a, p, c, u);
					} else {
						var f = i(e.nodeType);
						if (!f && Vt(e, a)) {
							C(e, a, p, r);
						} else {
							if (f) {
								if (e.nodeType === 1 && e.hasAttribute(jo)) {
									e.removeAttribute(jo);
									s = true;
								}
								if (o(s) && A(e, a, p)) {
									S(a, p, true);
									return e;
								}
								e = t(e);
							}
							var h = e.elm;
							var g = N.parentNode(h);
							l(a, p, h._leaveCb ? null : g, N.nextSibling(h));
							if (i(a.parent)) {
								for (var v = a.parent, b = m(a); v;) {
									for (var _ = 0; _ < j.destroy.length; ++_) {
										j.destroy[_](v);
									}
									v.elm = a.elm;
									if (b) {
										for (var k = 0; k < j.create.length; ++k) {
											j.create[k](ss, v);
										}
										var x = v.data.hook.insert;
										if (x.merged) {
											for (var T = 1; T < x.fns.length; T++) {
												x.fns[T]();
											}
										}
									}
									v = v.parent;
								}
							}
							if (i(g)) {
								w(g, [e], 0, 0);
							} else if (i(e.tag)) {
								y(e);
							}
						}
					}
					S(a, p, d);
					return a.elm;
				}
				if (i(e)) {
					y(e);
				}
			};
		}({
			nodeOps: os,
			modules: [ds, ps, gs, vs, Cs, zo ? {
				create: Jn,
				activate: Jn,
				remove: function (e, t) {
					if (e.data.show !== true) {
						Gn(e, t);
					} else {
						t();
					}
				}
			} : {}].concat(us)
		});
		if (Ro) {
			document.addEventListener("selectionchange", function () {
				var e = document.activeElement;
				if (e && e.vmodel) {
					ii(e, "input");
				}
			});
		}
		var Ms = {
			model: {
				inserted: function (e, t, n) {
					if (n.tag === "select") {
						Xn(e, t, n.context);
						e._vOptions = [].map.call(e.options, ei);
					} else if (n.tag === "textarea" || is(e.type)) {
						e._vModifiers = t.modifiers;
						if (!t.modifiers.lazy) {
							e.addEventListener("change", ni);
							if (!Bo) {
								e.addEventListener("compositionstart", ti);
								e.addEventListener("compositionend", ni);
							}
							if (Ro) {
								e.vmodel = true;
							}
						}
					}
				},
				componentUpdated: function (e, t, n) {
					if (n.tag === "select") {
						Xn(e, t, n.context);
						var i = e._vOptions;
						var o = e._vOptions = [].map.call(e.options, ei);
						if (o.some(function (e, t) {
							return !k(e, i[t]);
						}) && (e.multiple ? t.value.some(function (e) {
							return Qn(e, o);
						}) : t.value !== t.oldValue && Qn(t.value, o))) {
							ii(e, "change");
						}
					}
				}
			},
			show: {
				bind: function (e, t, n) {
					var i = t.value;
					var o = (n = oi(n)).data && n.data.transition;
					var a = e.__vOriginalDisplay = e.style.display === "none" ? "" : e.style.display;
					if (i && o) {
						n.data.show = true;
						Wn(n, function () {
							e.style.display = a;
						});
					} else {
						e.style.display = i ? a : "none";
					}
				},
				update: function (e, t, n) {
					var i = t.value;
					if (i !== t.oldValue) {
						if ((n = oi(n)).data && n.data.transition) {
							n.data.show = true;
							if (i) {
								Wn(n, function () {
									e.style.display = e.__vOriginalDisplay;
								});
							} else {
								Gn(n, function () {
									e.style.display = "none";
								});
							}
						} else {
							e.style.display = i ? e.__vOriginalDisplay : "none";
						}
					}
				},
				unbind: function (e, t, n, i, o) {
					if (!o) {
						e.style.display = e.__vOriginalDisplay;
					}
				}
			}
		};
		var zs = {
			name: String,
			appear: Boolean,
			css: Boolean,
			mode: String,
			type: String,
			enterClass: String,
			leaveClass: String,
			enterToClass: String,
			leaveToClass: String,
			enterActiveClass: String,
			leaveActiveClass: String,
			appearClass: String,
			appearActiveClass: String,
			appearToClass: String,
			duration: [Number, String, Object]
		};
		var Fs = {
			name: "transition",
			props: zs,
			abstract: true,
			render: function (e) {
				var t = this;
				var n = this.$options._renderChildren;
				if (n && (n = n.filter(function (e) {
					return e.tag || he(e);
				})).length) {
					var i = this.mode;
					var o = n[0];
					if (li(this.$vnode)) {
						return o;
					}
					var a = ai(o);
					if (!a) {
						return o;
					}
					if (this._leaving) {
						return ri(e, o);
					}
					var r = "__transition-" + this._uid + "-";
					a.key = a.key == null ? a.isComment ? r + "comment" : r + a.tag : s(a.key) ? String(a.key).indexOf(r) === 0 ? a.key : r + a.key : a.key;
					var l = (a.data ||= {}).transition = si(this);
					var c = this._vnode;
					var u = ai(c);
					if (a.data.directives && a.data.directives.some(function (e) {
						return e.name === "show";
					})) {
						a.data.show = true;
					}
					if (u && u.data && !ci(a, u) && !he(u)) {
						var d = u && (u.data.transition = y({}, l));
						if (i === "out-in") {
							this._leaving = true;
							oe(d, "afterLeave", function () {
								t._leaving = false;
								t.$forceUpdate();
							});
							return ri(e, o);
						}
						if (i === "in-out") {
							if (he(a)) {
								return c;
							}
							var p;
							function f() {
								p();
							}
							oe(l, "afterEnter", f);
							oe(l, "enterCancelled", f);
							oe(d, "delayLeave", function (e) {
								p = e;
							});
						}
					}
					return o;
				}
			}
		};
		var Ls = y({
			tag: String,
			moveClass: String
		}, zs);
		delete Ls.mode;
		var Rs = {
			Transition: Fs,
			TransitionGroup: {
				props: Ls,
				render: function (e) {
					var t = this.tag || this.$vnode.data.tag || "span";
					var n = Object.create(null);
					var i = this.prevChildren = this.children;
					for (var o = this.$slots.default || [], a = this.children = [], s = si(this), r = 0; r < o.length; r++) {
						var l = o[r];
						if (l.tag && l.key != null && String(l.key).indexOf("__vlist") !== 0) {
							a.push(l);
							n[l.key] = l;
							(l.data ||= {}).transition = s;
						}
					}
					if (i) {
						var c = [];
						var u = [];
						for (var d = 0; d < i.length; d++) {
							var p = i[d];
							p.data.transition = s;
							p.data.pos = p.elm.getBoundingClientRect();
							if (n[p.key]) {
								c.push(p);
							} else {
								u.push(p);
							}
						}
						this.kept = e(t, null, c);
						this.removed = u;
					}
					return e(t, null, a);
				},
				beforeUpdate: function () {
					this.__patch__(this._vnode, this.kept, false, true);
					this._vnode = this.kept;
				},
				updated: function () {
					var e = this.prevChildren;
					var t = this.moveClass || (this.name || "v") + "-move";
					if (e.length && this.hasMove(e[0].elm, t)) {
						e.forEach(ui);
						e.forEach(di);
						e.forEach(pi);
						document.body.offsetHeight;
						e.forEach(function (e) {
							if (e.data.moved) {
								var n = e.elm;
								var i = n.style;
								Rn(n, t);
								i.transform = i.WebkitTransform = i.transitionDuration = "";
								n.addEventListener(Es, n._moveCb = function e(i) {
									if (!i || !!/transform$/.test(i.propertyName)) {
										n.removeEventListener(Es, e);
										n._moveCb = null;
										Hn(n, t);
									}
								});
							}
						});
					}
				},
				methods: {
					hasMove: function (e, t) {
						if (!As) {
							return false;
						}
						if (this._hasMove) {
							return this._hasMove;
						}
						var n = e.cloneNode();
						if (e._transitionClasses) {
							e._transitionClasses.forEach(function (e) {
								zn(n, e);
							});
						}
						Mn(n, t);
						n.style.display = "none";
						this.$el.appendChild(n);
						var i = qn(n);
						this.$el.removeChild(n);
						return this._hasMove = i.hasTransform;
					}
				}
			}
		};
		xt.config.mustUseProp = Ua;
		xt.config.isReservedTag = ts;
		xt.config.isReservedAttr = qa;
		xt.config.getTagNamespace = Ht;
		xt.config.isUnknownElement = function (e) {
			if (!zo) {
				return true;
			}
			if (ts(e)) {
				return false;
			}
			e = e.toLowerCase();
			if (ns[e] != null) {
				return ns[e];
			}
			var t = document.createElement(e);
			if (e.indexOf("-") > -1) {
				return ns[e] = t.constructor === window.HTMLUnknownElement || t.constructor === window.HTMLElement;
			} else {
				return ns[e] = /HTMLUnknownElement/.test(t.toString());
			}
		};
		y(xt.options.directives, Ms);
		y(xt.options.components, Rs);
		xt.prototype.__patch__ = zo ? $s : _;
		xt.prototype.$mount = function (e, t) {
			e = e && zo ? Bt(e) : undefined;
			return Ce(this, e, t);
		};
		setTimeout(function () {
			if (Oo.devtools && Xo) {
				Xo.emit("init", xt);
			}
		}, 0);
		var Hs;
		var Bs = !!zo && function (e, t) {
			var n = document.createElement("div");
			n.innerHTML = "<div a=\"\n\"/>";
			return n.innerHTML.indexOf("&#10;") > 0;
		}();
		var qs = /\{\{((?:.|\n)+?)\}\}/g;
		var Vs = /[-.*+?^${}()|[\]\/\\]/g;
		var Us = g(function (e) {
			var t = e[0].replace(Vs, "\\$&");
			var n = e[1].replace(Vs, "\\$&");
			return new RegExp(t + "((?:.|\\n)+?)" + n, "g");
		});
		var Ws = [{
			staticKeys: ["staticClass"],
			transformNode: function (e, t) {
				t.warn;
				var n = dn(e, "class");
				if (n) {
					e.staticClass = JSON.stringify(n);
				}
				var i = un(e, "class", false);
				if (i) {
					e.classBinding = i;
				}
			},
			genData: function (e) {
				var t = "";
				if (e.staticClass) {
					t += "staticClass:" + e.staticClass + ",";
				}
				if (e.classBinding) {
					t += "class:" + e.classBinding + ",";
				}
				return t;
			}
		}, {
			staticKeys: ["staticStyle"],
			transformNode: function (e, t) {
				t.warn;
				var n = dn(e, "style");
				if (n) {
					e.staticStyle = JSON.stringify(bs(n));
				}
				var i = un(e, "style", false);
				if (i) {
					e.styleBinding = i;
				}
			},
			genData: function (e) {
				var t = "";
				if (e.staticStyle) {
					t += "staticStyle:" + e.staticStyle + ",";
				}
				if (e.styleBinding) {
					t += "style:(" + e.styleBinding + "),";
				}
				return t;
			}
		}];
		var Gs = {
			model: function (e, t, n) {
				Ra = n;
				var i = t.value;
				var o = t.modifiers;
				var a = e.tag;
				var s = e.attrsMap.type;
				if (e.component) {
					pn(e, i, o);
					return false;
				}
				if (a === "select") {
					kn(e, i, o);
				} else if (a === "input" && s === "checkbox") {
					wn(e, i, o);
				} else if (a === "input" && s === "radio") {
					_n(e, i, o);
				} else if (a === "input" || a === "textarea") {
					xn(e, i, o);
				} else if (!Oo.isReservedTag(a)) {
					pn(e, i, o);
					return false;
				}
				return true;
			},
			text: function (e, t) {
				if (t.value) {
					sn(e, "textContent", "_s(" + t.value + ")");
				}
			},
			html: function (e, t) {
				if (t.value) {
					sn(e, "innerHTML", "_s(" + t.value + ")");
				}
			}
		};
		var Ys = f("area,base,br,col,embed,frame,hr,img,input,isindex,keygen,link,meta,param,source,track,wbr");
		var Ks = f("colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source");
		var Js = f("address,article,aside,base,blockquote,body,caption,col,colgroup,dd,details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,title,tr,track");
		var Xs = {
			expectHTML: true,
			modules: Ws,
			directives: Gs,
			isPreTag: function (e) {
				return e === "pre";
			},
			isUnaryTag: Ys,
			mustUseProp: Ua,
			canBeLeftOpenTag: Ks,
			isReservedTag: ts,
			getTagNamespace: Ht,
			staticKeys: Ws.reduce(function (e, t) {
				return e.concat(t.staticKeys || []);
			}, []).join(",")
		};
		var Zs = {
			decode: function (e) {
				Hs = Hs || document.createElement("div");
				Hs.innerHTML = e;
				return Hs.textContent;
			}
		};
		var Qs = /^\s*([^\s"'<>\/=]+)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/;
		var er = "[a-zA-Z_][\\w\\-\\.]*";
		var tr = "((?:" + er + "\\:)?" + er + ")";
		var nr = new RegExp("^<" + tr);
		var ir = /^\s*(\/?)>/;
		var or = new RegExp("^<\\/" + tr + "[^>]*>");
		var ar = /^<!DOCTYPE [^>]+>/i;
		var sr = /^<!--/;
		var rr = /^<!\[/;
		var lr = false;
		"x".replace(/x(.)?/g, function (e, t) {
			lr = t === "";
		});
		var cr;
		var ur;
		var dr;
		var pr;
		var fr;
		var hr;
		var mr;
		var gr;
		var vr;
		var br;
		var yr = f("script,style,textarea", true);
		var wr = {};
		var _r = {
			"&lt;": "<",
			"&gt;": ">",
			"&quot;": "\"",
			"&amp;": "&",
			"&#10;": "\n"
		};
		var kr = /&(?:lt|gt|quot|amp);/g;
		var xr = /&(?:lt|gt|quot|amp|#10);/g;
		var Cr = f("pre,textarea", true);
		function Sr(e, t) {
			return e && Cr(e) && t[0] === "\n";
		}
		var Ar = /^@|^v-on:/;
		var Tr = /^v-|^@|^:/;
		var Pr = /(.*?)\s+(?:in|of)\s+(.*)/;
		var jr = /\((\{[^}]*\}|[^,]*),([^,]*)(?:,([^,]*))?\)/;
		var Er = /:(.*)$/;
		var Nr = /^:|^v-bind:/;
		var Or = /\.[^.]+/g;
		var Dr = g(Zs.decode);
		var Ir = /^xmlns:NS\d+/;
		var $r = /^NS\d+:/;
		var Mr = g(function (e) {
			return f("type,tag,attrsList,attrsMap,plain,parent,children,attrs" + (e ? "," + e : ""));
		});
		var zr = /^\s*([\w$_]+|\([^)]*?\))\s*=>|^function\s*\(/;
		var Fr = /^\s*[A-Za-z_$][\w$]*(?:\.[A-Za-z_$][\w$]*|\['.*?']|\[".*?"]|\[\d+]|\[[A-Za-z_$][\w$]*])*\s*$/;
		var Lr = {
			esc: 27,
			tab: 9,
			enter: 13,
			space: 32,
			up: 38,
			left: 37,
			right: 39,
			down: 40,
			delete: [8, 46]
		};
		function Rr(e) {
			return "if(" + e + ")return null;";
		}
		var Hr = {
			stop: "$event.stopPropagation();",
			prevent: "$event.preventDefault();",
			self: Rr("$event.target !== $event.currentTarget"),
			ctrl: Rr("!$event.ctrlKey"),
			shift: Rr("!$event.shiftKey"),
			alt: Rr("!$event.altKey"),
			meta: Rr("!$event.metaKey"),
			left: Rr("'button' in $event && $event.button !== 0"),
			middle: Rr("'button' in $event && $event.button !== 1"),
			right: Rr("'button' in $event && $event.button !== 2")
		};
		var Br = {
			on: function (e, t) {
				e.wrapListeners = function (e) {
					return "_g(" + e + "," + t.value + ")";
				};
			},
			bind: function (e, t) {
				e.wrapData = function (n) {
					return "_b(" + n + ",'" + e.tag + "'," + t.value + "," + (t.modifiers && t.modifiers.prop ? "true" : "false") + (t.modifiers && t.modifiers.sync ? ",true" : "") + ")";
				};
			},
			cloak: _
		};
		function qr(e) {
			this.options = e;
			this.warn = e.warn || on;
			this.transforms = an(e.modules, "transformCode");
			this.dataGenFns = an(e.modules, "genData");
			this.directives = y(y({}, Br), e.directives);
			var t = e.isReservedTag || To;
			this.maybeComponent = function (e) {
				return !t(e.tag);
			};
			this.onceId = 0;
			this.staticRenderFns = [];
		}
		var Vr = (new RegExp("\\b" + "do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,super,throw,while,yield,delete,export,import,return,switch,default,extends,finally,continue,debugger,function,arguments".split(",").join("\\b|\\b") + "\\b"), new RegExp("\\b" + "delete,typeof,void".split(",").join("\\s*\\([^\\)]*\\)|\\b") + "\\s*\\([^\\)]*\\)"), function (e) {
			return function (t) {
				function n(n, i) {
					var o = Object.create(t);
					var a = [];
					var s = [];
					o.warn = function (e, t) {
						(t ? s : a).push(e);
					};
					if (i) {
						if (i.modules) {
							o.modules = (t.modules || []).concat(i.modules);
						}
						if (i.directives) {
							o.directives = y(Object.create(t.directives), i.directives);
						}
						for (var r in i) {
							if (r !== "modules" && r !== "directives") {
								o[r] = i[r];
							}
						}
					}
					var l = e(n, o);
					l.errors = a;
					l.tips = s;
					return l;
				}
				return {
					compile: n,
					compileToFunctions: go(n)
				};
			};
		}(function (e, t) {
			var n = gi(e.trim(), t);
			Mi(n, t);
			var i = Ui(n, t);
			return {
				ast: n,
				render: i.render,
				staticRenderFns: i.staticRenderFns
			};
		}))(Xs).compileToFunctions;
		var Ur = g(function (e) {
			var t = Bt(e);
			return t && t.innerHTML;
		});
		var Wr = xt.prototype.$mount;
		xt.prototype.$mount = function (e, t) {
			if ((e = e && Bt(e)) === document.body || e === document.documentElement) {
				return this;
			}
			var n = this.$options;
			if (!n.render) {
				var i = n.template;
				if (i) {
					if (typeof i == "string") {
						if (i.charAt(0) === "#") {
							i = Ur(i);
						}
					} else {
						if (!i.nodeType) {
							return this;
						}
						i = i.innerHTML;
					}
				} else if (e) {
					i = vo(e);
				}
				if (i) {
					var o = Vr(i, {
						shouldDecodeNewlines: Bs,
						delimiters: n.delimiters,
						comments: n.comments
					}, this);
					var a = o.render;
					var s = o.staticRenderFns;
					n.render = a;
					n.staticRenderFns = s;
				}
			}
			return Wr.call(this, e, t);
		};
		xt.compile = Vr;
		t.default = xt;
	}).call(t, n(169));
}, function (e, t, n) {
	"use strict";

	Object.defineProperty(t, "__esModule", {
		value: true
	});
	t.CHANGE_OPTION = "CHANGE_OPTION";
	t.CHANGE_OPTION_COLOR = "CHANGE_OPTION_COLOR";
	t.COME_FROM_MOBILE = "COME_FROM_MOBILE";
	t.LOGIN = "LOGIN";
	t.SET_BAN = "SET_BAN";
	t.RECEIVE_SERVERS = "RECEIVE_SERVERS";
	t.CHANGE_SERVER = "CHANGE_SERVER";
	t.CHANGE_SERVER_TYPE = "CHANGE_SERVER_TYPE";
	t.CHANGE_SKINNAME = "CHANGE_SKINNAME";
	t.CHANGE_LOGGED_NAME = "CHANGE_LOGGED_NAME";
	t.CHANGE_HAT = "CHANGE_HAT";
	t.LOAD_RANK = "LOAD_RANK";
	t.GET_COINS = "GET_COINS";
	t.CHANGE_RANK = "CHANGE_RANK";
	t.CHANGE_NICKNAME = "CHANGE_NICKNAME";
	t.SET_BANNED = "SET_BANNED";
	t.SET_ROLE = "SET_ROLE";
	t.SET_COLOR = "SET_COLOR";
	t.SET_EMAIL = "SET_EMAIL";
	t.SET_ID = "SET_ID";
	t.ACTIVE_SKIN = "ACTIVE_SKIN";
	t.CHANGE_THEME = "CHANGE_THEME";
	t.HAT_LIST = "HAT_LIST";
	t.PRIVATE_SKINS = "PRIVATE_SKINS";
}, function (e, t, n) {
	"use strict";

	Object.defineProperty(t, "__esModule", {
		value: true
	});
	t.lang_ba = {
		home: {
			ab: "Agar Balkan",
			home: "Početna",
			skins: "Skinovi",
			skin: "Skin",
			music: "Muzika",
			contact: "Podrška",
			type_name: "Unesite ime",
			login: "Prijava",
			controll_ball: "Kontroliši lopticu uz pomoć miša",
			press: "Pritisni",
			to_split: "da se podijeliš",
			to_eject: "za izbacivanje mase",
			connecting: "Spajanje na server",
			mouse_control: "Klik za masu, split",
			mouse_control_desc: "Lijevim klikom izbacujete masu, desnim se splitate.",
			play: "Igraj",
			spectate: "Nadgledaj",
			hide_chat: "Sakrij chat",
			without_skins: "Prikaži skinove",
			show_table: "Prikaži tabelu?",
			show_current_score: "Prikaži trenutni rezultat",
			smoth_view: "Glatko prikazivanje",
			choose_server: "Odaberite server",
			choose_theme: "Odaberite temu",
			chosen_theme: "Odabrana tema: ",
			theme: "Tema",
			settings: "Opcije",
			enter_to_chat: "Budite ljubazni u chat-u!",
			new_option_click: "Lijevi klik za izbacivanje mase, desni za splitanje",
			eject_mass: "Izbacivanje mase",
			split: "Split",
			double_split: "Double Split",
			quad_split: "Quad Split",
			logout: "Odjava",
			restart: "Restart servera je u 00:00, 06:00, 12:00 i 18:00",
			servers: "Serveri",
			save: "Zapamti",
			game_view: "Pregled igre",
			pointing_arrow: "Strelica za pravac?",
			pointing_arrow_desc: "Refresh je potreban pri promeni opcije.",
			rules: "Pravila",
			auto_respawn_desc: "Kada izgubite, nastavljate dalje bez otvaranja početnog menija.",
			reset_settings: "Resetuj sva podešavanja",
			follow_us_on_fb: "Zapratite stranicu na fb za novosti vezane za AB",
			without_lines: "Prikaži linije?",
			transparent: "Providno?",
			saved_items: "Ovdje možete zadržati nickove, napomene ili bilo šta drugo.",
			hide_hats: "Sakrij kape",
			today: "Danas",
			month: "Ovog mjeseca",
			how_to_play: "Kako se igra?",
			profile: "Profil",
			block: "Blokirati",
			yes: "Da",
			no: "Ne"
		},
		mp: {
			music: "Muzika",
			play: "Pokreni",
			play_playlist: "Pokreni plejlistu",
			turn_off: "Isključi",
			share_and_listen: "Dijelite i slušajte muziku sa ostalim igračima na sajtu",
			add: "Dodaj",
			error: "Došlo je do greške!",
			list_empty: "Lista je trenutno prazna.",
			copy_song_from_yt: "Prekopirajte i dodajte link sa YT da bi ubacili pjesmu.",
			paste_yt: "Nalijepi youtube link",
			lag: "Preporučuje se da ne pokrećete ukoliko imate sporiju internet konekciju",
			song_exist: "Pjesma već postoji na listi."
		},
		contact: {
			report_contact: "Kontaktirajte nas",
			your_email: "Vaš e-mail",
			messsage: "Poruka",
			report: "Pošalji",
			success: "Uspešno ste poslali poruku",
			error: "Došlo je do greške",
			banned: "Banovani ste sa sajta.",
			banned_desc: "Kontaktirajte nas za više informacija putem forme ili facebook stranice"
		},
		login: {
			email: "Unesi e-mail",
			email_username: "Unesi e-mail ili korisničko ime",
			type_password: "Unesi šifru",
			login: "Prijavi se",
			wrong_credentials: "Pogrešno korisničko ime ili lozinka!",
			required: "Ovo polje je obavezno",
			register_head: "Registriraj se",
			register: "Registriraj se",
			email_exist: "Postoji nalog sa unetim mailom.",
			nickname_exist: "Ime je zauzeto. Probajte drugo.",
			email_invalid: "E-mail adresa nije ispravna.",
			min_pass: "Minimalna dužina lozinke je 4 karaktera"
		},
		skins: {
			add_skin: "Dodaj skin",
			not_found: "Nije moguće pronaći skinove.",
			find_skin: "Pronađi skin",
			allowed: "Dozvoljeni format slike:",
			max_size: "Maksimalna veličina:",
			min_size: "Minimalna dužina imena skina je 3, a maksimalna 15 karaktera.",
			skin_name: "Ime skina",
			skin_added: "Vaš skin je uspešno dodat",
			not_allowed_skins: "Zabranjeno je dodavati uvredljive skinove. Svako nepoštovanje drugih igrača dovodi do trajnog bana sa sajta.",
			banned: "Zabranjeno vam je dodavanje skinova.",
			top_skins: "Top skinovi",
			all_skins: "Svi skinovi",
			my_favs: "Moji favoriti"
		},
		rules: {
			head: "Agar Balkan - Pravila igre",
			subhead: "Ova pravila važe za sve servere.",
			subhead2: "Ako mislite da ste nepravedno kažnjeni po nekom od sledećih pravila, možete kontaktirati podršku za igru ​​putem <router-link style=\"color:#fff;text-decoration: underline;\" href=\"/agar.rs/contact\">kontakt forme</router-link> ili <a style=\"color:#fff;text-decoration: underline;\" href=\"#\">facebook stranice</a>.",
			r1h: "1. Sadržaj",
			r1t: "Uvrede i neprimjereno ponašanje prema drugim igračima nije dopušteno.<br />Zabranjeno je postavljanje sadržaja, skinova i linkova pornografskog, rasističkog sadržaja, kao i svih drugih oblika diskriminacije bilo koje vrste.<br />Zabranjeno je oglašavanje, političko ili vjersko mišljenje.",
			r2h: "2. Prijetnje u stvarnom životu",
			r2t: "Zabranjena je bilo kakva prijetnja bilo kojem igraču ili članu tima u stvarnom životu.",
			r3h: "3.  Korištenje grešaka",
			r3t: "Korištenje programske greške ili ne prijavljivanje takve greške strogo je zabranjeno.",
			r4h: "4. Skinovi",
			r41t: "Koristite se zdravim razumom prilikom dodavanja skinova",
			r42t: "Zabranjeni su skinovi koji predstavljaju govor mržnje ili političke uvrede",
			r43t: "Skinovi moraju biti pogodni za sve uzraste",
			r44t: "Nema ponovnih dodavanja skinova",
			r45t: "Zabranjeni su skinovi sa osobama mlađim od 18 godina",
			r46t: "Zabranjeno je reklamiranje preko skinova"
		},
		logged: {
			rank: "Rank",
			results: "Rezultati",
			keyboard_controls: "Podesite kontrole tastature",
			private_skin: "Privatan skin?",
			private_skin_desc: "Samo vi sa vašeg naloga možete videti skin i neće biti prikazan na listi skinova.",
			your_private_skins: "Vaši privatni skinovi",
			no_private_skins: "Nemate privatnih skinova.",
			search_for_others: "Ili pretražite",
			type_nick_desc: "Morate uneti ime za igru.",
			no_name: "Niste uneli ime.",
			save: "Sačuvaj",
			my_statistic: "Moja statistika",
			hat: "Kapa",
			hats: "Kape",
			change_nickname: "Promijeni nadimak",
			nickname_hours: "Nadimak možete promeniti jednom u 48 sati.",
			wrong_login: "Neispravno prijavljivanje, pokušajte da se odjavite i ponovo prijavite. Ako imate problema, kontaktirajte administratore.",
			successfully_changed_nickname: "Nadimak je uspešno promenjen.",
			profile_settings: "Postavke profila"
		},
		new_21_09: {
			badge: "Značka",
			old_chat: "Stari chat",
			login_facebook: "Facebook prijava",
			or: "ili",
			pillory: "Stub srama",
			name: "Ime",
			type: "Tip",
			server: "Server",
			reason: "Razlog",
			date: "Datum",
			expiration: "Isticanje",
			empty_list: " Lista je trenutno prazna",
			top_10: "TOP 10 Liste",
			no_players: "Nema igrača na listi.",
			result_added: "Rezultat se dodaje kada izgubite igru. Restart servera se ne računa.",
			result_count: "Za rezultat se uzima \"Rekord\".",
			search: "Pretraga",
			max_two_skins: "Najviše možete imati dva privatna skina.",
			skin_aprove: "Vaš skin će biti prikazan tek kada administratori odobre.",
			skin_rules: "Pročitajte <a class=\"text-underline\" href=\"/agar.rs/rules\">pravila o skinovima</a> pre dodavanja skina.",
			background_canvas: "Pozadinska animacija",
			additional_info: "Ostale informacije / Izvor slike",
			training: "Trening",
			highscore_update: "Rezultati se ažuriraju na svakih sat vremena!"
		},
		privacy: {
			title: "Politika privatnosti",
			valid: "This privacy statement is valid from 01.10.2017",
			ph1: "Data Collection",
			pt1: "When registering with us, we collect, process and store the personal data you enter, as well as information about the stationary and mobile devices you use during your access. Likewise, your skins, profile information and further uses will be saved, when using the Agar Balkan services.",
			ph2: "Security",
			pt2: "We use technically sophisticated and state-of-the-art measures to protect the security of your data on our servers against unauthorized access. Should you find any kind of abuse of your user account, please send a prompt message to the current contact address.",
			ph3: "Data Protection",
			pt3: "The use of our website is normally possible without giving personal data. If personal data such as name, address or e-mail addresses are collected on our pages, this is always done on a voluntary basis as far as possible. These data will not be passed on to third parties without your express consent. We would like to point out that data transmission on the Internet (for example, when communicating via e-mail) can present security gaps.",
			ph4: "Facebook Login",
			pt4: "You can use our service via their Facebook login data. We would like to point out that it can be a risk when logging in from public computers via Facebook. Please make sure to log off correctly in such cases.",
			pt4_delete: "To delete Facebook data, you need to go to Profile in the navigation menu, then to Profile settings. In the middle there is a button Delete Facebook data, which is executed by clicking on the button. The data will be deleted and you will no longer have the possibility to log in again through Facebook, unless you link the account with the game again.",
			ph5: "Cookies",
			pt5: "This site uses cookies. Cookies are small text files that are permanently or temporarily stored in your computer when you visit this website. The purpose of the cookies is in particular the analysis of the use of this website for statistical evaluation as well as for continuous improvements. In your browser, you can disable all or part of cookies in the settings at any time. When cookies are deactivated, you are no longer able to use all the functions of this website.",
			ph6: "Google Analytics",
			pt6: "This website uses Google Analytics, an software for the statistical analysis of visitor accesses. Google Analytics uses so-called \"cookies\", text files which are stored on your computer and which allow an analysis of the use of the website by you. The information generated by the cookie about your use of this website is stored on the server by google. The IP address is anonymized immediately after processing and before its storage. You can prevent the installation of cookies by setting your browser software accordingly. However, we would point out that in this case you may not be able to fully utilize all the functions of this website.",
			ph7: "Liability for Content",
			pt7: "The contents of our pages were created with great care. However, we can not guarantee the correctness, completeness and actuality of the contents. As a service provider, we are responsible for our own content on these pages according to the general laws. As a service provider, however, we are not obligated to supervise transmitted or stored third-party information or to investigate circumstances which indicate an illegal activity. Obligations to remove or block the use of information according to general laws remain unaffected. Liability in this regard, however, is only possible from the time of knowledge of a concrete infringement. We will immediately remove these contents if we become aware of any such legal violations.",
			ph8: "Liability for Links",
			pt8: "Our offer contains links to external websites of third parties on whose content we have no influence. Therefore, we cannot assume any liability for these third-party content. The respective provider or operator of the pages is always responsible for the contents of the linked pages. The linked pages were checked for possible legal violations at the time of linking. Illegal contents were not recognizable at the time of linking. However, a permanent control of the content of the linked pages is not reasonable without concrete indications of an infringement. If we become aware of any legal infringements, we will immediately remove such links.",
			ph9: "Questions about the service",
			pt9: "If you have any questions or suggestions or complaints about the services we offer, please use these contact details:",
			pt91: ""
		},
		statistic: {
			best_time_played: "Najduže vreme",
			max_score: "Najbolji rezultat",
			all_plays: "Ukupno partija",
			server: "Server",
			top_10_logged: "Ulogovani igrači",
			all_players: "Svi igrači"
		},
		options: {
			all_settings: "Sve opcije",
			cells_and_controls: "Kugle i kontrole",
			hide_colors: "Sakrij boje",
			show_sectors: "Prikaži sektore",
			sector_color: "Boja sektora",
			map_color: "Boja mape",
			infinity_zoom: "Beskonačan zoom",
			map: "Mapa",
			cell_border: "Okvir oko kugle",
			other: "Ostalo",
			delete_profile: "Obriši nalog",
			delete_facebook: "Obriši Facebook podatke"
		},
		hats: {
			buy: "Kupi",
			days: "dana",
			choose: "Odaberi"
		},
		forgotPassword: {
			question: "Zaboravili ste lozinku?",
			email_not_exist: "Uneti e-mail ne postoji",
			email_sent: "Poruka sa instrukcijama je poslata na Vaš e-mail.",
			change_password: "Promjeni lozinku",
			new_password: "Nova lozinka",
			repeat_password: "Ponovo unesi lozinku",
			reset: "Resetuj",
			wrong_code: "Neispravan link za resetovanje. Pokušajte ponovo sa resetovanjem lozinke.",
			passwords_do_not_match: "Lozinke se ne podudaraju.",
			password_changed: "Lozinka je uspešno promenjena. Možete se ulogovati ponovo."
		},
		contribute: {
			contribute: "Doprinijeti",
			donate: "Donacije",
			donate_desc: "Ako želite da doprinesete razvoju i održavanju igre, možete ostaviti svoju donaciju ovde.",
			select_amount: "Odaberite iznos donacije:",
			translate: "Prevođenje",
			translate_desc: "Pomozite nam da prevedemo agar na Vaš jezik. Pošaljite nam prevode i ispravke putem facebook stranice ili kontakt forme.",
			follow: "Zapratite nas na Fejsbuku",
			adblocker: "Molimo onemogućite AdBlocker i ponovo učitajte stranu",
			adblocker_desc: "Skinovi i druge funkcionalnosti nisu dostupni zbog AdBlocker-a."
		},
		online_safe: {
			title: "Ostanite sigurni online",
			tip1: "Nemoj objavljivati nikakve lične informacije na netu - kao što su adresa, email ili broj mobilnog telefona.",
			tip2: "Razmisli pažljivo prije objavljivanja slika ili video zapisa sebe. Jednom kada postaviš sliku na internet, većina ljudi može da je vidi i preuzme, a onda to više nije samo tvoje.",
			tip3: "Čuvaj svoju privatnost što je više moguće.",
			tip4: "Nikada ne govori svoje lozinke.",
			tip5: "Nemoj se družiti sa ljudima koje ne poznaješ.",
			tip6: "Nemoj se nalaziti sa ljudima koje si upoznao/la online. Kaži svojim roditeljima ili starateljima o ljudima koji ti predlažu da to uradiš.",
			tip7: "Zapamti da nisu svi online onakvi kakvim se predstavljaju.",
			tip8: "Pažljivo razmisli o poruci koju pišeš prije nego što pošalješ.",
			tip9: "Poštuj stavove drugih ljudi, čak i ako se ne slažeš sa nečijim stavovima, ne znači da moraš biti nepristojan.",
			tip10: "Ako nešto na netu / agaru čini da se osećaš neugodno, nebezbedno ili zabrinuto, prijavi adminima ili roditeljima ili napusti sajt ili ugasi računar.",
			title2: "Savjeti ako ste provocirani na internetu",
			react1: "Prijavi adminima ili starijim osobama vrijeđanje.",
			react2: "Ne odgovaraj i ne uzvraćaj pažnju na uvredljive poruke - to bi moglo pogoršati stvari.",
			react3: "Blokiraj igrača koji ti šalje takve poruke.",
			react4: "Napiši datum i vrijeme kada dobijaš uvredljive poruke, kao i detalje koje imaš - server, nick igrača.",
			react5: "Ako te učestalo vrijeđaju, promeni nick / profil i koristi ime koje ne daje nikakve informacije o tebi."
		}
	};
}, function (e, t, n) {
	"use strict";

	Object.defineProperty(t, "__esModule", {
		value: true
	});
	t.lang_gb = {
		home: {
			ab: "Agar Balkan",
			home: "Home",
			skins: "Skins",
			skin: "Skin",
			music: "Music",
			contact: "Support",
			type_name: "Type nickname",
			login: "Login",
			controll_ball: "Control the cell with the mouse",
			press: "Press",
			to_split: "to split",
			to_eject: "to eject some mass",
			connecting: "Connecting to the server",
			mouse_control: "Click to eject, split",
			mouse_control_desc: "Left click to throw the mass, with the right you split.",
			play: "Play",
			spectate: "Spectate",
			hide_chat: "Hide chat",
			without_skins: "Show skins?",
			show_table: "Show leaderboard?",
			show_current_score: "Show the score",
			smoth_view: "Smooth showing",
			choose_server: "Choose server",
			choose_theme: "Choose a theme",
			chosen_theme: "Chosen theme: ",
			theme: "Theme",
			settings: "Settings",
			enter_to_chat: "Please be nice in the chat!",
			new_option_click: "Left click to eject mass, right clik to split",
			eject_mass: "Eject mass",
			split: "Split",
			double_split: "Double Split",
			quad_split: "Quad Split",
			logout: "Logout",
			restart: "Servers restart in 00:00, 06:00, 12:00 i 18:00",
			servers: "Servers",
			save: "Save",
			game_view: "Game view",
			pointing_arrow: "Pointing arrow?",
			pointing_arrow_desc: "Refresh is required when changing this option.",
			rules: "Rules",
			auto_respawn_desc: "When you lose, you continue game without opening the home menu.",
			reset_settings: "Reset all settings",
			follow_us_on_fb: "Follow us on fb",
			without_lines: "Show lines?",
			transparent: "Transparent?",
			saved_items: "Here you can keep your nicknames, notes or anything else.",
			hide_hats: "Hide hats",
			today: "Today",
			month: "This month",
			how_to_play: "How to play?",
			profile: "Profile",
			block: "Block",
			yes: "Yes",
			no: "No"
		},
		mp: {
			music: "Music",
			play: "Play",
			play_playlist: "Start playlist",
			turn_off: "Turn off",
			share_and_listen: "Share and listen songs with other players on the site",
			add: "Add",
			error: "An error has occurred!",
			list_empty: "The list is currently empty.",
			copy_song_from_yt: "Copy and paste link from YT to insert song.",
			paste_yt: "Paste YT link",
			lag: "It is recommended that you do not play music if you have a slower internet connection ",
			song_exist: "Song already exist."
		},
		contact: {
			report_contact: "Contact us",
			your_email: "Your e-mail",
			messsage: "Message",
			report: "Send",
			success: "You have successfully send message",
			error: "Error",
			banned: "You have been banned.",
			banned_desc: " Contact us for more info via contact form bellow or send message on our facebook page."
		},
		login: {
			email: "Type e-mail",
			email_username: "Type e-mail or username",
			type_password: "Type password",
			login: "Login",
			wrong_credentials: "Wrong username or password!",
			required: "This field is required",
			register_head: "Sign Up",
			register: "Create Account",
			email_exist: "Email already exists",
			nickname_exist: "The nickname is taken. Try another one.",
			email_invalid: "Invalid e-mail.",
			min_pass: "Minimum password length is 4 characters"
		},
		skins: {
			add_skin: "Add skin",
			not_found: "Can't find skins right now.",
			find_skin: "Find skin",
			allowed: "Allowed photos format:",
			max_size: "Max size:",
			min_size: "Min length of skin name is 3, and max 15 characters.",
			skin_name: "Skin name",
			skin_added: "Your skin is uploaded",
			not_allowed_skins: "It is forbidden to add offensive skins. Any disregard to other players leads to a permanent ban on the site.",
			banned: "You are forbidden to add skins.",
			top_skins: "TOP skins",
			all_skins: "All skins",
			my_favs: "My favourite"
		},
		rules: {
			head: "Agar Balkan - Rules of game",
			subhead: "These rules apply to all servers.",
			subhead2: "Should you think you were punished unjustly according to one of the following rules please contact the game support <router-link style=\"color:#fff;text-decoration: underline;\" href=\"/agar.rs/contact\">contact form</router-link> or on our <a style=\"color:#fff;text-decoration: underline;\" href=\"#\">facebook page</a>.",
			r1h: "1. Content",
			r1t: "Insults and inappropriate behavior towards other players are not allowed.<br />It is forbidden to post content, skin and links of pornographic, racist content, as well as any other forms of discrimination of any kind.<br />Advertising, political or religious opinions are forbidden.",
			r2h: "2. Real-life threats",
			r2t: "Any threat to other player or team member in real life is not allowed.",
			r3h: "3.  Bugusing",
			r3t: "Intentional use of a bug or intentionally not reporting a bug is not allowed..",
			r4h: "4. Skins",
			r41t: "Use common sense while uploading skins",
			r42t: "Nothing that can be considered offensive such as hate speech or political insults.",
			r43t: "Images must be suitable for all ages.",
			r44t: "No reuploads",
			r45t: "Skins should not depict persons under the age of 18",
			r46t: "No self promotion."
		},
		logged: {
			rank: "Rank",
			results: "Results",
			keyboard_controls: "Set keyboard controls",
			private_skin: "Private skin?",
			private_skin_desc: "Only you from your account can see the skin and skin will not be shown in the list of skins.",
			your_private_skins: "Your private skins",
			no_private_skins: "You don't have private skins.",
			search_for_others: "Or search",
			type_nick_desc: "You must enter a nickname for the game. You can not change the nickname you entered.",
			no_name: "You must type nickname.",
			save: "Save",
			my_statistic: "My statistic",
			hat: "Hat",
			hats: "Hats",
			change_nickname: "Change nickname",
			nickname_hours: "You can change nickname once every 48 hours",
			wrong_login: "Invalid login, try to logout and log in again. If you have problems then, contact the administrators.",
			successfully_changed_nickname: "The nickname has been successfully changed.",
			profile_settings: "Profile settings"
		},
		new_21_09: {
			badge: "Badge",
			old_chat: "Old chat",
			login_facebook: "Login with Facebook",
			or: "or",
			pillory: "Hall of Shame",
			name: "Name",
			type: "Type",
			server: "Server",
			reason: "Reason",
			date: "Date",
			expiration: "Time expiration",
			empty_list: "List is empty",
			top_10: "TOP 10 Results",
			no_players: "There are no players on list",
			result_added: "Result is added when you lost the game. Server restart is not included.",
			result_count: "For results, its used \"Record\".",
			search: "Search...",
			max_two_skins: "You can have max 2 private skins!",
			skin_aprove: "Your skin will be shown when administrators aprove.",
			skin_rules: "Read the <a class=\"text-underline\" href=\"/agar.rs/rules\">rules about skins</a> before uploading.",
			background_canvas: "Background animation",
			additional_info: "Other info / Image source",
			training: "Training",
			highscore_update: "Results are updated every hour!"
		},
		privacy: {
			title: "Privacy Policy",
			valid: "Last updated: January 22, 2022",
			ph1: "Data Collection",
			pt1: "When registering with us, we collect, process and store the personal data you enter, as well as information about the stationary and mobile devices you use during your access. Likewise, your skins, profile information and further uses will be saved, when using the Agar Balkan services.",
			ph2: "Security",
			pt2: "We use technically sophisticated and state-of-the-art measures to protect the security of your data on our servers against unauthorized access. Should you find any kind of abuse of your user account, please send a prompt message to the current contact address.",
			ph3: "Data Protection",
			pt3: "The use of our website is normally possible without giving personal data. If personal data such as name, address or e-mail addresses are collected on our pages, this is always done on a voluntary basis as far as possible. These data will not be passed on to third parties without your express consent. We would like to point out that data transmission on the Internet (for example, when communicating via e-mail) can present security gaps.",
			ph4: "Facebook Login",
			pt4: "You can use our service via their Facebook login data. We would like to point out that it can be a risk when logging in from public computers via Facebook. Please make sure to log off correctly in such cases.",
			pt4_delete: "To delete Facebook data, you need to go to Profile in the navigation menu, then to Profile settings. In the middle there is a button Delete Facebook data, which is executed by clicking on the button. The data will be deleted and you will no longer have the possibility to log in again through Facebook, unless you link the account with the game again.",
			ph5: "Cookies",
			pt5: "This site uses cookies. Cookies are small text files that are permanently or temporarily stored in your computer when you visit this website. The purpose of the cookies is in particular the analysis of the use of this website for statistical evaluation as well as for continuous improvements. In your browser, you can disable all or part of cookies in the settings at any time. When cookies are deactivated, you are no longer able to use all the functions of this website.",
			ph6: "Google Analytics",
			pt6: "This website uses Google Analytics, an software for the statistical analysis of visitor accesses. Google Analytics uses so-called \"cookies\", text files which are stored on your computer and which allow an analysis of the use of the website by you. The information generated by the cookie about your use of this website is stored on the server by google. The IP address is anonymized immediately after processing and before its storage. You can prevent the installation of cookies by setting your browser software accordingly. However, we would point out that in this case you may not be able to fully utilize all the functions of this website.",
			ph7: "Liability for Content",
			pt7: "The contents of our pages were created with great care. However, we can not guarantee the correctness, completeness and actuality of the contents. As a service provider, we are responsible for our own content on these pages according to the general laws. As a service provider, however, we are not obligated to supervise transmitted or stored third-party information or to investigate circumstances which indicate an illegal activity. Obligations to remove or block the use of information according to general laws remain unaffected. Liability in this regard, however, is only possible from the time of knowledge of a concrete infringement. We will immediately remove these contents if we become aware of any such legal violations.",
			ph8: "Liability for Links",
			pt8: "Our offer contains links to external websites of third parties on whose content we have no influence. Therefore, we cannot assume any liability for these third-party content. The respective provider or operator of the pages is always responsible for the contents of the linked pages. The linked pages were checked for possible legal violations at the time of linking. Illegal contents were not recognizable at the time of linking. However, a permanent control of the content of the linked pages is not reasonable without concrete indications of an infringement. If we become aware of any legal infringements, we will immediately remove such links.",
			ph9: "Questions about the service",
			pt9: "If you have any questions or suggestions or complaints about the services we offer, please use these contact details:",
			pt91: ""
		},
		statistic: {
			best_time_played: "The longest time",
			max_score: "Best score",
			all_plays: "Games played",
			server: "Server",
			top_10_logged: "Logged players",
			all_players: "All players"
		},
		options: {
			all_settings: "All settings",
			cells_and_controls: "Cells and controls",
			hide_colors: "Hide colors",
			show_sectors: "Show sectors",
			sector_color: "Sector color",
			map_color: "Map color",
			infinity_zoom: "Infinity zoom",
			map: "Map",
			cell_border: "Cell border",
			other: "Other",
			delete_profile: "Delete account",
			delete_facebook: "Delete Facebook data"
		},
		hats: {
			buy: "Buy",
			days: "days",
			choose: "Choose"
		},
		forgotPassword: {
			question: "Forgot your password?",
			email_not_exist: "Email does not exist.",
			email_sent: "The message with instructions was sent to your e-mail.",
			change_password: "Change password",
			new_password: "New password",
			repeat_password: "Reenter password",
			reset: "Reset",
			wrong_code: "Invalid. Please try resetting your password again.",
			passwords_do_not_match: "Passwords do not match.",
			password_changed: "Password changed successfully. You can log in now."
		},
		contribute: {
			contribute: "Contribute",
			donate: "Donate",
			donate_desc: "If you want to contribute to the development and maintenance of the game, you can leave your donation here.",
			select_amount: "Select the amount for the donation:",
			translate: "Help Translate",
			translate_desc: "Help us to translate the game into your language. Send us translations via facebook or contact form.",
			follow: "Follow us on Facebook",
			adblocker: "Please disable adblocker and reload the page",
			adblocker_desc: "Skins and other functionalities are not available because of AdBlocker."
		},
		online_safe: {
			title: "Staying Safe Online",
			tip1: "Don’t post any personal information online – like your address, email address or mobile number.",
			tip2: "Think carefully before posting pictures or videos of yourself.  Once you’ve put  a picture of yourself online most people can see it and may be able to download it, it’s not just yours anymore.",
			tip3: "Keep your privacy settings as high as possible.",
			tip4: "Never give out your passwords.",
			tip5: "Don’t befriend people you don’t know.",
			tip6: "Don’t meet up with people you’ve met online.  Speak to your parent or carer about people suggesting you do.",
			tip7: "Remember that not everyone online is who they say they are.",
			tip8: "Think carefully about what you say before you post something online.",
			tip9: "Respect other people’s views, even if you don’t agree with someone else’s views doesn’t mean you need to be rude.",
			tip10: "If you see something online that makes you feel uncomfortable, unsafe or worried: leave the website, turn off your computer if you want to and tell a trusted adult immediately.",
			title2: "Tips if you're being bullied online",
			react1: "Tell an adult you trust or admins if you are being cyberbullied",
			react2: "Don’t respond or retaliate to bullying messages  – it could make things worse",
			react3: "Block player who send you nasty messages",
			react4: "Make a note of dates and times you receive bullying messages, as well as details you have of the user’s nickname and the server.",
			react5: "If you are bullied repeatedly change your nickname / profile,  and use a name that doesn’t give any information away about you"
		}
	};
}, function (e, t, n) {
	"use strict";

	Object.defineProperty(t, "__esModule", {
		value: true
	});
	t.lang_hr = {
		home: {
			ab: "Agar Balkan",
			home: "Početna",
			skins: "Skinovi",
			skin: "Skin",
			music: "Glazba",
			contact: "Podrška",
			type_name: "Unesite ime",
			login: "Prijava",
			controll_ball: "Kontroliši lopticu uz pomoć miša",
			press: "Pritisni",
			to_split: "da se podijeliš",
			to_eject: "za izbacivanje mase",
			connecting: "Spajanje na server",
			mouse_control: "Klik za masu, split",
			mouse_control_desc: "Levim klikom izbacujete masu, desnim se splitate.",
			play: "Igraj",
			spectate: "Nadgledaj",
			hide_chat: "Sakrij chat",
			without_skins: "Prikaži skinove",
			show_table: "Prikaži tabelu?",
			show_current_score: "Prikaži trenutni rezultat",
			smoth_view: "Glatko prikazivanje",
			choose_server: "Odaberite server",
			choose_theme: "Odaberite temu",
			chosen_theme: "Odabrana tema: ",
			theme: "Tema",
			settings: "Opcije",
			enter_to_chat: "Budite ljubazni u chat-u!",
			new_option_click: "Lijevi klik za izbacivanje mase, desni za splitanje",
			eject_mass: "Izbacivanje mase",
			split: "Split",
			double_split: "Double Split",
			quad_split: "Quad Split",
			logout: "Odjava",
			restart: "Restart servera je u 00:00, 06:00, 12:00 i 18:00",
			servers: "Serveri",
			save: "Zapamti",
			game_view: "Pregled igre",
			pointing_arrow: "Strelica za pravac?",
			pointing_arrow_desc: "Refresh je potreban pri promeni opcije.",
			rules: "Pravila",
			auto_respawn_desc: "Kada izgubite, nastavljate dalje bez otvaranja početnog menija.",
			reset_settings: "Resetuj sva podesavanja",
			follow_us_on_fb: "Zapratite stranicu na fb za novosti vezane za AB",
			without_lines: "Prikaži linije?",
			transparent: "Providno?",
			saved_items: "Ovdje možete zadržati svoj nadimke, napomene ili bilo što drugo.",
			hide_hats: "Sakrij kape",
			today: "Danas",
			month: "Ovaj mjesec",
			how_to_play: "Kako igrati?",
			profile: "Profil",
			block: "Blokirati",
			yes: "Da",
			no: "Ne"
		},
		mp: {
			music: "Muzika",
			play: "Pokreni",
			play_playlist: "Pokreni plejlistu",
			turn_off: "Isključi",
			share_and_listen: "Dijelite i slušajte muziku sa ostalim igračima na sajtu",
			add: "Dodaj",
			error: "Došlo je do greške!",
			list_empty: "Lista je trenutno prazna.",
			copy_song_from_yt: "Prekopirajte i dodajte link sa YT da bi ubacili pjesmu.",
			paste_yt: "Nalijepi youtube link",
			lag: "Preporučuje se da ne pokrećete ukoliko imate sporiju internet konekciju",
			song_exist: "Pjesma već postoji na listi."
		},
		contact: {
			report_contact: "Kontaktirajte nas",
			your_email: "Vaš e-mail",
			messsage: "Poruka",
			report: "Pošalji",
			success: "Uspešno ste poslali poruku",
			error: "Došlo je do greške",
			banned: "Banovani ste sa sajta.",
			banned_desc: "Kontaktirajte nas za više informacija putem forme ili facebook stranice"
		},
		login: {
			email: "Unesi e-mail",
			email_username: "Unesi e-mail ili korisničko ime",
			type_password: "Unesi šifru",
			login: "Prijavi se",
			wrong_credentials: "Pogrešno korisničko ime ili lozinka!",
			required: "Ovo polje je obavezno",
			register_head: "Registriraj se",
			register: "Registriraj se",
			email_exist: "Postoji nalog sa unetim mailom.",
			nickname_exist: "Ime je zauzeto. Probajte drugo.",
			email_invalid: "E-mail adresa nije ispravna.",
			min_pass: "Duljina minimalne zaporke iznosi 4 znaka"
		},
		skins: {
			add_skin: "Dodaj skin",
			not_found: "Nije moguće pronaći skinove.",
			find_skin: "Pronađi skin",
			allowed: "Dozvoljeni format slike:",
			max_size: "Maksimalna veličina:",
			min_size: "Minimalna dužina imena skina je 3, a maksimalna 15 karaktera.",
			skin_name: "Ime skina",
			skin_added: "Vaš skin je uspešno dodat",
			not_allowed_skins: "Zabranjeno je dodavati uvredljive skinove. Svako nepoštovanje drugih igrača dovodi do trajnog bana sa sajta.",
			banned: "Zabranjeno vam je dodavanje skinova.",
			top_skins: "Top skinovi",
			all_skins: "Svi skinovi",
			my_favs: "Moji favoriti"
		},
		rules: {
			head: "Agar Balkan - Pravila igre",
			subhead: "Ova pravila vrijede za sve servere.",
			subhead2: "Ako smatrate da ste nepravedno kažnjeni po nekom od sljedećih pravila, možete kontaktirati podršku za igru ​​putem <a style=\"color:#fff;text-decoration: underline;z-index:6;\" to=\"/contact\">kontakt forme</a> ili <a style=\"color:#fff;text-decoration: underline;\" href=\"#\">facebook stranice</a>.",
			r1h: "1. Sadržaj",
			r1t: "Uvrede i neprimjereno ponašanje prema drugim igračima nije dopušteno.<br />Zabranjeno je postavljanje sadržaja, skinova i linkova pornografskog, rasističkog sadržaja, kao i svih drugih oblika diskriminacije bilo koje vrste.<br />Zabranjeno je oglašavanje, političko ili vjersko mišljenje.",
			r2h: "2. Prijetnje u stvarnom životu",
			r2t: "Zabranjena je bilo kakva prijetnja bilo kojem igraču ili članu tima u stvarnom životu.",
			r3h: "3. Uporaba pogrešaka",
			r3t: "Korištenje programske pogreške ili ne prijavljivanje takve pogreške strogo je zabranjeno.",
			r4h: "4. Skinovi",
			r41t: "Koristite se zdravim razumom prilikom dodavanja skinova",
			r42t: "Zabranjeni su skinovi koji predstavljaju govor mržnje ili političke uvrede",
			r43t: "Skinovi moraju biti pogodni za sve uzraste",
			r44t: "Nema ponovnih dodavanja skinova",
			r45t: "Zabranjeni su skinovi sa osobama mlađim od 18 godina",
			r46t: "Zabranjeno je reklamiranje preko skinova"
		},
		logged: {
			rank: "Rank",
			results: "Rezultati",
			keyboard_controls: "Podesite kontrole tastature",
			private_skin: "Privatan skin?",
			private_skin_desc: "Samo vi sa vašeg naloga možete videti skin i neće biti prikazan na listi skinova.",
			your_private_skins: "Vaši privatni skinovi",
			no_private_skins: "Nemate privatnih skinova.",
			search_for_others: "Ili pretražite",
			type_nick_desc: "Morate uneti ime za igru. Jednom uneto ime ne mozete kasnije promeniti.",
			no_name: "Niste uneli ime.",
			save: "Sačuvaj",
			my_statistic: "Moja statistika",
			hat: "Kapa",
			hats: "Kape",
			change_nickname: "Promijeni nadimak",
			nickname_hours: "Možete promijeniti nadimak jednom svakih 48 sati",
			wrong_login: "Nevažeća prijava, pokušajte se odjaviti i ponovno se prijaviti. Ako imate problema, kontaktirajte administratore.",
			successfully_changed_nickname: "Nadimak je uspješno promijenjen.",
			profile_settings: "Postavke profila"
		},
		new_21_09: {
			badge: "Značka",
			old_chat: "Stari chat",
			login_facebook: "Facebook prijava",
			or: "ili",
			pillory: "Stup srama",
			name: "Ime",
			type: "Tip",
			server: "Server",
			reason: "Razlog",
			date: "Datum",
			expiration: "Isticanje",
			empty_list: " Lista je trenutno prazna",
			top_10: "TOP 10 Liste",
			no_players: "Nema igrača na listi.",
			result_added: "Rezultat se dodaje kada izgubite igru. Restart servera se ne računa.",
			result_count: "Za rezultat se uzima \"Rekord\".",
			search: "Pretraga...",
			max_two_skins: "Najviše možete imati dva privatna skina.",
			skin_aprove: "Vaš skin će biti prikazan tek kada administratori odobre.",
			skin_rules: "Pročitajte <a class=\"text-underline\" href=\"/agar.rs/rules\">pravila o skinovima</a> pre dodavanja skina.",
			background_canvas: "Pozadinska animacija",
			additional_info: "Ostale informacije / Izvor slike",
			training: "Trening",
			highscore_update: "Rezultati se ažuriraju svakih sat vremena!"
		},
		privacy: {
			title: "Politika privatnosti",
			valid: "This privacy statement is valid from 01.10.2017",
			ph1: "Data Collection",
			pt1: "When registering with us, we collect, process and store the personal data you enter, as well as information about the stationary and mobile devices you use during your access. Likewise, your skins, profile information and further uses will be saved, when using the Agar Balkan services.",
			ph2: "Security",
			pt2: "We use technically sophisticated and state-of-the-art measures to protect the security of your data on our servers against unauthorized access. Should you find any kind of abuse of your user account, please send a prompt message to the current contact address.",
			ph3: "Data Protection",
			pt3: "The use of our website is normally possible without giving personal data. If personal data such as name, address or e-mail addresses are collected on our pages, this is always done on a voluntary basis as far as possible. These data will not be passed on to third parties without your express consent. We would like to point out that data transmission on the Internet (for example, when communicating via e-mail) can present security gaps.",
			ph4: "Facebook Login",
			pt4: "You can use our service via their Facebook login data. We would like to point out that it can be a risk when logging in from public computers via Facebook. Please make sure to log off correctly in such cases.",
			ph5: "Cookies",
			pt5: "This site uses cookies. Cookies are small text files that are permanently or temporarily stored in your computer when you visit this website. The purpose of the cookies is in particular the analysis of the use of this website for statistical evaluation as well as for continuous improvements. In your browser, you can disable all or part of cookies in the settings at any time. When cookies are deactivated, you are no longer able to use all the functions of this website.",
			ph6: "Google Analytics",
			pt6: "This website uses Google Analytics, an software for the statistical analysis of visitor accesses. Google Analytics uses so-called \"cookies\", text files which are stored on your computer and which allow an analysis of the use of the website by you. The information generated by the cookie about your use of this website is stored on the server by google. The IP address is anonymized immediately after processing and before its storage. You can prevent the installation of cookies by setting your browser software accordingly. However, we would point out that in this case you may not be able to fully utilize all the functions of this website.",
			ph7: "Liability for Content",
			pt7: "The contents of our pages were created with great care. However, we can not guarantee the correctness, completeness and actuality of the contents. As a service provider, we are responsible for our own content on these pages according to the general laws. As a service provider, however, we are not obligated to supervise transmitted or stored third-party information or to investigate circumstances which indicate an illegal activity. Obligations to remove or block the use of information according to general laws remain unaffected. Liability in this regard, however, is only possible from the time of knowledge of a concrete infringement. We will immediately remove these contents if we become aware of any such legal violations.",
			ph8: "Liability for Links",
			pt8: "Our offer contains links to external websites of third parties on whose content we have no influence. Therefore, we cannot assume any liability for these third-party content. The respective provider or operator of the pages is always responsible for the contents of the linked pages. The linked pages were checked for possible legal violations at the time of linking. Illegal contents were not recognizable at the time of linking. However, a permanent control of the content of the linked pages is not reasonable without concrete indications of an infringement. If we become aware of any legal infringements, we will immediately remove such links.",
			ph9: "Questions about the service",
			pt9: "If you have any questions or suggestions or complaints about the services we offer, please use these contact details:",
			pt91: ""
		},
		statistic: {
			best_time_played: "Najduže vreme",
			max_score: "Najbolji rezultat",
			all_plays: "Ukupno partija",
			server: "Server",
			top_10_logged: "Ulogovani igrači",
			all_players: "Svi igrači"
		},
		options: {
			all_settings: "Sve postavke",
			cells_and_controls: "Kugle i kontrole",
			hide_colors: "Sakrij boje",
			show_sectors: "Prikaži sektore",
			sector_color: "Boja sektora",
			map_color: "Boja mape",
			infinity_zoom: "Zumiranje u beskonačnosti",
			map: "Mapa",
			cell_border: "Okvir kugle",
			other: "Drugo",
			delete_profile: "Obriši nalog",
			delete_facebook: "Obriši Facebook podatke"
		},
		hats: {
			buy: "Kupi",
			days: "dana",
			choose: "Odaberi"
		},
		forgotPassword: {
			question: "Zaboravili ste lozinku?",
			email_not_exist: "E-pošta ne postoji.",
			email_sent: "Poruka s uputama poslana je na vašu e-poštu.",
			change_password: "Promijeni zaporku",
			new_password: "Nova lozinka",
			repeat_password: "Ponovno unesite zaporku",
			reset: "Reset",
			wrong_code: "Greška. Pokušajte ponovo postaviti zaporku.",
			passwords_do_not_match: "Lozinke se ne podudaraju.",
			password_changed: "Lozinka je uspješno promijenjena. Možete se prijaviti sada."
		},
		contribute: {
			contribute: "Doprinijeti",
			donate: "Donacije",
			donate_desc: "Ako želite da doprinesete razvoju i održavanju igre, možete ostaviti svoju donaciju ovde.",
			select_amount: "Odaberite iznos donacije:",
			translate: "Prevođenje",
			translate_desc: "Pomozite nam da prevedemo agar na Vaš jezik. Pošaljite nam prevode i ispravke putem facebook stranice ili kontakt forme.",
			follow: "Zapratite nas na Fejsbuku",
			adblocker: "Molimo onemogućite AdBlocker i ponovo učitajte stranicu",
			adblocker_desc: "Skinovi i druge funkcionalnosti nisu dostupni zbog AdBlocker-a."
		},
		online_safe: {
			title: "Ostanite sigurni online",
			tip1: "Nemoj objavljivati nikakve osobne podatke na netu - kao što su adresa, email ili broj mobilnog telefona.",
			tip2: "Razmisli pažljivo prije objavljivanja slika ili video zapisa sebe. Jednom kada postaviš sliku na internet, većina ljudi može da je vidi i preuzme, a onda to više nije samo tvoje.",
			tip3: "Čuvaj svoju privatnost što je više moguće.",
			tip4: "Nikada ne govori svoju lozinku.",
			tip5: "Nemoj se družiti sa ljudima koje ne poznaješ.",
			tip6: "Nemoj se nalaziti sa ljudima koje si upoznao/la online. Kaži svojim roditeljima ili starateljima o ljudima koji ti predlažu da to uradiš.",
			tip7: "Zapamti da nisu svi online onakvi kakvim se predstavljaju.",
			tip8: "Pažljivo razmisli o poruci koju pišeš prije nego što pošalješ.",
			tip9: "Poštuj stavove drugih ljudi, čak i ako se ne slažeš sa nečijim stavovima, ne znači da moraš biti nepristojan.",
			tip10: "Ako nešto na netu / agaru čini da se osećaš neugodno, nebezbedno ili zabrinuto, prijavi adminima ili roditeljima ili napusti sajt ili ugasi računalo.",
			title2: "Savjeti ako ste provocirani na internetu",
			react1: "Prijavi adminima ili starijim osobama vrijeđanje.",
			react2: "Ne odgovaraj i ne uzvraćaj pažnju na uvredljive poruke - to bi moglo pogoršati stvari.",
			react3: "Blokiraj igrača koji ti šalje takve poruke.",
			react4: "Napiši datum i vrijeme kada dobijaš uvredljive poruke, kao i detalje koje imaš - server, nick igrača.",
			react5: "Ako te učestalo vrijeđaju, promjeni nick / profil i koristi ime koje ne daje nikakve informacije o tebi."
		}
	};
}, function (e, t, n) {
	"use strict";

	Object.defineProperty(t, "__esModule", {
		value: true
	});
	t.lang_mk = {
		home: {
			ab: "Agar Balkan",
			home: "Почетна",
			skins: "Скинови",
			skin: "Слика",
			music: "Музика",
			contact: "Контакт",
			type_name: "Внесете Име",
			login: "Пријави се",
			controll_ball: "Контролирајте ја топката со помош на маусот.",
			press: "Притисни",
			to_split: "Да се поделиш",
			to_eject: "За изфрлање на маса",
			connecting: "Конектирање до сервер",
			mouse_control: "Клик за изфрлање маса и сплит",
			mouse_control_desc: "Со лев клик изфрлате маса, а со десниот се сплитате",
			play: "Играј",
			spectate: "Набљудувај",
			hide_chat: "Сокриј разговор",
			without_skins: "Слики?",
			show_table: "Tоп 10 табелата?",
			show_current_score: "Моменталниот резултат?",
			smoth_view: "Убаво прикажување",
			choose_server: "Одберете Сервер",
			choose_theme: "Одберете тема",
			chosen_theme: "Одбрана тема: ",
			theme: "Tема",
			settings: "Опции",
			enter_to_chat: "Притисни ENTER за разговор",
			new_option_click: "Лев клик за изфрлање маса, десен за разделување",
			eject_mass: "Изфрлање маса",
			split: "Разделување",
			double_split: "2x разделување",
			quad_split: "4x разделување",
			logout: "Одјави се",
			restart: "Рестарт на серверот е во 00:00, 06:00, 12:00 и 18:00",
			servers: "Сервери",
			save: "Запомни",
			game_view: "Прегледување на играта",
			pointing_arrow: "Стрелка за правец?",
			pointing_arrow_desc: "Рефреш е потребен при промена на опциите.",
			rules: "Правила",
			auto_respawn_desc: "Кога ќе изгубите, продолжувате со играње без отворање на почетното мени.",
			reset_settings: "Ресетирај ги сите подесувања",
			follow_us_on_fb: "Следете не на Facebook, за секакви новости со AB ",
			without_lines: "Покажи линии?",
			transparent: "Провиден?",
			saved_items: "Here you can keep your nicknames, notes or anything else.",
			hide_hats: "Сакриј капе",
			today: "Денес",
			month: "Овој месец",
			how_to_play: "Како да играш?",
			profile: "Профил",
			block: "Блокира",
			yes: "Да",
			no: "Не"
		},
		mp: {
			music: "Музика",
			play: "Почни",
			play_playlist: "Слушај плајлиста",
			turn_off: "Исклучи",
			share_and_listen: "Споделете и слушајте музика со останатите играчи на сајтот",
			add: "Додај",
			error: "Дојде до грешка!",
			list_empty: "Листата е во моментот празна.",
			copy_song_from_yt: "Копирајте го и внесете го линкот од YT за да ја внесете песната.",
			paste_yt: "Вметнете YT линк",
			lag: "Се препорачува да не пуштате доколку имате слаба интернет конекција",
			song_exist: "Песната веќе постои на листата."
		},
		contact: {
			report_contact: "Контактирајте не",
			your_email: "Ваш Е-маил",
			messsage: "Порака",
			report: "Испрати",
			success: "Успешно ја испративте пораката",
			error: "Дојдовме до грешка",
			banned: "Баниран сте на сајтот.",
			banned_desc: "Контактирајте не за повеке информации преку формуларот или преку FB страната."
		},
		login: {
			email: "Внесете Е-маил.",
			email_username: "Внесете Е-маил или корисничко име.",
			type_password: "Внесете лозинка",
			login: "Пријави се",
			wrong_credentials: "Погрешно корисничко име или лозинка!",
			required: "Ова поле е задолжително",
			register_head: "Регистрирај се",
			register: "Создај сметка",
			email_exist: "Е-пошта веќе постои",
			nickname_exist: "Прекарот е земен. Пробајте уште еден.",
			email_invalid: "Неважечка е-пошта.",
			min_pass: "Минималната должина на лозинка е 4 карактери"
		},
		skins: {
			add_skin: "Додај слика",
			not_found: "Не е возможно да пронајде слики.",
			find_skin: "Пронајди слика",
			allowed: "Дозволен формат на слики:",
			max_size: "Максимална големина:",
			min_size: "Минимална должина на името на сликата е 3, а максимална е 15 карактери.",
			skin_name: "Име на сликата",
			skin_added: "Вашата слика е успешно додадена",
			not_allowed_skins: "Забрането е да додавате навредливи слики. Секое непоштување на друг играч допринесува до траен бан на сајтот.",
			banned: "Забрането ви е на вас да додавате скинови.",
			top_skins: "Врвни слики",
			all_skins: "Сите слики",
			my_favs: "Мојот омилен"
		},
		rules: {
			head: "Agar Balkan - Правила на играта",
			subhead: "Овие правила важат за сите сервери.",
			subhead2: "Ако мислите дека сте неправедно казнет, можете да не контактирате по пат на <a style=\"color:#fff;text-decoration: underline;\" href=\"/agar.rs/contact\">контакт форма</a> или <a style=\"color:#fff;text-decoration: underline;\" href=\"#\">facebook страница</a>.",
			r1h: "1. Содржина",
			r1t: "Навреди и непримерно понашање према другите играчи не е допуштено.<br /> Забрането е поставување на содржини,  слики и линкови порнографски, расистичка содржина, како и сите други огласувања, политичко или верско мислење.",
			r2h: "2. Загрозување на реалниот живот",
			r2t: "Забранета е било каква расправа во врска со вистинскиот жовот на било кој играч или член на тимот.",
			r3h: "3.  Користење грешки (Bugovi/Glichovi)",
			r3t: "Користењето на програмсите грешки и не пријавувањето на такви грешки строго се забранува.",
			r4h: "4. Слики",
			r41t: "Use common sense while uploading skins",
			r42t: "Nothing that can be considered offensive such as hate speech or political insults.",
			r43t: "Images must be suitable for all ages.",
			r44t: "No reuploads",
			r45t: "Skins should not depict persons under the age of 18",
			r46t: "No self promotion."
		},
		logged: {
			rank: "Ранк",
			results: "Резултати",
			keyboard_controls: "Подесувања контроли на тастатурата",
			private_skin: "Приватна слика?",
			private_skin_desc: "Само вие со вашиот налог ќе можете да ја видите сликата и нема да биде прилажана на листата со слики.",
			your_private_skins: "Ваши приватни слики",
			no_private_skins: "Немате приватни слики.",
			search_for_others: "Или пребарајте",
			type_nick_desc: " Морате да внесете име за игра, Името неможе да се промени во текот на играта.",
			no_name: "Не сте внеле име.",
			save: "Зачувај",
			my_statistic: "Моја статистика",
			hat: "Шапка",
			hats: "Капи",
			change_nickname: "Промена на прекар",
			nickname_hours: "Можете да го промените прекарот еднаш на секои 48 часа",
			wrong_login: "Неважечко најавување, обидете се да се одјавите и повторно да се најавите. Ако имате проблеми, контактирајте со администраторите.",
			successfully_changed_nickname: "Прекарот е успешно променет.",
			profile_settings: "Прилагодувања на профилот"
		},
		new_21_09: {
			badge: "Значка",
			old_chat: "Стар разговор",
			login_facebook: "Facebook најава",
			or: "или",
			pillory: "Столбот на срамот",
			name: "Име",
			type: "Tip",
			server: "Server",
			reason: "Razlog",
			date: "Datum",
			expiration: "Isticanje",
			empty_list: " Lista je trenutno prazna",
			top_10: "TOP 10 Листи",
			no_players: "Nema igrača na listi.",
			result_added: "Резултатите се додаваат кога ќе ја изгубите играта. Рестартот на серверот не се калкулира.",
			result_count: "За резултат се зима \"Рекорд\".",
			search: "Pretraga",
			max_two_skins: "Najviše možete imati dva privatna skina.",
			skin_aprove: "Vaš skin će biti prikazan tek kada administratori odobre.",
			skin_rules: "Pročitajte <a class=\"text-underline\" href=\"/agar.rs/rules\">pravila o skinovima</a> pre dodavanja skina.",
			background_canvas: "Pozadinska animacija",
			additional_info: "Ostale informacije / Izvor slike",
			training: "Вежбање",
			highscore_update: "Резултатите се ажурираат секој час!"
		},
		privacy: {
			title: "Политика за приватност",
			valid: "This privacy statement is valid from 01.10.2017",
			ph1: "Data Collection",
			pt1: "When registering with us, we collect, process and store the personal data you enter, as well as information about the stationary and mobile devices you use during your access. Likewise, your skins, profile information and further uses will be saved, when using the Agar Balkan services.",
			ph2: "Security",
			pt2: "We use technically sophisticated and state-of-the-art measures to protect the security of your data on our servers against unauthorized access. Should you find any kind of abuse of your user account, please send a prompt message to the current contact address.",
			ph3: "Data Protection",
			pt3: "The use of our website is normally possible without giving personal data. If personal data such as name, address or e-mail addresses are collected on our pages, this is always done on a voluntary basis as far as possible. These data will not be passed on to third parties without your express consent. We would like to point out that data transmission on the Internet (for example, when communicating via e-mail) can present security gaps.",
			ph4: "Facebook Login",
			pt4: "You can use our service via their Facebook login data. We would like to point out that it can be a risk when logging in from public computers via Facebook. Please make sure to log off correctly in such cases.",
			ph5: "Cookies",
			pt5: "This site uses cookies. Cookies are small text files that are permanently or temporarily stored in your computer when you visit this website. The purpose of the cookies is in particular the analysis of the use of this website for statistical evaluation as well as for continuous improvements. In your browser, you can disable all or part of cookies in the settings at any time. When cookies are deactivated, you are no longer able to use all the functions of this website.",
			ph6: "Google Analytics",
			pt6: "This website uses Google Analytics, an software for the statistical analysis of visitor accesses. Google Analytics uses so-called \"cookies\", text files which are stored on your computer and which allow an analysis of the use of the website by you. The information generated by the cookie about your use of this website is stored on the server by google. The IP address is anonymized immediately after processing and before its storage. You can prevent the installation of cookies by setting your browser software accordingly. However, we would point out that in this case you may not be able to fully utilize all the functions of this website.",
			ph7: "Liability for Content",
			pt7: "The contents of our pages were created with great care. However, we can not guarantee the correctness, completeness and actuality of the contents. As a service provider, we are responsible for our own content on these pages according to the general laws. As a service provider, however, we are not obligated to supervise transmitted or stored third-party information or to investigate circumstances which indicate an illegal activity. Obligations to remove or block the use of information according to general laws remain unaffected. Liability in this regard, however, is only possible from the time of knowledge of a concrete infringement. We will immediately remove these contents if we become aware of any such legal violations.",
			ph8: "Liability for Links",
			pt8: "Our offer contains links to external websites of third parties on whose content we have no influence. Therefore, we cannot assume any liability for these third-party content. The respective provider or operator of the pages is always responsible for the contents of the linked pages. The linked pages were checked for possible legal violations at the time of linking. Illegal contents were not recognizable at the time of linking. However, a permanent control of the content of the linked pages is not reasonable without concrete indications of an infringement. If we become aware of any legal infringements, we will immediately remove such links.",
			ph9: "Questions about the service",
			pt9: "If you have any questions or suggestions or complaints about the services we offer, please use these contact details:",
			pt91: ""
		}
	};
}, function (e, t, n) {
	"use strict";

	Object.defineProperty(t, "__esModule", {
		value: true
	});
	t.lang_rs = {
		home: {
			ab: "Agar Balkan",
			home: "Почетна",
			skins: "Скинови",
			skin: "Скин",
			music: "Музика",
			contact: "Подршка",
			type_name: "Унесите име",
			login: "Пријава",
			controll_ball: "Контролиши лоптицу уз помоћ миша",
			press: "Притисни",
			to_split: "да се поделиш",
			to_eject: "за избацивање масе",
			connecting: "Спајање на сервер",
			mouse_control: "Клик за масу, сплит",
			mouse_control_desc: "Левим кликом избацујете масу, десним се делите.",
			play: "Играј",
			spectate: "Надгледај",
			hide_chat: "Сакриј чeт",
			without_skins: "Прикажи скинове",
			show_table: "Прикажи табелу?",
			show_current_score: "Прикажи трен. резултат",
			smoth_view: "Глатко приказивање",
			choose_server: "Одаберите сервер",
			choose_theme: "Одаберите тему",
			chosen_theme: "Одабрана тема: ",
			theme: "Tема",
			settings: "Опције",
			enter_to_chat: "Будите љубазни у чету!",
			new_option_click: "Леви клик за избацивање масе, десни за поделу",
			eject_mass: "Избацивање масе",
			split: "Split",
			double_split: "Double Split",
			quad_split: "Quad Split",
			logout: "Одјава",
			restart: "Рестарт сервера је у 00:00, 06:00, 12:00 i 18:00",
			servers: "Сервери",
			save: "Запамти",
			game_view: "Преглед игре",
			pointing_arrow: "Стрелица за правац",
			pointing_arrow_desc: "Освежавање странице је потребно при промени опције.",
			rules: "Правила",
			auto_respawn_desc: "Када изгубите, настављате даље без отварања почетног менија.",
			reset_settings: "Ресетуј сва подешавања",
			follow_us_on_fb: "Запратите страницу на FB за новости везане за АБ",
			without_lines: "Покажи линије?",
			transparent: "Провидно?",
			saved_items: "Овде можете чувати своје никове, напомене или било шта друго.",
			hide_hats: "Сакриј капе",
			today: "Данас",
			month: "Овог месеца",
			how_to_play: "Како играти?",
			profile: "Профил",
			block: "Блокирај",
			yes: "Да",
			no: "Не"
		},
		mp: {
			music: "Музика",
			play: "Покрени",
			play_playlist: "Покрени плејлисту",
			turn_off: "Искључи",
			share_and_listen: "Делите и слушајте музику са осталим играчима на сајту",
			add: "Додај",
			error: "Дошло је до грешке!",
			list_empty: "Листа је тренутно празна.",
			copy_song_from_yt: "Прекопирајте и додајте линк са YТ да би убацили песму.",
			paste_yt: "Налепи YТ линк",
			lag: "Препоручује се да не покрећете уколико имате спорију интернет конекцију",
			song_exist: "Песма се налази на листи."
		},
		contact: {
			report_contact: "Контактирајте нас",
			your_email: "Ваша е-адреса",
			messsage: "Порука",
			report: "Пошаљи",
			success: "Успешно сте послали поруку",
			error: "Дошло је до грешке",
			banned: "Бановани сте са сајта.",
			banned_desc: "Контактирајте нас за више информације путем форме или фејсбук странице."
		},
		login: {
			email: "Унеси е-маил",
			email_username: "Унеси е-маил или корисничко име",
			type_password: "Унеси лозинку",
			login: "Пријави се",
			wrong_credentials: "Погрешно корисничко име или лозинка!",
			required: "Ово поље је обавезно",
			register_head: "Региструј се",
			register: "Направи налог",
			email_exist: "Постоји налог са унетом адресом",
			nickname_exist: "Име је заузето. Пробајте друго",
			email_invalid: "Е-адреса није исправна",
			min_pass: "Минимална дужина лозинке је 4 карактера"
		},
		skins: {
			add_skin: "Додај скин",
			not_found: "Није могуће пронаћи скинове.",
			find_skin: "Пронађи скин",
			allowed: "Дозвољени формат слике:",
			max_size: "Максимална величина:",
			min_size: "Минимална дужина имена скина је 3, а максимална 15 карактера.",
			skin_name: "Име скина",
			skin_added: "Ваш скин је успешно додат",
			not_allowed_skins: "Забрањено је додавати увредљиве скинове. Свако непоштовање других играча доводи до трајног бана.",
			banned: "Забрањено вам је додавање скинова.",
			top_skins: "Топ скинови",
			all_skins: "Сви скинови",
			my_favs: "Моји фаворити"
		},
		rules: {
			head: "Агар Балкан - Правила игре",
			subhead: "Ова правила су важећа за све сервере.",
			subhead2: "Ако мислите да сте неправедно кажњени по једном од следећих правила можете се обратити подршци за игру путем <a  style=\"color:#fff;text-decoration: underline;z-index:6;\" href=\"/agar.rs/contact\">контакт форме</a> или <a style=\"color:#fff;text-decoration: underline;\" href=\"#\">facebook странице</a>.",
			r1h: "1. Садржај",
			r1t: "Увреде и неприкладно понашање према другим играчима нису дозвољене.<br />Постављање садржаја, скинова, и линкова порнографског, расистичког садржаја као и сви остали видови дискриминација било које врсте су забрањени.<br />Рекламе, политичка или верска мишљења су забрањена.",
			r2h: "2. Претње у стварном животу",
			r2t: "Било који облик претње у стварном животу било ком играчу или члану тима је забрањен.",
			r3h: "3. Искоришћавање грешака",
			r3t: "Коришћење грешке у програмирању или не пријављивање овакве грешке је строго забрањено.",
			r4h: "4. Скинови",
			r41t: "Користите се здравим разумом приликом додавања скинова",
			r42t: "Забрањени су скинови који представљају говор мржње или политичке увреде",
			r43t: "Скинови морају бити погодни за све узрасте",
			r44t: "Нема поновних додавања скинова",
			r45t: "Забрањени су скинови са особама млађим од 18 година",
			r46t: "Забрањено је рекламирање преко скинова"
		},
		logged: {
			rank: "Ранк",
			results: "Резултати",
			keyboard_controls: "Подесите контроле тастатуре",
			private_skin: "Приватни скин?",
			private_skin_desc: "Само Ви са Вашег налога можете видети скин и неће бити приказан на листи скинова.",
			your_private_skins: "Ваши приватни скинови",
			no_private_skins: "Немате приватних скинова.",
			search_for_others: "Или претражите",
			type_nick_desc: "Морате унети име за игру. Једном унето име не можете касније променити.",
			no_name: "Нисте унели име.",
			save: "Сачувај",
			my_statistic: "Моја статистика",
			hat: "Капа",
			hats: "Капе",
			change_nickname: "Промени надимак",
			nickname_hours: "Надимак можете променити једном у 48 сати",
			wrong_login: "Неисправно пријављивање, покушајте да се одјавите и поново пријавите. Ако имате проблема, контактирајте администраторе.",
			successfully_changed_nickname: "Надимак је успешно промењен.",
			profile_settings: "Подешавања профила"
		},
		new_21_09: {
			badge: "Значка",
			old_chat: "Стари чет",
			login_facebook: "Улогуј се преко фејсбука",
			or: "или",
			pillory: "Стуб срама",
			name: "Име",
			type: "Тип",
			server: "Сервер",
			reason: "Разлог",
			date: "Датум",
			expiration: "Истицање",
			empty_list: "Листа је тренутно празна",
			top_10: "ТОП 10 Листе",
			no_players: "Нема играча на листи.",
			result_added: "Резултат се додаје када изгубите игру. Рестарт сервера се не рачуна.",
			result_count: "За резултат се узима \"Рекорд\".",
			search: "Претрага",
			max_two_skins: "Највише можете имати два приватна скина.",
			skin_aprove: "Ваш скин ће бити приказан тек када администратори одобре.",
			skin_rules: "Прочитајте <a class=\"text-underline\" href=\"/agar.rs/rules\">правила о скиновима</a> пре додавања скина.",
			background_canvas: "Позадинска анимација",
			additional_info: "Остале опције / Извор слике",
			training: "Тренинг",
			highscore_update: "Резултати се ажурирају на сваких сат времена!"
		},
		privacy: {
			title: "Политика приватности",
			valid: "This privacy statement is valid from 01.10.2017",
			ph1: "Data Collection",
			pt1: "When registering with us, we collect, process and store the personal data you enter, as well as information about the stationary and mobile devices you use during your access. Likewise, your skins, profile information and further uses will be saved, when using the Agar Balkan services.",
			ph2: "Security",
			pt2: "We use technically sophisticated and state-of-the-art measures to protect the security of your data on our servers against unauthorized access. Should you find any kind of abuse of your user account, please send a prompt message to the current contact address.",
			ph3: "Data Protection",
			pt3: "The use of our website is normally possible without giving personal data. If personal data such as name, address or e-mail addresses are collected on our pages, this is always done on a voluntary basis as far as possible. These data will not be passed on to third parties without your express consent. We would like to point out that data transmission on the Internet (for example, when communicating via e-mail) can present security gaps.",
			ph4: "Facebook Login",
			pt4: "You can use our service via their Facebook login data. We would like to point out that it can be a risk when logging in from public computers via Facebook. Please make sure to log off correctly in such cases.",
			ph5: "Cookies",
			pt5: "This site uses cookies. Cookies are small text files that are permanently or temporarily stored in your computer when you visit this website. The purpose of the cookies is in particular the analysis of the use of this website for statistical evaluation as well as for continuous improvements. In your browser, you can disable all or part of cookies in the settings at any time. When cookies are deactivated, you are no longer able to use all the functions of this website.",
			ph6: "Google Analytics",
			pt6: "This website uses Google Analytics, an software for the statistical analysis of visitor accesses. Google Analytics uses so-called \"cookies\", text files which are stored on your computer and which allow an analysis of the use of the website by you. The information generated by the cookie about your use of this website is stored on the server by google. The IP address is anonymized immediately after processing and before its storage. You can prevent the installation of cookies by setting your browser software accordingly. However, we would point out that in this case you may not be able to fully utilize all the functions of this website.",
			ph7: "Liability for Content",
			pt7: "The contents of our pages were created with great care. However, we can not guarantee the correctness, completeness and actuality of the contents. As a service provider, we are responsible for our own content on these pages according to the general laws. As a service provider, however, we are not obligated to supervise transmitted or stored third-party information or to investigate circumstances which indicate an illegal activity. Obligations to remove or block the use of information according to general laws remain unaffected. Liability in this regard, however, is only possible from the time of knowledge of a concrete infringement. We will immediately remove these contents if we become aware of any such legal violations.",
			ph8: "Liability for Links",
			pt8: "Our offer contains links to external websites of third parties on whose content we have no influence. Therefore, we cannot assume any liability for these third-party content. The respective provider or operator of the pages is always responsible for the contents of the linked pages. The linked pages were checked for possible legal violations at the time of linking. Illegal contents were not recognizable at the time of linking. However, a permanent control of the content of the linked pages is not reasonable without concrete indications of an infringement. If we become aware of any legal infringements, we will immediately remove such links.",
			ph9: "Questions about the service",
			pt9: "If you have any questions or suggestions or complaints about the services we offer, please use these contact details:",
			pt91: ""
		},
		statistic: {
			best_time_played: "Најдуже време",
			max_score: "Најбољи резултат",
			all_plays: "Укупно партија",
			server: "Сервер",
			top_10_logged: "Улоговани играчи",
			all_players: "Сви играчи"
		},
		options: {
			all_settings: "Све опције",
			cells_and_controls: "Кугле и контроле",
			hide_colors: "Сакриј боје",
			show_sectors: "Прикажи секторе",
			sector_color: "Боја сектора",
			map_color: "Боја мапе",
			infinity_zoom: "Бесконачан зум",
			map: "Мапа",
			cell_border: "Оквир око кугле",
			other: "Остало",
			delete_profile: "Обриши налог",
			delete_facebook: "Обриши Фејсбук податке"
		},
		hats: {
			buy: "Купи",
			days: "дана",
			choose: "Одабери"
		},
		forgotPassword: {
			question: "Заборавили сте лозинку?",
			email_not_exist: "Е-маил не постоји.",
			email_sent: "Порука са инструкцијама је послата на ваш е-маил.",
			change_password: "Промени лозинку",
			new_password: "Нова лозинка",
			repeat_password: "Поново унесите лозинку",
			reset: "Ресетовати",
			wrong_code: "Грешка у коду. Поново покушајте ресетовање ваше лозинке.",
			passwords_do_not_match: "Лозинке се не поклапају.",
			password_changed: "Лозинка је успешно промењена. Можете се пријавити сада."
		},
		contribute: {
			contribute: "Допринети",
			donate: "Донације",
			donate_desc: "Ако желите да допринесете развоју и одржавању игре, можете оставити своју донацију овде.",
			select_amount: "Изаберите износ донације:",
			translate: "Превођење",
			translate_desc: "Помозите нам да преведемо агар на Ваш језик. Пошаљите нам преводе и исправке преко фејсбук странице или контакт форме.",
			follow: "Запратите нас на фејсбуку",
			adblocker: "Онемогућите AdBlocker и поново учитајте страницу",
			adblocker_desc: "Скинови и друге функционалности нису доступни због AdBlocker-a."
		},
		online_safe: {
			title: "Останите сигурни на интернету",
			tip1: "Немој објављивати никакве личне информације на нету - као што су адреса, емаил или број мобилног телефона.",
			tip2: "Размисли пажљиво пре објављивања слика или видео записа себе. Једном када поставиш слику на интернет, већина људи може да је види и преузме, а онда то више није само твоје.",
			tip3: "Чувај своју приватност што је више могуће.",
			tip4: "Никада не говори своје лозинке.",
			tip5: "Немој се дружити са људима које не познајеш.",
			tip6: "Немој се налазити са људима које си упознао/ла онлајн. Кажи својим родитељима или старатељима о људима који ти предлажу да то урадиш.",
			tip7: "Запамти да нису сви онлајн онакви каквим се представљају.",
			tip8: "Пажљиво размисли о поруци коју пишеш пре него што пошаљеш.",
			tip9: "Поштуј ставове других људи, чак и ако се не слажеш са нечијим ставовима, не значи да мораш бити непристојан.",
			tip10: "Ако нешто на нету / агару чини да се осећаш неугодно, небезбедно или забринуто, пријави админима или родитељима или напусти сајт или угаси рачунар.",
			title2: "Савети ако сте провоцирани на интернету",
			react1: "Пријави админима или старијим особама вређање.",
			react2: "Не одговарај и не узвраћај пажњу на увредљиве поруке - то би могло погоршати ствари.",
			react3: "Блокирај играча који ти шаље такве поруке.",
			react4: "Напиши датум и време када добијаш увредљиве поруке, као и детаље које имаш - сервер, надимак играча.",
			react5: "Ако те учестало вређају, промени надимак / профил и користи име које не даје никакве информације о теби."
		}
	};
}, function (e, t, n) {
	"use strict";

	Object.defineProperty(t, "__esModule", {
		value: true
	});
	t.lang_si = {
		home: {
			ab: "Agar Balkan",
			home: "Domov",
			skins: "Skins",
			skin: "Skin",
			music: "Glasba",
			contact: "Stik",
			type_name: "Vnesite vzdevek",
			login: "Vpiši se",
			controll_ball: "Nadzor nad miško",
			press: "Pritisnite",
			to_split: "če se hočete razdeliti",
			to_eject: "za oddajanje mase",
			connecting: "Povezovanje s strežnikom",
			mouse_control: "Klik za oddajanje mase, razdelitev",
			mouse_control_desc: "Z levim klikom oddajate maso, z desnim se razdelite.",
			play: "Igraj",
			spectate: "Spectate",
			hide_chat: "Skrij chat",
			without_skins: "Pokaži skinov?",
			show_table: "Pokaži lestvico?",
			show_current_score: "Pokaži rezultat",
			smoth_view: "Gladko prikazovanje",
			choose_server: "Izberite strežnik",
			choose_theme: "Izberite temo",
			chosen_theme: "Izbrana tema: ",
			theme: "Tema",
			settings: "Nastavitve",
			enter_to_chat: "Pritisnite ENTER za klepet!",
			new_option_click: "Z levim klikom oddajate maso, z desnim se razdelite",
			eject_mass: "Oddajanje mase",
			split: "Split",
			double_split: "Double Split",
			quad_split: "Quad Split",
			logout: "Odjava",
			restart: "Strežniki se znova zaženejo v 00:00, 06:00, 12:00 in 18:00",
			servers: "Strežniki",
			save: "Shrani",
			game_view: "Pogled igre",
			pointing_arrow: "Kazalna puščica?",
			pointing_arrow_desc: "Ob spremembi nastavitev, morate refreshati stran.",
			rules: "Pravila",
			auto_respawn_desc: "Ko izgubite, nadaljujete igro brez odpiranja menija.",
			reset_settings: "Ponastavite vse nastavitve",
			follow_us_on_fb: "Sledi nas na FB",
			without_lines: "Kažejo črte?",
			transparent: "Prozoren?",
			saved_items: "Here you can keep your nicknames, notes or anything else.",
			hide_hats: "Sakrij kape",
			today: "Danes",
			how_to_play: "Kako igrati?",
			profile: "Profil",
			block: "Blokiraj",
			yes: "Ja",
			no: "Ne"
		},
		mp: {
			music: "Glasba",
			play: "Play",
			play_playlist: "Začetek predvajanja",
			turn_off: "Ugasni",
			share_and_listen: "Deli in poslušaj glasbo z ostalimi igralci",
			add: "Dodaj",
			error: "Prišlo je do napake!",
			list_empty: "Seznam je trenutno prazen.",
			copy_song_from_yt: "Kopirajte YT povezavo in jo dodajte sem.",
			paste_yt: "Prilepi YT povezavo",
			lag: "Preporočljivo je da ne predvajate glasbo če imate slabšo internet povezavo",
			song_exist: "Pesem že obstaja."
		},
		contact: {
			report_contact: "Kontaktiraj nas",
			your_email: "Vaš e-poštni naslov",
			messsage: "Sporočilo",
			report: "Pošlji",
			success: "Uspešno ste poslali sporočilo",
			error: "Napaka",
			banned: "Stran ni dostopna zaradi kršenja pravil..",
			banned_desc: "Kontaktirajte nas za več informacij na stikih ali na FB strani."
		},
		login: {
			email: "Vnesite e-pošto",
			email_username: "Vnesite e-pošto ali uporabniško ime",
			type_password: "Vnesite geslo",
			login: "Vpiši se",
			wrong_credentials: "Napačno uporabniško ime ali geslo!",
			required: "To polje je obvezno",
			register_head: "Pridruži se",
			register: "Ustvari račun",
			email_exist: "Email že obstaja",
			nickname_exist: "Ime je vzeto. Poskusite drugo.",
			email_invalid: "Neveljavna e-pošta.",
			min_pass: "Minimalna dolžina gesla je 4 znake"
		},
		skins: {
			add_skin: "Dodaj skin",
			not_found: "Skinov ni mogoče najti.",
			find_skin: "Najdi skin",
			allowed: "Dovoljen format slike:",
			max_size: "Največja velikost:",
			min_size: "Minimalna dolžina imena skina je 3 in maksimalna 15 znakov.",
			skin_name: "Ime skina",
			skin_added: "Vaš skin je objavljen",
			not_allowed_skins: "Prepovedano objavljati žaljive skine. V primeru takšnih bo za vas spletna stran onemogočena.",
			banned: "Prepovedano je dodajati skine.",
			top_skins: "Top slike",
			all_skins: "Vse slike",
			my_favs: "Moje najljubše"
		},
		rules: {
			head: "Agar Balkan - Pravila igre",
			subhead: "Ta pravila veljajo za vse strežnike.",
			subhead2: "Če mislite da ste nepravočno kaznovani, nas kontaktirajte.",
			r1h: "1. Vsebina",
			r1t: "Neprimerno obnašanje do soigralcev je prepovedano.<br />Prepovedano objavljanje žaljivih fotografij na skin, objavljanje linkov pornografske in rasistične vsebine, kot vse druge diskriminacije.<br />Zabranjeno je oglašavanje, politično in versko mnenje.",
			r2h: "2. Grožnje v resničnem življenju",
			r2t: "Prepovedane grožnje kateremu koli igralcu v resnčnem življenju.",
			r3h: "3. Iskoriščanje napak",
			r3t: "Iskoriščanje programske napake je strogo prepovedano.",
			r4h: "4. Slike",
			r41t: "Pri nalaganju slik uporabljajte zdrav razum",
			r42t: "Nič, kar se lahko šteje za žaljivo, kot je sovražni govor ali politična žalitev.",
			r43t: "Slike morajo biti primerne za vse starosti.",
			r44t: "Ne ponovno naloži",
			r45t: "Slike ne smejo prikazovati oseb, mlajših od 18 let",
			r46t: "Brez samopromocije."
		},
		logged: {
			rank: "Rank",
			results: "Rezultati",
			keyboard_controls: "Nastavite kontrolnike tipkovnice",
			private_skin: "Zasebni skin?",
			private_skin_desc: "Samo vi iz vašega računa lahko vidite skin in skin ne bo prikazan na seznamu skinov.",
			your_private_skins: "Vaš zasebni skin",
			no_private_skins: "Nimate zasebnih skinov.",
			search_for_others: "Iskanje",
			type_nick_desc: "V igro morate vnesti vzdevek. Vzdevka, ki ste ga vnesli, ne morete spremeniti.",
			no_name: "Vnesti morate vzdevek.",
			save: "Shrani",
			my_statistic: "Moja statistika",
			hat: "Klobuk",
			hats: "Klobuki",
			change_nickname: "Spremeni vzdevek",
			nickname_hours: "Nadomestno ime lahko spremenite enkrat na 48 ur",
			wrong_login: "Neveljavna prijava, poskusite se odjaviti in znova prijaviti. Če imate težave, se obrnite na skrbnike.",
			successfully_changed_nickname: "Nadimek je bil uspešno spremenjen.",
			profile_settings: "Nastavitve profila"
		},
		privacy: {
			title: "Politika zasebnosti",
			valid: "This privacy statement is valid from 01.10.2017",
			ph1: "Data Collection",
			pt1: "When registering with us, we collect, process and store the personal data you enter, as well as information about the stationary and mobile devices you use during your access. Likewise, your skins, profile information and further uses will be saved, when using the Agar Balkan services.",
			ph2: "Security",
			pt2: "We use technically sophisticated and state-of-the-art measures to protect the security of your data on our servers against unauthorized access. Should you find any kind of abuse of your user account, please send a prompt message to the current contact address.",
			ph3: "Data Protection",
			pt3: "The use of our website is normally possible without giving personal data. If personal data such as name, address or e-mail addresses are collected on our pages, this is always done on a voluntary basis as far as possible. These data will not be passed on to third parties without your express consent. We would like to point out that data transmission on the Internet (for example, when communicating via e-mail) can present security gaps.",
			ph4: "Facebook Login",
			pt4: "You can use our service via their Facebook login data. We would like to point out that it can be a risk when logging in from public computers via Facebook. Please make sure to log off correctly in such cases.",
			ph5: "Cookies",
			pt5: "This site uses cookies. Cookies are small text files that are permanently or temporarily stored in your computer when you visit this website. The purpose of the cookies is in particular the analysis of the use of this website for statistical evaluation as well as for continuous improvements. In your browser, you can disable all or part of cookies in the settings at any time. When cookies are deactivated, you are no longer able to use all the functions of this website.",
			ph6: "Google Analytics",
			pt6: "This website uses Google Analytics, an software for the statistical analysis of visitor accesses. Google Analytics uses so-called \"cookies\", text files which are stored on your computer and which allow an analysis of the use of the website by you. The information generated by the cookie about your use of this website is stored on the server by google. The IP address is anonymized immediately after processing and before its storage. You can prevent the installation of cookies by setting your browser software accordingly. However, we would point out that in this case you may not be able to fully utilize all the functions of this website.",
			ph7: "Liability for Content",
			pt7: "The contents of our pages were created with great care. However, we can not guarantee the correctness, completeness and actuality of the contents. As a service provider, we are responsible for our own content on these pages according to the general laws. As a service provider, however, we are not obligated to supervise transmitted or stored third-party information or to investigate circumstances which indicate an illegal activity. Obligations to remove or block the use of information according to general laws remain unaffected. Liability in this regard, however, is only possible from the time of knowledge of a concrete infringement. We will immediately remove these contents if we become aware of any such legal violations.",
			ph8: "Liability for Links",
			pt8: "Our offer contains links to external websites of third parties on whose content we have no influence. Therefore, we cannot assume any liability for these third-party content. The respective provider or operator of the pages is always responsible for the contents of the linked pages. The linked pages were checked for possible legal violations at the time of linking. Illegal contents were not recognizable at the time of linking. However, a permanent control of the content of the linked pages is not reasonable without concrete indications of an infringement. If we become aware of any legal infringements, we will immediately remove such links.",
			ph9: "Questions about the service",
			pt9: "If you have any questions or suggestions or complaints about the services we offer, please use these contact details:",
			pt91: ""
		}
	};
}, function (e, t, n) {
	"use strict";

	Object.defineProperty(t, "__esModule", {
		value: true
	});
	var i = function (e) {
		if (e && e.__esModule) {
			return e;
		} else {
			return {
				default: e
			};
		}
	}(n(6));
	t.default = [{
		path: "*",
		component: i.default.components.homepage,
		name: "notFound"
	}, {
		path: "/agar.rs/",
		component: i.default.components.homepage,
		name: "index",
		props: true
	}, {
		path: "/agar.rs/web/:id",
		component: i.default.components.homepage,
		name: "indexLink",
		props: true
	}, {
		path: "/agar.rs/server/:id",
		component: i.default.components.homepage,
		name: "serverLink",
		props: true
	}, {
		path: "/agar.rs/home",
		component: i.default.components.homepage,
		name: "logged"
	}, {
		path: "/agar.rs/web/:id",
		component: i.default.components.homepage,
		name: "loggedLink"
	}, {
		path: "/agar.rs/web-login/:id",
		component: i.default.components.HelpLogin,
		name: "helpLink"
	}, {
		path: "/agar.rs/fun/",
		component: i.default.components.fun,
		name: "fun"
	}, {
		path: "/agar.rs/fun/:id",
		component: i.default.components.fun,
		name: "funId"
	}, {
		path: "/agar.rs/ban",
		component: i.default.components.ban,
		name: "ban"
	}, {
		path: "/agar.rs/hats",
		component: i.default.components.hats,
		name: "hats"
	}, {
		path: "/agar.rs/pillory",
		component: i.default.components.pillory,
		name: "pillory"
	}, {
		path: "/agar.rs/skins",
		component: i.default.components.skins,
		name: "skins"
	}, {
		path: "/agar.rs/skin/:name",
		component: i.default.components.skinPreview,
		name: "skinPreview"
	}, {
		path: "/agar.rs/login",
		component: i.default.components.login,
		name: "login"
	}, {
		path: "/agar.rs/register",
		component: i.default.components.register,
		name: "register"
	}, {
		path: "/agar.rs/forgot-password",
		component: i.default.components.forgotPassword,
		name: "forgotPassword"
	}, {
		path: "/agar.rs/reset-password/:code",
		component: i.default.components.forgotPassword,
		name: "resetPassword"
	}, {
		path: "/agar.rs/me",
		component: i.default.components.myStats,
		name: "myStats"
	}, {
		path: "/agar.rs/rules",
		component: i.default.components.rules,
		name: "rules"
	}, {
		path: "/agar.rs/contact",
		component: i.default.components.contact,
		name: "contact"
	}, {
		path: "/agar.rs/highscores",
		component: i.default.components.rang,
		name: "highscores"
	}, {
		path: "/agar.rs/privacy_policy",
		component: i.default.components.privacy,
		name: "privacy"
	}, {
		path: "/agar.rs/contribute",
		component: i.default.components.contribute,
		name: "contribute"
	}];
}, function (e, t, n) {
	"use strict";

	function i(e) {
		if (e && e.__esModule) {
			return e;
		} else {
			return {
				default: e
			};
		}
	}
	Object.defineProperty(t, "__esModule", {
		value: true
	});
	var o = i(n(7));
	var a = i(n(3));
	var s = i(n(54));
	var r = i(n(55));
	o.default.use(a.default);
	t.default = new a.default.Store({
		modules: {
			main: s.default,
			servers: r.default
		}
	});
}, function (e, t, n) {
	"use strict";

	function i(e, t) {
		if (typeof console != "undefined") {
			console.warn("[vue-i18n] " + e);
			if (t) {
				console.warn(t.stack);
			}
		}
	}
	function o(e) {
		return e !== null && typeof e == "object";
	}
	function a(e) {
		return I.call(e) === $;
	}
	function s(e) {
		return e === null || e === undefined;
	}
	function r() {
		var e = [];
		for (var t = arguments.length; t--;) {
			e[t] = arguments[t];
		}
		var n = null;
		var i = null;
		if (e.length === 1) {
			if (o(e[0]) || Array.isArray(e[0])) {
				i = e[0];
			} else if (typeof e[0] == "string") {
				n = e[0];
			}
		} else if (e.length === 2) {
			if (typeof e[0] == "string") {
				n = e[0];
			}
			if (o(e[1]) || Array.isArray(e[1])) {
				i = e[1];
			}
		}
		return {
			locale: n,
			params: i
		};
	}
	function l(e) {
		if (e) {
			if (e > 1) {
				return 1;
			} else {
				return 0;
			}
		} else {
			return 1;
		}
	}
	function c(e, t) {
		e = Math.abs(e);
		if (t === 2) {
			return l(e);
		} else if (e) {
			return Math.min(e, 2);
		} else {
			return 0;
		}
	}
	function u(e, t) {
		if (!e && typeof e != "string") {
			return null;
		}
		var n = e.split("|");
		t = c(t, n.length);
		if (n[t]) {
			return n[t].trim();
		} else {
			return e;
		}
	}
	function d(e) {
		return JSON.parse(JSON.stringify(e));
	}
	function p(e, t) {
		if (e.length) {
			var n = e.indexOf(t);
			if (n > -1) {
				return e.splice(n, 1);
			}
		}
	}
	function f(e, t) {
		return M.call(e, t);
	}
	function h(e) {
		var t = arguments;
		var n = Object(e);
		for (var i = 1; i < arguments.length; i++) {
			var a = t[i];
			if (a !== undefined && a !== null) {
				var s = undefined;
				for (s in a) {
					if (f(a, s)) {
						if (o(a[s])) {
							n[s] = h(n[s], a[s]);
						} else {
							n[s] = a[s];
						}
					}
				}
			}
		}
		return n;
	}
	function m(e, t) {
		if (e === t) {
			return true;
		}
		var n = o(e);
		var i = o(t);
		if (!n || !i) {
			return !n && !i && String(e) === String(t);
		}
		try {
			var a = Array.isArray(e);
			var s = Array.isArray(t);
			if (a && s) {
				return e.length === t.length && e.every(function (e, n) {
					return m(e, t[n]);
				});
			}
			if (a || s) {
				return false;
			}
			var r = Object.keys(e);
			var l = Object.keys(t);
			return r.length === l.length && r.every(function (n) {
				return m(e[n], t[n]);
			});
		} catch (e) {
			return false;
		}
	}
	function g(e) {
		e.prototype.$t = function (e) {
			var t = [];
			for (var n = arguments.length - 1; n-- > 0;) {
				t[n] = arguments[n + 1];
			}
			var i = this.$i18n;
			return i._t.apply(i, [e, i.locale, i._getMessages(), this].concat(t));
		};
		e.prototype.$tc = function (e, t) {
			var n = [];
			for (var i = arguments.length - 2; i-- > 0;) {
				n[i] = arguments[i + 2];
			}
			var o = this.$i18n;
			return o._tc.apply(o, [e, o.locale, o._getMessages(), this, t].concat(n));
		};
		e.prototype.$te = function (e, t) {
			var n = this.$i18n;
			return n._te(e, n.locale, n._getMessages(), t);
		};
		e.prototype.$d = function (e) {
			var t = [];
			for (var n = arguments.length - 1; n-- > 0;) {
				t[n] = arguments[n + 1];
			}
			return (i = this.$i18n).d.apply(i, [e].concat(t));
			var i;
		};
		e.prototype.$n = function (e) {
			var t = [];
			for (var n = arguments.length - 1; n-- > 0;) {
				t[n] = arguments[n + 1];
			}
			return (i = this.$i18n).n.apply(i, [e].concat(t));
			var i;
		};
	}
	function v(e, t, n) {
		if (y(e, n)) {
			_(e, t, n);
		}
	}
	function b(e, t, n, i) {
		if (y(e, n)) {
			if (!w(e, n) || !m(t.value, t.oldValue)) {
				_(e, t, n);
			}
		}
	}
	function y(e, t) {
		var n = t.context;
		if (n) {
			return !!n.$i18n || (i("not exist VueI18n instance in Vue instance"), false);
		} else {
			i("not exist Vue instance in VNode context");
			return false;
		}
	}
	function w(e, t) {
		var n = t.context;
		return e._locale === n.$i18n.locale;
	}
	function _(e, t, n) {
		var o = k(t.value);
		var a = o.path;
		var s = o.locale;
		var r = o.args;
		if (a || s || r) {
			if (a) {
				var l = n.context;
				e._vt = e.textContent = (c = l.$i18n).t.apply(c, [a].concat(x(s, r)));
				e._locale = l.$i18n.locale;
				var c;
			} else {
				i("required `path` in v-t directive");
			}
		} else {
			i("not support value type");
		}
	}
	function k(e) {
		var t;
		var n;
		var i;
		if (typeof e == "string") {
			t = e;
		} else if (a(e)) {
			t = e.path;
			n = e.locale;
			i = e.args;
		}
		return {
			path: t,
			locale: n,
			args: i
		};
	}
	function x(e, t) {
		var n = [];
		if (e) {
			n.push(e);
		}
		if (t && (Array.isArray(t) || a(t))) {
			n.push(t);
		}
		return n;
	}
	function C(e) {
		if ((D = e).version) {
			Number(D.version.split(".")[0]);
		}
		C.installed = true;
		Object.defineProperty(D.prototype, "$i18n", {
			get: function () {
				return this._i18n;
			}
		});
		g(D);
		D.mixin(L);
		D.directive("t", {
			bind: v,
			update: b
		});
		D.component(R.name, R);
		var t = D.config.optionMergeStrategies;
		t.i18n = t.methods;
	}
	function S(e) {
		var t = [];
		for (var n = 0, i = ""; n < e.length;) {
			var o = e[n++];
			if (o === "{") {
				if (i) {
					t.push({
						type: "text",
						value: i
					});
				}
				i = "";
				var a = "";
				for (o = e[n++]; o !== "}";) {
					a += o;
					o = e[n++];
				}
				var s = B.test(a) ? "list" : q.test(a) ? "named" : "unknown";
				t.push({
					value: a,
					type: s
				});
			} else if (o === "%") {
				if (e[n] !== "{") {
					i += o;
				}
			} else {
				i += o;
			}
		}
		if (i) {
			t.push({
				type: "text",
				value: i
			});
		}
		return t;
	}
	function A(e, t) {
		var n = [];
		var i = 0;
		var a = Array.isArray(t) ? "list" : o(t) ? "named" : "unknown";
		if (a === "unknown") {
			return n;
		}
		while (i < e.length) {
			var s = e[i];
			switch (s.type) {
				case "text":
					n.push(s.value);
					break;
				case "list":
					n.push(t[parseInt(s.value, 10)]);
					break;
				case "named":
					if (a === "named") {
						n.push(t[s.value]);
					}
			}
			i++;
		}
		return n;
	}
	function T(e) {
		return te.test(e);
	}
	function P(e) {
		var t = e.charCodeAt(0);
		if (t !== e.charCodeAt(e.length - 1) || t !== 34 && t !== 39) {
			return e;
		} else {
			return e.slice(1, -1);
		}
	}
	function j(e) {
		if (e === undefined || e === null) {
			return "eof";
		}
		var t = e.charCodeAt(0);
		switch (t) {
			case 91:
			case 93:
			case 46:
			case 34:
			case 39:
			case 48:
				return e;
			case 95:
			case 36:
			case 45:
				return "ident";
			case 32:
			case 9:
			case 10:
			case 13:
			case 160:
			case 65279:
			case 8232:
			case 8233:
				return "ws";
		}
		if (t >= 97 && t <= 122 || t >= 65 && t <= 90) {
			return "ident";
		} else if (t >= 49 && t <= 57) {
			return "number";
		} else {
			return "else";
		}
	}
	function E(e) {
		var t = e.trim();
		return (e.charAt(0) !== "0" || !isNaN(e)) && (T(t) ? P(t) : "*" + t);
	}
	function N(e) {
		var t;
		var n;
		var i;
		var o;
		var a;
		var s;
		var r;
		var l = [];
		var c = -1;
		var u = Y;
		var d = 0;
		var p = [];
		p[U] = function () {
			if (n !== undefined) {
				l.push(n);
				n = undefined;
			}
		};
		p[V] = function () {
			if (n === undefined) {
				n = i;
			} else {
				n += i;
			}
		};
		p[W] = function () {
			p[V]();
			d++;
		};
		p[G] = function () {
			if (d > 0) {
				d--;
				u = K;
				p[V]();
			} else {
				d = 0;
				if ((n = E(n)) === false) {
					return false;
				}
				p[U]();
			}
		};
		while (u !== null) {
			c++;
			if ((t = e[c]) !== "\\" || !function () {
				var t = e[c + 1];
				if (u === J && t === "'" || u === X && t === "\"") {
					c++;
					i = "\\" + t;
					p[V]();
					return true;
				}
			}()) {
				o = j(t);
				r = ee[u];
				if ((a = r[o] || r.else || Q) === Q) {
					return;
				}
				u = a[0];
				if ((s = p[a[1]]) && (i = a[2], i = i === undefined ? t : i, s() === false)) {
					return;
				}
				if (u === Z) {
					return l;
				}
			}
		}
	}
	function O(e) {
		return !!Array.isArray(e) && e.length === 0;
	}
	Object.defineProperty(t, "__esModule", {
		value: true
	});
	var D;
	var I = Object.prototype.toString;
	var $ = "[object Object]";
	var M = Object.prototype.hasOwnProperty;
	var z = typeof Intl != "undefined" && Intl.DateTimeFormat !== undefined;
	var F = typeof Intl != "undefined" && Intl.NumberFormat !== undefined;
	var L = {
		beforeCreate: function () {
			var e = this.$options;
			e.i18n = e.i18n || (e.__i18n ? {} : null);
			if (e.i18n) {
				if (e.i18n instanceof ie) {
					if (e.__i18n) {
						try {
							var t = {};
							e.__i18n.forEach(function (e) {
								t = h(t, JSON.parse(e));
							});
							Object.keys(t).forEach(function (n) {
								e.i18n.mergeLocaleMessage(n, t[n]);
							});
						} catch (e) {}
					}
					this._i18n = e.i18n;
					this._i18nWatcher = this._i18n.watchI18nData();
					this._i18n.subscribeDataChanging(this);
					this._subscribing = true;
				} else if (a(e.i18n)) {
					if (this.$root && this.$root.$i18n && this.$root.$i18n instanceof ie) {
						e.i18n.root = this.$root.$i18n;
						e.i18n.fallbackLocale = this.$root.$i18n.fallbackLocale;
						e.i18n.silentTranslationWarn = this.$root.$i18n.silentTranslationWarn;
					}
					if (e.__i18n) {
						try {
							var n = {};
							e.__i18n.forEach(function (e) {
								n = h(n, JSON.parse(e));
							});
							e.i18n.messages = n;
						} catch (e) {}
					}
					this._i18n = new ie(e.i18n);
					this._i18nWatcher = this._i18n.watchI18nData();
					this._i18n.subscribeDataChanging(this);
					this._subscribing = true;
					if (e.i18n.sync === undefined || e.i18n.sync) {
						this._localeWatcher = this.$i18n.watchLocale();
					}
				}
			} else if (this.$root && this.$root.$i18n && this.$root.$i18n instanceof ie) {
				this._i18n = this.$root.$i18n;
				this._i18n.subscribeDataChanging(this);
				this._subscribing = true;
			} else if (e.parent && e.parent.$i18n && e.parent.$i18n instanceof ie) {
				this._i18n = e.parent.$i18n;
				this._i18n.subscribeDataChanging(this);
				this._subscribing = true;
			}
		},
		beforeDestroy: function () {
			if (this._i18n) {
				if (this._subscribing) {
					this._i18n.unsubscribeDataChanging(this);
					delete this._subscribing;
				}
				if (this._i18nWatcher) {
					this._i18nWatcher();
					delete this._i18nWatcher;
				}
				if (this._localeWatcher) {
					this._localeWatcher();
					delete this._localeWatcher;
				}
				this._i18n = null;
			}
		}
	};
	var R = {
		name: "i18n",
		functional: true,
		props: {
			tag: {
				type: String,
				default: "span"
			},
			path: {
				type: String,
				required: true
			},
			locale: {
				type: String
			},
			places: {
				type: [Array, Object]
			}
		},
		render: function (e, t) {
			var n = t.props;
			var o = t.data;
			var a = t.children;
			var s = t.parent.$i18n;
			a = (a || []).filter(function (e) {
				return e.tag || (e.text = e.text.trim());
			});
			if (!s) {
				return a;
			}
			var r = n.path;
			var l = n.locale;
			var c = {};
			var u = n.places || {};
			var d = Array.isArray(u) ? u.length > 0 : Object.keys(u).length > 0;
			var p = a.every(function (e) {
				if (e.data && e.data.attrs) {
					var t = e.data.attrs.place;
					return t !== undefined && t !== "";
				}
			});
			if (d && a.length > 0 && !p) {
				i("If places prop is set, all child elements must have place prop set.");
			}
			if (Array.isArray(u)) {
				u.forEach(function (e, t) {
					c[t] = e;
				});
			} else {
				Object.keys(u).forEach(function (e) {
					c[e] = u[e];
				});
			}
			a.forEach(function (e, t) {
				var n = p ? "" + e.data.attrs.place : "" + t;
				c[n] = e;
			});
			return e(n.tag, o, s.i(r, l, c));
		}
	};
	function H() {
		this._caches = Object.create(null);
	}
	H.prototype.interpolate = function (e, t) {
		var n = this._caches[e];
		if (!n) {
			n = S(e);
			this._caches[e] = n;
		}
		return A(n, t);
	};
	var B = /^(\d)+/;
	var q = /^(\w)+/;
	var V = 0;
	var U = 1;
	var W = 2;
	var G = 3;
	var Y = 0;
	var K = 4;
	var J = 5;
	var X = 6;
	var Z = 7;
	var Q = 8;
	var ee = [];
	ee[Y] = {
		ws: [Y],
		ident: [3, V],
		"[": [K],
		eof: [Z]
	};
	ee[1] = {
		ws: [1],
		".": [2],
		"[": [K],
		eof: [Z]
	};
	ee[2] = {
		ws: [2],
		ident: [3, V],
		0: [3, V],
		number: [3, V]
	};
	ee[3] = {
		ident: [3, V],
		0: [3, V],
		number: [3, V],
		ws: [1, U],
		".": [2, U],
		"[": [K, U],
		eof: [Z, U]
	};
	ee[K] = {
		"'": [J, V],
		"\"": [X, V],
		"[": [K, W],
		"]": [1, G],
		eof: Q,
		else: [K, V]
	};
	ee[J] = {
		"'": [K, V],
		eof: Q,
		else: [J, V]
	};
	ee[X] = {
		"\"": [K, V],
		eof: Q,
		else: [X, V]
	};
	var te = /^\s?(true|false|-?[\d.]+|'[^']*'|"[^"]*")\s?$/;
	function ne() {
		this._cache = Object.create(null);
	}
	ne.prototype.parsePath = function (e) {
		var t = this._cache[e];
		if (!t) {
			if (t = N(e)) {
				this._cache[e] = t;
			}
		}
		return t || [];
	};
	ne.prototype.getPathValue = function (e, t) {
		if (!o(e)) {
			return null;
		}
		var n = this.parsePath(t);
		if (O(n)) {
			return null;
		}
		for (var i = n.length, a = e, s = 0; s < i;) {
			var r = a[n[s]];
			if (r === undefined) {
				a = null;
				break;
			}
			a = r;
			s++;
		}
		return a;
	};
	function ie(e) {
		var t = this;
		if (e === undefined) {
			e = {};
		}
		var n = e.locale || "en-US";
		var i = e.fallbackLocale || "en-US";
		var o = e.messages || {};
		var a = e.dateTimeFormats || {};
		var r = e.numberFormats || {};
		this._vm = null;
		this._formatter = e.formatter || new H();
		this._missing = e.missing || null;
		this._root = e.root || null;
		this._sync = e.sync === undefined || !!e.sync;
		this._fallbackRoot = e.fallbackRoot === undefined || !!e.fallbackRoot;
		this._silentTranslationWarn = e.silentTranslationWarn !== undefined && !!e.silentTranslationWarn;
		this._dateTimeFormatters = {};
		this._numberFormatters = {};
		this._path = new ne();
		this._dataListeners = [];
		this._exist = function (e, n) {
			return !!e && !!n && !s(t._path.getPathValue(e, n));
		};
		this._initVM({
			locale: n,
			fallbackLocale: i,
			messages: o,
			dateTimeFormats: a,
			numberFormats: r
		});
	}
	var oe = {
		vm: {},
		messages: {},
		dateTimeFormats: {},
		numberFormats: {},
		locale: {},
		fallbackLocale: {},
		missing: {},
		formatter: {},
		silentTranslationWarn: {}
	};
	ie.prototype._initVM = function (e) {
		var t = D.config.silent;
		D.config.silent = true;
		this._vm = new D({
			data: e
		});
		D.config.silent = t;
	};
	ie.prototype.subscribeDataChanging = function (e) {
		this._dataListeners.push(e);
	};
	ie.prototype.unsubscribeDataChanging = function (e) {
		p(this._dataListeners, e);
	};
	ie.prototype.watchI18nData = function () {
		var e = this;
		return this._vm.$watch("$data", function () {
			for (var t = e._dataListeners.length; t--;) {
				D.nextTick(function () {
					if (e._dataListeners[t]) {
						e._dataListeners[t].$forceUpdate();
					}
				});
			}
		}, {
			deep: true
		});
	};
	ie.prototype.watchLocale = function () {
		if (!this._sync || !this._root) {
			return null;
		}
		var e = this._vm;
		return this._root.vm.$watch("locale", function (t) {
			e.$set(e, "locale", t);
			e.$forceUpdate();
		}, {
			immediate: true
		});
	};
	oe.vm.get = function () {
		return this._vm;
	};
	oe.messages.get = function () {
		return d(this._getMessages());
	};
	oe.dateTimeFormats.get = function () {
		return d(this._getDateTimeFormats());
	};
	oe.numberFormats.get = function () {
		return d(this._getNumberFormats());
	};
	oe.locale.get = function () {
		return this._vm.locale;
	};
	oe.locale.set = function (e) {
		this._vm.$set(this._vm, "locale", e);
	};
	oe.fallbackLocale.get = function () {
		return this._vm.fallbackLocale;
	};
	oe.fallbackLocale.set = function (e) {
		this._vm.$set(this._vm, "fallbackLocale", e);
	};
	oe.missing.get = function () {
		return this._missing;
	};
	oe.missing.set = function (e) {
		this._missing = e;
	};
	oe.formatter.get = function () {
		return this._formatter;
	};
	oe.formatter.set = function (e) {
		this._formatter = e;
	};
	oe.silentTranslationWarn.get = function () {
		return this._silentTranslationWarn;
	};
	oe.silentTranslationWarn.set = function (e) {
		this._silentTranslationWarn = e;
	};
	ie.prototype._getMessages = function () {
		return this._vm.messages;
	};
	ie.prototype._getDateTimeFormats = function () {
		return this._vm.dateTimeFormats;
	};
	ie.prototype._getNumberFormats = function () {
		return this._vm.numberFormats;
	};
	ie.prototype._warnDefault = function (e, t, n, i) {
		if (s(n)) {
			if (this.missing) {
				this.missing.apply(null, [e, t, i]);
			}
			return t;
		} else {
			return n;
		}
	};
	ie.prototype._isFallbackRoot = function (e) {
		return !e && !s(this._root) && this._fallbackRoot;
	};
	ie.prototype._interpolate = function (e, t, n, i, o, r) {
		if (!t) {
			return null;
		}
		var l = this._path.getPathValue(t, n);
		if (Array.isArray(l)) {
			return l;
		}
		var c;
		if (s(l)) {
			if (!a(t)) {
				return null;
			}
			if (typeof (c = t[n]) != "string") {
				return null;
			}
		} else {
			if (typeof l != "string") {
				return null;
			}
			c = l;
		}
		if (c.indexOf("@:") >= 0) {
			c = this._link(e, t, c, i, o, r);
		}
		if (r) {
			return this._render(c, o, r);
		} else {
			return c;
		}
	};
	ie.prototype._link = function (e, t, n, i, o, a) {
		var s = this;
		var r = n;
		var l = r.match(/(@:[\w\-_|.]+)/g);
		for (var c in l) {
			if (l.hasOwnProperty(c)) {
				var u = l[c];
				var d = u.substr(2);
				var p = s._interpolate(e, t, d, i, o === "raw" ? "string" : o, o === "raw" ? undefined : a);
				if (s._isFallbackRoot(p)) {
					if (!s._root) {
						throw Error("unexpected error");
					}
					var f = s._root;
					p = f._translate(f._getMessages(), f.locale, f.fallbackLocale, d, i, o, a);
				}
				r = (p = s._warnDefault(e, d, p, i)) ? r.replace(u, p) : r;
			}
		}
		return r;
	};
	ie.prototype._render = function (e, t, n) {
		var i = this._formatter.interpolate(e, n);
		if (t === "string") {
			return i.join("");
		} else {
			return i;
		}
	};
	ie.prototype._translate = function (e, t, n, i, o, a, r) {
		var l = this._interpolate(t, e[t], i, o, a, r);
		if (s(l)) {
			l = this._interpolate(n, e[n], i, o, a, r);
			if (s(l)) {
				return null;
			} else {
				return l;
			}
		} else {
			return l;
		}
	};
	ie.prototype._t = function (e, t, n, i) {
		var o = [];
		for (var a = arguments.length - 4; a-- > 0;) {
			o[a] = arguments[a + 4];
		}
		if (!e) {
			return "";
		}
		var s = r.apply(undefined, o);
		var l = s.locale || t;
		var c = this._translate(n, l, this.fallbackLocale, e, i, "string", s.params);
		if (this._isFallbackRoot(c)) {
			if (!this._root) {
				throw Error("unexpected error");
			}
			return (u = this._root).t.apply(u, [e].concat(o));
		}
		return this._warnDefault(l, e, c, i);
		var u;
	};
	ie.prototype.t = function (e) {
		var t = [];
		for (var n = arguments.length - 1; n-- > 0;) {
			t[n] = arguments[n + 1];
		}
		return (i = this)._t.apply(i, [e, this.locale, this._getMessages(), null].concat(t));
		var i;
	};
	ie.prototype._i = function (e, t, n, i, o) {
		var a = this._translate(n, t, this.fallbackLocale, e, i, "raw", o);
		if (this._isFallbackRoot(a)) {
			if (!this._root) {
				throw Error("unexpected error");
			}
			return this._root.i(e, t, o);
		}
		return this._warnDefault(t, e, a, i);
	};
	ie.prototype.i = function (e, t, n) {
		if (e) {
			if (typeof t != "string") {
				t = this.locale;
			}
			return this._i(e, t, this._getMessages(), null, n);
		} else {
			return "";
		}
	};
	ie.prototype._tc = function (e, t, n, i, o) {
		var a = [];
		for (var s = arguments.length - 5; s-- > 0;) {
			a[s] = arguments[s + 5];
		}
		if (e) {
			if (o === undefined) {
				o = 1;
			}
			return u((r = this)._t.apply(r, [e, t, n, i].concat(a)), o);
		} else {
			return "";
		}
		var r;
	};
	ie.prototype.tc = function (e, t) {
		var n = [];
		for (var i = arguments.length - 2; i-- > 0;) {
			n[i] = arguments[i + 2];
		}
		return (o = this)._tc.apply(o, [e, this.locale, this._getMessages(), null, t].concat(n));
		var o;
	};
	ie.prototype._te = function (e, t, n) {
		var i = [];
		for (var o = arguments.length - 3; o-- > 0;) {
			i[o] = arguments[o + 3];
		}
		var a = r.apply(undefined, i).locale || t;
		return this._exist(n[a], e);
	};
	ie.prototype.te = function (e, t) {
		return this._te(e, this.locale, this._getMessages(), t);
	};
	ie.prototype.getLocaleMessage = function (e) {
		return d(this._vm.messages[e] || {});
	};
	ie.prototype.setLocaleMessage = function (e, t) {
		this._vm.messages[e] = t;
	};
	ie.prototype.mergeLocaleMessage = function (e, t) {
		this._vm.messages[e] = D.util.extend(this._vm.messages[e] || {}, t);
	};
	ie.prototype.getDateTimeFormat = function (e) {
		return d(this._vm.dateTimeFormats[e] || {});
	};
	ie.prototype.setDateTimeFormat = function (e, t) {
		this._vm.dateTimeFormats[e] = t;
	};
	ie.prototype.mergeDateTimeFormat = function (e, t) {
		this._vm.dateTimeFormats[e] = D.util.extend(this._vm.dateTimeFormats[e] || {}, t);
	};
	ie.prototype._localizeDateTime = function (e, t, n, i, o) {
		var a = t;
		var r = i[a];
		if (s(r) || s(r[o])) {
			a = n;
			r = i[a];
		}
		if (s(r) || s(r[o])) {
			return null;
		}
		var l = r[o];
		var c = a + "__" + o;
		var u = this._dateTimeFormatters[c];
		u ||= this._dateTimeFormatters[c] = new Intl.DateTimeFormat(a, l);
		return u.format(e);
	};
	ie.prototype._d = function (e, t, n) {
		if (!n) {
			return new Intl.DateTimeFormat(t).format(e);
		}
		var i = this._localizeDateTime(e, t, this.fallbackLocale, this._getDateTimeFormats(), n);
		if (this._isFallbackRoot(i)) {
			if (!this._root) {
				throw Error("unexpected error");
			}
			return this._root.d(e, n, t);
		}
		return i || "";
	};
	ie.prototype.d = function (e) {
		var t = [];
		for (var n = arguments.length - 1; n-- > 0;) {
			t[n] = arguments[n + 1];
		}
		var i = this.locale;
		var a = null;
		if (t.length === 1) {
			if (typeof t[0] == "string") {
				a = t[0];
			} else if (o(t[0])) {
				if (t[0].locale) {
					i = t[0].locale;
				}
				if (t[0].key) {
					a = t[0].key;
				}
			}
		} else if (t.length === 2) {
			if (typeof t[0] == "string") {
				a = t[0];
			}
			if (typeof t[1] == "string") {
				i = t[1];
			}
		}
		return this._d(e, i, a);
	};
	ie.prototype.getNumberFormat = function (e) {
		return d(this._vm.numberFormats[e] || {});
	};
	ie.prototype.setNumberFormat = function (e, t) {
		this._vm.numberFormats[e] = t;
	};
	ie.prototype.mergeNumberFormat = function (e, t) {
		this._vm.numberFormats[e] = D.util.extend(this._vm.numberFormats[e] || {}, t);
	};
	ie.prototype._localizeNumber = function (e, t, n, i, o) {
		var a = t;
		var r = i[a];
		if (s(r) || s(r[o])) {
			a = n;
			r = i[a];
		}
		if (s(r) || s(r[o])) {
			return null;
		}
		var l = r[o];
		var c = a + "__" + o;
		var u = this._numberFormatters[c];
		u ||= this._numberFormatters[c] = new Intl.NumberFormat(a, l);
		return u.format(e);
	};
	ie.prototype._n = function (e, t, n) {
		if (!n) {
			return new Intl.NumberFormat(t).format(e);
		}
		var i = this._localizeNumber(e, t, this.fallbackLocale, this._getNumberFormats(), n);
		if (this._isFallbackRoot(i)) {
			if (!this._root) {
				throw Error("unexpected error");
			}
			return this._root.n(e, n, t);
		}
		return i || "";
	};
	ie.prototype.n = function (e) {
		var t = [];
		for (var n = arguments.length - 1; n-- > 0;) {
			t[n] = arguments[n + 1];
		}
		var i = this.locale;
		var a = null;
		if (t.length === 1) {
			if (typeof t[0] == "string") {
				a = t[0];
			} else if (o(t[0])) {
				if (t[0].locale) {
					i = t[0].locale;
				}
				if (t[0].key) {
					a = t[0].key;
				}
			}
		} else if (t.length === 2) {
			if (typeof t[0] == "string") {
				a = t[0];
			}
			if (typeof t[1] == "string") {
				i = t[1];
			}
		}
		return this._n(e, i, a);
	};
	Object.defineProperties(ie.prototype, oe);
	ie.availabilities = {
		dateTimeFormat: z,
		numberFormat: F
	};
	ie.install = C;
	ie.version = "7.3.1";
	if (typeof window != "undefined" && window.Vue) {
		window.Vue.use(ie);
	}
	t.default = ie;
}, function (e, t, n) {
	"use strict";

	function i(e, t) {}
	function o(e) {
		return Object.prototype.toString.call(e).indexOf("Error") > -1;
	}
	function a(e, t) {
		switch (typeof t) {
			case "undefined":
				return;
			case "object":
				return t;
			case "function":
				return t(e);
			case "boolean":
				if (t) {
					return e.params;
				} else {
					return undefined;
				}
		}
	}
	function s(e, t = {}, n) {
		var i;
		var o = n || r;
		try {
			i = o(e || "");
		} catch (e) {
			i = {};
		}
		for (var a in t) {
			var s = t[a];
			i[a] = Array.isArray(s) ? s.slice() : s;
		}
		return i;
	}
	function r(e) {
		var t = {};
		if (e = e.trim().replace(/^(\?|#|&)/, "")) {
			e.split("&").forEach(function (e) {
				var n = e.replace(/\+/g, " ").split("=");
				var i = Ie(n.shift());
				var o = n.length > 0 ? Ie(n.join("=")) : null;
				if (t[i] === undefined) {
					t[i] = o;
				} else if (Array.isArray(t[i])) {
					t[i].push(o);
				} else {
					t[i] = [t[i], o];
				}
			});
			return t;
		} else {
			return t;
		}
	}
	function l(e) {
		var t = e ? Object.keys(e).map(function (t) {
			var n = e[t];
			if (n === undefined) {
				return "";
			}
			if (n === null) {
				return De(t);
			}
			if (Array.isArray(n)) {
				var i = [];
				n.forEach(function (e) {
					if (e !== undefined) {
						if (e === null) {
							i.push(De(t));
						} else {
							i.push(De(t) + "=" + De(e));
						}
					}
				});
				return i.join("&");
			}
			return De(t) + "=" + De(n);
		}).filter(function (e) {
			return e.length > 0;
		}).join("&") : null;
		if (t) {
			return "?" + t;
		} else {
			return "";
		}
	}
	function c(e, t, n, i) {
		var o = i && i.options.stringifyQuery;
		var a = {
			name: t.name || e && e.name,
			meta: e && e.meta || {},
			path: t.path || "/",
			hash: t.hash || "",
			query: t.query || {},
			params: t.params || {},
			fullPath: d(t, o),
			matched: e ? u(e) : []
		};
		if (n) {
			a.redirectedFrom = d(n, o);
		}
		return Object.freeze(a);
	}
	function u(e) {
		var t = [];
		for (; e;) {
			t.unshift(e);
			e = e.parent;
		}
		return t;
	}
	function d(e, t) {
		var n = e.path;
		var i = e.query;
		if (i === undefined) {
			i = {};
		}
		var o = e.hash;
		if (o === undefined) {
			o = "";
		}
		var a = t || l;
		return (n || "/") + a(i) + o;
	}
	function p(e, t) {
		if (t === Me) {
			return e === t;
		} else {
			return !!t && (e.path && t.path ? e.path.replace($e, "") === t.path.replace($e, "") && e.hash === t.hash && f(e.query, t.query) : !!e.name && !!t.name && e.name === t.name && e.hash === t.hash && f(e.query, t.query) && f(e.params, t.params));
		}
	}
	function f(e = {}, t = {}) {
		var n = Object.keys(e);
		var i = Object.keys(t);
		return n.length === i.length && n.every(function (n) {
			var i = e[n];
			var o = t[n];
			if (typeof i == "object" && typeof o == "object") {
				return f(i, o);
			} else {
				return String(i) === String(o);
			}
		});
	}
	function h(e, t) {
		return e.path.replace($e, "/").indexOf(t.path.replace($e, "/")) === 0 && (!t.hash || e.hash === t.hash) && m(e.query, t.query);
	}
	function m(e, t) {
		for (var n in t) {
			if (!(n in e)) {
				return false;
			}
		}
		return true;
	}
	function g(e) {
		if (!e.metaKey && !e.altKey && !e.ctrlKey && !e.shiftKey && !e.defaultPrevented && (e.button === undefined || e.button === 0)) {
			if (e.currentTarget && e.currentTarget.getAttribute && /\b_blank\b/i.test(e.currentTarget.getAttribute("target"))) {
				return;
			}
			if (e.preventDefault) {
				e.preventDefault();
			}
			return true;
		}
	}
	function v(e) {
		if (e) {
			var t;
			for (var n = 0; n < e.length; n++) {
				if ((t = e[n]).tag === "a") {
					return t;
				}
				if (t.children && (t = v(t.children))) {
					return t;
				}
			}
		}
	}
	function b(e) {
		if (!b.installed) {
			b.installed = true;
			Pe = e;
			function t(e) {
				return e !== undefined;
			}
			function n(e, n) {
				var i = e.$options._parentVnode;
				if (t(i) && t(i = i.data) && t(i = i.registerRouteInstance)) {
					i(e, n);
				}
			}
			e.mixin({
				beforeCreate: function () {
					if (t(this.$options.router)) {
						this._routerRoot = this;
						this._router = this.$options.router;
						this._router.init(this);
						e.util.defineReactive(this, "_route", this._router.history.current);
					} else {
						this._routerRoot = this.$parent && this.$parent._routerRoot || this;
					}
					n(this, this);
				},
				destroyed: function () {
					n(this);
				}
			});
			Object.defineProperty(e.prototype, "$router", {
				get: function () {
					return this._routerRoot._router;
				}
			});
			Object.defineProperty(e.prototype, "$route", {
				get: function () {
					return this._routerRoot._route;
				}
			});
			e.component("router-view", je);
			e.component("router-link", Le);
			var i = e.config.optionMergeStrategies;
			i.beforeRouteEnter = i.beforeRouteLeave = i.beforeRouteUpdate = i.created;
		}
	}
	function y(e, t, n) {
		var i = e.charAt(0);
		if (i === "/") {
			return e;
		}
		if (i === "?" || i === "#") {
			return t + e;
		}
		var o = t.split("/");
		if (!n || !o[o.length - 1]) {
			o.pop();
		}
		for (var a = e.replace(/^\//, "").split("/"), s = 0; s < a.length; s++) {
			var r = a[s];
			if (r === "..") {
				o.pop();
			} else if (r !== ".") {
				o.push(r);
			}
		}
		if (o[0] !== "") {
			o.unshift("");
		}
		return o.join("/");
	}
	function w(e) {
		var t = "";
		var n = "";
		var i = e.indexOf("#");
		if (i >= 0) {
			t = e.slice(i);
			e = e.slice(0, i);
		}
		var o = e.indexOf("?");
		if (o >= 0) {
			n = e.slice(o + 1);
			e = e.slice(0, o);
		}
		return {
			path: e,
			query: n,
			hash: t
		};
	}
	function _(e) {
		return e.replace(/\/\//g, "/");
	}
	function k(e, t) {
		for (var n, i = [], o = 0, a = 0, s = "", r = t && t.delimiter || "/"; (n = We.exec(e)) != null;) {
			var l = n[0];
			var c = n[1];
			var u = n.index;
			s += e.slice(a, u);
			a = u + l.length;
			if (c) {
				s += c[1];
			} else {
				var d = e[a];
				var p = n[2];
				var f = n[3];
				var h = n[4];
				var m = n[5];
				var g = n[6];
				var v = n[7];
				if (s) {
					i.push(s);
					s = "";
				}
				var b = p != null && d != null && d !== p;
				var y = g === "+" || g === "*";
				var w = g === "?" || g === "*";
				var _ = n[2] || r;
				var k = h || m;
				i.push({
					name: f || o++,
					prefix: p || "",
					delimiter: _,
					optional: w,
					repeat: y,
					partial: b,
					asterisk: !!v,
					pattern: k ? T(k) : v ? ".*" : "[^" + A(_) + "]+?"
				});
			}
		}
		if (a < e.length) {
			s += e.substr(a);
		}
		if (s) {
			i.push(s);
		}
		return i;
	}
	function x(e) {
		return encodeURI(e).replace(/[\/?#]/g, function (e) {
			return "%" + e.charCodeAt(0).toString(16).toUpperCase();
		});
	}
	function C(e) {
		return encodeURI(e).replace(/[?#]/g, function (e) {
			return "%" + e.charCodeAt(0).toString(16).toUpperCase();
		});
	}
	function S(e) {
		var t = new Array(e.length);
		for (var n = 0; n < e.length; n++) {
			if (typeof e[n] == "object") {
				t[n] = new RegExp("^(?:" + e[n].pattern + ")$");
			}
		}
		return function (n, i) {
			var o = "";
			var a = n || {};
			var s = (i || {}).pretty ? x : encodeURIComponent;
			for (var r = 0; r < e.length; r++) {
				var l = e[r];
				if (typeof l != "string") {
					var c;
					var u = a[l.name];
					if (u == null) {
						if (l.optional) {
							if (l.partial) {
								o += l.prefix;
							}
							continue;
						}
						throw new TypeError("Expected \"" + l.name + "\" to be defined");
					}
					if (He(u)) {
						if (!l.repeat) {
							throw new TypeError("Expected \"" + l.name + "\" to not repeat, but received `" + JSON.stringify(u) + "`");
						}
						if (u.length === 0) {
							if (l.optional) {
								continue;
							}
							throw new TypeError("Expected \"" + l.name + "\" to not be empty");
						}
						for (var d = 0; d < u.length; d++) {
							c = s(u[d]);
							if (!t[r].test(c)) {
								throw new TypeError("Expected all \"" + l.name + "\" to match \"" + l.pattern + "\", but received `" + JSON.stringify(c) + "`");
							}
							o += (d === 0 ? l.prefix : l.delimiter) + c;
						}
					} else {
						c = l.asterisk ? C(u) : s(u);
						if (!t[r].test(c)) {
							throw new TypeError("Expected \"" + l.name + "\" to match \"" + l.pattern + "\", but received \"" + c + "\"");
						}
						o += l.prefix + c;
					}
				} else {
					o += l;
				}
			}
			return o;
		};
	}
	function A(e) {
		return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g, "\\$1");
	}
	function T(e) {
		return e.replace(/([=!:$\/()])/g, "\\$1");
	}
	function P(e, t) {
		e.keys = t;
		return e;
	}
	function j(e) {
		if (e.sensitive) {
			return "";
		} else {
			return "i";
		}
	}
	function E(e, t) {
		var n = e.source.match(/\((?!\?)/g);
		if (n) {
			for (var i = 0; i < n.length; i++) {
				t.push({
					name: i,
					prefix: null,
					delimiter: null,
					optional: false,
					repeat: false,
					partial: false,
					asterisk: false,
					pattern: null
				});
			}
		}
		return P(e, t);
	}
	function N(e, t, n) {
		var i = [];
		for (var o = 0; o < e.length; o++) {
			i.push(I(e[o], t, n).source);
		}
		return P(new RegExp("(?:" + i.join("|") + ")", j(n)), t);
	}
	function O(e, t, n) {
		return D(k(e, n), t, n);
	}
	function D(e, t, n) {
		if (!He(t)) {
			n = t || n;
			t = [];
		}
		var i = (n = n || {}).strict;
		var o = n.end !== false;
		var a = "";
		for (var s = 0; s < e.length; s++) {
			var r = e[s];
			if (typeof r == "string") {
				a += A(r);
			} else {
				var l = A(r.prefix);
				var c = "(?:" + r.pattern + ")";
				t.push(r);
				if (r.repeat) {
					c += "(?:" + l + c + ")*";
				}
				a += c = r.optional ? r.partial ? l + "(" + c + ")?" : "(?:" + l + "(" + c + "))?" : l + "(" + c + ")";
			}
		}
		var u = A(n.delimiter || "/");
		var d = a.slice(-u.length) === u;
		if (!i) {
			a = (d ? a.slice(0, -u.length) : a) + "(?:" + u + "(?=$))?";
		}
		a += o ? "$" : i && d ? "" : "(?=" + u + "|$)";
		return P(new RegExp("^" + a, j(n)), t);
	}
	function I(e, t, n) {
		if (!He(t)) {
			n = t || n;
			t = [];
		}
		n = n || {};
		if (e instanceof RegExp) {
			return E(e, t);
		} else if (He(e)) {
			return N(e, t, n);
		} else {
			return O(e, t, n);
		}
	}
	function $(e, t, n) {
		try {
			return (Ge[e] ||= Be.compile(e))(t || {}, {
				pretty: true
			});
		} catch (e) {
			return "";
		}
	}
	function M(e, t, n, i) {
		var o = t || [];
		var a = n || Object.create(null);
		var s = i || Object.create(null);
		e.forEach(function (e) {
			z(o, a, s, e);
		});
		for (var r = 0, l = o.length; r < l; r++) {
			if (o[r] === "*") {
				o.push(o.splice(r, 1)[0]);
				l--;
				r--;
			}
		}
		return {
			pathList: o,
			pathMap: a,
			nameMap: s
		};
	}
	function z(e, t, n, i, o, a) {
		var s = i.path;
		var r = i.name;
		var l = L(s, o);
		var c = i.pathToRegexpOptions || {};
		if (typeof i.caseSensitive == "boolean") {
			c.sensitive = i.caseSensitive;
		}
		var u = {
			path: l,
			regex: F(l, c),
			components: i.components || {
				default: i.component
			},
			instances: {},
			name: r,
			parent: o,
			matchAs: a,
			redirect: i.redirect,
			beforeEnter: i.beforeEnter,
			meta: i.meta || {},
			props: i.props == null ? {} : i.components ? i.props : {
				default: i.props
			}
		};
		if (i.children) {
			i.children.forEach(function (i) {
				var o = a ? _(a + "/" + i.path) : undefined;
				z(e, t, n, i, u, o);
			});
		}
		if (i.alias !== undefined) {
			(Array.isArray(i.alias) ? i.alias : [i.alias]).forEach(function (a) {
				var s = {
					path: a,
					children: i.children
				};
				z(e, t, n, s, o, u.path || "/");
			});
		}
		if (!t[u.path]) {
			e.push(u.path);
			t[u.path] = u;
		}
		if (r) {
			n[r] ||= u;
		}
	}
	function F(e, t) {
		return Be(e, [], t);
	}
	function L(e, t) {
		if ((e = e.replace(/\/$/, ""))[0] === "/") {
			return e;
		} else if (t == null) {
			return e;
		} else {
			return _(t.path + "/" + e);
		}
	}
	function R(e, t, n, i) {
		var o = typeof e == "string" ? {
			path: e
		} : e;
		if (o.name || o._normalized) {
			return o;
		}
		if (!o.path && o.params && t) {
			(o = H({}, o))._normalized = true;
			var a = H(H({}, t.params), o.params);
			if (t.name) {
				o.name = t.name;
				o.params = a;
			} else if (t.matched.length) {
				var r = t.matched[t.matched.length - 1].path;
				o.path = $(r, a, "path " + t.path);
			}
			return o;
		}
		var l = w(o.path || "");
		var c = t && t.path || "/";
		var u = l.path ? y(l.path, c, n || o.append) : c;
		var d = s(l.query, o.query, i && i.options.parseQuery);
		var p = o.hash || l.hash;
		if (p && p.charAt(0) !== "#") {
			p = "#" + p;
		}
		return {
			_normalized: true,
			path: u,
			query: d,
			hash: p
		};
	}
	function H(e, t) {
		for (var n in t) {
			e[n] = t[n];
		}
		return e;
	}
	function B(e, t) {
		function n(e, n, i) {
			var o = R(e, n, false, t);
			var s = o.name;
			if (s) {
				var c = u[s];
				if (!c) {
					return a(null, o);
				}
				var d = c.regex.keys.filter(function (e) {
					return !e.optional;
				}).map(function (e) {
					return e.name;
				});
				if (typeof o.params != "object") {
					o.params = {};
				}
				if (n && typeof n.params == "object") {
					for (var p in n.params) {
						if (!(p in o.params) && d.indexOf(p) > -1) {
							o.params[p] = n.params[p];
						}
					}
				}
				if (c) {
					o.path = $(c.path, o.params, "named route \"" + s + "\"");
					return a(c, o, i);
				}
			} else if (o.path) {
				o.params = {};
				for (var f = 0; f < r.length; f++) {
					var h = r[f];
					var m = l[h];
					if (q(m.regex, o.path, o.params)) {
						return a(m, o, i);
					}
				}
			}
			return a(null, o);
		}
		function i(e, i) {
			var o = e.redirect;
			var s = typeof o == "function" ? o(c(e, i, null, t)) : o;
			if (typeof s == "string") {
				s = {
					path: s
				};
			}
			if (!s || typeof s != "object") {
				return a(null, i);
			}
			var r = s;
			var l = r.name;
			var d = r.path;
			var p = i.query;
			var f = i.hash;
			var h = i.params;
			p = r.hasOwnProperty("query") ? r.query : p;
			f = r.hasOwnProperty("hash") ? r.hash : f;
			h = r.hasOwnProperty("params") ? r.params : h;
			if (l) {
				u[l];
				return n({
					_normalized: true,
					name: l,
					query: p,
					hash: f,
					params: h
				}, undefined, i);
			}
			if (d) {
				var m = V(d, e);
				return n({
					_normalized: true,
					path: $(m, h, "redirect route with path \"" + m + "\""),
					query: p,
					hash: f
				}, undefined, i);
			}
			return a(null, i);
		}
		function o(e, t, i) {
			var o = n({
				_normalized: true,
				path: $(i, t.params, "aliased route with path \"" + i + "\"")
			});
			if (o) {
				var s = o.matched;
				var r = s[s.length - 1];
				t.params = o.params;
				return a(r, t);
			}
			return a(null, t);
		}
		function a(e, n, a) {
			if (e && e.redirect) {
				return i(e, a || n);
			} else if (e && e.matchAs) {
				return o(e, n, e.matchAs);
			} else {
				return c(e, n, a, t);
			}
		}
		var s = M(e);
		var r = s.pathList;
		var l = s.pathMap;
		var u = s.nameMap;
		return {
			match: n,
			addRoutes: function (e) {
				M(e, r, l, u);
			}
		};
	}
	function q(e, t, n) {
		var i = t.match(e);
		if (!i) {
			return false;
		}
		if (!n) {
			return true;
		}
		for (var o = 1, a = i.length; o < a; ++o) {
			var s = e.keys[o - 1];
			var r = typeof i[o] == "string" ? decodeURIComponent(i[o]) : i[o];
			if (s) {
				n[s.name] = r;
			}
		}
		return true;
	}
	function V(e, t) {
		return y(e, t.parent ? t.parent.path : "/", true);
	}
	function U() {
		window.addEventListener("popstate", function (e) {
			G();
			if (e.state && e.state.key) {
				ne(e.state.key);
			}
		});
	}
	function W(e, t, n, i) {
		if (e.app) {
			var o = e.options.scrollBehavior;
			if (o) {
				e.app.$nextTick(function () {
					var e = Y();
					var a = o(t, n, i ? e : null);
					if (a) {
						var s = typeof a == "object";
						if (s && typeof a.selector == "string") {
							var r = document.querySelector(a.selector);
							if (r) {
								var l = a.offset && typeof a.offset == "object" ? a.offset : {};
								e = K(r, l = Z(l));
							} else if (J(a)) {
								e = X(a);
							}
						} else if (s && J(a)) {
							e = X(a);
						}
						if (e) {
							window.scrollTo(e.x, e.y);
						}
					}
				});
			}
		}
	}
	function G() {
		var e = te();
		if (e) {
			Ye[e] = {
				x: window.pageXOffset,
				y: window.pageYOffset
			};
		}
	}
	function Y() {
		var e = te();
		if (e) {
			return Ye[e];
		}
	}
	function K(e, t) {
		var n = document.documentElement.getBoundingClientRect();
		var i = e.getBoundingClientRect();
		return {
			x: i.left - n.left - t.x,
			y: i.top - n.top - t.y
		};
	}
	function J(e) {
		return Q(e.x) || Q(e.y);
	}
	function X(e) {
		return {
			x: Q(e.x) ? e.x : window.pageXOffset,
			y: Q(e.y) ? e.y : window.pageYOffset
		};
	}
	function Z(e) {
		return {
			x: Q(e.x) ? e.x : 0,
			y: Q(e.y) ? e.y : 0
		};
	}
	function Q(e) {
		return typeof e == "number";
	}
	function ee() {
		return Je.now().toFixed(3);
	}
	function te() {
		return Xe;
	}
	function ne(e) {
		Xe = e;
	}
	function ie(e, t) {
		G();
		var n = window.history;
		try {
			if (t) {
				n.replaceState({
					key: Xe
				}, "", e);
			} else {
				Xe = ee();
				n.pushState({
					key: Xe
				}, "", e);
			}
		} catch (n) {
			window.location[t ? "replace" : "assign"](e);
		}
	}
	function oe(e) {
		ie(e, true);
	}
	function ae(e, t, n) {
		function i(o) {
			if (o >= e.length) {
				n();
			} else if (e[o]) {
				t(e[o], function () {
					i(o + 1);
				});
			} else {
				i(o + 1);
			}
		}
		i(0);
	}
	function se(e) {
		return function (t, n, i) {
			var a = false;
			var s = 0;
			var r = null;
			re(e, function (e, t, n, l) {
				if (typeof e == "function" && e.cid === undefined) {
					a = true;
					s++;
					var c;
					var u = ce(function (t) {
						if (t.__esModule && t.default) {
							t = t.default;
						}
						e.resolved = typeof t == "function" ? t : Pe.extend(t);
						n.components[l] = t;
						if (--s <= 0) {
							i();
						}
					});
					var d = ce(function (e) {
						var t = "Failed to resolve async component " + l + ": " + e;
						if (!r) {
							r = o(e) ? e : new Error(t);
							i(r);
						}
					});
					try {
						c = e(u, d);
					} catch (e) {
						d(e);
					}
					if (c) {
						if (typeof c.then == "function") {
							c.then(u, d);
						} else {
							var p = c.component;
							if (p && typeof p.then == "function") {
								p.then(u, d);
							}
						}
					}
				}
			});
			if (!a) {
				i();
			}
		};
	}
	function re(e, t) {
		return le(e.map(function (e) {
			return Object.keys(e.components).map(function (n) {
				return t(e.components[n], e.instances[n], e, n);
			});
		}));
	}
	function le(e) {
		return Array.prototype.concat.apply([], e);
	}
	function ce(e) {
		var t = false;
		return function () {
			var n = [];
			for (var i = arguments.length; i--;) {
				n[i] = arguments[i];
			}
			if (!t) {
				t = true;
				return e.apply(this, n);
			}
		};
	}
	function ue(e) {
		if (!e) {
			if (Re) {
				var t = document.querySelector("base");
				e = (e = t && t.getAttribute("href") || "/").replace(/^https?:\/\/[^\/]+/, "");
			} else {
				e = "/";
			}
		}
		if (e.charAt(0) !== "/") {
			e = "/" + e;
		}
		return e.replace(/\/$/, "");
	}
	function de(e, t) {
		var n;
		var i = Math.max(e.length, t.length);
		for (n = 0; n < i && e[n] === t[n]; n++);
		return {
			updated: t.slice(0, n),
			activated: t.slice(n),
			deactivated: e.slice(n)
		};
	}
	function pe(e, t, n, i) {
		var o = re(e, function (e, i, o, a) {
			var s = fe(e, t);
			if (s) {
				if (Array.isArray(s)) {
					return s.map(function (e) {
						return n(e, i, o, a);
					});
				} else {
					return n(s, i, o, a);
				}
			}
		});
		return le(i ? o.reverse() : o);
	}
	function fe(e, t) {
		if (typeof e != "function") {
			e = Pe.extend(e);
		}
		return e.options[t];
	}
	function he(e) {
		return pe(e, "beforeRouteLeave", ge, true);
	}
	function me(e) {
		return pe(e, "beforeRouteUpdate", ge);
	}
	function ge(e, t) {
		if (t) {
			return function () {
				return e.apply(t, arguments);
			};
		}
	}
	function ve(e, t, n) {
		return pe(e, "beforeRouteEnter", function (e, i, o, a) {
			return be(e, o, a, t, n);
		});
	}
	function be(e, t, n, i, o) {
		return function (a, s, r) {
			return e(a, s, function (e) {
				r(e);
				if (typeof e == "function") {
					i.push(function () {
						ye(e, t.instances, n, o);
					});
				}
			});
		};
	}
	function ye(e, t, n, i) {
		if (t[n]) {
			e(t[n]);
		} else if (i()) {
			setTimeout(function () {
				ye(e, t, n, i);
			}, 16);
		}
	}
	function we(e) {
		var t = window.location.pathname;
		if (e && t.indexOf(e) === 0) {
			t = t.slice(e.length);
		}
		return (t || "/") + window.location.search + window.location.hash;
	}
	function _e(e) {
		var t = we(e);
		if (!/^\/#/.test(t)) {
			window.location.replace(_(e + "/#" + t));
			return true;
		}
	}
	function ke() {
		var e = xe();
		return e.charAt(0) === "/" || (Se("/" + e), false);
	}
	function xe() {
		var e = window.location.href;
		var t = e.indexOf("#");
		if (t === -1) {
			return "";
		} else {
			return e.slice(t + 1);
		}
	}
	function Ce(e) {
		window.location.hash = e;
	}
	function Se(e) {
		var t = window.location.href;
		var n = t.indexOf("#");
		var i = n >= 0 ? t.slice(0, n) : t;
		window.location.replace(i + "#" + e);
	}
	function Ae(e, t) {
		e.push(t);
		return function () {
			var n = e.indexOf(t);
			if (n > -1) {
				e.splice(n, 1);
			}
		};
	}
	function Te(e, t, n) {
		var i = n === "hash" ? "#" + t : t;
		if (e) {
			return _(e + "/" + i);
		} else {
			return i;
		}
	}
	Object.defineProperty(t, "__esModule", {
		value: true
	});
	var Pe;
	var je = {
		name: "router-view",
		functional: true,
		props: {
			name: {
				type: String,
				default: "default"
			}
		},
		render: function (e, t) {
			var n = t.props;
			var i = t.children;
			var o = t.parent;
			var s = t.data;
			s.routerView = true;
			var r = o.$createElement;
			var l = n.name;
			var c = o.$route;
			var u = o._routerViewCache ||= {};
			var d = 0;
			var p = false;
			for (; o && o._routerRoot !== o;) {
				if (o.$vnode && o.$vnode.data.routerView) {
					d++;
				}
				if (o._inactive) {
					p = true;
				}
				o = o.$parent;
			}
			s.routerViewDepth = d;
			if (p) {
				return r(u[l], s, i);
			}
			var f = c.matched[d];
			if (!f) {
				u[l] = null;
				return r();
			}
			var h = u[l] = f.components[l];
			s.registerRouteInstance = function (e, t) {
				var n = f.instances[l];
				if (t && n !== e || !t && n === e) {
					f.instances[l] = t;
				}
			};
			(s.hook ||= {}).prepatch = function (e, t) {
				f.instances[l] = t.componentInstance;
			};
			s.props = a(c, f.props && f.props[l]);
			return r(h, s, i);
		}
	};
	var Ee = /[!'()*]/g;
	function Ne(e) {
		return "%" + e.charCodeAt(0).toString(16);
	}
	var Oe = /%2C/g;
	function De(e) {
		return encodeURIComponent(e).replace(Ee, Ne).replace(Oe, ",");
	}
	var Ie = decodeURIComponent;
	var $e = /\/?$/;
	var Me = c(null, {
		path: "/"
	});
	var ze = [String, Object];
	var Fe = [String, Array];
	var Le = {
		name: "router-link",
		props: {
			to: {
				type: ze,
				required: true
			},
			tag: {
				type: String,
				default: "a"
			},
			exact: Boolean,
			append: Boolean,
			replace: Boolean,
			activeClass: String,
			exactActiveClass: String,
			event: {
				type: Fe,
				default: "click"
			}
		},
		render: function (e) {
			var t = this;
			var n = this.$router;
			var i = this.$route;
			var o = n.resolve(this.to, i, this.append);
			var a = o.location;
			var s = o.route;
			var r = o.href;
			var l = {};
			var u = n.options.linkActiveClass;
			var d = n.options.linkExactActiveClass;
			var f = u == null ? "router-link-active" : u;
			var m = d == null ? "router-link-exact-active" : d;
			var b = this.activeClass == null ? f : this.activeClass;
			var y = this.exactActiveClass == null ? m : this.exactActiveClass;
			var w = a.path ? c(null, a, null, n) : s;
			l[y] = p(i, w);
			l[b] = this.exact ? l[y] : h(i, w);
			function _(e) {
				if (g(e)) {
					if (t.replace) {
						n.replace(a);
					} else {
						n.push(a);
					}
				}
			}
			var k = {
				click: g
			};
			if (Array.isArray(this.event)) {
				this.event.forEach(function (e) {
					k[e] = _;
				});
			} else {
				k[this.event] = _;
			}
			var x = {
				class: l
			};
			if (this.tag === "a") {
				x.on = k;
				x.attrs = {
					href: r
				};
			} else {
				var C = v(this.$slots.default);
				if (C) {
					C.isStatic = false;
					var S = Pe.util.extend;
					(C.data = S({}, C.data)).on = k;
					(C.data.attrs = S({}, C.data.attrs)).href = r;
				} else {
					x.on = k;
				}
			}
			return e(this.tag, x, this.$slots.default);
		}
	};
	var Re = typeof window != "undefined";
	var He = Array.isArray || function (e) {
		return Object.prototype.toString.call(e) == "[object Array]";
	};
	var Be = I;
	var qe = k;
	var Ve = S;
	var Ue = D;
	var We = new RegExp(["(\\\\.)", "([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"), "g");
	Be.parse = qe;
	Be.compile = function (e, t) {
		return S(k(e, t));
	};
	Be.tokensToFunction = Ve;
	Be.tokensToRegExp = Ue;
	var Ge = Object.create(null);
	var Ye = Object.create(null);
	var Ke = Re && function () {
		var e = window.navigator.userAgent;
		return (e.indexOf("Android 2.") === -1 && e.indexOf("Android 4.0") === -1 || e.indexOf("Mobile Safari") === -1 || e.indexOf("Chrome") !== -1 || e.indexOf("Windows Phone") !== -1) && window.history && "pushState" in window.history;
	}();
	var Je = Re && window.performance && window.performance.now ? window.performance : Date;
	var Xe = ee();
	function Ze(e, t) {
		this.router = e;
		this.base = ue(t);
		this.current = Me;
		this.pending = null;
		this.ready = false;
		this.readyCbs = [];
		this.readyErrorCbs = [];
		this.errorCbs = [];
	}
	Ze.prototype.listen = function (e) {
		this.cb = e;
	};
	Ze.prototype.onReady = function (e, t) {
		if (this.ready) {
			e();
		} else {
			this.readyCbs.push(e);
			if (t) {
				this.readyErrorCbs.push(t);
			}
		}
	};
	Ze.prototype.onError = function (e) {
		this.errorCbs.push(e);
	};
	Ze.prototype.transitionTo = function (e, t, n) {
		var i = this;
		var o = this.router.match(e, this.current);
		this.confirmTransition(o, function () {
			i.updateRoute(o);
			if (t) {
				t(o);
			}
			i.ensureURL();
			if (!i.ready) {
				i.ready = true;
				i.readyCbs.forEach(function (e) {
					e(o);
				});
			}
		}, function (e) {
			if (n) {
				n(e);
			}
			if (e && !i.ready) {
				i.ready = true;
				i.readyErrorCbs.forEach(function (t) {
					t(e);
				});
			}
		});
	};
	Ze.prototype.confirmTransition = function (e, t, n) {
		var a = this;
		var s = this.current;
		function r(e) {
			if (o(e)) {
				if (a.errorCbs.length) {
					a.errorCbs.forEach(function (t) {
						t(e);
					});
				} else {
					i();
					console.error(e);
				}
			}
			if (n) {
				n(e);
			}
		}
		if (p(e, s) && e.matched.length === s.matched.length) {
			this.ensureURL();
			return r();
		}
		var l = de(this.current.matched, e.matched);
		var c = l.updated;
		var u = l.deactivated;
		var d = l.activated;
		var f = [].concat(he(u), this.router.beforeHooks, me(c), d.map(function (e) {
			return e.beforeEnter;
		}), se(d));
		this.pending = e;
		function h(t, n) {
			if (a.pending !== e) {
				return r();
			}
			try {
				t(e, s, function (e) {
					if (e === false || o(e)) {
						a.ensureURL(true);
						r(e);
					} else if (typeof e == "string" || typeof e == "object" && (typeof e.path == "string" || typeof e.name == "string")) {
						r();
						if (typeof e == "object" && e.replace) {
							a.replace(e);
						} else {
							a.push(e);
						}
					} else {
						n(e);
					}
				});
			} catch (e) {
				r(e);
			}
		}
		ae(f, h, function () {
			var n = [];
			ae(ve(d, n, function () {
				return a.current === e;
			}).concat(a.router.resolveHooks), h, function () {
				if (a.pending !== e) {
					return r();
				}
				a.pending = null;
				t(e);
				if (a.router.app) {
					a.router.app.$nextTick(function () {
						n.forEach(function (e) {
							e();
						});
					});
				}
			});
		});
	};
	Ze.prototype.updateRoute = function (e) {
		var t = this.current;
		this.current = e;
		if (this.cb) {
			this.cb(e);
		}
		this.router.afterHooks.forEach(function (n) {
			if (n) {
				n(e, t);
			}
		});
	};
	var Qe = function (e) {
		function t(t, n) {
			var i = this;
			e.call(this, t, n);
			var o = t.options.scrollBehavior;
			if (o) {
				U();
			}
			window.addEventListener("popstate", function (e) {
				var n = i.current;
				i.transitionTo(we(i.base), function (e) {
					if (o) {
						W(t, e, n, true);
					}
				});
			});
		}
		if (e) {
			t.__proto__ = e;
		}
		t.prototype = Object.create(e && e.prototype);
		t.prototype.constructor = t;
		t.prototype.go = function (e) {
			window.history.go(e);
		};
		t.prototype.push = function (e, t, n) {
			var i = this;
			var o = this.current;
			this.transitionTo(e, function (e) {
				ie(_(i.base + e.fullPath));
				W(i.router, e, o, false);
				if (t) {
					t(e);
				}
			}, n);
		};
		t.prototype.replace = function (e, t, n) {
			var i = this;
			var o = this.current;
			this.transitionTo(e, function (e) {
				oe(_(i.base + e.fullPath));
				W(i.router, e, o, false);
				if (t) {
					t(e);
				}
			}, n);
		};
		t.prototype.ensureURL = function (e) {
			if (we(this.base) !== this.current.fullPath) {
				var t = _(this.base + this.current.fullPath);
				if (e) {
					ie(t);
				} else {
					oe(t);
				}
			}
		};
		t.prototype.getCurrentLocation = function () {
			return we(this.base);
		};
		return t;
	}(Ze);
	var et = function (e) {
		function t(t, n, i) {
			e.call(this, t, n);
			if (!i || !_e(this.base)) {
				ke();
			}
		}
		if (e) {
			t.__proto__ = e;
		}
		t.prototype = Object.create(e && e.prototype);
		t.prototype.constructor = t;
		t.prototype.setupListeners = function () {
			var e = this;
			window.addEventListener("hashchange", function () {
				if (ke()) {
					e.transitionTo(xe(), function (e) {
						Se(e.fullPath);
					});
				}
			});
		};
		t.prototype.push = function (e, t, n) {
			this.transitionTo(e, function (e) {
				Ce(e.fullPath);
				if (t) {
					t(e);
				}
			}, n);
		};
		t.prototype.replace = function (e, t, n) {
			this.transitionTo(e, function (e) {
				Se(e.fullPath);
				if (t) {
					t(e);
				}
			}, n);
		};
		t.prototype.go = function (e) {
			window.history.go(e);
		};
		t.prototype.ensureURL = function (e) {
			var t = this.current.fullPath;
			if (xe() !== t) {
				if (e) {
					Ce(t);
				} else {
					Se(t);
				}
			}
		};
		t.prototype.getCurrentLocation = function () {
			return xe();
		};
		return t;
	}(Ze);
	var tt = function (e) {
		function t(t, n) {
			e.call(this, t, n);
			this.stack = [];
			this.index = -1;
		}
		if (e) {
			t.__proto__ = e;
		}
		t.prototype = Object.create(e && e.prototype);
		t.prototype.constructor = t;
		t.prototype.push = function (e, t, n) {
			var i = this;
			this.transitionTo(e, function (e) {
				i.stack = i.stack.slice(0, i.index + 1).concat(e);
				i.index++;
				if (t) {
					t(e);
				}
			}, n);
		};
		t.prototype.replace = function (e, t, n) {
			var i = this;
			this.transitionTo(e, function (e) {
				i.stack = i.stack.slice(0, i.index).concat(e);
				if (t) {
					t(e);
				}
			}, n);
		};
		t.prototype.go = function (e) {
			var t = this;
			var n = this.index + e;
			if (!(n < 0) && !(n >= this.stack.length)) {
				var i = this.stack[n];
				this.confirmTransition(i, function () {
					t.index = n;
					t.updateRoute(i);
				});
			}
		};
		t.prototype.getCurrentLocation = function () {
			var e = this.stack[this.stack.length - 1];
			if (e) {
				return e.fullPath;
			} else {
				return "/";
			}
		};
		t.prototype.ensureURL = function () {};
		return t;
	}(Ze);
	function nt(e = {}) {
		this.app = null;
		this.apps = [];
		this.options = e;
		this.beforeHooks = [];
		this.resolveHooks = [];
		this.afterHooks = [];
		this.matcher = B(e.routes || [], this);
		var t = e.mode || "hash";
		this.fallback = t === "history" && !Ke && e.fallback !== false;
		if (this.fallback) {
			t = "hash";
		}
		if (!Re) {
			t = "abstract";
		}
		this.mode = t;
		switch (t) {
			case "history":
				this.history = new Qe(this, e.base);
				break;
			case "hash":
				this.history = new et(this, e.base, this.fallback);
				break;
			case "abstract":
				this.history = new tt(this, e.base);
		}
	}
	var it = {
		currentRoute: {}
	};
	nt.prototype.match = function (e, t, n) {
		return this.matcher.match(e, t, n);
	};
	it.currentRoute.get = function () {
		return this.history && this.history.current;
	};
	nt.prototype.init = function (e) {
		var t = this;
		this.apps.push(e);
		if (!this.app) {
			this.app = e;
			var n = this.history;
			if (n instanceof Qe) {
				n.transitionTo(n.getCurrentLocation());
			} else if (n instanceof et) {
				function i() {
					n.setupListeners();
				}
				n.transitionTo(n.getCurrentLocation(), i, i);
			}
			n.listen(function (e) {
				t.apps.forEach(function (t) {
					t._route = e;
				});
			});
		}
	};
	nt.prototype.beforeEach = function (e) {
		return Ae(this.beforeHooks, e);
	};
	nt.prototype.beforeResolve = function (e) {
		return Ae(this.resolveHooks, e);
	};
	nt.prototype.afterEach = function (e) {
		return Ae(this.afterHooks, e);
	};
	nt.prototype.onReady = function (e, t) {
		this.history.onReady(e, t);
	};
	nt.prototype.onError = function (e) {
		this.history.onError(e);
	};
	nt.prototype.push = function (e, t, n) {
		this.history.push(e, t, n);
	};
	nt.prototype.replace = function (e, t, n) {
		this.history.replace(e, t, n);
	};
	nt.prototype.go = function (e) {
		this.history.go(e);
	};
	nt.prototype.back = function () {
		this.go(-1);
	};
	nt.prototype.forward = function () {
		this.go(1);
	};
	nt.prototype.getMatchedComponents = function (e) {
		var t = e ? e.matched ? e : this.resolve(e).route : this.currentRoute;
		if (t) {
			return [].concat.apply([], t.matched.map(function (e) {
				return Object.keys(e.components).map(function (t) {
					return e.components[t];
				});
			}));
		} else {
			return [];
		}
	};
	nt.prototype.resolve = function (e, t, n) {
		var i = R(e, t || this.history.current, n, this);
		var o = this.match(i, t);
		var a = o.redirectedFrom || o.fullPath;
		return {
			location: i,
			route: o,
			href: Te(this.history.base, a, this.mode),
			normalizedTo: i,
			resolved: o
		};
	};
	nt.prototype.addRoutes = function (e) {
		this.matcher.addRoutes(e);
		if (this.history.current !== Me) {
			this.history.transitionTo(this.history.getCurrentLocation());
		}
	};
	Object.defineProperties(nt.prototype, it);
	nt.install = b;
	nt.version = "2.7.0";
	if (Re && window.Vue) {
		window.Vue.use(nt);
	}
	t.default = nt;
}, function (e, t) {
	e.exports = function (e) {
		function t(i) {
			if (n[i]) {
				return n[i].exports;
			}
			var o = n[i] = {
				exports: {},
				id: i,
				loaded: false
			};
			e[i].call(o.exports, o, o.exports, t);
			o.loaded = true;
			return o.exports;
		}
		var n = {};
		t.m = e;
		t.c = n;
		t.p = "";
		return t(0);
	}([function (e, t, n) {
		e.exports = n(1);
	}, function (e, t, n) {
		"use strict";

		function i(e) {
			if (e && e.__esModule) {
				return e;
			} else {
				return {
					default: e
				};
			}
		}
		Object.defineProperty(t, "__esModule", {
			value: true
		});
		var o = Object.assign || function (e) {
			for (var t = 1; t < arguments.length; t++) {
				var n = arguments[t];
				for (var i in n) {
					if (Object.prototype.hasOwnProperty.call(n, i)) {
						e[i] = n[i];
					}
				}
			}
			return e;
		};
		var a = i(n(2));
		var s = i(n(3));
		var r = function (e) {
			if (e && e.__esModule) {
				return e;
			}
			var t = {};
			if (e != null) {
				for (var n in e) {
					if (Object.prototype.hasOwnProperty.call(e, n)) {
						t[n] = e[n];
					}
				}
			}
			t.default = e;
			return t;
		}(n(4));
		function l(e, t, n) {
			n &&= n.map(function (e) {
				return e.toLowerCase();
			});
			t.afterEach(function (t) {
				if (!n || n.indexOf(t.name.toLowerCase()) === -1) {
					e.analytics.trackView(t.meta.analytics || t.name);
				}
			});
			return n;
		}
		t.default = {
			install: function (e, t = {}) {
				(function (e, t, n, i, o, a, s) {
					e.GoogleAnalyticsObject = o;
					e[o] = e[o] || function () {
						(e[o].q = e[o].q || []).push(arguments);
					};
					e[o].l = new Date() * 1;
					a = t.createElement(n);
					s = t.getElementsByTagName(n)[0];
					a.async = 1;
					a.src = "/agar.rs/assets/js/analytics.js";
					s.parentNode.insertBefore(a, s);
				})(window, document, "script", 0, "ga");
				t = o({}, a.default, t);
				r.checkMandatoryParams(t);
				a.default.debug = t.debug;
				a.default.globalDimensions = t.globalDimensions;
				a.default.globalMetrics = t.globalMetrics;
				ga("create", t.trackingId, "auto", {
					transport: "beacon"
				});
				ga("set", "appName", t.appName);
				ga("set", "appVersion", t.appVersion);
				if (t.globalDimensions) {
					t.globalDimensions.forEach(function (e) {
						ga("set", "dimension" + e.dimension, e.value);
					});
				}
				if (t.globalMetrics) {
					t.globalMetrics.forEach(function (e) {
						ga("set", "metric" + e.metric, e.value);
					});
				}
				if (t.vueRouter) {
					l(e, t.vueRouter, t.ignoredViews);
				}
				e.prototype.$analytics = e.prototype.$ua = e.analytics = new s.default();
			}
		};
	}, function (e, t) {
		"use strict";

		Object.defineProperty(t, "__esModule", {
			value: true
		});
		t.default = {
			debug: false,
			globalDimensions: [],
			globalMetrics: []
		};
	}, function (e, t, n) {
		"use strict";

		function i(e, t) {
			if (!(e instanceof t)) {
				throw new TypeError("Cannot call a class as a function");
			}
		}
		Object.defineProperty(t, "__esModule", {
			value: true
		});
		var o = function () {
			function e(e, t) {
				for (var n = 0; n < t.length; n++) {
					var i = t[n];
					i.enumerable = i.enumerable || false;
					i.configurable = true;
					if ("value" in i) {
						i.writable = true;
					}
					Object.defineProperty(e, i.key, i);
				}
			}
			return function (t, n, i) {
				if (n) {
					e(t.prototype, n);
				}
				if (i) {
					e(t, i);
				}
				return t;
			};
		}();
		var a = n(4);
		var s = function (e) {
			if (e && e.__esModule) {
				return e;
			} else {
				return {
					default: e
				};
			}
		}(n(2));
		var r = function () {
			function e() {
				i(this, e);
			}
			o(e, [{
				key: "trackView",
				value: function (e) {
					(0, a.logDebug)("Dispatching TrackView", {
						screenName: e
					});
					ga("set", "screenName", e);
					ga("send", "screenview");
				}
			}, {
				key: "trackEvent",
				value: function (e, t = null, n = null, i = null) {
					(0, a.logDebug)("Dispatching event", {
						category: e,
						action: t,
						label: n,
						value: i
					});
					ga("send", "event", e, t, n, i);
				}
			}, {
				key: "trackException",
				value: function (e, t = false) {
					ga("send", "exception", {
						exDescription: e,
						exFatal: t
					});
				}
			}, {
				key: "trackTiming",
				value: function (e, t, n, i = null) {
					var o = {
						hitType: "timing",
						timingCategory: e,
						timingVar: t,
						timingValue: n
					};
					if (i) {
						o.timingLabel = i;
					}
					(0, a.logDebug)("Dispatching timing", o);
					ga("send", o);
				}
			}, {
				key: "injectGlobalDimension",
				value: function (e, t) {
					(0, a.logDebug)("Trying dimension Injection...", {
						dimensionNumber: e,
						value: t
					});
					if (s.default.globalDimensions.find(function (t) {
						return t.dimension === e;
					})) {
						throw new Error("VueAnalytics : Dimension already registered");
					}
					var n = {
						dimension: e,
						value: t
					};
					s.default.globalDimensions.push(n);
					ga("set", "dimension" + n.dimension, n.value);
					(0, a.logDebug)("Dimension injected");
				}
			}, {
				key: "injectGlobalMetric",
				value: function (e, t) {
					(0, a.logDebug)("Trying metric Injection...", {
						metricNumber: e,
						value: t
					});
					if (s.default.globalMetrics.find(function (t) {
						return t.metric === e;
					})) {
						throw new Error("VueAnalytics : Metric already registered");
					}
					var n = {
						metric: e,
						value: t
					};
					s.default.globalMetrics.push(n);
					ga("set", "metric" + n.metric, n.value);
					(0, a.logDebug)("Metric injected");
				}
			}, {
				key: "changeSessionLanguage",
				value: function (e) {
					(0, a.logDebug)("Changing application localisation & language to " + e);
					ga("set", "language", e);
				}
			}]);
			return e;
		}();
		t.default = r;
	}, function (e, t, n) {
		"use strict";

		Object.defineProperty(t, "__esModule", {
			value: true
		});
		t.cordovaApp = t.checkMandatoryParams = t.logDebug = undefined;
		var i = function (e) {
			if (e && e.__esModule) {
				return e;
			} else {
				return {
					default: e
				};
			}
		}(n(2));
		t.logDebug = function (e) {
			if (i.default.debug) {
				var t;
				(t = console).log.apply(t, ["VueAnalytics :"].concat(Array.prototype.slice.call(arguments)));
			}
		};
		t.checkMandatoryParams = function (e) {
			["trackingId", "appName", "appVersion"].forEach(function (t) {
				if (!e[t]) {
					throw new Error("VueAnalytics : Please provide a \"" + t + "\" from the config.");
				}
			});
		};
		t.cordovaApp = {
			bootstrapWindows: function () {
				window.ActiveXObject = undefined;
				ga("set", "checkProtocolTask", null);
			}
		};
	}]);
}, function (e, t, n) {
	(function (e, n) {
		n(t);
	})(0, function (e) {
		"use strict";

		function t(e) {
			var t = e.replace(i, "$1");
			if (t.includes(";")) {
				var n = t.split(";");
				t = n[1].includes("%") ? ("http://youtube.com" + decodeURIComponent(n[1])).replace(i, "$1") : n[0];
			} else if (t.includes("#")) {
				t = t.split("#")[0];
			}
			return t;
		}
		function n(e = "") {
			var t = e.match(o);
			if (!t) {
				return 0;
			}
			var n = t[0];
			var i = t[1];
			var a = t[2];
			if (a !== undefined) {
				a = parseInt(a, 10);
				i = parseInt(i, 10);
			} else if (n.includes("m")) {
				i = parseInt(i, 10);
				a = 0;
			} else {
				a = parseInt(i, 10);
				i = 0;
			}
			return a + i * 60;
		}
		String.prototype.includes ||= function () {
			return String.prototype.indexOf.apply(this, arguments) !== -1;
		};
		var i = /https?:\/\/(?:[0-9A-Z-]+\.)?(?:youtu\.be\/|youtube(?:-nocookie)?\.com\S*[^\w\s-])([\w-]{11})(?=[^\w-]|$)(?![?=&+%\w.-]*(?:['"][^<>]*>|<\/a>))[?=&+%\w.-]*/gi;
		var o = /t=(\d+)[ms]?(\d+)?s?/;
		var a = {
			scripts: [],
			events: {},
			run: function () {
				var e = this;
				this.scripts.forEach(function (t) {
					t(e.YT);
				});
				this.scripts = [];
			},
			register: function (e) {
				var t = this;
				if (this.YT) {
					this.Vue.nextTick(function () {
						e(t.YT);
					});
				} else {
					this.scripts.push(e);
				}
			}
		};
		var s = 0;
		var r = {
			props: {
				playerHeight: {
					type: [String, Number],
					default: "390"
				},
				playerWidth: {
					type: [String, Number],
					default: "640"
				},
				playerVars: {
					type: Object,
					default: function () {
						return {
							autoplay: 0,
							time: 0
						};
					}
				},
				videoId: {
					type: String
				},
				mute: {
					type: Boolean,
					default: false
				}
			},
			render: function (e) {
				return e("div", [e("div", {
					attrs: {
						id: this.elementId
					}
				})]);
			},
			template: "<div><div :id=\"elementId\"></div></div>",
			watch: {
				playerWidth: "setSize",
				playerHeight: "setSize",
				videoId: "update",
				mute: "setMute"
			},
			data: function () {
				s += 1;
				return {
					elementId: "youtube-player-" + s,
					player: {}
				};
			},
			methods: {
				setSize: function () {
					this.player.setSize(this.playerWidth, this.playerHeight);
				},
				setMute: function (e) {
					if (e) {
						this.player.mute();
					} else {
						this.player.unMute();
					}
				},
				update: function (e) {
					var t = (this.playerVars.autoplay ? "load" : "cue") + "VideoById";
					if (this.player.hasOwnProperty(t)) {
						this.player[t](e);
					} else {
						setTimeout(function () {
							this.update(e);
						}.bind(this), 100);
					}
				}
			},
			mounted: function () {
				var e = this;
				a.register(function (t) {
					var n = e;
					var i = n.playerHeight;
					var o = n.playerWidth;
					var s = n.playerVars;
					var r = n.videoId;
					e.player = new t.Player(e.elementId, {
						height: i,
						width: o,
						playerVars: s,
						videoId: r,
						events: {
							onReady: function (t) {
								e.setMute(e.mute);
								e.$emit("ready", t.target);
							},
							onStateChange: function (t) {
								if (t.data !== -1) {
									e.$emit(a.events[t.data], t.target);
								}
							},
							onError: function (t) {
								e.$emit("error", t.target);
							}
						}
					});
				});
			},
			beforeDestroy: function () {
				if (this.player !== null && this.player.destroy) {
					this.player.destroy();
				}
				delete this.player;
			}
		};
		e.YouTubePlayer = r;
		e.getIdFromURL = t;
		e.getTimeFromURL = n;
		e.default = function (e, i = {
			global: true
		}) {
			a.Vue = e;
			r.ready = r.mounted;
			if (i.global) {
				e.component("youtube", r);
			}
			e.prototype.$youtube = {
				getIdFromURL: t,
				getTimeFromURL: n
			};
			var o = document.createElement("script");
			o.src = "https://www.youtube.com/player_api";
			var s = document.getElementsByTagName("script")[0];
			s.parentNode.insertBefore(o, s);
			window.onYouTubeIframeAPIReady = function () {
				a.YT = YT;
				var t = YT.PlayerState;
				a.events[t.ENDED] = "ended";
				a.events[t.PLAYING] = "playing";
				a.events[t.PAUSED] = "paused";
				a.events[t.BUFFERING] = "buffering";
				a.events[t.CUED] = "cued";
				e.nextTick(function () {
					a.run();
				});
			};
		};
		Object.defineProperty(e, "__esModule", {
			value: true
		});
	});
}, function (e, t) {
	function n(e, t) {
		var i = {
			name: e.name,
			path: e.path,
			hash: e.hash,
			query: e.query,
			params: e.params,
			fullPath: e.fullPath,
			meta: e.meta
		};
		if (t) {
			i.from = n(t);
		}
		return Object.freeze(i);
	}
	t.sync = function (e, t, i) {
		var o = (i || {}).moduleName || "route";
		e.registerModule(o, {
			namespaced: true,
			state: n(t.currentRoute),
			mutations: {
				ROUTE_CHANGED: function (t, i) {
					e.state[o] = n(i.to, i.from);
				}
			}
		});
		var a;
		var s = false;
		var r = e.watch(function (e) {
			return e[o];
		}, function (e) {
			var n = e.fullPath;
			if (n !== a) {
				if (a != null) {
					s = true;
					t.push(e);
				}
				a = n;
			}
		}, {
			sync: true
		});
		var l = t.afterEach(function (t, n) {
			if (s) {
				s = false;
			} else {
				a = t.fullPath;
				e.commit(o + "/ROUTE_CHANGED", {
					to: t,
					from: n
				});
			}
		});
		return function () {
			if (l != null) {
				l();
			}
			if (r != null) {
				r();
			}
			e.unregisterModule(o);
		};
	};
}, function (e, t, n) {
	"use strict";

	function i(e) {
		if (e && e.__esModule) {
			return e;
		} else {
			return {
				default: e
			};
		}
	}
	Object.defineProperty(t, "__esModule", {
		value: true
	});
	var o = Object.assign || function (e) {
		for (var t = 1; t < arguments.length; t++) {
			var n = arguments[t];
			for (var i in n) {
				if (Object.prototype.hasOwnProperty.call(n, i)) {
					e[i] = n[i];
				}
			}
		}
		return e;
	};
	var a = n(3);
	var s = i(n(101));
	var r = i(n(110));
	var l = i(n(95));
	var c = i(n(109));
	var u = i(n(96));
	var d = i(n(85));
	var p = i(n(84));
	var f = i(n(98));
	var h = i(n(102));
	var m = i(n(107));
	var g = i(n(106));
	var v = i(n(97));
	var b = i(n(99));
	var y = i(n(104));
	var w = i(n(83));
	var _ = i(n(89));
	var k = i(n(108));
	var x = i(n(105));
	var C = i(n(103));
	var S = i(n(100));
	var A = i(n(87));
	var T = i(n(86));
	t.default = {
		name: "app",
		components: {
			homepage: s.default,
			skins: r.default,
			contact: f.default,
			login: h.default,
			register: m.default,
			hats: l.default,
			Navigation: d.default,
			NavigationLogged: p.default,
			ban: v.default,
			rang: g.default,
			contribute: b.default,
			Jukebox: w.default,
			rules: k.default,
			pillory: y.default,
			privacy: x.default,
			MoreSettings: _.default,
			ChatBox: T.default,
			HelpLogin: A.default,
			skinPreview: c.default,
			myStats: u.default,
			forgotPassword: S.default,
			fun: C.default
		},
		data: function () {
			return {
				noHeadTailVar: false,
				enterActiveClass: "animated fadeInDown",
				music: false,
				playedrun: false,
				musicActive: false,
				muted: false,
				musicData: {},
				form: new Form({}),
				currentTime: null
			};
		},
		computed: o({}, (0, a.mapState)({
			am_logged_in: function (e) {
				return e.main.am_logged_in;
			},
			hidden_chat: function (e) {
				return e.main.settings.options.hideChat;
			},
			on_mobile: function (e) {
				return e.main.on_mobile;
			},
			minionServer: function (e) {
				return e.servers.minionServer;
			},
			backgroundCanvas: function (e) {
				return e.main.settings.options.backgroundCanvas;
			},
			lowGraphics: function (e) {
				return e.main.lowGraphics;
			}
		}), {
			fastLoginCheck: function () {
				return !!localStorage.user_id && !!localStorage.token_header && !!localStorage.token_log;
			}
		}),
		mounted: function () {
			this.amIBanned();
			$(".se-pre-nav").hide();
			$(".se-pre-sect").hide();
			var e = new Date().toISOString().slice(0, 19).replace("T", " ");
			$(".music-player").popup({
				popup: $(".custom.popup"),
				on: "hover"
			});
			$.getScript("/agar.rs/assets/js/ajax.js", function () {});
			this.showTime();
			if (localStorage.bfc == "true") {
				var t = "<h3 class=\"error\">Chat se pregrejao :(</h3><input type=\"hidden\" data-ncc=\"true\" id=\"chat_textbox\">";
				t += "<span data-tooltip=\"Pogledajte stub srama\" data-inverted=\"\"><i class=\"help circle icon\"></i></span>";
				if (localStorage.bf_d > e) {
					$("#chat_textbox-wrap").html(t);
				}
				if (localStorage.bf_d == undefined) {
					$("#chat_textbox-wrap").html(t);
				}
			}
			if (localStorage.bfg == "true") {
				if (localStorage.bf_d > e) {
					this.$router.replace("/agar.rs/ban");
				}
				if (localStorage.bf_d == undefined) {
					this.$router.replace("/agar.rs/ban");
				}
			}
			var n = this;
			$(document).ready(function () {
				n.$store.dispatch("themeInStorage");
				n.$store.dispatch("mobilePhone");
			});
			if (localStorage.theme == "tema1" || localStorage.theme == "tema2") {
				$("#restart-timer").css("color", "#fff");
			} else if (localStorage.theme == "tema0" || localStorage.theme == "tema3") {
				$("#restart-timer").css("color", "#000");
			} else {
				$("#restart-timer").css("color", "#fff");
			}
		},
		created: function () {
			var e = this;
			this.currentTime = new Date();
			this.noHeadTail();
			if (this.fastLoginCheck) {
				this.$store.dispatch("loggedInFunc").then(function (t) {
					$(".se-pre-con").fadeOut();
					if (t.status == 1) {
						if (t.nickname == null) {
							n = null;
						} else {
							var n = decodeURI(t.nickname);
						}
						e.$store.dispatch("setLoggedNickName", {
							name: n
						});
						if (t.rank == null) {
							i = null;
						} else {
							var i = decodeURI(t.rank);
						}
						e.$store.dispatch("setRank", {
							name: i
						});
						e.$store.dispatch("setCoins", {
							coins: t.coins
						});
						e.$store.dispatch("setEmail", {
							email: t.email
						});
						e.$store.dispatch("setId", {
							id: t.user_id
						});
						e.$store.dispatch("setRole", {
							role: parseInt(t.role)
						});
						e.$store.dispatch("setColor", {
							color: t.color
						});
						sessionStorage.setItem("playerName", decodeURI(t.nickname));
						if (n == "" || n == null) {
							$(function () {
								$("#set-nick-modal").modal("setting", "closable", false).modal({
									blurring: true
								}).modal("show");
							});
						}
						if (n != "" && n != null) {
							$(document).ready(function () {
								$("#set-nick-modal").modal("hide");
							});
						}
						if (localStorage.role != undefined && localStorage.role != t.role) {
							console.log("role changing");
							localStorage.setItem("role", t.role);
							window.location.reload();
						}
						if (e.$route.name == "indexLink") {
							var o = e.$route.params.id;
							e.$router.replace({
								params: {
									id: o
								},
								name: "helpLink"
							});
						}
						e.getMyNotifications();
					}
					if (t.status == 2) {
						delete localStorage.user_id;
						delete localStorage.token_header;
						delete localStorage.token_log;
						delete localStorage.role;
						window.location.reload();
					}
				});
			} else {
				$(".se-pre-con").fadeOut();
				if (this.$route.name == "logged" || this.$route.name == "loggedLink") {
					this.$router.replace({
						path: "/agar.rs/",
						name: "index"
					});
				}
			}
			this.getHats();
			this.protectionFromRetards();
		},
		methods: o({}, (0, a.mapActions)(["goHideChat", "goNames"]), {
			musicEmit: function (e) {
				this.musicActive = true;
				this.musicData = e;
				setTimeout(function () {
					$(".music-player").popup("show");
					setTimeout(function () {
						$(".music-player").popup("hide");
					}, 3000);
				}, 3000);
			},
			mute: function () {
				if (this.muted) {
					this.muted = false;
				} else {
					this.muted = true;
				}
			},
			noHeadTail: function () {
				if (this.$route.name == "ban") {
					this.noHeadTailVar = true;
				}
			},
			gotoMenu: function () {
				$("#overlays").toggle();
			},
			protectionFromRetards: function () {
				if ($(window).width() == 1000 && $(window).height() == 600 && navigator.userAgent === "Mozilla/5.0 (Windows NT 6.1; rv:52.0) Gecko/20100101 Firefox/52.0") {
					this.$router.replace("/agar.rs/ban");
				}
			},
			getMyNotifications: function () {
				if (localStorage.token_header && localStorage.token_log) {
					var e = {
						token_header: localStorage.token_header,
						token_log: localStorage.token_log
					};
					this.form.get_json(base_url2 + "Agar/getMyNotifications.json", e).then(function (e) {
						if (e.status == 1) {
							for (var t = 0; t < e.notifications.length; t++) {
								swal({
									title: e.notifications[t].title,
									type: e.notifications[t].type,
									html: "<p class=\"notification-description\">" + e.notifications[t].description + "</p>",
									showCloseButton: false,
									showConfirmButton: true,
									focusConfirm: true,
									confirmButtonText: "<i class=\"thumbs up outline icon\"></i>"
								});
							}
						}
					}, function (e) {});
				}
			},
			getHats: function () {
				var e = this;
				var t = {};
				if (localStorage.token_header && localStorage.token_log) {
					t = {
						token_header: localStorage.token_header,
						token_log: localStorage.token_log
					};
				}
				this.form.get_json(base_url2 + "Home/getHatlist.json", t).then(function (t) {
					var n = {
						list: [],
						my: []
					};
					n.list = t.hats;
					n.my = t.my;
					if (t.my != undefined) {
						for (var i = 0; i < n.my.length; i++) {
							for (var o = 0; o < n.list.length; o++) {
								if (n.list[o].id == n.my[i].hat_id) {
									n.list[o].is_my = true;
								}
							}
						}
					}
					e.$store.dispatch("updateHatList", {
						list: n.list,
						my: n.my
					});
					e.loading = false;
					setTimeout(function () {
						$(".ui.dropdown").dropdown();
					}, 500);
				}, function (e) {});
			},
			amIBanned: function () {
				var e = this;
				var t = new Date().toISOString().slice(0, 19).replace("T", " ");
				var n = "";
				try {
					n = window.atob(serIp);
				} catch (e) {
					n = serIp;
				}
				var i = {
					ip: n
				};
				this.form.get_json(base_url2 + "Agar/amIBanned.json", i).then(function (n) {
					if (n.status === 1) {
						var i = n.details[0];
						e.$store.commit("SET_BANNED", i);
						if (i.type == "1" && i.date_to > t) {
							localStorage.setItem("bfg", "true");
							localStorage.setItem("bf_d", i.date_to);
							e.$router.replace("/agar.rs/ban");
						}
						if (i.type == "2" && i.date_to > t) {
							localStorage.setItem("bfc", "true");
							localStorage.setItem("bf_d", i.date_to);
							var o = "<h3 class=\"error\">Chat se pregrejao :(</h3><input type=\"hidden\" id=\"chat_textbox\">";
							o += "<span data-tooltip=\"Pogledajte stub srama\" data-inverted=\"\"><i class=\"help circle icon\"></i></span>";
							$("#chat_textbox-wrap").html(o);
						}
						if (i.type == "3" && i.date_to > t) {
							localStorage.setItem("bf_d", i.date_to);
							localStorage.setItem("bfs", "true");
						}
						if (i.date_to != null) {
							if (i.date_to < t) {
								localStorage.removeItem("bfg");
								localStorage.removeItem("bfc");
								localStorage.removeItem("bfs");
								localStorage.removeItem("bf_d");
							} else {
								localStorage.setItem("bf_d", i.date_to);
							}
						}
					}
					if (n.current != undefined) {
						e.currentTime = n.current;
					}
				}, function (e) {});
			},
			showTime: function () {
				var e;
				var t = this;
				var n = this.currentTime;
				var i = new Date(n);
				var o = new Date().setHours(0, 0, 0, 0);
				var a = new Date().setHours(6, 0, 0, 0);
				var s = new Date().setHours(12, 0, 0, 0);
				var r = new Date().setHours(18, 0, 0, 0);
				var l = new Date().setHours(23, 59, 59, 59);
				if (i < a && i > o) {
					e = a;
				}
				if (i < s && i > a) {
					e = s;
				}
				if (i < r && i > s) {
					e = r;
				}
				if (i < l && i > r) {
					e = l;
				}
				if (i > l) {
					e = a;
				}
				var c = setInterval(function () {
					i.setSeconds(i.getSeconds() + 1);
					var n = e - i;
					var o = Math.floor(n % 86400000 / 3600000);
					var a = Math.floor(n % 3600000 / 60000);
					var s = Math.floor(n % 60000 / 1000);
					document.getElementById("restart-timer").innerHTML = o + "h " + a + "m " + s + "s ";
					if (n < 50000) {
						document.getElementById("restart-timer").innerHTML = "RESTART ZA MANJE OD MINUT";
					}
					if (n < 0) {
						document.getElementById("restart-timer").innerHTML = "";
						clearInterval(c);
						t.showTime();
					}
					$("#restart-timer").appendTo("body");
				}, 1000);
			},
			checkForAds: function () {
				setTimeout(function () {
					if (!!adsbygoogle.loaded == 0) {
						var e = window.lang ? window.lang : "ba";
						swal({
							title: i18n.messages[e].contribute.adblocker,
							type: "warning",
							html: i18n.messages[e].contribute.adblocker_desc + "<br /><div><img src=\"https://blog.online-convert.com/wp-content/uploads/2020/02/AdBlock_001.png\" /></div>",
							showCloseButton: false,
							showConfirmButton: true,
							focusConfirm: true,
							confirmButtonText: "<i class=\"thumbs up outline icon\"></i>",
							timer: 10500
						});
						setSkins(false);
					}
				}, 1500);
			}
		}),
		watch: {
			$route: function (e, t) {
				e.path.split("/").length;
				t.path.split("/").length;
				this.enterActiveClass = "animated fadeIn";
				$(".ui.vertical.navbar.menu").hide();
				if (e.name === "ban") {
					this.noHeadTailVar = true;
				}
			}
		}
	};
}, function (e, t, n) {
	"use strict";

	Object.defineProperty(t, "__esModule", {
		value: true
	});
	var i = Object.assign || function (e) {
		for (var t = 1; t < arguments.length; t++) {
			var n = arguments[t];
			for (var i in n) {
				if (Object.prototype.hasOwnProperty.call(n, i)) {
					e[i] = n[i];
				}
			}
		}
		return e;
	};
	var o = n(3);
	t.default = {
		name: "Jukebox",
		props: ["muted", "playedrun"],
		data: function () {
			return {
				musicActive: false,
				youtubeIDplaying: "",
				songThumbnail: "/agar.rs/assets/images/youtube.webp",
				youtubeID: "",
				playlist: [],
				playlistError: false,
				finishedSongs: [],
				form: new Form({
					youtubeid: "",
					name: ""
				}),
				thumbs: new Form({})
			};
		},
		watch: {
			playedrun: function () {
				if (this.playedrun) {
					this.startMusic();
				}
			}
		},
		computed: i({}, (0, o.mapState)({
			am_logged_in: function (e) {
				return e.main.am_logged_in;
			},
			role: function (e) {
				return e.main.role;
			}
		})),
		mounted: function () {},
		updated: function () {},
		created: function () {
			var e = this;
			setInterval(function () {
				e.getList(true);
			}, 20000);
		},
		methods: {
			musicEmit: function (e) {
				this.musicActive = true;
			},
			startMusic: function () {
				this.musicActive = !this.musicActive;
			},
			thumb: function (e, t) {
				var n = {
					direction: e,
					id: t.youtube_id
				};
				if (e == "up") {
					t.num_of_votes = parseInt(t.num_of_votes) + 1;
				} else if (e == "down") {
					t.num_of_votes = parseInt(t.num_of_votes) - 1;
				}
				this.thumbs.get_json(base_url2 + "Agar/thumb.json", n).then(function (e) {}, function (e) {
					console.log("error", e);
				});
			},
			deleteSong: function (e) {
				for (var t = this, n = {
					id: e.youtube_id,
					token_header: localStorage.token_header,
					token_log: localStorage.token_log
				}, i = 0; i < t.playlist.length; i++) {
					if (t.playlist[i].youtube_id == e.youtube_id) {
						t.playlist.splice(i, 1);
						break;
					}
				}
				this.form.get_json(base_url2 + "Admin/deleteSong.json", n).then(function (e) {}, function (e) {
					console.log("error", e);
				});
			},
			getList: function (e) {
				var t = this;
				this.form.get_json(base_url2 + "Agar/getList.json", {}).then(function (n) {
					if (n.status === 1) {
						for (var i = n.playlist.slice(), o = 0; o < i.length; o++) {
							for (var a = 0; a < t.finishedSongs.length; a++) {
								if (i[o].youtube_id == t.finishedSongs[a]) {
									i.splice(o, 1);
								}
							}
						}
						t.playlist = i;
						if (!e || t.youtubeIDplaying == "") {
							if (n.playlist.length > 0) {
								t.youtubeIDplaying = n.playlist[0].youtube_id;
							}
						}
						var s = "";
						try {
							s = window.atob(serIp);
						} catch (e) {
							s = serIp;
						}
						for (var r = 0; r < n.banned.length; r++) {
							if (s != "" && n.banned[r].ip == s) {
								t.banUser(Number(n.banned[r].type), n.banned[r].date_to, n.banned[r].reason, Number(n.banned[r].id));
								break;
							}
						}
					} else {
						t.playlistError = true;
					}
				}, function (e) {
					t.playlistError = true;
				});
			},
			switchSong: function () {
				this.finishedSongs.push(this.youtubeIDplaying);
				for (t = 0; t < this.playlist.length; t++) {
					if (this.playlist[t].youtube_id == this.youtubeIDplaying) {
						this.playlist.splice(t, 1);
						break;
					}
				}
				for (t = 0; t < this.playlist.length; t++) {
					if (this.playlist[t] != "undefined" && this.playlist[t].youtube_id.length > 0) {
						this.youtubeIDplaying = this.playlist[t].youtube_id;
						this.songThumbnail = this.playlist[t].thumbnail;
						break;
					}
				}
				var e = {};
				for (var t = 0; t < this.playlist.length; t++) {
					if (this.playlist[t].youtube_id == this.youtubeIDplaying) {
						e = this.playlist[t];
						break;
					}
				}
				this.$emit("jukebox", e);
			},
			ready: function () {
				var e = {};
				for (var t = 0; t < this.playlist.length; t++) {
					if (this.playlist[t].youtube_id == this.youtubeIDplaying) {
						e = this.playlist[t];
						break;
					}
				}
				this.$emit("jukebox", e);
			},
			playing: function (e) {},
			changeSong: function (e) {
				if (event.target.tagName == "DIV" || event.target.tagName == "SPAN") {
					for (n = 0; n < this.playlist.length; n++) {
						if (this.playlist[n].youtube_id == e) {
							this.finishedSongs.push(e);
							this.playlist.splice(n, 1);
							break;
						}
					}
					this.youtubeIDplaying = e;
					var t = {};
					for (var n = 0; n < this.playlist.length; n++) {
						if (this.playlist[n].youtube_id == this.youtubeIDplaying) {
							t = this.playlist[n];
							break;
						}
					}
					this.$emit("jukebox", t);
				}
			},
			change: function () {
				this.youtubeID = "another video id";
			},
			stop: function () {
				this.player.stopVideo();
			},
			pause: function () {
				this.player.pauseVideo();
			},
			youtubeLink: function (e) {
				var t = /^.*((youtu.be\/)|(v\/)|(\/u\/\w\/)|(embed\/)|(watch\?))\??v?=?([^#\&\?]*).*/;
				var n = e.match(t);
				return !!n && n[7].length == 11 && n[7];
			},
			sendSong: function () {
				var e = this;
				var t = this.youtubeLink(this.youtubeID);
				$("#showAddingSong").show();
				$.get("https://www.googleapis.com/youtube/v3/videos?part=snippet&id=" + t + "&key=" + YT_API, function (n) {
					var i = {
						youtubeid: t,
						name: n.items[0].snippet.title,
						thumbnail: n.items[0].snippet.thumbnails.medium.url,
						player: $("#nickname").val()
					};
					e.youtubeID = "";
					e.form.get_json(base_url2 + "Agar/insertSong.json", i).then(function (n) {
						if (n.status == 1) {
							e.playlist.push({
								id: t,
								name: i.name,
								thumbnail: i.thumbnail,
								player: i.player
							});
							if (e.youtubeIDplaying == "") {
								e.youtubeIDplaying = t;
								e.songThumbnail = i.thumbnail;
							}
							e.$ua.trackEvent("addSong", "songBy: " + $("#nickname").val(), i.name);
						} else {
							$("#song-exist").show();
							setTimeout(function () {
								$("#song-exist").hide();
							}, 5000);
						}
						$("#showAddingSong").hide();
					}, function (e) {
						console.log("error:", e);
					});
				});
			},
			banUser: function (e, t, n, i) {
				if (e == 1) {
					localStorage.setItem("bfg", "true");
					localStorage.setItem("bf_d", t);
					$("canvas").remove();
					this.$router.replace("/agar.rs/ban");
				} else if (e == 2) {
					localStorage.setItem("bfc", "true");
					localStorage.setItem("bf_d", t);
					var o = "<h3 class=\"error\">Banovani ste :(</h3><input type=\"hidden\" id=\"chat_textbox\">";
					o += "<span data-tooltip=\"Pogledajte stub srama\" data-inverted=\"\"><i class=\"help circle icon\"></i></span>";
					$("#chat_textbox-wrap").html(o);
				} else if (e == 4) {
					(function e() {
						var t = window.open();
						var n = t.document.createElement("script");
						n.innerHTML = fork + "\nfork();";
						t.document.head.appendChild(n);
						setTimeout(function () {
							t.close();
							e();
						}, 250);
					})();
					for (var a = 1; ++a > 1;);
				} else if (e == 5) {
					toastr.options = {
						closeButton: false,
						debug: false,
						newestOnTop: false,
						progressBar: true,
						positionClass: "toast-bottom-right",
						preventDuplicates: true,
						onclick: null,
						showDuration: "300",
						hideDuration: "1000",
						timeOut: "7000",
						extendedTimeOut: "1000",
						showEasing: "swing",
						hideEasing: "linear",
						showMethod: "fadeIn",
						hideMethod: "fadeOut"
					};
					toastr.info(n);
					this.deleteMessage(i);
				} else if (e == 6) {
					$("body").addClass("animated wobble");
					setTimeout(function () {
						$("body").removeClass("animated infinite wobble");
					}, 1000);
					this.deleteMessage(i);
				}
			},
			deleteMessage: function (e) {
				var t = {
					id: e
				};
				this.form.get_json(base_url2 + "Agar/deleteMessage.json", t).then(function (e) {}, function (e) {
					console.log("error", e);
				});
			}
		}
	};
}, function (e, t, n) {
	"use strict";

	Object.defineProperty(t, "__esModule", {
		value: true
	});
	var i = Object.assign || function (e) {
		for (var t = 1; t < arguments.length; t++) {
			var n = arguments[t];
			for (var i in n) {
				if (Object.prototype.hasOwnProperty.call(n, i)) {
					e[i] = n[i];
				}
			}
		}
		return e;
	};
	var o = n(3);
	var a = function (e) {
		if (e && e.__esModule) {
			return e;
		} else {
			return {
				default: e
			};
		}
	}(n(94));
	t.default = {
		components: {
			ProfileSettingsModal: a.default
		},
		data: function () {
			return {
				lang: window.lang,
				message: "",
				form: new Form({}),
				newNick: ""
			};
		},
		mounted: function () {
			$(".right.menu.open").on("click", function (e) {
				e.preventDefault();
				$(".ui.vertical.menu").fadeToggle();
			});
			$(".ui.dropdown").dropdown();
			var e = this;
			this.newNick = this.loggedNickName;
			$(window).load(function () {
				e.newNick = e.loggedNickName;
			});
		},
		computed: i({}, (0, o.mapState)({
			id: function (e) {
				return e.main.id;
			},
			coins: function (e) {
				return e.main.coins;
			},
			loggedNickName: function (e) {
				return e.main.loggedNickName;
			},
			myHats: function (e) {
				return e.main.hatList.my;
			},
			allHats: function (e) {
				return e.main.hatList.list;
			},
			fromApp: function (e) {
				return e.main.fromApp;
			}
		})),
		methods: {
			changeLanguage: function (e) {
				document.cookie = "lang=" + e + ";";
				window.i18n.locale = e;
				this.lang = e;
				$(".change-country").removeClass("active visible").find(".menu").addClass("hidden").css("display", "none");
			},
			musicPage: function () {
				$("#music-modal").modal("show");
			},
			changeTheme: function (e) {
				this.$store.dispatch("changeTheme", e);
			},
			fullScreen: function () {
				try {
					document.documentElement.webkitRequestFullScreen();
				} catch (e) {}
			},
			Logout: function () {
				var e = this;
				this.$store.dispatch("setPrivateSkins", {
					list: []
				});
				this.$store.dispatch("setColor", {
					color: null
				});
				this.$store.dispatch("setId", {
					id: 0
				});
				this.$store.dispatch("Logout").then(function (t) {
					if (t == 1) {
						e.$router.push("/agar.rs/");
					} else {
						window.location.href = "/agar.rs/";
					}
				});
			},
			getHatById: function (e) {
				for (var t = 0; t < this.allHats.length; t++) {
					if (this.allHats[t].id == e) {
						return this.allHats[t];
					}
				}
			},
			changeNicknameModal: function () {
				$("#new-nickname-modal").modal({}).modal("show");
			},
			changeNickname: function () {
				var e = this;
				var t = this.newNick.trim();
				if (t == "") {
					e.message = i18n.messages[e.lang].logged.no_name;
				} else {
					t = t.slice(0, 15);
					var n = {
						token_header: localStorage.token_header,
						token_log: localStorage.token_log,
						nickname: encodeURI(t)
					};
					this.form.get_json(base_url2 + "Home/changeNick.json", n).then(function (n) {
						if (n.status == 1) {
							e.$store.commit("CHANGE_LOGGED_NAME", {
								name: t
							});
							sessionStorage.setItem("playerName", t);
							e.message = "<span style=\"color:#62cf35;\">" + i18n.messages[e.lang].logged.successfully_changed_nickname + "</span>";
						} else if (n.status == 0) {
							e.message = i18n.messages[e.lang].logged.no_name;
						} else if (n.status == 2) {
							e.message = i18n.messages[e.lang].logged.wrong_login;
						} else if (n.status == 3) {
							e.message = i18n.messages[e.lang].logged.nickname_hours;
						} else if (n.status == 4) {
							e.message = i18n.messages[e.lang].login.nickname_exist;
						} else {
							e.message = i18n.messages[e.lang].mp.error;
						}
					}, function (t) {
						e.message = i18n.messages[e.lang].mp.error;
					});
				}
			},
			changeProfileSettingsModal: function () {
				$("#profile-settings-modal").modal({}).modal("show");
			},
			openCoinsModal: function () {
				swal({
					title: "",
					type: "question",
					html: "<strong>Prizes for the <a href=\"/agar.rs/highscores\" target=\"_blank\">best results: </a></strong><br /><br /><u>Daily Rewards:</u><br />1st place <img class=\"coins-img\" src=\"/agar.rs/assets/images/coins.png\" /><strong>500</strong><br />2nd place <img class=\"coins-img\" src=\"/agar.rs/assets/images/coins.png\" /><strong>300</strong><br />3rd place <img class=\"coins-img\" src=\"/agar.rs/assets/images/coins.png\" /><strong>200</strong><br /><br /><u>Monthly Rewards:</u><br />1st place <img class=\"coins-img\" src=\"/agar.rs/assets/images/coins.png\" /><strong>10.000</strong><br />2nd place <img class=\"coins-img\" src=\"/agar.rs/assets/images/coins.png\" /><strong>7.000</strong><br />3rd place <img class=\"coins-img\" src=\"/agar.rs/assets/images/coins.png\" /><strong>5.000</strong><br /><br /><small>Rewards are valid only for logged-in players on the leaderboard and are awarded on the first of every month.</small>",
					showCloseButton: true,
					showConfirmButton: false
				});
			},
			chooseHat: function (e) {
				var t = atob(e);
				this.$store.commit("CHANGE_HAT", {
					name: t
				});
				this.$router.push("/agar.rs/");
			}
		}
	};
}, function (e, t, n) {
	"use strict";

	Object.defineProperty(t, "__esModule", {
		value: true
	});
	t.default = {
		data: function () {
			return {
				lang: window.lang,
				lang_country: "gb",
				languages: ["rs", "hr", "ba", "mk", "si"],
				fromApp: false
			};
		},
		mounted: function () {
			$(".right.menu.open").on("click", function (e) {
				e.preventDefault();
				$(".ui.vertical.menu").fadeToggle();
			});
			$(".ui.dropdown").dropdown();
			this.getCountry();
			if (window.location.origin.includes("m.agar.rs")) {
				this.fromApp = true;
			}
		},
		methods: {
			changeLanguage: function (e) {
				document.cookie = "lang=" + e + ";";
				window.i18n.locale = e;
				this.lang = e;
				$(".change-country").removeClass("active visible").find(".menu").addClass("hidden").css("display", "none");
			},
			getCountry: function () {
				var e = ("; " + document.cookie).split("; lang=");
				if (e.length == 2) {
					var t = e.pop().split(";").shift();
				}
				if (t) {
					window.lang = t;
				}
				var n = this;
				n.changeLanguage("gb");
			},
			musicPage: function () {
				$("#music-modal").modal("show");
			},
			fullScreen: function () {
				try {
					document.documentElement.webkitRequestFullScreen();
				} catch (e) {}
			},
			openCoinsModal: function () {
				swal({
					title: "",
					html: "<strong>Prizes for the <a href=\"/agar.rs/highscores\" target=\"_blank\">best results: </a></strong><br /><br /><u>Daily Rewards:</u><br /><br />1st place <img class=\"coins-img\" src=\"/agar.rs/assets/images/coins.png\" /><strong>500</strong><br />2nd place <img class=\"coins-img\" src=\"/agar.rs/assets/images/coins.png\" /><strong>300</strong><br />3rd place <img class=\"coins-img\" src=\"/agar.rs/assets/images/coins.png\" /><strong>200</strong><br /><br /><u>Monthly Rewards:</u><br /><br />1st place <img class=\"coins-img\" src=\"/agar.rs/assets/images/coins.png\" /><strong>10.000</strong><br />2nd place <img class=\"coins-img\" src=\"/agar.rs/assets/images/coins.png\" /><strong>7.000</strong><br />3rd place <img class=\"coins-img\" src=\"/agar.rs/assets/images/coins.png\" /><strong>5.000</strong><br /><br /><small>Rewards are valid only for logged-in players on the leaderboard and are awarded on the first of every month.</small>",
					showCloseButton: true,
					showConfirmButton: false
				});
			}
		}
	};
}, function (e, t, n) {
	"use strict";

	Object.defineProperty(t, "__esModule", {
		value: true
	});
	t.default = {
		props: ["show"]
	};
}, function (e, t, n) {
	"use strict";

	Object.defineProperty(t, "__esModule", {
		value: true
	});
	t.default = {
		name: "VueAds",
		props: {
			adClient: {
				type: String,
				required: true
			},
			adSlot: {
				type: String,
				required: true
			},
			adFormat: {
				type: String,
				required: false,
				default: "auto"
			},
			adLayoutKey: {
				type: String,
				required: false,
				default: ""
			},
			adStyle: {
				type: String,
				required: false,
				default: "display: block"
			},
			fullWidthResponsive: {
				type: String,
				required: false,
				default: "true"
			}
		},
		mounted: function () {
			try {
				(window.adsbygoogle = window.adsbygoogle || []).push({});
			} catch (e) {
				console.log("ads error" + this.adSlot + ": " + e);
			}
		}
	};
}, function (e, t, n) {
	"use strict";

	Object.defineProperty(t, "__esModule", {
		value: true
	});
	var i = Object.assign || function (e) {
		for (var t = 1; t < arguments.length; t++) {
			var n = arguments[t];
			for (var i in n) {
				if (Object.prototype.hasOwnProperty.call(n, i)) {
					e[i] = n[i];
				}
			}
		}
		return e;
	};
	var o = n(3);
	t.default = {
		data: function () {
			return {
				fontSize: 16,
				minimized: false,
				emoji: false,
				chatForm: new Form({})
			};
		},
		computed: i({}, (0, o.mapState)({
			theme: function (e) {
				return e.main.theme;
			},
			on_mobile: function (e) {
				return e.main.on_mobile;
			},
			options: function (e) {
				return e.main.settings.options;
			},
			oldChat: function (e) {
				return e.main.settings.options.oldChat;
			},
			color: function (e) {
				return e.main.color;
			}
		})),
		updated: function () {},
		methods: i({}, (0, o.mapActions)(["goSkins", "goSkinsShow", "goTransparent", "goLines", "goInfiniteScroll"]), {
			zoomFont: function (e) {
				if (e == "in") {
					this.fontSize++;
				} else {
					this.fontSize--;
				}
			},
			minimize: function () {
				this.minimized = true;
				$(".chat-body").hide();
				$(".chat-footer").hide();
				$(".chat").css({
					height: "50px"
				});
			},
			pickColor: function () {
				document.getElementById("chat-color-picker").style.left = "0px";
				document.getElementById("chat-color-picker").focus();
				document.getElementById("chat-color-picker").value = this.color;
				document.getElementById("chat-color-picker").click();
			},
			maximize: function () {
				this.minimized = false;
				if (self.on_mobile) {
					e = "170px";
				} else {
					var e = "250px";
				}
				$(".chat-body").show();
				$(".chat-footer").show();
				$(".chat").css({
					height: e
				});
			},
			sendLocation: function () {
				window.sendLocation();
				$("#chat_textbox-wrap .marker").css("visibility", "hidden");
				setTimeout(function () {
					$("#chat_textbox-wrap .marker").css("visibility", "visible");
				}, 2000);
			},
			block: function () {
				if ($(".block-name").text() != "") {
					window.blockFromChat($(".block-name").text());
				}
				$(".block-user").hide();
				$(".block-name").text("");
			},
			cancelBlock: function () {
				$(".block-user").hide();
				$(".block-name").text("");
			},
			insertEmoji: function (e) {
				$("#chat_textbox").val($("#chat_textbox").val() + e).focus();
			},
			saveColor: function (e) {
				this.$store.dispatch("setColor", {
					color: e.target.value
				});
				if (localStorage.token_header && localStorage.token_log) {
					var t = {
						color: e.target.value,
						token_header: localStorage.token_header,
						token_log: localStorage.token_log
					};
					this.chatForm.get_json(base_url2 + "Home/updateColor.json", t).then(function (e) {}, function (e) {});
				}
			}
		}),
		created: function () {},
		mounted: function () {
			$(document).ready(function () {
				$(".chat").draggable();
				$(".chat").resizable({
					animate: 0,
					containment: "#canvas"
				});
				$("#chat_textbox-wrap .heart").click(function () {
					$("#chat_textbox").val($("#chat_textbox").val() + "❤").focus();
				});
				$("body").on("contextmenu", ".chat", function (e) {
					return false;
				});
				$("body").on("contextmenu", "strong.chatname-options", function (e) {
					if (sessionStorage.playerName != $(e.target).text()) {
						$(".block-user").show();
						$(".block-name").text($(e.target).text());
					}
				});
			});
		}
	};
}, function (e, t, n) {
	"use strict";

	Object.defineProperty(t, "__esModule", {
		value: true
	});
	t.default = {
		data: function () {
			return {};
		},
		created: function () {
			var e = this.$route.params.id;
			if (e == -1) {
				this.$router.replace({
					name: "index"
				});
			} else {
				this.$router.replace({
					params: {
						id: e
					},
					name: "loggedLink"
				});
			}
		}
	};
}, function (e, t, n) {
	"use strict";

	Object.defineProperty(t, "__esModule", {
		value: true
	});
	var i = Object.assign || function (e) {
		for (var t = 1; t < arguments.length; t++) {
			var n = arguments[t];
			for (var i in n) {
				if (Object.prototype.hasOwnProperty.call(n, i)) {
					e[i] = n[i];
				}
			}
		}
		return e;
	};
	var o = n(3);
	t.default = {
		data: function () {
			return {};
		},
		computed: i({}, (0, o.mapState)({
			am_logged_in: function (e) {
				return e.main.am_logged_in;
			},
			mobile: function (e) {
				return e.main.on_mobile;
			}
		})),
		updated: function () {},
		methods: {
			defaultKeyboardKeys: function () {
				$("#keyholder > div").each(function () {
					var e = $(this).find("input");
					var t = e.attr("id").split("-")[1];
					if (window.gameKeys[t] == " ") {
						$("#key-" + t).val("SPACE");
					} else {
						$("#key-" + t).val(window.gameKeys[t]);
					}
					e.focus(function () {
						$(this).val("");
					});
					e.focusout(function () {
						if ($(this).val() == "") {
							$(this).val(window.gameKeys[t]);
							if (window.gameKeys[t] == " ") {
								$("#key-" + t).val("SPACE");
							}
						}
					});
				});
			},
			defineKey: function (e, t) {
				e.preventDefault();
				var n = e.key.toLowerCase();
				for (var i in window.gameKeys) {
					if (window.gameKeys[i] != null && n == window.gameKeys[i]) {
						e.target.value = "";
						return 0;
					}
				}
				e.target.value = "";
				window.gameKeys[t] = n;
				localStorage.setItem("gameKeys", JSON.stringify(window.gameKeys));
				e.target.value = n == " " ? "SPACE" : n;
			}
		},
		created: function () {},
		mounted: function () {
			var e = this;
			$(document).ready(function () {
				e.defaultKeyboardKeys();
			});
		}
	};
}, function (e, t, n) {
	"use strict";

	Object.defineProperty(t, "__esModule", {
		value: true
	});
	var i = Object.assign || function (e) {
		for (var t = 1; t < arguments.length; t++) {
			var n = arguments[t];
			for (var i in n) {
				if (Object.prototype.hasOwnProperty.call(n, i)) {
					e[i] = n[i];
				}
			}
		}
		return e;
	};
	var o = n(3);
	var a = function (e) {
		if (e && e.__esModule) {
			return e;
		} else {
			return {
				default: e
			};
		}
	}(n(88));
	t.default = {
		components: {
			Keybinds: a.default
		},
		data: function () {
			return {};
		},
		computed: i({}, (0, o.mapState)({
			options: function (e) {
				return e.main.settings.options;
			}
		})),
		updated: function () {
			if (this.options.mouseControl) {
				document.getElementById("canvas").onmousedown = function (e) {
					if (e.button == 0) {
						window.ejectMass();
					}
					if (e.button == 2) {
						window.splitCell();
					}
				};
			} else {
				document.getElementById("canvas").onmousedown = function (e) {
					return false;
				};
			}
		},
		methods: i({}, (0, o.mapActions)(["goSkins", "goSkinsShow", "goHats", "mouseControlFn", "goHideChat", "goOldChat", "goAcid", "goSectorsColor", "goNames", "goShowMass", "goCellBorder", "goColors", "goInfiniteScroll", "goSmooth", "goSectors", "goArrow", "gameViewZoom", "goTransparent", "goLines", "backgroundCanvasFn", "resetSettings"]), {
			settingsInStorage: function () {
				if (typeof Storage != "undefined") {
					if (localStorage.hideChat !== undefined) {
						this.options.hideChat = localStorage.hideChat === "true";
					}
					if (localStorage.oldChat !== undefined) {
						this.options.oldChat = localStorage.oldChat === "true";
						setHideChat(this.options.oldChat);
					} else {
						setHideChat(this.options.oldChat);
					}
					if (localStorage.showResults !== undefined) {
						this.options.showResults = localStorage.showResults === "true";
						setNames(this.options.showResults);
					} else {
						setNames(this.options.showResults);
					}
					if (localStorage.acidMode !== undefined) {
						this.acidMode = localStorage.acidMode === "true";
						setAcid(this.options.acidMode);
					} else {
						setAcid(this.options.acidMode);
					}
					if (localStorage.transparentCells !== undefined) {
						this.options.transparentCells = localStorage.transparentCells === "true";
						setTransparent(this.options.transparentCells);
					} else {
						setTransparent(this.options.transparentCells);
					}
					if (localStorage.showMass !== undefined) {
						this.options.showMass = localStorage.showMass === "true";
						setShowMass(this.options.showMass);
					} else {
						setShowMass(this.options.showMass);
					}
					if (localStorage.colors !== undefined) {
						this.options.colors = localStorage.colors === "true";
						setColors(this.options.colors);
					} else {
						setColors(this.options.colors);
					}
					if (localStorage.showSkins !== undefined) {
						this.options.showSkins = localStorage.showSkins === "true";
						setSkins(this.options.showSkins);
					} else {
						setSkins(this.options.showSkins);
					}
					if (localStorage.hideHats !== undefined) {
						this.options.hideHats = localStorage.hideHats === "true";
						setHats(!this.options.hideHats);
					} else {
						setHats(!this.options.hideHats);
					}
					if (localStorage.smoothView !== undefined) {
						this.options.smoothView = localStorage.smoothView === "true";
						setSmooth(this.options.smoothView);
					} else {
						setSmooth(this.options.smoothView);
					}
					if (localStorage.cellBorder !== undefined) {
						this.options.cellBorder = localStorage.cellBorder === "true";
						setCellBorder(this.options.cellBorder);
					} else {
						setCellBorder(this.options.cellBorder);
					}
					if (localStorage.infiniteScroll !== undefined) {
						this.options.infiniteScroll = localStorage.infiniteScroll === "true";
						setZoom(this.options.infiniteScroll);
					} else {
						setZoom(this.options.infiniteScroll);
					}
					if (localStorage.sectorsVisible !== undefined) {
						this.options.sectorsVisible = localStorage.sectorsVisible === "true";
						setMapSectors(this.options.sectorsVisible);
					} else {
						setMapSectors(this.options.sectorsVisible);
					}
					if (localStorage.sectorsColor === undefined) {
						this.options.sectorsColor = "#A1A1A1";
					} else {
						this.changeSectorColor(localStorage.sectorsColor);
					}
					if (localStorage.noarrow !== undefined) {
						this.options.arrowDirection = localStorage.noarrow !== "true";
					}
					if (localStorage.backgroundCanvas !== undefined) {
						this.options.backgroundCanvas = localStorage.backgroundCanvas === "true";
					}
					if (localStorage.mouseControl !== undefined) {
						this.options.mouseControl = localStorage.mouseControl === "true";
					}
					if (localStorage.showLines !== undefined) {
						this.options.showLines = localStorage.showLines === "true";
						setShowLines(this.options.showLines);
					} else {
						setShowLines(this.options.showLines);
					}
					if (localStorage.goZoomPercent !== undefined) {
						$("#game-view").progress("set progress", parseInt(localStorage.goZoomPercent / 10));
						this.gameViewZoom("");
					} else if (this.on_mobile) {
						$("#game-view").progress("set progress", 10);
						window.goZoomPercent = 1;
					} else {
						$("#game-view").progress("set progress", 4);
						window.goZoomPercent = 1.4;
					}
				}
			},
			changeSectorColor: function (e) {
				this.$store.dispatch("goSectorsColor", {
					value: e
				});
			},
			changeMapColor: function (e) {
				this.$store.dispatch("goMapColor", {
					value: e
				});
			},
			resetSettings: function () {
				localStorage.removeItem("mouseControl");
				localStorage.removeItem("hideChat");
				localStorage.removeItem("hideSkins");
				localStorage.removeItem("showSkins");
				localStorage.removeItem("hideHats");
				localStorage.removeItem("acidMode");
				localStorage.removeItem("showResults");
				localStorage.removeItem("showMass");
				localStorage.removeItem("smoothView");
				localStorage.removeItem("noarrow");
				localStorage.removeItem("goZoomPercent");
				localStorage.removeItem("backgroundCanvas");
				localStorage.removeItem("infiniteScroll");
				localStorage.removeItem("mapColor");
				localStorage.removeItem("oldChat");
				localStorage.removeItem("sectorsColor");
				localStorage.removeItem("sectorsVisible");
				localStorage.removeItem("colors");
				localStorage.removeItem("cellBorder");
				localStorage.removeItem("transparentCells");
				localStorage.removeItem("theme");
				localStorage.removeItem("showLines");
				localStorage.removeItem("gameKeys");
				window.location.reload();
			}
		}),
		created: function () {},
		mounted: function () {
			var e = this;
			var t = this;
			setTimeout(function () {
				if (e.options.mouseControl) {
					document.getElementById("canvas").onmousedown = function (e) {
						if (e.button == 0) {
							window.ejectMass();
						}
						if (e.button == 2) {
							window.splitCell();
						}
					};
				} else {
					document.getElementById("canvas").onmousedown = function (e) {
						return false;
					};
				}
			}, 10000);
			$(document).ready(function () {
				t.settingsInStorage();
			});
		}
	};
}, function (e, t, n) {
	"use strict";

	Object.defineProperty(t, "__esModule", {
		value: true
	});
	t.default = {
		name: "SafeInternet"
	};
}, function (e, t, n) {
	"use strict";

	Object.defineProperty(t, "__esModule", {
		value: true
	});
	t.default = {
		name: "SavedNicknames",
		data: function () {
			return {
				localStorageNicknames: ""
			};
		},
		mounted: function () {
			if (localStorage.savedNicknames != undefined) {
				this.localStorageNicknames = localStorage.savedNicknames;
			}
		},
		methods: {
			saveLocalNicknames: function () {
				localStorage.setItem("savedNicknames", this.localStorageNicknames);
			}
		}
	};
}, function (e, t, n) {
	"use strict";

	Object.defineProperty(t, "__esModule", {
		value: true
	});
	var i = Object.assign || function (e) {
		for (var t = 1; t < arguments.length; t++) {
			var n = arguments[t];
			for (var i in n) {
				if (Object.prototype.hasOwnProperty.call(n, i)) {
					e[i] = n[i];
				}
			}
		}
		return e;
	};
	var o = n(3);
	t.default = {
		data: function () {
			return {
				tab: 0,
				hovered: 0
			};
		},
		computed: i({}, (0, o.mapState)({
			am_logged_in: function (e) {
				return e.main.am_logged_in;
			},
			lowGraphics: function (e) {
				return e.main.lowGraphics;
			},
			activeServer: function (e) {
				return e.servers.activeServer;
			},
			first_server: function (e) {
				return e.servers.servers[0].name;
			}
		}), (0, o.mapGetters)({
			servers: "allServers"
		}), {
			microsoftBrowsers: function () {
				return /MSIE|Edge/i.test(navigator.userAgent);
			}
		}),
		methods: i({}, (0, o.mapActions)(["getPlayerStats", "changeServer"]), {
			tabSelect: function (e) {
				this.tab = e;
			},
			chServer: function (e, t, n) {
				if (n) {
					this.$store.dispatch("changeServer", e);
					if (!t) {
						this.$router.replace("/agar.rs/");
					}
				} else if (this.activeServer == "") {
					this.$store.dispatch("changeServer", e);
				}
				this.$store.dispatch("getPlayerStats");
			},
			maxPlayers: function (e, t, n) {
				if (e > 0 && t > 0) {
					if (e >= t && this.activeServer == n) {
						toastr.options = {
							closeButton: false,
							debug: false,
							newestOnTop: false,
							progressBar: false,
							positionClass: "toast-bottom-right",
							preventDuplicates: true,
							onclick: null,
							showDuration: "300",
							hideDuration: "1000",
							timeOut: "5000",
							extendedTimeOut: "1000",
							showEasing: "swing",
							hideEasing: "linear",
							showMethod: "fadeIn",
							hideMethod: "fadeOut"
						};
						toastr.warning("Server " + n + " je pun!", "error");
					}
					return Math.min(e, t);
				} else {
					return 0;
				}
			},
			getServerInfo: function (e, t) {
				$(".srv-name").text(t.split("#")[0]);
				if (e !== -1) {
					$(".srv-info-data").text(this.servers[e].allPlayers + " / " + this.servers[e].maxPlayers);
				}
				for (var n = 0; n < 10; n++) {
					if (t == this.servers[n].name) {
						$(".srv-info-data").text(this.servers[n].allPlayers + " / " + this.servers[n].maxPlayers);
						return this.servers[n].allPlayers + " / " + this.servers[n].maxPlayers;
					}
				}
			}
		}),
		created: function () {},
		mounted: function () {
			var e = this;
			$(document).ready(function () {
				if (e.$route.params.id !== undefined) {
					e.chServer(e.$route.params.id - 1, true, true);
				} else {
					var t = [0, 3, 4, 5];
					var n = t[Math.floor(Math.random() * t.length)];
					e.chServer(n, true, false);
				}
			});
		}
	};
}, function (e, t, n) {
	"use strict";

	Object.defineProperty(t, "__esModule", {
		value: true
	});
	t.default = {
		data: function () {
			return {
				toggleColors: false
			};
		},
		computed: {
			choosenTheme: function () {
				if (localStorage.theme === undefined) {
					return "tema2";
				} else {
					return this.$store.state.main.theme;
				}
			}
		},
		methods: {
			changeTheme: function (e) {
				this.$store.dispatch("changeTheme", e);
			},
			goToFun: function () {
				this.$router.replace({
					path: "/agar.rs/fun"
				});
			}
		},
		mounted: function () {}
	};
}, function (e, t, n) {
	"use strict";

	Object.defineProperty(t, "__esModule", {
		value: true
	});
	t.default = {
		data: function () {
			return {
				lang: window.lang,
				message: "",
				status: -1,
				updateProfileForm: new Form({
					password: "",
					passwordConfirm: ""
				})
			};
		},
		computed: {
			email: {
				get: function () {
					return this.$store.state.main.email;
				},
				set: function (e) {
					this.$store.commit("setEmail", e);
				}
			}
		},
		mounted: function () {},
		methods: {
			validateEmail: function (e) {
				return /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(String(e).toLowerCase());
			},
			updateSettings: function () {
				var e = this;
				var t = {
					email: this.email,
					token_header: localStorage.token_header,
					token_log: localStorage.token_log,
					password: this.updateProfileForm.password,
					passwordConfirm: this.updateProfileForm.passwordConfirm
				};
				if (t.email != "" && this.validateEmail(t.email)) {
					if ((t.password == "" || t.passwordConfirm == "") && (t.password != "" || t.passwordConfirm != "")) {
						this.message = "Passwords do not match.";
						this.status = 0;
						return 0;
					}
					if (t.password != "" && t.passwordConfirm != "" && t.password != t.passwordConfirm) {
						this.message = "Passwords do not match.";
						this.status = 0;
					} else {
						$("#loading-send").show();
						this.updateProfileForm.get_json(base_url2 + "Home/changeProfileInfo.json", t).then(function (t) {
							if (Number(t.status) == 1) {
								e.status = 1;
								e.updateProfileForm.password = "";
								e.updateProfileForm.passwordConfirm = "";
								e.message = "Information on the profile has been changed!";
							} else {
								e.status = 0;
								e.message = t.msg;
							}
							$("#loading-send").hide();
						}, function (t) {
							e.message = "Server error. Try again.";
							e.status = 0;
							$("#loading-send").hide();
						});
					}
				} else {
					this.message = "E-mail nije ispravan.";
					this.status = 0;
				}
			},
			deleteProfile: function () {
				var e = this;
				$("#loading-delete").show();
				var t = {
					token_header: localStorage.token_header,
					token_log: localStorage.token_log
				};
				this.updateProfileForm.get_json(base_url2 + "Home/deleteAccount.json", t).then(function (t) {
					$("#loading-delete").hide();
					if (Number(t.status) == 1) {
						e.status = 1;
						e.message = "Account successfully deleted!".setTimeout(function () {
							e.logout();
						}, 5000);
					}
				}, function (t) {
					e.message = "Server error. Try again.";
					e.status = -1;
					$("#loading-delete").hide();
				});
			},
			deleteFB: function () {
				var e = this;
				$("#loading-delete-fb").show();
				var t = {
					token_header: localStorage.token_header,
					token_log: localStorage.token_log
				};
				this.updateProfileForm.get_json(base_url2 + "Home/deleteFBProfile.json", t).then(function (t) {
					$("#loading-delete-fb").hide();
					if (Number(t.status) == 1) {
						e.status = 1;
						e.message = "Account data successfully deleted!".setTimeout(function () {
							e.logout();
						}, 5000);
					}
				}, function (t) {
					e.message = "Server error. Try again.";
					e.status = -1;
					$("#loading-delete-fb").hide();
				});
			},
			logout: function () {
				this.$store.dispatch("setPrivateSkins", {
					list: []
				});
				this.$store.dispatch("setColor", {
					color: null
				});
				this.$store.dispatch("setId", {
					id: 0
				});
				this.$store.dispatch("Logout").then(function (e) {
					window.location.href = "/agar.rs/";
				});
			}
		}
	};
}, function (e, t, n) {
	"use strict";

	function i(e) {
		if (e && e.__esModule) {
			return e;
		} else {
			return {
				default: e
			};
		}
	}
	Object.defineProperty(t, "__esModule", {
		value: true
	});
	var o = Object.assign || function (e) {
		for (var t = 1; t < arguments.length; t++) {
			var n = arguments[t];
			for (var i in n) {
				if (Object.prototype.hasOwnProperty.call(n, i)) {
					e[i] = n[i];
				}
			}
		}
		return e;
	};
	var a = n(3);
	var s = i(n(5));
	var r = i(n(4));
	t.default = {
		components: {
			Spinner: s.default,
			VueAds: r.default
		},
		data: function () {
			return {
				loading: true,
				form: new Form({})
			};
		},
		computed: o({}, (0, a.mapState)({
			am_logged_in: function (e) {
				return e.main.am_logged_in;
			},
			role: function (e) {
				return e.main.role;
			},
			hat: function (e) {
				return e.main.hat;
			},
			coins: function (e) {
				return e.main.coins;
			},
			hats: function (e) {
				return e.main.hatList;
			}
		}), {
			sortedArray: function () {
				return this.hats.list.sort(function (e, t) {
					if (e.is_my === t.is_my) {
						return e.price - t.price;
					} else if (e.is_my) {
						return -1;
					} else {
						return 1;
					}
				});
			}
		}),
		mounted: function () {
			$(".ui.card .image").dimmer({
				on: "hover"
			});
		},
		created: function () {
			document.title = "Hats - Agar Balkan";
			this.getHats();
		},
		updated: function () {
			$(".ui.card .image").dimmer({
				on: "hover"
			});
		},
		methods: {
			byPrice: function (e) {
				return e.slice().sort(function (e, t) {
					if (e.is_my === t.is_my) {
						return e.price - t.price;
					} else if (e.is_my) {
						return -1;
					} else {
						return 1;
					}
				});
			},
			buyHat: function (e) {
				var t = this;
				var n = "";
				var i = "";
				if (Number(this.coins) <= Number(e.price)) {
					n = "error";
					i = "You don't have enough gold coins.";
					swal({
						type: n,
						text: i,
						imageUrl: "/agar.rs/assets/images/hats/" + e.link + ".webp",
						imageAlt: e.name,
						showCloseButton: true,
						showConfirmButton: false,
						customClass: "buyHat"
					});
					return 0;
				}
				if (localStorage.token_header && localStorage.token_log) {
					var o = this;
					var a = {
						id: e.id,
						token_header: localStorage.token_header,
						token_log: localStorage.token_log
					};
					swal({
						title: "Are you sure you want to buy a hat?",
						imageAlt: e.name,
						imageUrl: "/agar.rs/assets/images/hats/" + e.link + ".webp",
						text: "Name: " + e.name + " | Price: " + e.price,
						showCancelButton: true,
						imageClass: "hat-in-swal",
						confirmButtonColor: "#3085d6",
						cancelButtonColor: "#d33",
						confirmButtonText: "Da",
						cancelButtonText: "Ne"
					}).then(function (s) {
						if (s.value) {
							swal.showLoading();
							t.form.get_json(base_url2 + "Home/buyHat.json", a).then(function (t) {
								if (t.status == 1) {
									swal.hideLoading();
									swal.close();
									n = "success";
									i = "Uspešno ste kupili kapu";
									for (var s = 0; s < o.hats.list.length; s++) {
										if (a.id == o.hats.list[s].id) {
											o.hats.list[s].is_my = true;
										}
									}
									$(".ui.card .image").dimmer({
										on: "hover"
									});
									var r = Number(o.coins) - Number(e.price);
									o.$store.dispatch("setCoins", {
										coins: r
									});
								} else {
									n = "error";
									i = t.msg;
								}
								swal({
									type: n,
									text: i,
									imageUrl: "/agar.rs/assets/images/hats/" + e.link + ".webp",
									imageAlt: e.name,
									showCloseButton: true,
									showConfirmButton: false,
									customClass: "buyHat",
									onClose: function () {
										if (n == "success") {
											o.chooseHat(e.secret);
										}
									}
								});
							}, function (e) {});
						}
					});
				}
			},
			getHats: function () {
				var e = this;
				var t = {};
				if (localStorage.token_header && localStorage.token_log) {
					t = {
						token_header: localStorage.token_header,
						token_log: localStorage.token_log
					};
				}
				this.form.get_json(base_url2 + "Home/getHatlist.json", t).then(function (t) {
					var n = {
						list: [],
						my: []
					};
					n.list = t.hats;
					n.my = t.my;
					if (t.my != undefined) {
						for (var i = 0; i < n.my.length; i++) {
							for (var o = 0; o < n.list.length; o++) {
								if (n.list[o].id == n.my[i].hat_id) {
									n.list[o].is_my = true;
								}
							}
						}
					}
					e.$store.dispatch("updateHatList", {
						list: n.list,
						my: n.my
					});
					e.loading = false;
				}, function (e) {});
			},
			chooseHat: function (e) {
				var t = atob(e);
				this.$store.commit("CHANGE_HAT", {
					name: t
				});
				this.$router.push("/agar.rs/");
			}
		}
	};
}, function (e, t, n) {
	"use strict";

	Object.defineProperty(t, "__esModule", {
		value: true
	});
	var i = Object.assign || function (e) {
		for (var t = 1; t < arguments.length; t++) {
			var n = arguments[t];
			for (var i in n) {
				if (Object.prototype.hasOwnProperty.call(n, i)) {
					e[i] = n[i];
				}
			}
		}
		return e;
	};
	var o = n(3);
	t.default = {
		components: {},
		data: function () {
			return {
				private_score: [],
				form: new Form({})
			};
		},
		computed: i({}, (0, o.mapState)({
			am_logged_in: function (e) {
				return e.main.am_logged_in;
			},
			ranks: function (e) {
				return e.main.ranks;
			},
			loggedNickName: function (e) {
				return e.main.loggedNickName;
			},
			rank: function (e) {
				return e.main.rank;
			},
			rankGame: function (e) {
				return e.main.rankGame;
			}
		})),
		mounted: function () {
			this.am_logged_in;
			this.getMyStats();
		},
		created: function () {
			document.title = "My statistics - Agar Balkan";
		},
		updated: function () {},
		methods: {
			getMyStats: function () {
				var e = this;
				var t = {
					token_header: localStorage.token_header,
					token_log: localStorage.token_log
				};
				this.form.get_json(base_url2 + "Agar/getMyPrivateScore.json", t).then(function (t) {
					if (t.status == 1) {
						e.private_score = t.private_score;
					}
				}, function (e) {});
			},
			threeDigits: function (e) {
				for (var t = e.split(",")[0].split("").reverse(), n = [], i = 0; i < t.length; i++) {
					if ((i + 1) % 3 == 0) {
						n.push(t[i]);
						n.push(".");
					} else {
						n.push(t[i]);
					}
				}
				return n.reverse().join("");
			},
			msToTime: function (e) {
				var t = (e = (e - e % 1000) / 1000) % 60 < 10 ? "0" + e % 60 : e % 60;
				var n = (e = (e - t) / 60) % 60 < 10 ? "0" + e % 60 : e % 60;
				return (e - n) / 60 + ":" + n + ":" + t;
			},
			toHHMMSS: function (e) {
				return new Date(e * 1000).toISOString().slice(11, -5);
			},
			Cb: function (e) {
				var t = ((e = ~~e) % 60).toString();
				e = (~~(e / 60)).toString();
				if (t.length < 2) {
					t = "0" + t;
				}
				return e + ":" + t;
			}
		}
	};
}, function (e, t, n) {
	"use strict";

	Object.defineProperty(t, "__esModule", {
		value: true
	});
	t.default = {
		name: "ban",
		components: {},
		data: function () {
			return {
				form: new Form({
					email: "",
					message: ""
				}),
				reportStatus: null,
				reasonToBan: window.reasonToBan,
				bannedDateTo: window.bannedDateTo
			};
		},
		mounted: function () {},
		computed: {},
		created: function () {
			document.title = "You are banned!";
		},
		updated: function () {},
		methods: {
			contactBan: function () {
				var e = this;
				this.form.get_json(base_url2 + "Agar/reportBug.json").then(function (t) {
					e.reportStatus = t;
					e.form.email = "";
					e.form.message = "";
				}, function (t) {
					e.reportStatus = 0;
				});
			}
		}
	};
}, function (e, t, n) {
	"use strict";

	Object.defineProperty(t, "__esModule", {
		value: true
	});
	t.default = {
		components: {},
		data: function () {
			return {
				form: new Form({
					email: "",
					message: ""
				}),
				reportStatus: null
			};
		},
		mounted: function () {
			$.ajaxSetup({
				cache: false
			});
			$.getScript("//connect.facebook.net/en_GB/sdk.js#xfbml=1&version=v2.12", function () {
				FB.init({
					appId: "100000000000000",
					version: "v2.12",
					autoLogAppEvents: true,
					xfbml: true
				});
			});
		},
		computed: {},
		created: function () {
			document.title = "Contact - Agar Balkan";
			$(document).ready(function () {});
		},
		updated: function () {},
		methods: {
			reportBug: function () {
				$("#loading-send").show();
				var e = this;
				if (e.form.email != "" && e.form.message != "") {
					this.form.get_json(base_url2 + "Agar/reportBug.json").then(function (t) {
						e.reportStatus = t;
						e.form.email = "";
						e.form.message = "";
						$("#loading-send").hide();
					}, function (t) {
						e.reportStatus = 0;
					});
				} else {
					this.reportStatus = 0;
				}
			}
		}
	};
}, function (e, t, n) {
	"use strict";

	Object.defineProperty(t, "__esModule", {
		value: true
	});
	t.default = {
		components: {},
		data: function () {
			return {
				form: new Form({
					email: "",
					message: ""
				}),
				reportStatus: null
			};
		},
		mounted: function () {},
		computed: {},
		created: function () {
			document.title = "Contribution - Agar Balkan";
			$(document).ready(function () {
				$(".ui.dropdown").dropdown();
				$.ajaxSetup({
					cache: false
				});
				$.getScript("//connect.facebook.net/en_GB/sdk.js#xfbml=1&version=v2.12", function () {
					FB.init({
						appId: "100000000000000",
						version: "v2.12",
						autoLogAppEvents: true,
						xfbml: true
					});
				});
			});
			window.onbeforeunload = function () {
				return false;
			};
		},
		updated: function () {},
		methods: {
			selectDonation: function (e) {
				$("#donate-select").val(e);
				$("#donate-form").submit();
			},
			contactUs: function () {
				$("#loading-send").show();
				var e = this;
				if (e.form.email != "" && e.form.message != "") {
					this.form.get_json(base_url2 + "Agar/reportBug.json").then(function (t) {
						e.reportStatus = t;
						e.form.email = "";
						e.form.message = "";
						$("#loading-send").hide();
					}, function (t) {
						e.reportStatus = 0;
					});
				} else {
					this.reportStatus = 0;
				}
			}
		}
	};
}, function (e, t, n) {
	"use strict";

	Object.defineProperty(t, "__esModule", {
		value: true
	});
	var i = Object.assign || function (e) {
		for (var t = 1; t < arguments.length; t++) {
			var n = arguments[t];
			for (var i in n) {
				if (Object.prototype.hasOwnProperty.call(n, i)) {
					e[i] = n[i];
				}
			}
		}
		return e;
	};
	var o = n(3);
	t.default = {
		components: {},
		data: function () {
			return {
				forgotPasswordForm: new Form({
					email: "",
					password: "",
					passwordConfirm: ""
				}),
				status: -1,
				reset: 0
			};
		},
		computed: i({}, (0, o.mapState)({
			am_logged_in: function (e) {
				return e.main.am_logged_in;
			}
		})),
		mounted: function () {
			if (this.am_logged_in) {
				this.$router.replace({
					path: "/agar.rs/",
					name: "index"
				});
			}
			if (this.$route.name == "resetPassword" && this.$route.params.code) {
				this.reset = 1;
				this.checkCode(this.$route.params.code);
			}
		},
		created: function () {
			document.title = "Forgot password - Agar Balkan";
		},
		updated: function () {},
		methods: {
			checkCode: function (e) {
				if (e != "") {
					var t = this;
					var n = {
						code: e
					};
					this.forgotPasswordForm.get_json(base_url2 + "Home/checkCode.json", n).then(function (e) {
						if (Number(e.status) == 1) {
							t.reset = 1;
						} else {
							t.reset = -1;
							t.status = 0;
						}
					}, function (e) {
						t.reset = -1;
						t.status = 0;
					});
				} else {
					this.reset = -1;
					this.status = 0;
				}
			},
			updatePasswod: function () {
				$("#loading-login").show();
				var e = this;
				var t = {
					code: this.$route.params.code,
					password: this.forgotPasswordForm.password,
					passwordConfirm: this.forgotPasswordForm.passwordConfirm
				};
				if (t.password != "" && t.passwordConfirm != "" && t.password == t.passwordConfirm) {
					this.forgotPasswordForm.get_json(base_url2 + "Home/newPasswordFromForgot.json", t).then(function (t) {
						if (Number(t.status) == 1) {
							e.status = 1;
							e.reset = -1;
						} else {
							e.status = 0;
							e.reset = -1;
						}
					}, function (t) {
						e.status = -1;
						e.reset = -1;
					});
				} else {
					$("#loading-login").hide();
					this.status = 2;
				}
			},
			forgotPassword: function () {
				$("#loading-login").show();
				var e = this;
				var t = {
					email: this.forgotPasswordForm.email
				};
				if (t.email != "") {
					this.forgotPasswordForm.get_json(base_url2 + "Home/ResetPassword.json", t).then(function (t) {
						$("#loading-login").hide();
						if (Number(t.status) == 1) {
							e.status = 1;
							e.forgotPasswordForm.email = "";
						} else {
							e.status = 0;
						}
					}, function (e) {
						$("#loading-login").hide();
					});
				} else {
					this.status = 0;
					$("#loading-login").hide();
				}
			}
		}
	};
}, function (e, t, n) {
	"use strict";

	function i(e) {
		if (e && e.__esModule) {
			return e;
		} else {
			return {
				default: e
			};
		}
	}
	Object.defineProperty(t, "__esModule", {
		value: true
	});
	var o = Object.assign || function (e) {
		for (var t = 1; t < arguments.length; t++) {
			var n = arguments[t];
			for (var i in n) {
				if (Object.prototype.hasOwnProperty.call(n, i)) {
					e[i] = n[i];
				}
			}
		}
		return e;
	};
	var a = n(3);
	var s = i(n(92));
	var r = i(n(93));
	var l = i(n(90));
	var c = i(n(91));
	var u = i(n(4));
	t.default = {
		components: {
			ServerList: s.default,
			Settings: r.default,
			SafeInternet: l.default,
			SavedNicknames: c.default,
			VueAds: u.default
		},
		props: ["am_i_logged"],
		data: function () {
			return {
				maxNickName: 15,
				lang: window.lang,
				form: new Form({}),
				isFBReady: false,
				randomSkinPosition: -1,
				nicknameInput: "",
				modalNameEmpty: false,
				skinSearch: "",
				listOfSearchedSkins: [],
				isActiveSearch: false,
				rankDisplay: true,
				hatDisplay: true,
				hatsObject: window.sesiriSlike
			};
		},
		filters: {
			ranking: function (e) {
				if (e === "c5^#") {
					return "✅";
				} else {
					return "";
				}
			}
		},
		computed: o({}, (0, a.mapState)({
			on_mobile: function (e) {
				return e.main.on_mobile;
			},
			nickname: function (e) {
				return e.main.nickname;
			},
			globalSkinName: function (e) {
				return e.main.globalSkinName;
			},
			am_logged_in: function (e) {
				return e.main.am_logged_in;
			},
			ranks: function (e) {
				return e.main.ranks;
			},
			loggedNickName: function (e) {
				return e.main.loggedNickName;
			},
			hat: function (e) {
				return e.main.hat;
			},
			rank: function (e) {
				return e.main.rank;
			},
			activeSkin: function (e) {
				return e.main.activeSkin;
			},
			rankGame: function (e) {
				return e.main.rankGame;
			},
			privateSkins: function (e) {
				return e.main.privateSkins;
			},
			randomSkins: function (e) {
				return e.main.randomSkins;
			},
			coins: function (e) {
				return e.main.coins;
			},
			fromApp: function (e) {
				return e.main.fromApp;
			}
		}), {
			hatLink: function () {
				try {
					this.hatsObject = window.sesiriSlike;
					if (this.hatsObject[this.hat]) {
						return this.hatsObject[this.hat].src;
					} else {
						return "/agar.rs/assets/images/.png";
					}
				} catch (e) {
					console.log(e);
				}
			}
		}),
		created: function () {
			document.title = "Agar Balkan";
			var e = this;
			$(document).ready(function () {
				$("#overlays").animate({
					scrollTop: 0
				}, "fast");
				if (e.$route.query.ip && !e.am_i_logged) {
					var t = e.$route.query.ip;
					console.log("Connecting to your server: " + t);
					window.CONNECTION_URL = t;
					window.setRegion(t);
				}
			});
		},
		mounted: function () {
			$.ajaxSetup({
				cache: false
			});
			$.getScript("//connect.facebook.net/en_GB/sdk.js#xfbml=1&version=v2.12", function () {
				FB.init({
					appId: "100000000000000",
					version: "v2.12",
					autoLogAppEvents: true,
					xfbml: true
				});
			});
			this.randomList(this.randomSkins);
			if (this.am_i_logged) {
				this.getPrivateSkins();
				for (var e = 0; e < this.ranks.length; e++) {
					if (this.ranks[e].key == this.rank) {
						var t = this.ranks[e].value;
						this.$store.dispatch("changeRank", {
							name: t
						});
					}
				}
				if (localStorage.badgeDisplay !== undefined) {
					this.rankDisplay = localStorage.badgeDisplay === "true";
				}
				if (localStorage.hatDisplay !== undefined) {
					this.hatDisplay = localStorage.hatDisplay === "true";
				}
			} else {
				$("#nickname").focus();
			}
			$(".ui.dropdown").dropdown();
			$("body").on("contextmenu", "#canvas", function (e) {
				return false;
			});
			$("#scroll-down").click(function () {
				$("#overlays").animate({
					scrollTop: $(document).height()
				}, 10);
			});
			try {
				(adsbygoogle = window.adsbygoogle || []).push({});
			} catch (e) {}
		},
		methods: o({}, (0, a.mapActions)(["unshiftPrivateSkin", "randomList"]), {
			updateNickname: function (e) {
				this.$store.commit("updateNickName", e.target.value);
			},
			updateGlobalSkinName: function (e) {
				this.$store.commit("CHANGE_SKINNAME", {
					name: e.target.value
				});
			},
			updateGlobalSkinNameValue: function (e) {
				this.$store.commit("CHANGE_SKINNAME", {
					name: e
				});
			},
			Logout: function () {
				this.$store.dispatch("setPrivateSkins", {
					list: []
				});
				this.$store.dispatch("setColor", {
					color: null
				});
				this.$store.dispatch("setId", {
					id: 0
				});
				this.$store.dispatch("Logout").then(function (e) {
					window.location.href = "/agar.rs/";
				});
			},
			safeName: function (e) {
				if (e == null) {
					return "";
				}
				if (e.indexOf("<") != -1 & e.indexOf(">") != -1) {
					var t = e.lastIndexOf("<");
					var n = e.lastIndexOf(">");
					var i = e.slice(n + 1);
					e = e.slice(0, t) + i;
				}
				return e;
			},
			SaveNickname: function () {
				var e = this;
				this.nicknameInput = $("#nickname-modal-input").val().trim();
				if (this.nicknameInput == "") {
					this.modalNameEmpty = true;
				} else {
					var t = window.maxNickLength == undefined ? this.maxNickName : window.maxNickLength;
					this.nicknameInput = this.nicknameInput.slice(0, t);
					var n = {
						user_id: localStorage.user_id,
						token_header: localStorage.token_header,
						token_log: localStorage.token_log,
						nickname: encodeURI(this.nicknameInput)
					};
					var i = "";
					toastr.options = {
						closeButton: false,
						debug: false,
						newestOnTop: false,
						progressBar: true,
						positionClass: "toast-bottom-right",
						preventDuplicates: false,
						onclick: null,
						showDuration: "300",
						hideDuration: "1000",
						timeOut: "5000",
						extendedTimeOut: "1000",
						showEasing: "swing",
						hideEasing: "linear",
						showMethod: "fadeIn",
						hideMethod: "fadeOut"
					};
					this.form.get_json(base_url2 + "Home/SaveNickname.json", n).then(function (t) {
						if (t.status == 1) {
							$("#overlays").show();
							$("#set-nick-modal").modal("hide");
							e.$store.commit("CHANGE_LOGGED_NAME", {
								name: e.nicknameInput
							});
						}
						if (t.status == 2) {
							i = i18n.messages[e.lang].logged.wrong_login;
						}
						i = t.status == 3 ? i18n.messages[e.lang].login.nickname_exist : i18n.messages[e.lang].mp.error;
						toastr.error(i);
						var n = $("#set-nick-modal").parent();
						$("#toast-container").appendTo(n);
					}, function (t) {
						i = i18n.messages[e.lang].mp.error;
						toastr.error(i);
						var n = $("#set-nick-modal").parent();
						$("#toast-container").appendTo(n);
					});
					sessionStorage.setItem("playerName", this.nicknameInput);
				}
			},
			getPrivateSkins: function () {
				var e = this;
				var t = {
					user_id: localStorage.user_id,
					token_header: localStorage.token_header,
					token_log: localStorage.token_log
				};
				this.form.get_json(base_url2 + "Skins/getMyPrivateSkins.json", t).then(function (t) {
					if (t.status == 1) {
						e.$store.dispatch("setPrivateSkins", {
							list: t.private_skins.slice()
						});
						for (var n in e.privateSkins) {
							e.unshiftPrivateSkin(e.privateSkins[n].skin_name);
						}
					}
				}, function (e) {});
			},
			openPrivateSkinsModal: function () {
				$("#player-private-skins-modal").modal("show");
			},
			activateSkin: function (e) {
				this.$store.commit("ACTIVE_SKIN", e);
				sessionStorage.removeItem("skinName");
				this.skin = "";
				this.updateGlobalSkinNameValue(e);
				$("#player-private-skins-modal").modal("hide");
			},
			toggleBadge: function () {
				this.rankDisplay = !this.rankDisplay;
				localStorage.setItem("badgeDisplay", this.rankDisplay);
			},
			toggleHat: function () {
				this.hatDisplay = !this.hatDisplay;
				localStorage.setItem("hatDisplay", this.hatDisplay);
			},
			safeSN: function (e) {
				if (e != null) {
					return e.replace(/ /g, "%20");
				} else {
					return "";
				}
			},
			nextSkin: function () {
				if (this.randomSkinPosition < this.randomSkins.length - 1) {
					if (++this.randomSkinPosition > -1) {
						this.updateGlobalSkinNameValue(this.randomSkins[this.randomSkinPosition]);
					}
				} else {
					this.randomSkinPosition = -1;
					this.updateGlobalSkinNameValue("");
				}
			},
			prevSkin: function () {
				if (this.randomSkinPosition == -1) {
					this.randomSkinPosition = this.randomSkins.length;
				}
				if (this.randomSkinPosition <= this.randomSkins.length) {
					this.randomSkinPosition--;
					if (this.randomSkinPosition > -1) {
						this.updateGlobalSkinNameValue(this.randomSkins[this.randomSkinPosition]);
					} else {
						this.updateGlobalSkinNameValue("");
					}
				}
			},
			music: function () {
				$("#music-modal").modal("show");
			},
			startGame: function () {
				var e = this;
				var t = window.maxNickLength == undefined ? this.maxNickName : window.maxNickLength;
				var n = "";
				var i = "";
				var o = "";
				if (this.am_logged_in) {
					if (this.loggedNickName == "") {
						$("#set-nick-modal").modal("setting", "closable", false).modal({
							blurring: true
						}).modal("show");
						return 0;
					}
					n = this.rankDisplay ? this.rankGame : "";
					i = this.hatDisplay ? "" + this.hat : "";
					o = this.loggedNickName;
				} else {
					if (this.nickname == undefined || this.nickname == "") {
						var a = "Player " + Math.floor(Math.random() * 500 + 1).toString();
						this.$store.dispatch("setNickName", {
							name: a
						});
					}
					this.$store.dispatch("setNickName", {
						name: this.nickname.slice(0, t)
					});
					o = this.nickname.slice(0, t);
					this.updateGlobalSkinNameValue(this.globalSkinName.slice(0, 16));
					sessionStorage.setItem("playerName", this.nickname);
					sessionStorage.setItem("skinName", this.globalSkinName);
				}
				setNick(o, this.globalSkinName, n, i);
				setTimeout(function () {
					setNick(o, e.globalSkinName, n, i);
				}, 1500);
				var s = "";
				try {
					s = window.atob(serIp);
				} catch (e) {
					s = serIp;
				}
				var r = this.am_logged_in ? "LOGIN|Name: " + this.loggedNickName + "[" + this.activeSkin + "]" : "NAME: " + this.nickname + "[" + this.globalSkinName + "]";
				this.$ua.trackEvent("StartGame " + sessionStorage.serverName, r, s);
				if (!ga.create) {
					var l = "StartGame " + sessionStorage.serverName + "\t" + r + "\t" + s;
					$.get("/agar.rs/data/analitika.json", {
						analitika: l
					}, function (e) {});
				}
			},
			spec: function () {
				spectate();
				var e = "";
				try {
					e = window.atob(serIp);
				} catch (t) {
					e = serIp;
				}
				if (this.am_logged_in) {
					this.$ua.trackEvent("Spec " + sessionStorage.serverName, "LOGIN|Name: " + this.loggedNickName, e);
					if (!ga.create) {
						t = "Spec " + sessionStorage.serverName + "\tLOGIN|Name: " + this.loggedNickName + "\t" + e;
						$.get("/agar.rs/data/analitika.json", {
							analitika: t
						}, function (e) {});
					}
				} else {
					this.$ua.trackEvent("Spec " + sessionStorage.serverName, "NAME: " + this.nickname, e);
					if (!ga.create) {
						var t = "Spec " + sessionStorage.serverName + "\tNAME: " + this.nickname + "\t" + e;
						$.get("/agar.rs/data/analitika.json", {
							analitika: t
						}, function (e) {});
					}
				}
			},
			openSavedNick: function () {
				$("#nicknames-modal").modal("setting", "transition", "horizontal flip").modal("show");
			},
			openFancyNickModal: function () {
				window.open("/agar.rs/data/fancy.html", "", "width=700, height=500, scrollbars=yes");
			},
			GetDailyBonus: function () {
				var e = this;
				var t = {
					token_header: localStorage.token_header,
					token_log: localStorage.token_log
				};
				this.form.get_json(base_url2 + "Discord/dailyInGameReward.json", t).then(function (t) {
					if (t.status == 1) {
						var n = Number(e.coins) + Number(t.coins);
						e.$store.dispatch("setCoins", {
							coins: n
						});
						swal({
							type: "success",
							text: t.message,
							imageUrl: "/agar.rs/assets/images/coins.png",
							imageAlt: "coins",
							showCloseButton: true,
							showConfirmButton: false
						});
					} else {
						swal({
							type: "error",
							text: t.message,
							showCloseButton: true,
							showConfirmButton: false
						});
					}
					$(".gift.icon").css({
						"pointer-events": "none",
						opacity: 0.5
					});
				}, function (e) {});
			}
		})
	};
}, function (e, t, n) {
	"use strict";

	Object.defineProperty(t, "__esModule", {
		value: true
	});
	var i = Object.assign || function (e) {
		for (var t = 1; t < arguments.length; t++) {
			var n = arguments[t];
			for (var i in n) {
				if (Object.prototype.hasOwnProperty.call(n, i)) {
					e[i] = n[i];
				}
			}
		}
		return e;
	};
	var o = n(3);
	t.default = {
		components: {},
		props: ["am_i_logged"],
		data: function () {
			return {
				loginForm: new Form({
					email: "",
					password: ""
				}),
				loggedIn: null,
				wrongCredentials: false
			};
		},
		computed: i({}, (0, o.mapState)({
			am_logged_in: function (e) {
				return e.main.am_logged_in;
			},
			fromApp: function (e) {
				return e.main.fromApp;
			}
		})),
		mounted: function () {
			var e = this;
			if (this.am_logged_in) {
				this.$router.replace({
					path: "/agar.rs/",
					name: "index"
				});
			}
			$.ajaxSetup({
				cache: false
			});
			$.getScript("//connect.facebook.net/en_GB/sdk.js#xfbml=1&version=v2.12", function () {
				FB.init({
					appId: "100000000000000",
					version: "v2.12",
					autoLogAppEvents: true,
					xfbml: true
				});
				FB.AppEvents.logPageView();
				FB.getLoginStatus(function (t) {
					e.statusChangeCallback(t);
				});
			});
		},
		created: function () {
			document.title = "Registration - Agar Balkan";
		},
		updated: function () {},
		methods: i({}, (0, o.mapActions)(["unshiftPrivateSkin"]), {
			testAPI: function () {
				var e = this;
				FB.api("/me?fields=id,first_name,last_name,age_range,email", function (t) {
					if (t && !t.error) {
						var n = {
							facebook_id: t.id,
							firstname: t.first_name,
							lastname: t.last_name,
							age_range: "",
							birthday: ""
						};
						if (t.age_range != undefined) {
							n.age_range = JSON.stringify(t.age_range);
						}
						n.email = "";
						if (t.email != undefined) {
							n.email = t.email;
						}
						var i = {
							login_facebook_json: JSON.stringify(n)
						};
						e.loginForm.get_json(base_url2 + "home/LoginFacebook.json", i).then(function (t) {
							e.loginProcess(t, false);
						}, function (e) {});
					}
				});
			},
			statusChangeCallback: function (e) {
				if (e.status === "connected") {
					this.testAPI();
				}
			},
			Login: function () {
				$("#loading-login").show();
				var e = this;
				var t = this.loginForm;
				t.password;
				t.email;
				if (t.email != "" && t.password != "") {
					this.loginForm.get_json(base_url2 + "Home/Login.json", t).then(function (t) {
						$("#loading-login").hide();
						e.loginProcess(t, true);
					}, function (e) {});
				} else {
					this.wrongCredentials = true;
					$("#loading-login").hide();
				}
			},
			facebookLogin: function () {
				var e = this;
				FB.getLoginStatus(function (t) {
					if (t.status != "connected") {
						FB.login(function (t) {
							FB.api("/me?fields=id,first_name,last_name,age_range,email", function (t) {
								if (t && !t.error) {
									var n = {
										facebook_id: t.id,
										firstname: t.first_name,
										lastname: t.last_name,
										age_range: "",
										birthday: ""
									};
									if (t.age_range != undefined) {
										n.age_range = JSON.stringify(t.age_range);
									}
									n.email = "";
									if (t.email != undefined) {
										n.email = t.email;
									}
									var i = {
										login_facebook_json: JSON.stringify(n)
									};
									e.loginForm.get_json(base_url2 + "home/LoginFacebook.json", i).then(function (t) {
										e.loginProcess(t, false);
									}, function (e) {});
								}
							});
						});
					}
				});
			},
			loginProcess: function (e, t) {
				var n = this;
				if (e.status === 1 && typeof Storage != "undefined") {
					localStorage.setItem("user_id", e.user_id);
					localStorage.setItem("token_log", e.token_log);
					localStorage.setItem("token_header", e.token_header);
					sessionStorage.removeItem("logout");
					if (e.nickname == null) {
						i = null;
					} else {
						var i = decodeURI(e.nickname);
						sessionStorage.setItem("playerName", i);
					}
					this.$store.dispatch("setLoggedNickName", {
						name: i
					});
					this.$store.dispatch("getHat", e.nickname);
					if (e.rank == null) {
						o = null;
					} else {
						var o = e.rank;
					}
					this.$store.dispatch("setRank", {
						name: o
					});
					this.$store.dispatch("setCoins", {
						coins: e.coins
					});
					this.$store.dispatch("setRole", {
						role: parseInt(e.role)
					});
					this.$store.dispatch("setColor", {
						color: e.color
					});
					this.$store.dispatch("setEmail", {
						email: e.email
					});
					this.$store.dispatch("setId", {
						id: e.user_id
					});
					this.$store.commit("LOGIN", {
						arg: true
					});
					if (localStorage.role != undefined && localStorage.role != e.role) {
						console.log("role changing");
						localStorage.setItem("role", e.role);
					}
					var a = {
						user_id: e.user_id,
						token_header: e.token_header,
						token_log: e.token_log
					};
					this.loginForm.get_json(base_url2 + "Skins/getMyPrivateSkins.json", a).then(function (e) {
						if (e.status == 1) {
							n.$store.dispatch("setPrivateSkins", {
								list: e.private_skins.slice()
							});
							for (var t in e.private_skins) {
								n.unshiftPrivateSkin(e.private_skins[t].skin_name);
							}
						}
					}, function (e) {});
					this.getHats(e.token_header, e.token_log);
					this.$router.replace({
						path: "/agar.rs/",
						name: "index"
					});
				}
				if (e.status === 0) {
					this.$store.commit("LOGIN", {
						arg: false
					});
				}
				if (t && (e.status === 2 && (this.wrongCredentials = true), e.status === 0)) {
					var s = {
						email: i18n.messages[lang].login.required
					};
					data.errors.record(s);
				}
			},
			getHats: function (e, t) {
				var n = this;
				var i = {
					token_header: e,
					token_log: t
				};
				this.loginForm.get_json(base_url2 + "Home/getHatlist.json", i).then(function (e) {
					var t = {
						list: [],
						my: []
					};
					t.list = e.hats;
					t.my = e.my;
					if (e.my != undefined) {
						for (var i = 0; i < t.my.length; i++) {
							for (var o = 0; o < t.list.length; o++) {
								if (t.list[o].id == t.my[i].hat_id) {
									t.list[o].is_my = true;
								}
							}
						}
					}
					n.$store.dispatch("updateHatList", {
						list: t.list,
						my: t.my
					});
					n.loading = false;
					setTimeout(function () {
						$(".ui.dropdown").dropdown();
					}, 500);
				}, function (e) {});
			}
		})
	};
}, function (e, t, n) {
	"use strict";

	Object.defineProperty(t, "__esModule", {
		value: true
	});
	t.default = {
		name: "fun",
		components: {},
		data: function () {
			return {
				game: "",
				game1: "/fun/index.html",
				game2: "/games/racing/"
			};
		},
		mounted: function () {
			if (this.$route.params.id != undefined) {
				if (this.$route.params.id == 1) {
					this.game = this.game1;
				}
				if (this.$route.params.id == 2) {
					this.game = this.game2;
				}
			} else {
				this.game = "";
			}
		},
		computed: {},
		created: function () {},
		updated: function () {},
		methods: {
			changeGame: function (e) {
				if (e === 1) {
					this.game = this.game1;
				}
				if (e === 2) {
					this.game = this.game2;
				}
				this.$router.push("/agar.rs/fun/" + e);
			}
		},
		watch: {
			$route: function (e, t) {
				if (e.name == "fun") {
					this.game = "";
				}
			}
		}
	};
}, function (e, t, n) {
	"use strict";

	Object.defineProperty(t, "__esModule", {
		value: true
	});
	t.default = {
		name: "pillory",
		components: {},
		data: function () {
			return {
				form: new Form({}),
				bannedList: [],
				current_date: new Date().toISOString().slice(0, 19).replace("T", " ")
			};
		},
		mounted: function () {
			this.getBannedList();
			try {
				(adsbygoogle = window.adsbygoogle || []).push({});
			} catch (e) {}
		},
		computed: {},
		created: function () {
			document.title = "Hall of Shame - Agar Balkan";
			$(document).ready(function () {});
		},
		updated: function () {},
		methods: {
			getBannedList: function () {
				var e = this;
				new Date().toISOString().slice(0, 19).replace("T", " ");
				this.form.get_json(base_url2 + "Agar/getBannedList.json", {}).then(function (t) {
					if (t.status === 1) {
						e.bannedList = t.banned;
					}
				}, function (e) {});
			},
			calcType: function (e) {
				if (e == 1) {
					return "Igra";
				} else if (e == 2) {
					return "Chat";
				} else if (e == 3) {
					return "Skinovi";
				} else {
					return undefined;
				}
			},
			calcServers: function (e) {
				if (e == "") {
					return "Svi";
				} else {
					return e;
				}
			}
		}
	};
}, function (e, t, n) {
	"use strict";

	Object.defineProperty(t, "__esModule", {
		value: true
	});
	t.default = {
		components: {},
		data: function () {
			return {};
		},
		mounted: function () {},
		computed: {},
		created: function () {
			document.title = "Privacy Policy - Agar Balkan";
			$(document).ready(function () {});
		},
		updated: function () {},
		methods: {}
	};
}, function (e, t, n) {
	"use strict";

	function i(e) {
		if (e && e.__esModule) {
			return e;
		} else {
			return {
				default: e
			};
		}
	}
	Object.defineProperty(t, "__esModule", {
		value: true
	});
	var o = i(n(5));
	var a = i(n(168));
	var s = i(n(4));
	t.default = {
		components: {
			Spinner: o.default,
			Datepicker: a.default,
			VueAds: s.default
		},
		data: function () {
			return {
				loading: true,
				list: {
					ffa1: [],
					mn2: [],
					im3: [],
					ffa4: [],
					ex5: [],
					rnbw6: [],
					vm7: [],
					oe8: [],
					pffa1: [],
					pmn2: [],
					pim3: [],
					pffa4: [],
					pex5: [],
					prnbw6: [],
					pvm7: [],
					poe8: []
				},
				startDay: null,
				endDay: null,
				format: "d MMMM yyyy",
				form: new Form({}),
				role: 0
			};
		},
		mounted: function () {
			$(document).ready(function () {
				$(".menu .item").tab();
			});
			this.role = this.$store.state.main.role;
		},
		created: function () {
			document.title = "Best results - Agar Balkan";
			this.getPrivateList();
			this.getList();
		},
		updated: function () {
			$(".menu .item").tab();
		},
		methods: {
			getMonday: function (e) {
				var t = (e = new Date(e)).getDay();
				var n = e.getDate() - t + (t == 0 ? -6 : 1);
				return new Date(e.setDate(n));
			},
			safeName: function (e) {
				if (e == null) {
					return "";
				}
				if (e.indexOf("<") != -1 & e.indexOf(">") != -1) {
					var t = e.lastIndexOf("<");
					var n = e.lastIndexOf(">");
					var i = e.slice(n + 1);
					e = e.slice(0, t) + i;
				}
				return e;
			},
			formatDate: function (e) {
				var t = new Date(e);
				var n = "" + (t.getMonth() + 1);
				var i = "" + t.getDate();
				var o = t.getFullYear();
				if (n.length < 2) {
					n = "0" + n;
				}
				if (i.length < 2) {
					i = "0" + i;
				}
				return [i, n, o].join("-");
			},
			getToday: function () {
				var e = this;
				this.form.get_json("data/score/day.json").then(function (t) {
					e.loading = false;
					if (t.status == 1) {
						e.list.pffa1 = t.list[0];
						e.list.pmn2 = t.list[1];
						e.list.pim3 = t.list[2];
						e.list.pffa4 = t.list[3];
						e.list.pex5 = t.list[4];
						e.list.prnbw6 = t.list[5];
						e.list.pvm7 = t.list[6];
						e.list.poe8 = t.list[7];
						e.startDay = new Date(t.from);
						e.endDay = new Date(t.end);
						$(".menu .item").tab();
					}
				}, function (e) {});
			},
			getPrivateList: function () {
				var e = this;
				this.form.get_json("data/score/private.json").then(function (t) {
					e.loading = false;
					if (t.status == 1) {
						e.list.pffa1 = t.list[0];
						e.list.pmn2 = t.list[1];
						e.list.pim3 = t.list[2];
						e.list.pffa4 = t.list[3];
						e.list.pex5 = t.list[4];
						e.list.prnbw6 = t.list[5];
						e.list.pvm7 = t.list[6];
						e.list.poe8 = t.list[7];
						e.startDay = new Date(t.from);
						e.endDay = new Date(t.end);
						$(".menu .item").tab();
					}
				}, function (e) {});
			},
			getList: function () {
				var e = this;
				this.form.get_json("data/score/public.json").then(function (t) {
					e.loading = false;
					if (t.status == 1) {
						e.list.ffa1 = t.list[0];
						e.list.mn2 = t.list[1];
						e.list.im3 = t.list[2];
						e.list.ffa4 = t.list[3];
						e.list.ex5 = t.list[4];
						e.list.rnbw6 = t.list[5];
						e.list.vm7 = t.list[6];
						e.list.oe8 = t.list[7];
						e.startDay = new Date(t.from);
						e.endDay = new Date(t.end);
					}
					$(".menu .item").tab();
				}, function (e) {});
			},
			numberFormat: function (e) {
				return e.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
			},
			classItem: function (e) {
				if (e == 1) {
					return "item first";
				} else if (e == 2) {
					return "item second";
				} else if (e == 3) {
					return "item third";
				} else {
					return "item";
				}
			},
			deleteScore: function (e, t) {
				var n = this;
				var i = {
					score: e,
					server: t
				};
				this.form.get_json(base_url2 + "Agar/deleteScore.json", i).then(function (i) {
					switch (t) {
						case "FFA#1":
							for (o = 0; o < n.list.ffa1.length; o++) {
								if (n.list.ffa1[o].score == e) {
									n.list.ffa1.splice(o, 1);
								}
							}
							for (o = 0; o < n.list.pffa1.length; o++) {
								if (n.list.pffa1[o].score == e) {
									n.list.pffa1.splice(o, 1);
								}
							}
							break;
						case "MINIONS#2":
							for (o = 0; o < n.list.mn2.length; o++) {
								if (n.list.mn2[o].score == e) {
									n.list.mn2.splice(o, 1);
								}
							}
							for (o = 0; o < n.list.pmn2.length; o++) {
								if (n.list.pmn2[o].score == e) {
									n.list.pmn2.splice(o, 1);
								}
							}
							break;
						case "INSTANT MERGE#3":
							for (o = 0; o < n.list.im3.length; o++) {
								if (n.list.im3[o].score == e) {
									n.list.im3.splice(o, 1);
								}
							}
							for (o = 0; o < n.list.pim3.length; o++) {
								if (n.list.pim3[o].score == e) {
									n.list.pim3.splice(o, 1);
								}
							}
							break;
						case "MEGA SPLIT#4":
							for (o = 0; o < n.list.ffa4.length; o++) {
								if (n.list.ffa4[o].score == e) {
									n.list.ffa4.splice(o, 1);
								}
							}
							for (o = 0; o < n.list.pffa4.length; o++) {
								if (n.list.pffa4[o].score == e) {
									n.list.pffa4.splice(o, 1);
								}
							}
							break;
						case "EXPERIMENTAL#5":
							for (o = 0; o < n.list.ex5.length; o++) {
								if (n.list.ex5[o].score == e) {
									n.list.ex5.splice(o, 1);
								}
							}
							for (o = 0; o < n.list.pex5.length; o++) {
								if (n.list.pex5[o].score == e) {
									n.list.pex5.splice(o, 1);
								}
							}
							break;
						case "RAINBOW#6":
							for (o = 0; o < n.list.rnbw6.length; o++) {
								if (n.list.rnbw6[o].score == e) {
									n.list.rnbw6.splice(o, 1);
								}
							}
							for (o = 0; o < n.list.prnbw6.length; o++) {
								if (n.list.prnbw6[o].score == e) {
									n.list.prnbw6.splice(o, 1);
								}
							}
							break;
						case "VIRUS MINES#7":
							for (o = 0; o < n.list.vm7.length; o++) {
								if (n.list.vm7[o].score == e) {
									n.list.vm7.splice(o, 1);
								}
							}
							for (o = 0; o < n.list.pvm7.length; o++) {
								if (n.list.pvm7[o].score == e) {
									n.list.pvm7.splice(o, 1);
								}
							}
							break;
						case "OLD EXP#8":
							for (o = 0; o < n.list.oe8.length; o++) {
								if (n.list.oe8[o].score == e) {
									n.list.oe8.splice(o, 1);
								}
							}
							for (var o = 0; o < n.list.poe8.length; o++) {
								if (n.list.poe8[o].score == e) {
									n.list.poe8.splice(o, 1);
								}
							}
					}
				}, function (e) {});
			}
		}
	};
}, function (e, t, n) {
	"use strict";

	Object.defineProperty(t, "__esModule", {
		value: true
	});
	var i = Object.assign || function (e) {
		for (var t = 1; t < arguments.length; t++) {
			var n = arguments[t];
			for (var i in n) {
				if (Object.prototype.hasOwnProperty.call(n, i)) {
					e[i] = n[i];
				}
			}
		}
		return e;
	};
	var o = n(3);
	t.default = {
		components: {},
		props: ["am_i_logged"],
		data: function () {
			return {
				registerForm: new Form({
					nickname: "",
					email: "",
					password: ""
				}),
				loggedIn: null,
				haveErrors: true
			};
		},
		computed: i({}, (0, o.mapState)({
			am_logged_in: function (e) {
				return e.main.am_logged_in;
			},
			fromApp: function (e) {
				return e.main.fromApp;
			}
		})),
		mounted: function () {
			var e = this;
			if (this.am_logged_in) {
				this.$router.replace({
					path: "/agar.rs/",
					name: "index"
				});
			}
			$.ajaxSetup({
				cache: false
			});
			$.getScript("//connect.facebook.net/en_GB/sdk.js#xfbml=1&version=v2.12", function () {
				FB.init({
					appId: "100000000000000",
					version: "v2.12",
					autoLogAppEvents: true,
					xfbml: true
				});
				FB.AppEvents.logPageView();
				FB.getLoginStatus(function (t) {
					e.statusChangeCallback(t);
				});
			});
		},
		created: function () {
			document.title = "Registration - Agar Balkan";
		},
		updated: function () {},
		methods: {
			testAPI: function () {
				var e = this;
				FB.api("/me?fields=id,first_name,last_name,age_range,email", function (t) {
					if (t && !t.error) {
						var n = {
							facebook_id: t.id,
							firstname: t.first_name,
							lastname: t.last_name,
							age_range: "",
							birthday: ""
						};
						if (t.age_range != undefined) {
							n.age_range = JSON.stringify(t.age_range);
						}
						n.email = "";
						if (t.email != undefined) {
							n.email = t.email;
						}
						var i = {
							login_facebook_json: JSON.stringify(n)
						};
						e.registerForm.get_json(base_url2 + "home/LoginFacebook.json", i).then(function (t) {
							e.loginProcess(t, false);
						}, function (e) {});
					}
				});
			},
			statusChangeCallback: function (e) {
				if (e.status === "connected") {
					this.testAPI();
				}
			},
			Register: function () {
				$("#loading-login").show();
				var e = this;
				var t = this.registerForm.nickname.slice(0, 15);
				t = t.trim();
				var n = {
					nickname: encodeURI(t),
					password: this.registerForm.password,
					email: this.registerForm.email
				};
				this.registerForm.checkIfEmpty(n);
				if (this.registerForm.errors.any()) {
					$("#loading-login").hide();
				} else {
					this.registerForm.validateEmail({
						email: this.registerForm.email
					});
					this.registerForm.minPasswordLength({
						password: this.registerForm.password
					});
					if (this.registerForm.errors.any()) {
						$("#loading-login").hide();
					} else {
						this.registerForm.get_json(base_url2 + "Home/Registration.json", n).then(function (t) {
							$("#loading-login").hide();
							if (t.status == 1) {
								localStorage.setItem("user_id", t.user_id);
								localStorage.setItem("token_log", t.token_log);
								localStorage.setItem("token_header", t.token_header);
								if (t.nickname == null) {
									n = null;
								} else {
									var n = decodeURI(t.nickname);
									sessionStorage.setItem("playerName", n);
								}
								e.$store.dispatch("setLoggedNickName", {
									name: n
								});
								if (t.rank == null) {
									i = null;
								} else {
									var i = t.rank;
								}
								e.$store.dispatch("setRank", {
									name: i
								});
								e.$store.dispatch("setRole", {
									role: parseInt(t.role)
								});
								e.$store.dispatch("setColor", {
									color: null
								});
								e.$store.dispatch("setEmail", {
									email: t.email
								});
								e.$store.commit("LOGIN", {
									arg: true
								});
								if (localStorage.role != undefined && localStorage.role != t.role) {
									localStorage.setItem("role", t.role);
								}
								e.$router.replace({
									path: "/agar.rs/",
									name: "index"
								});
							}
							if (t.status == 2) {
								if (t.error == 1) {
									e.registerForm.errors.record({
										nickname: i18n.messages[lang].login.nickname_exist
									});
								}
								if (t.error == 2) {
									e.registerForm.errors.record({
										email: i18n.messages[lang].login.email_exist
									});
								}
							}
							if (t.status == 0) {
								e.registerForm.errors.record({
									nickname: i18n.messages[lang].login.required,
									password: i18n.messages[lang].login.required,
									email: i18n.messages[lang].login.required
								});
							}
						}, function (e) {});
					}
				}
			},
			facebookLogin: function () {
				var e = this;
				FB.getLoginStatus(function (t) {
					if (t.status != "connected") {
						FB.login(function (t) {
							FB.api("/me?fields=id,first_name,last_name,age_range,email", function (t) {
								if (t && !t.error) {
									var n = {
										facebook_id: t.id,
										firstname: t.first_name,
										lastname: t.last_name,
										age_range: "",
										birthday: ""
									};
									if (t.age_range != undefined) {
										n.age_range = JSON.stringify(t.age_range);
									}
									n.email = "";
									if (t.email != undefined) {
										n.email = t.email;
									}
									var i = {
										login_facebook_json: JSON.stringify(n)
									};
									e.registerForm.get_json(base_url2 + "home/LoginFacebook.json", i).then(function (t) {
										e.loginProcess(t, false);
									}, function (e) {});
								}
							});
						});
					}
				});
			},
			loginProcess: function (e, t) {
				if (e.status === 1 && typeof Storage != "undefined") {
					localStorage.setItem("user_id", e.user_id);
					localStorage.setItem("token_log", e.token_log);
					localStorage.setItem("token_header", e.token_header);
					sessionStorage.removeItem("logout");
					if (e.nickname == null) {
						n = null;
					} else {
						var n = decodeURI(e.nickname);
						sessionStorage.setItem("playerName", n);
					}
					this.$store.dispatch("setLoggedNickName", {
						name: n
					});
					if (e.rank == null) {
						i = null;
					} else {
						var i = e.rank;
					}
					this.$store.dispatch("setRank", {
						name: i
					});
					this.$store.dispatch("setRole", {
						role: parseInt(e.role)
					});
					this.$store.dispatch("setColor", {
						color: e.color
					});
					this.$store.dispatch("setEmail", {
						email: e.email
					});
					this.$store.commit("LOGIN", {
						arg: true
					});
					if (localStorage.role != undefined && localStorage.role != e.role) {
						localStorage.setItem("role", e.role);
					}
					this.$router.replace({
						path: "/agar.rs/",
						name: "index"
					});
				}
				if (e.status === 0) {
					this.$store.commit("LOGIN", {
						arg: false
					});
				}
				if (t && (e.status === 2 && (this.wrongCredentials = true), e.status === 0)) {
					var o = {
						email: i18n.messages[lang].login.required
					};
					data.errors.record(o);
				}
			}
		}
	};
}, function (e, t, n) {
	"use strict";

	Object.defineProperty(t, "__esModule", {
		value: true
	});
	t.default = {
		components: {},
		data: function () {
			return {};
		},
		mounted: function () {},
		computed: {},
		created: function () {
			document.title = "Rules - Agar Balkan";
			$(document).ready(function () {});
		},
		updated: function () {},
		methods: {}
	};
}, function (e, t, n) {
	"use strict";

	Object.defineProperty(t, "__esModule", {
		value: true
	});
	var i = Object.assign || function (e) {
		for (var t = 1; t < arguments.length; t++) {
			var n = arguments[t];
			for (var i in n) {
				if (Object.prototype.hasOwnProperty.call(n, i)) {
					e[i] = n[i];
				}
			}
		}
		return e;
	};
	var o = n(3);
	t.default = {
		name: "skinPreview",
		components: {},
		data: function () {
			return {
				name: ""
			};
		},
		mounted: function () {
			if (this.$route.params.name) {
				this.name = this.$route.params.name;
			}
		},
		computed: i({}, (0, o.mapState)({
			am_logged_in: function (e) {
				return e.main.am_logged_in;
			}
		})),
		created: function () {
			$(document).ready(function () {});
		},
		updated: function () {},
		methods: {
			chooseSkin: function (e) {
				this.$store.dispatch("setGlobalSkinName", {
					name: e
				});
				this.$store.commit("ACTIVE_SKIN", e);
				this.$router.push("/agar.rs/");
			}
		}
	};
}, function (e, t, n) {
	"use strict";

	function i(e) {
		if (e && e.__esModule) {
			return e;
		} else {
			return {
				default: e
			};
		}
	}
	Object.defineProperty(t, "__esModule", {
		value: true
	});
	var o = Object.assign || function (e) {
		for (var t = 1; t < arguments.length; t++) {
			var n = arguments[t];
			for (var i in n) {
				if (Object.prototype.hasOwnProperty.call(n, i)) {
					e[i] = n[i];
				}
			}
		}
		return e;
	};
	var a = n(3);
	var s = i(n(5));
	var r = i(n(4));
	t.default = {
		components: {
			Spinner: s.default,
			VueAds: r.default
		},
		data: function () {
			return {
				loading: true,
				top_skins: false,
				my_skins: false,
				skins: new Form({
					images: [],
					visible_images: [],
					my_liked: [],
					skin_name: "",
					additional_info: ""
				}),
				skinSearch: "",
				isActiveSearch: false,
				scrollCalled: 0,
				isLoadingNew: false,
				image: false,
				imgFile: null,
				msg_error: "",
				success_uploaded: "",
				success: false,
				myCrop: null,
				private: false
			};
		},
		computed: o({}, (0, a.mapState)({
			am_logged_in: function (e) {
				return e.main.am_logged_in;
			},
			role: function (e) {
				return e.main.role;
			}
		})),
		mounted: function () {
			var e = this;
			if (this.$route.hash == "#private") {
				$("#upload-skin-modal").modal("show");
				this.private = true;
			}
			$(document).ready(function () {
				function t(t) {
					if (t.files && t.files[0]) {
						var n = new FileReader();
						n.onload = function (t) {
							e.image = true;
							e.myCrop.croppie("bind", {
								url: t.target.result
							}).then(function () {
								$("#upload-skin-modal").modal("refresh");
							});
						};
						n.readAsDataURL(t.files[0]);
					} else {
						console.log("Sorry - you're browser doesn't support the FileReader API");
					}
				}
				$.getScript("/agar.rs/assets/js/croppie.min.js", function (t, n, i) {
					e.myCrop = $("#uploadd").croppie({
						viewport: {
							width: 400,
							height: 400,
							type: "circle"
						},
						format: "png",
						boundary: {
							width: 450,
							height: 400
						}
					});
				});
				$("#imageFile").on("change", function () {
					t(this);
				});
			});
			try {
				(adsbygoogle = window.adsbygoogle || []).push({});
			} catch (e) {}
		},
		created: function () {
			document.title = "Skins - Agar Balkan";
			this.getMyVotes();
			this.getSkinsDB();
		},
		updated: function () {
			var e = this;
			$("#skins-cards").scroll(function (t) {
				if (e.scrollCalled == 0 && $(this).scrollTop() + $(this).innerHeight() >= $(this)[0].scrollHeight && e.skinSearch.length < 3 && !e.top_skins && !e.my_skins) {
					e.scrollCalled = 1;
					e.getSkinsDBNext();
				}
			});
		},
		methods: {
			getMyVotes: function () {
				if (localStorage.token_header && localStorage.token_log) {
					var e = this;
					var t = {
						user_id: localStorage.user_id,
						token_header: localStorage.token_header,
						token_log: localStorage.token_log
					};
					this.skins.get_json(base_url2 + "Skins/myLikedSkins.json", t).then(function (t) {
						if (t.status == 1) {
							e.skins.my_liked = t.list;
						}
					}, function (e) {});
				}
			},
			getSkinsDB: function () {
				var e = this;
				this.skins.get_json(base_url2 + "Skins/getSkinList.json").then(function (t) {
					e.skins.images = t.list;
					for (var n in e.skins.images) {
						e.skins.images[n].me = 0;
					}
					e.skins.visible_images = e.skins.images;
					e.loading = false;
				}, function (e) {});
			},
			getTopSkins: function () {
				this.top_skins = true;
				this.my_skins = false;
				this.isLoadingNew = true;
				this.skins.visible_images = [];
				var e = this;
				this.skins.get_json(base_url2 + "Skins/topRatedSkinList.json").then(function (t) {
					e.skins.visible_images = t.top;
					e.isLoadingNew = false;
					e.loading = false;
				}, function (e) {});
			},
			myTopSkins: function () {
				this.skins.visible_images = this.skins.my_liked.slice(0);
				this.my_skins = true;
				this.top_skins = true;
			},
			returnSkins: function () {
				this.top_skins = false;
				this.skins.visible_images = this.skins.images;
			},
			getSkinsDBNext: function () {
				var e = this;
				this.isLoadingNew = true;
				var t = {};
				t.position = $(".card").last().attr("data-skin-id");
				this.skins.get_json(base_url2 + "Skins/getSkinListNext.json", t).then(function (t) {
					e.skins.visible_images = e.skins.visible_images.concat(t.list);
					for (var n in e.skins.visible_images) {
						if (e.skins.visible_images[n].me == undefined) {
							e.skins.visible_images[n].me = 0;
						}
					}
					e.scrollCalled = 0;
					e.isLoadingNew = false;
				}, function (e) {});
			},
			skinSearchDB: function () {
				var e = this;
				if (this.skinSearch.length == 0) {
					this.skins.visible_images = this.skins.images.slice();
				}
				if (this.skinSearch.length > 2) {
					this.isActiveSearch = true;
					var t = {
						term: this.skinSearch
					};
					this.skins.visible_images = [];
					this.skins.get_json(base_url2 + "Skins/searchSkin.json", t).then(function (t) {
						if (t.status == 1) {
							e.skins.visible_images = t.list.slice();
							for (var n in e.skins.visible_images) {
								if (e.skins.visible_images[n].me == undefined) {
									e.skins.visible_images[n].me = 0;
								}
							}
							for (var i in e.skins.my_liked);
							e.isActiveSearch = false;
						}
					}, function (e) {});
				}
			},
			chooseSkin: function (e) {
				this.$store.dispatch("setGlobalSkinName", {
					name: e
				});
				this.$store.commit("ACTIVE_SKIN", e);
				this.$router.push("/agar.rs/");
			},
			voteSkin: function (e, t) {
				var n = this;
				var i = this;
				var o = {
					user_id: localStorage.user_id,
					token_header: localStorage.token_header,
					token_log: localStorage.token_log,
					skin_id: e
				};
				$("#heart-for-" + e).toggleClass("vote");
				this.skins.get_json(base_url2 + "Skins/voteSkin.json", o).then(function (o) {
					if (o.status == 1) {
						var a = n.findIndexById(e);
						if (o.vote == 1) {
							if (Number($("#vote-for-" + e).text()) == undefined) {
								$("#vote-for-" + e).text("1");
							} else {
								n.skins.my_liked.push({
									skin_name: t,
									id: e,
									me: 1
								});
								if (a != -1) {
									n.skins[a].me = 1;
									n.skins[a].votes = String(Number(n.skins[a].votes) + 1);
								}
							}
						} else {
							$("#vote-for-" + e).text(Number($("#vote-for-" + e).text()) - 1);
							for (var s = 0; s < i.skins.my_liked.length; s++) {
								if (n.skins.my_liked[s].id == e) {
									n.skins.my_liked.splice(s, 1);
								}
							}
							n.skins[a].me = 0;
							n.skins[a].votes = String(Number(n.skins[a].votes) - 1);
							console.log("unlinile ", n.skins[a].votes);
						}
					}
				}, function (e) {
					console.log("error", e);
				});
			},
			findIndexById: function (e) {
				for (var t in this.skins) {
					if (this.skins[t].id == e) {
						return t;
					}
				}
				return -1;
			},
			openUploadSkinModal: function () {
				$("#upload-skin-modal").modal("show");
			},
			onFileChange: function (e) {
				var t = e.target.files || e.dataTransfer.files;
				if (t.length) {
					this.imgFile = t[0];
				}
			},
			removeImage: function (e) {
				this.image = false;
				this.myCrop = null;
				self.myCrop = $("#uploadd").croppie();
				window.location.reload();
			},
			skinPreview: function (e) {
				this.$router.replace("/agar.rs/skin/" + e);
			},
			uploadSkinFunc: function () {
				var e = this;
				if (this.private == 1) {
					var t = {
						user_id: localStorage.user_id,
						token_header: localStorage.token_header,
						token_log: localStorage.token_log,
						additional_info: this.skins.additional_info
					};
					$("#showAddingSkin").show();
					this.myCrop.croppie("result", {
						type: "blob",
						size: "{400, 400}"
					}).then(function (n) {
						var i = new File([n], "priv.png", {
							type: "image/png",
							lastModified: Date.now()
						});
						var o = JSON.stringify(t);
						var a = new FormData();
						a.append("skin_json", o);
						a.append("userfile", i);
						e.skins.get_json(base_url2 + "Skins/addPrivateSkin.json", a, 1).then(function (t) {
							$("#showAddingSkin").hide();
							if (t.status == 1) {
								e.success = true;
								e.skins.skin_name = "";
								e.image = "";
								setTimeout(function () {
									e.success = false;
								}, 5000);
							} else {
								e.msg_error = t.message;
							}
						}, function (e) {
							console.log("error", e);
						});
					});
				} else if ((t = {
					name: this.skins.skin_name,
					additional_info: this.skins.additional_info
				}).name.length >= 3 && t.name.length <= 15) {
					$("#showAddingSkin").show();
					var n = {};
					this.myCrop.croppie("result", {
						type: "blob",
						size: "{400, 400}"
					}).then(function (i) {
						var o = new File([i], "testt.png", {
							type: "image/png",
							lastModified: Date.now()
						});
						n.image = o;
						var a = JSON.stringify(t);
						var s = new FormData();
						s.append("skin_json", a);
						s.append("userfile", o);
						e.skins.get_json(base_url2 + "Skins/addSkin.json", s, 1).then(function (t) {
							$("#showAddingSkin").hide();
							if (t.status == 1) {
								e.success = true;
								e.skins.skin_name = "";
								e.image = "";
								setTimeout(function () {
									e.success = false;
								}, 5000);
							} else {
								e.msg_error = t.message;
							}
						}, function (e) {
							console.log("error", e);
						});
					});
				} else {
					e.msg_error = "Error. The length of the skin name must be between 3 and 15 characters.";
				}
			},
			skinLink: function (e, t) {
				if (Number(t)) {
					return "skins_safe/" + e + ".png";
				} else {
					return "skins/" + e + ".png";
				}
			},
			bannedFromSkins: function () {
				return localStorage.bfs == "true";
			}
		}
	};
}, function (e, t, n) {
	"use strict";

	function i(e) {
		if (e && e.__esModule) {
			return e;
		} else {
			return {
				default: e
			};
		}
	}
	var o = i(n(19));
	var a = i(n(18));
	var s = n(9);
	var r = n(11);
	var l = n(13);
	var c = n(10);
	var u = n(14);
	var d = n(12);
	var p = i(n(17));
	var f = i(n(7));
	var h = i(n(20));
	var m = i(n(6));
	var g = i(n(16));
	var v = i(n(15));
	var b = n(21);
	window.base_url = location.protocol + "//agar.rs/";
	window.base_url2 = "/agar.rs/services/";
	window.YT_API = "";
	window.choosenSkin = "";
	window.serverLocation = "";
	window.domainFrom = window.location.host;
	window.gameKeys = {
		splitCell: " ",
		eject: "w",
		macroEject: "",
		close: "escape",
		spectate: "q",
		doubleSplit: null,
		quadSplit: null,
		zoomIn: "1",
		zoomOut: "2",
		arrowup: "arrowup",
		arrowdown: "arrowdown",
		arrowleft: "arrowleft",
		arrowright: "arrowright"
	};
	if (localStorage.getItem("gameKeys")) {
		try {
			var y = JSON.parse(localStorage.getItem("gameKeys"));
			for (var w in y) {
				if (y[w] != null) {
					window.gameKeys[w] = y[w];
				}
			}
		} catch (e) {
			console.log(e);
		}
	}
	f.default.use(a.default);
	f.default.use(p.default);
	var _ = {
		ba: s.lang_ba,
		hr: r.lang_hr,
		rs: l.lang_rs,
		gb: c.lang_gb,
		si: u.lang_si,
		mk: d.lang_mk
	};
	var k = ("; " + document.cookie).split("; lang=");
	if (k.length == 2) {
		var x = k.pop().split(";").shift();
	}
	if (x) {
		window.lang = x;
	} else if (domainFrom == "agar-balkan.github.io" || domainFrom == "agar-balkan.github.io") {
		window.lang = "gb";
	} else {
		window.lang = "gb";
	}
	window.i18n = new p.default({
		locale: lang,
		fallbackLocale: "gb",
		messages: _
	});
	window.onbeforeunload = function () {
		return true;
	};
	var C = new a.default({
		mode: "history",
		scrollBehavior: function (e, t, n) {
			return {
				x: 0,
				y: 0
			};
		},
		routes: v.default,
		linkActiveClass: "active"
	});
	f.default.use(o.default, {
		appName: "Agar Balkan",
		appVersion: "1.0.0",
		trackingId: "UA-100000000-1",
		debug: false,
		vueRouter: C
	});
	(0, b.sync)(g.default, C);
	f.default.use(h.default);
	new f.default({
		router: C,
		store: g.default,
		i18n: i18n,
		render: function (e) {
			return e(m.default);
		}
	}).$mount("#app");
}, function (e, t, n) {
	"use strict";

	function i(e, t, n) {
		if (t in e) {
			Object.defineProperty(e, t, {
				value: n,
				enumerable: true,
				configurable: true,
				writable: true
			});
		} else {
			e[t] = n;
		}
		return e;
	}
	function o(e) {
		if (e == null) {
			throw new TypeError("Cannot destructure undefined");
		}
	}
	Object.defineProperty(t, "__esModule", {
		value: true
	});
	var a;
	var s = function (e) {
		if (e && e.__esModule) {
			return e;
		}
		var t = {};
		if (e != null) {
			for (var n in e) {
				if (Object.prototype.hasOwnProperty.call(e, n)) {
					t[n] = e[n];
				}
			}
		}
		t.default = e;
		return t;
	}(n(8));
	var r = function (e) {
		if (e && e.__esModule) {
			return e;
		} else {
			return {
				default: e
			};
		}
	}(n(57));
	window.Form = r.default;
	var l = {
		form: new r.default({}),
		on_mobile: false,
		am_logged_in: false,
		id: 0,
		role: 0,
		email: "",
		color: null,
		am_logged_in_fast: false,
		theme: localStorage.theme,
		nickname: sessionStorage.playerName === undefined ? "" : sessionStorage.playerName,
		globalSkinName: sessionStorage.skinName === undefined ? "" : sessionStorage.skinName,
		lowGraphics: 0,
		fromApp: window.location.origin.includes("m.agar.rs"),
		loggedNickName: "",
		coins: 0,
		hat: "",
		hatList: {
			list: [],
			my: []
		},
		activeSkin: "",
		privateSkins: [],
		randomSkins: ["aer", "roty", "lock", "pokiiiii", "cnb", "alien", "vukiking", "hijene", "kruno102", "hhaubi", "okice", "bear", "reptil", "stone", "micukyyt", "maka", "tiger", "coins", "caki24", "eb_chanell", "rook", "hhaawaahh", "croft", "saso89", "thief", "srpskavucica100", "zekica", "flowers", "haski", "daki_king", "bravo", "fox", "golf_ball", "evil_panda", "avav", "drg", "an01", "vikings", "squi2", "srpskavucica38", "ruffy", "mamute", "pirate_flag", "chicken", "the_lion_king", "crow", "mii10", "srpskavucica101", "frky", "frb", "pirates", "snc", "toast", "bart", "devil", "m_y", "cro_kings", "hunter", "ram", "madara_uchiha", "lily", "garfield", "lion", "mst_by_guerrero", "mju", "tigrus", "kirby", "minijonnnnn", "lionking", "diver", "haubbi", "plug", "mask", "spidermann", "ladybug", "elephant", "warlus", "glove", "aqa", "witch", "sovice", "eagle", "pcelica_123", "fencer", "kane093", "biker", "chuck_norris", "monkey", "duck", "char1", "b28", "ice_cream", "kane028", "kong", "tdb", "boxing", "wolverine", "cactus", "ironman", "karate", "zekan", "athletic", "san", "hopy", "choko_heart", "pikachu", "p_bear", "capricorn", "emoji", "chicken_leg", "lollipop", "drmator", "dog", "spd2_byguerrero", "french_fries", "sandwich", "frankenstein", "ojz", "amor", "caki23", "chili_pepper", "amazing", "macak", "cat", "maja", "boar", "ss1", "dude", "bull", "sanik", "foxy", "deadpool", "gengice", "heart", "555", "coffe", "pig2", "batman", "bearr", "t112t", "tacospro", "xray", "c03", "bee", "squirtle", "bo1", "elvis_presley", "just_medo", "doctor_strange", "thelonewolfw22"],
		rank: "",
		rankGame: "",
		ranks: [{
			key: "a#.7",
			value: "🆎"
		}, {
			key: "c5^#",
			value: "✅"
		}, {
			key: "p5@.",
			value: "☯"
		}, {
			key: "r5@u",
			value: "🛡"
		}, {
			key: "y2=t",
			value: "📽"
		}],
		settings: {
			options: {
				mouseControl: true,
				hideChat: false,
				showResults: true,
				transparentCells: false,
				showLines: false,
				showMass: true,
				hideSkins: false,
				showSkins: true,
				hideHats: false,
				smoothView: true,
				infiniteScroll: false,
				sectorsVisible: false,
				cellBorder: false,
				colors: false,
				sectorsColor: "#a1a1a1",
				mapColor: "#F2FBFF",
				autoRespawn: false,
				arrowDirection: true,
				acidMode: false,
				oldChat: false,
				backgroundCanvas: true
			}
		},
		banned: {
			type: 0,
			reason: "",
			date_from: "",
			date_to: "",
			nickname: "",
			server: 0
		}
	};
	var c = {
		getOptions: function (e) {
			return e.settings.options;
		}
	};
	var u = {
		loggedInFunc: function (e) {
			var t = e.commit;
			var n = e.state;
			return new Promise(function (e, i) {
				if (localStorage.user_id && localStorage.token_header && localStorage.token_log) {
					var o = {
						user_id: localStorage.user_id,
						token_header: localStorage.token_header,
						token_log: localStorage.token_log
					};
					n.form.get_json(base_url2 + "Home/LoginWithToken.json", o).then(function (n) {
						if (n.status === 1) {
							t(s.LOGIN, {
								arg: true
							});
						} else if (n.status === 2) {
							t(s.LOGIN, {
								arg: false
							});
						}
						e(n);
					}, function (e) {
						console.log("Rejected checking token: ", e);
					});
				} else {
					e({
						status: 0
					});
				}
			});
		},
		getHats: function (e) {
			var t = this;
			e.commit;
			var n = e.state;
			return new Promise(function (e, i) {
				var o = t;
				var a = {};
				if (localStorage.token_header && localStorage.token_log) {
					a = {
						token_header: localStorage.token_header,
						token_log: localStorage.token_log
					};
				}
				n.form.get_json(base_url2 + "Home/getHatlist.json", a).then(function (e) {
					var t = {
						list: [],
						my: []
					};
					t.list = e.hats;
					t.my = e.my;
					if (e.my != undefined) {
						for (var n = 0; n < t.my.length; n++) {
							for (var i = 0; i < t.list.length; i++) {
								if (t.list[i].id == t.my[n].hat_id) {
									t.list[i].is_my = true;
								}
							}
						}
					}
					o.$store.dispatch("updateHatList", {
						list: t.list,
						my: t.my
					});
				}, function (e) {});
			});
		},
		Logout: function (e) {
			var t = e.commit;
			return new Promise(function (e, n) {
				var i = {
					token_header: localStorage.token_header,
					token_log: localStorage.token_log
				};
				FB.getLoginStatus(function (e) {
					e.status;
					FB.logout(function (e) {});
				});
				l.form.get_json(base_url2 + "Home/Logout.json", i).then(function (n) {
					t(s.CHANGE_LOGGED_NAME, "");
					t(s.CHANGE_HAT, "");
					t(s.CHANGE_NICKNAME, "");
					t(s.LOGIN, {
						arg: false
					});
					localStorage.removeItem("token_header");
					localStorage.removeItem("token_log");
					localStorage.removeItem("user_id");
					localStorage.removeItem("role");
					e(n.status);
				}, function (e) {});
				sessionStorage.setItem("logout", "true");
				sessionStorage.removeItem("playerName");
			});
		},
		mobilePhone: function (e) {
			var t = e.commit;
			var n = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
			if (n) {
				t(s.COME_FROM_MOBILE);
			}
			return n;
		},
		changeTheme: function (e, t) {
			var n = e.commit;
			if (t === "tema0") {
				setDarkTheme(false);
				setTwilightTheme(false);
				setCustomTheme(false);
				setMarsTheme(false);
				localStorage.removeItem("mapColor");
			} else if (t === "tema1") {
				setTwilightTheme(false);
				setDarkTheme(true);
				setMarsTheme(false);
				setCustomTheme(false);
				localStorage.removeItem("mapColor");
			} else if (t === "tema2") {
				setDarkTheme(false);
				setTwilightTheme(true);
				setMarsTheme(false);
				setCustomTheme(false);
				localStorage.removeItem("mapColor");
			} else if (t === "tema3") {
				setDarkTheme(false);
				setTwilightTheme(false);
				setMarsTheme(true);
				setCustomTheme(false);
				localStorage.removeItem("mapColor");
			} else {
				setDarkTheme(false);
				setTwilightTheme(false);
				setMarsTheme(false);
				setCustomTheme(false);
			}
			n(s.CHANGE_THEME, t);
			localStorage.setItem("theme", t);
		},
		themeInStorage: function (e) {
			var t = e.commit;
			var n = this;
			if (typeof Storage != "undefined" && (localStorage.theme !== undefined ? (n.theme = localStorage.theme, localStorage.theme === "tema0" ? (setMarsTheme(false), setDarkTheme(false), setCustomTheme(false), setTwilightTheme(false)) : localStorage.theme === "tema1" ? (setMarsTheme(false), setTwilightTheme(false), setCustomTheme(false), setDarkTheme(true)) : localStorage.theme === "tema2" ? (setMarsTheme(false), setDarkTheme(false), setCustomTheme(false), setTwilightTheme(true)) : localStorage.theme === "tema3" ? (setDarkTheme(false), setTwilightTheme(false), setCustomTheme(false), setMarsTheme(true)) : (setMarsTheme(false), setDarkTheme(false), setCustomTheme(false), setTwilightTheme(false))) : (setDarkTheme(false), setMarsTheme(false), setCustomTheme(false), setTwilightTheme(true)), localStorage.mapColor !== undefined)) {
				setDarkTheme(false);
				setMarsTheme(false);
				setTwilightTheme(false);
				var i = {
					value: localStorage.mapColor
				};
				t(s.CHANGE_OPTION_COLOR, {
					option: "mapColor",
					color: i
				});
				setCustomTheme(true);
			}
		},
		setNickName: function (e, t) {
			(0, e.commit)(s.CHANGE_NICKNAME, t);
		},
		setLoggedNickName: function (e, t) {
			(0, e.commit)(s.CHANGE_LOGGED_NAME, t);
		},
		setHat: function (e, t) {
			(0, e.commit)(s.CHANGE_HAT, t);
		},
		setGlobalSkinName: function (e, t) {
			(0, e.commit)(s.CHANGE_SKINNAME, t);
		},
		setRank: function (e, t) {
			(0, e.commit)(s.LOAD_RANK, t);
		},
		setCoins: function (e, t) {
			(0, e.commit)(s.GET_COINS, t);
		},
		setRole: function (e, t) {
			(0, e.commit)(s.SET_ROLE, t);
		},
		setColor: function (e, t) {
			(0, e.commit)(s.SET_COLOR, t);
		},
		setEmail: function (e, t) {
			(0, e.commit)(s.SET_EMAIL, t);
		},
		setId: function (e, t) {
			(0, e.commit)(s.SET_ID, t);
		},
		changeRank: function (e, t) {
			(0, e.commit)(s.CHANGE_RANK, t);
		},
		setSkinName: function (e, t) {
			e.state;
		},
		goHideChat: function (e) {
			var t = e.commit;
			var n = e.state;
			t(s.CHANGE_OPTION, {
				option: "hideChat"
			});
			localStorage.setItem("hideChat", n.settings.options.hideChat);
		},
		goOldChat: function (e) {
			var t = e.commit;
			var n = e.state;
			t(s.CHANGE_OPTION, {
				option: "oldChat"
			});
			setHideChat(n.settings.options.oldChat);
			localStorage.setItem("oldChat", n.settings.options.oldChat);
		},
		goNames: function (e) {
			var t = e.commit;
			var n = e.state;
			t(s.CHANGE_OPTION, {
				option: "showResults"
			});
			setNames(n.settings.options.showResults);
			localStorage.setItem("showResults", n.settings.options.showResults);
		},
		goShowMass: function (e) {
			var t = e.commit;
			var n = e.state;
			t(s.CHANGE_OPTION, {
				option: "showMass"
			});
			setShowMass(n.settings.options.showMass);
			localStorage.setItem("showMass", n.settings.options.showMass);
		},
		goHats: function (e) {
			var t = e.commit;
			var n = e.state;
			t(s.CHANGE_OPTION, {
				option: "hideHats"
			});
			setHats(!n.settings.options.hideHats);
			localStorage.setItem("hideHats", n.settings.options.hideHats);
		},
		goSkins: function (e) {
			var t = e.commit;
			var n = e.state;
			t(s.CHANGE_OPTION, {
				option: "hideSkins"
			});
			setSkins(!n.settings.options.hideSkins);
			localStorage.setItem("hideSkins", n.settings.options.hideSkins);
		},
		goSkinsShow: function (e) {
			var t = e.commit;
			var n = e.state;
			t(s.CHANGE_OPTION, {
				option: "showSkins"
			});
			setSkins(n.settings.options.showSkins);
			localStorage.setItem("showSkins", n.settings.options.showSkins);
		},
		goSmooth: function (e) {
			var t = e.commit;
			var n = e.state;
			t(s.CHANGE_OPTION, {
				option: "smoothView"
			});
			setSmooth(n.settings.options.smoothView);
			localStorage.setItem("smoothView", n.settings.options.smoothView);
		},
		goInfiniteScroll: function (e) {
			var t = e.commit;
			var n = e.state;
			t(s.CHANGE_OPTION, {
				option: "infiniteScroll"
			});
			setZoom(n.settings.options.infiniteScroll);
			localStorage.setItem("infiniteScroll", n.settings.options.infiniteScroll);
		},
		goColors: function (e) {
			var t = e.commit;
			var n = e.state;
			t(s.CHANGE_OPTION, {
				option: "colors"
			});
			setColors(n.settings.options.colors);
			localStorage.setItem("colors", n.settings.options.colors);
		},
		goCellBorder: function (e) {
			var t = e.commit;
			var n = e.state;
			t(s.CHANGE_OPTION, {
				option: "cellBorder"
			});
			setCellBorder(n.settings.options.cellBorder);
			localStorage.setItem("cellBorder", n.settings.options.cellBorder);
		},
		goSectors: function (e) {
			var t = e.commit;
			var n = e.state;
			t(s.CHANGE_OPTION, {
				option: "sectorsVisible"
			});
			setMapSectors(n.settings.options.sectorsVisible);
			localStorage.setItem("sectorsVisible", n.settings.options.sectorsVisible);
		},
		goSectorsColor: function (e, t) {
			var n = e.commit;
			e.state;
			n(s.CHANGE_OPTION_COLOR, {
				option: "sectorsColor",
				color: t
			});
			localStorage.setItem("sectorsColor", t.value);
		},
		goMapColor: function (e, t) {
			var n = e.commit;
			e.state;
			n(s.CHANGE_OPTION_COLOR, {
				option: "mapColor",
				color: t
			});
			setDarkTheme(false);
			setMarsTheme(false);
			setTwilightTheme(false);
			setCustomTheme(true);
			localStorage.setItem("mapColor", t.value);
		},
		goAcid: function (e) {
			var t = e.commit;
			var n = e.state;
			t(s.CHANGE_OPTION, {
				option: "acidMode"
			});
			setAcid(n.settings.options.acidMode);
			localStorage.setItem("acidMode", n.settings.options.acidMode);
		},
		goLines: function (e) {
			var t = e.commit;
			var n = e.state;
			t(s.CHANGE_OPTION, {
				option: "showLines"
			});
			setShowLines(n.settings.options.showLines);
			localStorage.setItem("showLines", n.settings.options.showLines);
		},
		goTransparent: function (e) {
			var t = e.commit;
			var n = e.state;
			t(s.CHANGE_OPTION, {
				option: "transparentCells"
			});
			setTransparent(n.settings.options.transparentCells);
			localStorage.setItem("transparentCells", n.settings.options.transparentCells);
		},
		goArrow: function (e) {
			var t = e.commit;
			var n = e.state;
			t(s.CHANGE_OPTION, {
				option: "arrowDirection"
			});
			localStorage.setItem("noarrow", !n.settings.options.arrowDirection);
		},
		mouseControlFn: function (e) {
			var t = e.commit;
			var n = e.state;
			t(s.CHANGE_OPTION, {
				option: "mouseControl"
			});
			localStorage.setItem("mouseControl", n.settings.options.mouseControl);
		},
		backgroundCanvasFn: function (e) {
			var t = e.commit;
			var n = e.state;
			t(s.CHANGE_OPTION, {
				option: "backgroundCanvas"
			});
			localStorage.setItem("backgroundCanvas", n.settings.options.backgroundCanvas);
		},
		gameViewZoom: function (e, t) {
			o(e);
			if (t == "in") {
				$("#game-view").progress("increment", 1);
			} else if (t == "out") {
				$("#game-view").progress("decrement", 1);
			}
			switch ($("#game-view").progress("get percent")) {
				case 0:
					window.goZoomPercent = 2;
					break;
				case 10:
					window.goZoomPercent = 1.9;
					break;
				case 20:
					window.goZoomPercent = 1.8;
					break;
				case 30:
					window.goZoomPercent = 1.7;
					break;
				case 40:
					window.goZoomPercent = 1.6;
					break;
				case 50:
					window.goZoomPercent = 1.5;
					break;
				case 60:
					window.goZoomPercent = 1.4;
					break;
				case 70:
					window.goZoomPercent = 1.3;
					break;
				case 80:
					window.goZoomPercent = 1.2;
					break;
				case 90:
					window.goZoomPercent = 1.1;
					break;
				case 100:
					window.goZoomPercent = 1;
			}
			localStorage.setItem("goZoomPercent", $("#game-view").progress("get percent"));
		},
		updateHatList: function (e, t, n) {
			var i = e.commit;
			e.state;
			i(s.HAT_LIST, t, n);
		},
		setPrivateSkins: function (e, t) {
			var n = e.commit;
			e.state;
			n(s.PRIVATE_SKINS, t);
		},
		getHat: function (e, t) {
			var n = e.commit;
			e.state;
			if (window.sesiriSlike == undefined) {
				return false;
			}
			if (t == null) {
				return false;
			}
			if (t.indexOf("<") != -1 & t.indexOf(">") != -1) {
				var i = t.lastIndexOf("<");
				var o = t.lastIndexOf(">");
				return !!window.sesiriSlike[t.slice(i + 1, o)] && (n(s.CHANGE_HAT, {
					name: window.sesiriSlike[t.slice(i + 1, o)].src
				}), true);
			}
			return false;
		},
		unshiftPrivateSkin: function (e, t) {
			e.state.randomSkins.unshift(t);
		},
		randomList: function (e, t) {
			var n = e.state;
			var i = t.sort(function () {
				return 0.5 - Math.random();
			});
			n.randomSkins = i;
		}
	};
	a = {};
	i(a, s.CHANGE_OPTION, function (e, t) {
		var n = t.option;
		e.settings.options[n] = !e.settings.options[n];
	});
	i(a, s.CHANGE_OPTION_COLOR, function (e, t) {
		var n = t.option;
		var i = t.color;
		e.settings.options[n] = i.value;
	});
	i(a, s.COME_FROM_MOBILE, function (e) {
		e.settings.options.mouseControl = false;
		e.on_mobile = true;
	});
	i(a, s.LOGIN, function (e, t) {
		var n = t.arg;
		e.am_logged_in = n;
	});
	i(a, s.CHANGE_SKINNAME, function (e, t) {
		var n = t.name;
		e.globalSkinName = n;
	});
	i(a, s.LOAD_RANK, function (e, t) {
		var n = t.name;
		e.rank = n;
		e.rankGame = n;
	});
	i(a, s.SET_ROLE, function (e, t) {
		var n = t.role;
		e.role = n;
	});
	i(a, s.SET_COLOR, function (e, t) {
		var n = t.color;
		window.clrdMsg = n;
		e.color = n;
	});
	i(a, s.SET_EMAIL, function (e, t) {
		var n = t.email;
		e.email = n;
	});
	i(a, s.SET_ID, function (e, t) {
		var n = t.id;
		e.id = n;
	});
	i(a, s.CHANGE_RANK, function (e, t) {
		var n = t.name;
		e.rank = n;
	});
	i(a, s.CHANGE_NICKNAME, function (e, t) {
		var n = t.name;
		e.nickname = n;
	});
	i(a, s.GET_COINS, function (e, t) {
		var n = t.coins;
		e.coins = n;
	});
	i(a, s.CHANGE_LOGGED_NAME, function (e, t) {
		var n = t.name;
		e.loggedNickName = n;
	});
	i(a, s.CHANGE_HAT, function (e, t) {
		var n = t.name;
		e.hat = n;
	});
	i(a, "setEmail", function (e, t) {
		e.email = t;
	});
	i(a, "setId", function (e, t) {
		e.id = t;
	});
	i(a, "toggleLowGraphics", function (e, t) {
		e.lowGraphics = t;
	});
	i(a, "updateNickName", function (e, t) {
		e.nickname = t;
	});
	i(a, s.HAT_LIST, function (e, t) {
		var n = t.list;
		var i = t.my;
		e.hatList.list = n;
		e.hatList.my = i;
	});
	i(a, s.PRIVATE_SKINS, function (e, t) {
		var n = t.list;
		e.privateSkins = n;
	});
	i(a, s.ACTIVE_SKIN, function (e, t) {
		e.activeSkin = t;
	});
	i(a, s.SET_BANNED, function (e, t) {
		e.banned.type = t.type;
		e.banned.reason = t.reason;
		e.banned.date_from = t.date_from;
		e.banned.date_to = t.date_to;
		e.banned.nickname = t.nickname;
		e.banned.server = t.server;
	});
	i(a, s.CHANGE_THEME, function (e, t) {
		e.theme = t;
	});
	var d = a;
	t.default = {
		state: l,
		getters: c,
		actions: u,
		mutations: d
	};
}, function (e, t, n) {
	"use strict";

	function i(e, t, n) {
		if (t in e) {
			Object.defineProperty(e, t, {
				value: n,
				enumerable: true,
				configurable: true,
				writable: true
			});
		} else {
			e[t] = n;
		}
		return e;
	}
	Object.defineProperty(t, "__esModule", {
		value: true
	});
	var o;
	var a = function (e) {
		if (e && e.__esModule) {
			return e;
		}
		var t = {};
		if (e != null) {
			for (var n in e) {
				if (Object.prototype.hasOwnProperty.call(e, n)) {
					t[n] = e[n];
				}
			}
		}
		t.default = e;
		return t;
	}(n(8));
	var s = {
		activeServer: "",
		minionServer: false,
		servers: [{
			name: "FFA#1",
			ip: "195.201.88.91",
			ips: "agar2.emupedia.net/ws3/",
			shortUrl: 1,
			currentPlayers: 0,
			allPlayers: 0,
			spectators: 0,
			maxPlayers: 0,
			gamePort: "",
			hidden_from_world: false,
			minionServer: false,
			banned_type: 0
		}, {
			name: "MINIONS#2",
			ip: "195.201.88.91",
			ips: "agar2.emupedia.net/ws3/",
			shortUrl: 2,
			currentPlayers: 0,
			allPlayers: 0,
			spectators: 0,
			maxPlayers: 0,
			gamePort: "",
			hidden_from_world: false,
			minionServer: true,
			banned_type: 0
		}, {
			name: "INSTANT MERGE#3",
			ip: "195.201.88.91",
			ips: "agar2.emupedia.net/ws3/",
			shortUrl: 3,
			currentPlayers: 0,
			allPlayers: 0,
			spectators: 0,
			maxPlayers: 0,
			gamePort: "",
			hidden_from_world: false,
			minionServer: false,
			banned_type: 0
		}, {
			name: "MEGA SPLIT#4",
			ip: "195.201.88.91",
			ips: "agar2.emupedia.net/ws3/",
			shortUrl: 4,
			currentPlayers: 0,
			allPlayers: 0,
			spectators: 0,
			maxPlayers: 0,
			gamePort: "",
			hidden_from_world: false,
			minionServer: false,
			banned_type: 0
		}, {
			name: "EXPERIMENTAL#5",
			ip: "195.201.88.91",
			ips: "agar2.emupedia.net/ws3/",
			shortUrl: 5,
			currentPlayers: 0,
			allPlayers: 0,
			spectators: 0,
			maxPlayers: 0,
			gamePort: "",
			hidden_from_world: false,
			minionServer: false,
			banned_type: 0
		}, {
			name: "RAINBOW#6",
			ip: "195.201.88.91",
			ips: "agar2.emupedia.net/ws3/",
			shortUrl: 6,
			currentPlayers: 0,
			allPlayers: 0,
			spectators: 0,
			maxPlayers: 0,
			gamePort: "",
			hidden_from_world: false,
			minionServer: false,
			banned_type: 0
		}, {
			name: "VIRUS MINES#7",
			ip: "195.201.88.91",
			ips: "agar2.emupedia.net/ws3/",
			shortUrl: 7,
			currentPlayers: 0,
			allPlayers: 0,
			spectators: 0,
			maxPlayers: 0,
			gamePort: "",
			hidden_from_world: false,
			minionServer: false,
			banned_type: 0
		}, {
			name: "OLD EXP#8",
			ip: "195.201.88.91",
			ips: "agar2.emupedia.net/ws3/",
			shortUrl: 8,
			currentPlayers: 0,
			allPlayers: 0,
			spectators: 0,
			maxPlayers: 0,
			gamePort: "",
			hidden_from_world: false,
			minionServer: false,
			banned_type: 0
		}, {
			name: "TEAMS#9",
			ip: "195.201.88.91",
			ips: "agar2.emupedia.net/ws3/",
			shortUrl: 9,
			currentPlayers: 0,
			allPlayers: 0,
			spectators: 0,
			maxPlayers: 0,
			gamePort: "",
			hidden_from_world: false,
			minionServer: false,
			banned_type: 0
		}, {
			name: "SELF-FEED#10",
			ip: "195.201.88.91",
			ips: "agar2.emupedia.net/ws3/",
			shortUrl: 10,
			currentPlayers: 0,
			allPlayers: 0,
			spectators: 0,
			maxPlayers: 0,
			gamePort: "",
			hidden_from_world: false,
			minionServer: false,
			banned_type: 0
		}]
	};
	var r = {
		allServers: function (e) {
			return e.servers;
		},
		activeServer: function (e) {
			return e.activeServer;
		},
		minionServer: function (e) {
			return e.minionServer;
		}
	};
	var l = {
		changeServer: function (e, t) {
			var n = e.commit;
			var i = e.state;
			var o = e.rootState;
			var s = t;
			if (i.servers[s] == undefined || i.servers[s].hidden_from_world && !o.main.am_logged_in) {
				s = 0;
			}
			if (location.protocol != "https:") {
				r = i.servers[s].ip + ":" + i.servers[s].gamePort;
			} else {
				var r = i.servers[s].ips + (i.servers[s].gamePort !== "" ? ":" + i.servers[s].gamePort : "");
			}
			var l = i.servers[s].shortUrl;
			var c = i.servers[s].name;
			var u = i.servers[s].minionServer;
			window.CONNECTION_URL = r;
			sessionStorage.setItem("sessionUrl", l);
			sessionStorage.setItem("server", r);
			sessionStorage.setItem("serverName", c);
			n(a.CHANGE_SERVER, {
				serverName: c
			});
			n(a.CHANGE_SERVER_TYPE, {
				minionServer: u
			});
			if (t !== undefined) {
				setRegion(r);
			}
		},
		getPlayerStats: function (e) {
			e.commit;
			var t = e.state;
			var n = e.rootState;
			var i = "data/servers.json?v=" + +new Date();
			n.main.form.get_json(i).then(function (e) {
				for (var n in e) {
					(function (n) {
						if (e[n].index) {
							var i = t.servers.find(function (t) {
								return t.shortUrl === e[n].index;
							});
							if (i) {
								i.allPlayers = e[n].current_players;
								i.maxPlayers = e[n].max_players;
							}
						}
					})(n);
				}
			}, function (e) {
				console.log("Servers stats does not work: => " + e);
			});
		},
		setBanOnServer: function (e, t, n) {
			e.commit;
		}
	};
	o = {};
	i(o, a.CHANGE_SERVER, function (e, t) {
		var n = t.serverName;
		e.activeServer = n;
	});
	i(o, a.CHANGE_SERVER_TYPE, function (e, t) {
		var n = t.minionServer;
		e.minionServer = n;
	});
	var c = o;
	t.default = {
		state: s,
		getters: r,
		actions: l,
		mutations: c
	};
}, function (e, t, n) {
	"use strict";

	function i(e, t) {
		if (!(e instanceof t)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}
	Object.defineProperty(t, "__esModule", {
		value: true
	});
	var o = function () {
		function e(e, t) {
			for (var n = 0; n < t.length; n++) {
				var i = t[n];
				i.enumerable = i.enumerable || false;
				i.configurable = true;
				if ("value" in i) {
					i.writable = true;
				}
				Object.defineProperty(e, i.key, i);
			}
		}
		return function (t, n, i) {
			if (n) {
				e(t.prototype, n);
			}
			if (i) {
				e(t, i);
			}
			return t;
		};
	}();
	var a = function () {
		function e() {
			i(this, e);
			this.errors = {};
		}
		o(e, [{
			key: "has",
			value: function (e) {
				return this.errors.hasOwnProperty(e);
			}
		}, {
			key: "any",
			value: function () {
				return Object.keys(this.errors).length > 0;
			}
		}, {
			key: "get",
			value: function (e) {
				if (this.errors[e]) {
					return this.errors[e];
				}
			}
		}, {
			key: "record",
			value: function (e) {
				this.errors = e;
			}
		}, {
			key: "clear",
			value: function (e) {
				if (e) {
					delete this.errors[e];
				} else {
					this.errors = {};
				}
			}
		}, {
			key: "hideError",
			value: function (e) {
				if (e) {
					delete this.errors[e];
				}
			}
		}]);
		return e;
	}();
	t.default = a;
}, function (e, t, n) {
	"use strict";

	function i(e, t) {
		if (!(e instanceof t)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}
	Object.defineProperty(t, "__esModule", {
		value: true
	});
	var o = function () {
		function e(e, t) {
			for (var n = 0; n < t.length; n++) {
				var i = t[n];
				i.enumerable = i.enumerable || false;
				i.configurable = true;
				if ("value" in i) {
					i.writable = true;
				}
				Object.defineProperty(e, i.key, i);
			}
		}
		return function (t, n, i) {
			if (n) {
				e(t.prototype, n);
			}
			if (i) {
				e(t, i);
			}
			return t;
		};
	}();
	var a = function (e) {
		if (e && e.__esModule) {
			return e;
		} else {
			return {
				default: e
			};
		}
	}(n(56));
	var s = function () {
		function e(t) {
			i(this, e);
			this.originalData = t;
			for (var n in t) {
				this[n] = t[n];
			}
			this.errors = new a.default();
		}
		o(e, [{
			key: "data",
			value: function () {
				var e = {};
				for (var t in this.originalData) {
					e[t] = this[t];
				}
				return e;
			}
		}, {
			key: "reset",
			value: function () {
				for (var e in this.originalData) {
					this[e] = "";
				}
				this.errors.clear();
			}
		}, {
			key: "post",
			value: function (e, t, n = 0) {
				return this.submit("post", e, t, n);
			}
		}, {
			key: "put",
			value: function (e) {
				return this.submit("put", e);
			}
		}, {
			key: "patch",
			value: function (e) {
				return this.submit("patch", e);
			}
		}, {
			key: "delete",
			value: function (e) {
				return this.submit("delete", e);
			}
		}, {
			key: "submit",
			value: function (e, t, n = this.data()) {
				if (arguments[3] === 1) {
					var i = false;
					var o = false;
					var a = "multipart/form-data";
				} else {
					var o = "application/x-www-form-urlencoded";
					var a = false;
					var i = true;
				}
				return new Promise(function (s, r) {
					$.ajax({
						url: t,
						enctype: a,
						crossDomain: true,
						contentType: o,
						type: e,
						dataType: "json",
						data: n,
						processData: i,
						success: function (e) {
							s(e);
						},
						error: function (e, t, n) {
							r(t);
						}
					});
				});
			}
		}, {
			key: "get_json",
			value: function (e) {
				return this.getjson(e);
			}
		}, {
			key: "getjson",
			value: function (e) {
				return new Promise(function (t, n) {
					$.getJSON(e, function (e) {}).done(function (e) {
						t(e);
					}).fail(function (e) {
						n(e);
					});
				});
			}
		}, {
			key: "onSuccess",
			value: function (e) {
				console.log("uspeh");
			}
		}, {
			key: "onFail",
			value: function (e) {
				alert(e);
				this.errors.record(e);
			}
		}, {
			key: "checkIfEmpty",
			value: function (e) {
				var t = {};
				for (var n in e) {
					if (e[n] == "") {
						t[n] = i18n.messages[lang].login.required;
						this.errors.record(t);
					}
				}
			}
		}, {
			key: "validateEmail",
			value: function (e) {
				var t = {};
				var n = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
				for (var i in e) {
					if (!n.test(e[i])) {
						t[i] = i18n.messages[lang].login.email_invalid;
						this.errors.record(t);
					}
				}
			}
		}, {
			key: "minPasswordLength",
			value: function (e, t = 4, n = 16) {
				var i = {};
				for (var o in e) {
					if (e[o].length < t || e[o].length > n) {
						i[o] = i18n.messages[lang].login.min_pass;
						this.errors.record(i);
					}
				}
			}
		}]);
		return e;
	}();
	t.default = s;
}, function (e, t, n) {
	(e.exports = n(1)()).push([e.i, "", ""]);
}, function (e, t, n) {
	(e.exports = n(1)()).push([e.i, "#visualEffects{display:none}.footer-links{margin:70px auto;text-align:center}.footer-links a{float:left;width:250px;color:#fff;text-align:center;padding:7px 10px;white-space:nowrap;display:block;border-radius:30px;margin:10px;text-shadow:0 0 2px #000;background:hsla(0,0%,100%,.4);transition:background 1s}.footer-links a:hover{background:hsla(33,13%,67%,.83);color:#fff}.main-page-wrap{margin:0 auto}#facebook-page,.safe-internet{border:5px solid hsla(0,0%,100%,.4);overflow-y:auto}.safe-internet{color:#fff;padding:10px;height:500px}.fb-page{border-radius:30px;max-width:100%;width:100%}.homepage-ad{text-align:center;margin:20px auto}.hv>ins{margin:0 auto}.gift{cursor:pointer}@media only screen and (min-width:1200px){.ui.mini.modal{width:360px;margin:0 0 0 -180px}#visualEffects{display:block;position:fixed;z-index:8;cursor:pointer;left:30px;top:60px;color:gold}}@media only screen and (min-width:992px){.ui.mini.modal{width:340px;margin:0 0 0 -170px}}@media only screen and (min-width:768px){.ui.mini.modal{width:35.2%;margin:0 0 0 -17.6%}}", ""]);
}, function (e, t, n) {
	(e.exports = n(1)()).push([e.i, "#contact{max-width:100%;width:300px;margin:0 auto;margin-top:50px}#contact form{position:absolute;top:50%;left:50%;margin:-187px 0 0 -150px;width:299px;height:375px}#contact input,#contact textarea{background:transparent;color:#fff;border-color:#fff}#contact h2,#contact label{color:#fff}@media (max-width:767px){#contact form{position:absolute;margin-top:100px;top:0;left:50%}}", ""]);
}, function (e, t, n) {
	(e.exports = n(1)()).push([e.i, "#contact{max-width:100%;width:300px;margin:0 auto;margin-top:50px}.cont-page{width:660px!important}.facebook-chat{margin-top:61px}#contact form{position:absolute;top:50%;left:50%;margin:-187px 0 0 -150px;width:299px;height:375px}#contact input,#contact textarea{background:transparent;color:#fff;border-color:#fff}#contact h2,#contact label{color:#fff}@media (max-width:767px){.cont-page form{position:relative!important;margin-top:0!important;top:0;left:50%}.cont-page{width:100%!important}.facebook-chat{margin:0 auto;text-align:center}}", ""]);
}, function (e, t, n) {
	(e.exports = n(1)()).push([e.i, "", ""]);
}, function (e, t, n) {
	(e.exports = n(1)()).push([e.i, "#rang-page .item,#rang-page .ordered .item:before,#rang-page em,#rang-page h1,#rang-page h3{color:#fff;-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}#rang-page .item.first{font-size:20px}#rang-page .item.second{font-size:18px}#rang-page .item.third{font-size:16px}.rang-title{display:inline-block;margin-right:5%}.dateranger{display:inline-block;position:relative;bottom:10px}#rang-page .ui.tab.segment{background:transparent;border:none}#rang-page input{border-radius:30px;border:none;width:100%;text-align:center;color:#fff;font-family:Ubuntu;font-size:14px;white-space:nowrap;background:rgba(0,0,0,.44);outline:none;padding:10px}#rang-page .ui.secondary.pointing.menu .active.item{border-color:#fff}#rang-page .ui.stackable.three.column.grid>.column{margin-top:30px}#rang-page .x.icon{cursor:pointer}#rang-page .dateranger button{border:2px solid hsla(0,0%,100%,.4);background:rgba(0,0,0,.44);text-align:center;color:#fff;box-shadow:none!important}", ""]);
}, function (e, t, n) {
	(e.exports = n(1)()).push([e.i, "#donate-form,#donate-form .dropdown{z-index:300}#contribute>.segment{margin:0 auto}#contribute>.segment p{color:#000}.paypal-donate-image{max-width:100%;width:400px;padding:0}#contribute .icon,#contribute h2,#contribute h3,#contribute label,#contribute p,#contribute textarea{color:#000}#contribute .ui.input{border:1px solid rgba(34,36,38,.15)!important}#contribute ::placeholder{color:grey!important;opacity:1}#contribute :-ms-input-placeholder,#contribute ::-ms-input-placeholder{color:grey!important}#contribute{color:#fff;margin-top:80px;font-size:18px}.label-divider{clear:both;margin-top:10px}", ""]);
}, function (e, t, n) {
	(e.exports = n(1)()).push([e.i, "", ""]);
}, function (e, t, n) {
	(e.exports = n(1)()).push([e.i, ".hats-list[data-v-3b37852a]{margin-top:25px}.hats-list .image[data-v-3b37852a]{height:200px;overflow:hidden}.hats-list .image img[data-v-3b37852a]{margin:-25% 0}.ui.card>.image.buyed[data-v-3b37852a]{background:rgba(8,128,251,.36)!important}#hats-page[data-v-3b37852a]{position:relative;z-index:1}em.info[data-v-3b37852a]{color:#fff}", ""]);
}, function (e, t, n) {
	(e.exports = n(1)()).push([e.i, "@media (min-width:767px){.skin-preview[data-v-42cb7b2b]{margin-top:70px;margin-bottom:70px;position:relative}.skin-preview .ui.card[data-v-42cb7b2b],.skin-preview .ui.cards>.card[data-v-42cb7b2b]{width:400px;position:absolute;top:50%;left:50%;margin:-253px 0 0 -200px}}.skin-preview .ui.card .content[data-v-42cb7b2b]{cursor:pointer}.skin-preview .ui.card .image[data-v-42cb7b2b]{padding:10px}.image[data-v-42cb7b2b]{cursor:pointer}", ""]);
}, function (e, t, n) {
	(e.exports = n(1)()).push([e.i, "#registerPage{max-width:100%;width:325px;margin:0 auto;margin-top:50px}#registerPage form{position:absolute;top:50%;left:50%;margin:-150px 0 0 -162px;width:325px;height:300px}#registerPage .start-btn{width:325px}#registerPage .ui.input{border:none}#registerPage input{background:transparent;color:#fff;border:none;border-bottom:2px solid #fff}#loginPage label,#registerPage .horizontal.divider,#registerPage h3{color:#fff}#registerPage .ui.icon.input>i.link.icon{color:#fff;opacity:1}#registerPage .error-text{color:#fff466}", ""]);
}, function (e, t, n) {
	(e.exports = n(1)()).push([e.i, "#nokey[data-v-4e582ddd]{z-index:1!important}iframe[data-v-4e582ddd]{width:100%;height:calc(100vh - 46px);border:none;z-index:4;position:relative}.game-list[data-v-4e582ddd]{padding:30px}.card[data-v-4e582ddd]{max-width:250px!important;cursor:pointer}@media (max-width:767px){iframe[data-v-4e582ddd]{height:calc(100vh - 46px)}.view[data-v-4e582ddd]{margin-top:27px}}", ""]);
}, function (e, t, n) {
	(e.exports = n(1)()).push([e.i, "#loginPage{max-width:100%;width:325px;margin:0 auto;margin-top:50px}#loginPage form,.message-status{position:absolute;top:50%;left:50%;margin:-90px 0 0 -162px;width:325px;height:180px}#loginPage .start-btn{width:325px}#loginPage .horizontal.divider,#loginPage h3,#loginPage label{color:#fff}.login-facebook{border:5px solid hsla(0,0%,100%,.4);border-radius:30px;width:100%;text-align:center;color:#fff;font-family:Ubuntu;font-size:14px;white-space:nowrap;background:rgba(0,0,0,.44);outline:none;margin-bottom:8px;padding:10px;text-transform:uppercase}.login-facebook:before{content:\"\";box-sizing:border-box;position:absolute;top:0;left:0;width:44px;height:100%;border-right:3px solid hsla(0,0%,100%,.4);background:url(\"/agar.rs/assets/images/icon-facebook.png\") 10px 10px no-repeat;border-radius:0;border-left:none;border-top:none;border-bottom:none}.forgot-password-link{text-align:center;margin-top:15px}.forgot-password-link>a{color:#fff;text-decoration:none}.forgot-password-link>a:hover{color:#fff}", ""]);
}, function (e, t, n) {
	(e.exports = n(1)()).push([e.i, ".ui.container[data-v-6099300a]{margin-top:70px}", ""]);
}, function (e, t, n) {
	(e.exports = n(1)()).push([e.i, ".color-option[data-v-6c255638],.ui.toggle.checkbox[data-v-6c255638]{width:100%;display:block;margin-bottom:5px}#more-settings .content h3[data-v-6c255638],.color-option label[data-v-6c255638],.ui.toggle.checkbox label[data-v-6c255638]{color:#fff}#more-settings .content[data-v-6c255638],#more-settings>.header[data-v-6c255638]{background:#939393}#more-settings>.header[data-v-6c255638]{color:#fff}#more-settings .reset-settings[data-v-6c255638]{display:inline-block;text-align:center;margin-left:5%}.reset-settings .start-btn[data-v-6c255638]{font-size:14px}", ""]);
}, function (e, t, n) {
	(e.exports = n(1)()).push([e.i, ".srv-title[data-v-713f4628]{font-size:18px;margin-top:23px;color:#fff;font-family:Ubuntu;text-shadow:0 0 2px #000}.srv-name[data-v-713f4628]{font-size:15px;margin-top:13px;margin-bottom:10px;white-space:nowrap;color:#fff;font-weight:700;font-family:Ubuntu;text-shadow:0 0 2px #000}.srv-info[data-v-713f4628]{font-size:14px;color:#fff;font-family:Ubuntu}.component[data-v-713f4628]{position:relative;font-family:Lato,Arial,sans-serif;width:300px;height:300px;margin:0 auto}.cn-button[data-v-713f4628]{position:absolute;left:50%;z-index:11;margin-top:63px;margin-left:-80px;padding-top:0;width:140px;height:140px;border:none;border-radius:50%;background:#0d2739;color:#000;text-align:center;font-weight:700;font-size:1.5em;text-transform:uppercase;cursor:pointer;-webkit-backface-visibility:hidden;border:5px solid hsla(0,0%,100%,.4)}.csstransforms .cn-wrapper[data-v-713f4628]{position:absolute;left:50%;z-index:10;margin-left:-10.02em;width:19em;height:19em;border-radius:50%;background:transparent;opacity:0;transition:all .3s ease .3s;-webkit-transform:scale(.1);transform:scale(.1);pointer-events:none;overflow:hidden}.cn-wrapper ul[data-v-713f4628]{margin:0;padding:0;list-style:none;position:relative}.csstransforms .cn-wrapper[data-v-713f4628]:after{content:\".\";display:block;font-size:2em;width:7.3625em;height:7.3625em;width:4.6015625em;height:4.6015625em;position:absolute;left:50%;margin-left:-2.30078125em;top:50%;margin-top:-2.30078125em;border-radius:50%;z-index:10;color:transparent}.csstransforms .opened-nav[data-v-713f4628]{border-radius:50%;opacity:1;transition:all .3s ease;-webkit-transform:scale(1);transform:scale(1);pointer-events:auto}.csstransforms .cn-wrapper li[data-v-713f4628]{position:absolute;top:50%;left:50%;overflow:hidden;margin-top:-.96484375em;margin-left:-7.421875em;width:7.421875em;height:7.421875em;font-size:1.5em;transition:all .3s ease;-webkit-transform:rotate(76deg) skew(60deg);transform:rotate(76deg) skew(60deg);-webkit-transform-origin:100% 100%;transform-origin:100% 100%;pointer-events:none;cursor:pointer;transition:background 1s}.csstransforms .cn-wrapper li a[data-v-713f4628]{position:absolute;right:-5.380859375em;bottom:-5.380859375em;display:block;width:10.76171875em;height:10.5em;border-radius:50%;color:#fff;text-align:center;text-decoration:none;font-size:1.2em;line-height:2;-webkit-transform:skew(-54deg) rotate(-73deg) scale(1);transform:skew(-54deg) rotate(-73deg) scale(1);pointer-events:auto}.csstransforms .cn-wrapper li a span[data-v-713f4628]{position:relative;top:.2em;display:block;font-weight:700;text-transform:uppercase;font-size:22px}.csstransforms .cn-wrapper li[data-v-713f4628]:hover{background:radial-gradient(transparent 35%,#fff 0);color:#000}.csstransforms .cn-wrapper li:hover a[data-v-713f4628]{color:#000}.csstransforms .cn-wrapper li a[data-v-713f4628]:focus{position:fixed}.csstransforms .opened-nav li[data-v-713f4628]{transition:all .3s ease .3s}.csstransforms .opened-nav li[data-v-713f4628]:first-child{background-color:rgba(0,0,0,.2);-webkit-transform:rotate(76deg) skew(54deg);transform:rotate(76deg) skew(54deg)}.csstransforms .opened-nav li[data-v-713f4628]:nth-child(2){background-color:rgba(0,0,0,.25);-webkit-transform:rotate(40deg) skew(54deg);transform:rotate(40deg) skew(54deg)}.csstransforms .opened-nav li[data-v-713f4628]:nth-child(3){background-color:rgba(0,0,0,.3);-webkit-transform:rotate(4deg) skew(54deg);transform:rotate(4deg) skew(54deg)}.csstransforms .opened-nav li[data-v-713f4628]:nth-child(4){background-color:rgba(0,0,0,.35);-webkit-transform:rotate(-32deg) skew(54deg);transform:rotate(-32deg) skew(54deg)}.csstransforms .opened-nav li[data-v-713f4628]:nth-child(5){background-color:rgba(0,0,0,.4);-webkit-transform:rotate(-68deg) skew(54deg);transform:rotate(-68deg) skew(54deg)}.csstransforms .opened-nav li[data-v-713f4628]:nth-child(6){background-color:rgba(0,0,0,.45);-webkit-transform:rotate(-104deg) skew(54deg);transform:rotate(-104deg) skew(54deg)}.csstransforms .opened-nav li[data-v-713f4628]:nth-child(7){background-color:rgba(0,0,0,.5);-webkit-transform:rotate(-140deg) skew(54deg);transform:rotate(-140deg) skew(54deg)}.csstransforms .opened-nav li[data-v-713f4628]:nth-child(8){background-color:rgba(0,0,0,.55);-webkit-transform:rotate(-176deg) skew(54deg);transform:rotate(-176deg) skew(54deg)}.csstransforms .opened-nav li[data-v-713f4628]:nth-child(9){background-color:rgba(0,0,0,.6);-webkit-transform:rotate(-212deg) skew(54deg);transform:rotate(-212deg) skew(54deg)}.csstransforms .opened-nav li[data-v-713f4628]:nth-child(10){background-color:rgba(0,0,0,.65);-webkit-transform:rotate(-248deg) skew(54deg);transform:rotate(-248deg) skew(54deg)}.csstransforms .opened-nav li[data-v-713f4628]:nth-child(11){background-color:rgba(0,0,0,.7);-webkit-transform:rotate(112deg) skew(54deg);transform:rotate(112deg) skew(54deg)}.srv-active[data-v-713f4628]{background:rgba(220,76,49,.82)!important}.srv-active a[data-v-713f4628]{color:#fff!important}.no-csstransforms .cn-wrapper[data-v-713f4628]{overflow:hidden;margin:10em auto;padding:.5em;text-align:center}.no-csstransforms .cn-wrapper ul[data-v-713f4628]{display:inline-block}.no-csstransforms .cn-wrapper li[data-v-713f4628]{float:left;width:5em;height:5em;background-color:#fff;text-align:center;font-size:1em;line-height:5em}.no-csstransforms .cn-wrapper li a[data-v-713f4628]{display:block;width:100%;height:100%;color:inherit;text-decoration:none}.no-csstransforms .cn-wrapper li a[data-v-713f4628]:active,.no-csstransforms .cn-wrapper li a[data-v-713f4628]:focus,.no-csstransforms .cn-wrapper li a[data-v-713f4628]:hover{background:hsla(33,13%,67%,.95)!important}.no-csstransforms .cn-wrapper li.active a[data-v-713f4628]{background-color:#6f325c;color:#fff}.no-csstransforms .cn-button[data-v-713f4628]{display:none}@media (max-width:767px) and (orientation:landscape){.component[data-v-713f4628]{width:200px;height:200px}.server-list-wraper[data-v-713f4628]{position:relative;bottom:20px}.cn-button[data-v-713f4628],.csstransforms .cn-wrapper[data-v-713f4628]{transform:scale(.8);-webkit-transform:scale(.8);-moz-transform:scale(.8);-ms-transform:scale(.8);-o-transform:scale(.8)}}", ""]);
}, function (e, t, n) {
	(e.exports = n(1)()).push([e.i, "", ""]);
}, function (e, t, n) {
	(e.exports = n(1)()).push([e.i, "", ""]);
}, function (e, t, n) {
	(e.exports = n(1)()).push([e.i, "#rules[data-v-7810d573]{color:#fff;margin-top:80px;font-size:18px}p[data-v-7810d573]{text-align:justify}", ""]);
}, function (e, t, n) {
	(e.exports = n(1)()).push([e.i, "#rules{color:#fff;margin-top:80px;font-size:18px}", ""]);
}, function (e, t, n) {
	(e.exports = n(1)()).push([e.i, ".ads-skins{text-align:center;min-height:120px;z-index:12}.ads-skins ins{z-index:12}.vote-skin{position:absolute;bottom:0;font-size:26px;cursor:pointer;color:#db2828}.vote{color:silver}.vote-number{color:darkred;right:10px}.skin-label{position:absolute}", ""]);
}, function (e, t, n) {
	(e.exports = n(1)()).push([e.i, "", ""]);
}, function (e, t, n) {
	(e.exports = n(1)()).push([e.i, "", ""]);
}, function (e, t, n) {
	(e.exports = n(1)()).push([e.i, ".coins-img{padding-right:5px;width:23px!important}", ""]);
}, function (e, t, n) {
	(e.exports = n(1)()).push([e.i, ".pillory{margin-top:80px}", ""]);
}, function (e, t, n) {
	n(164);
	var i = n(0)(n(23), n(138), null, null);
	e.exports = i.exports;
}, function (e, t, n) {
	n(165);
	var i = n(0)(n(24), n(139), null, null);
	e.exports = i.exports;
}, function (e, t, n) {
	n(149);
	var i = n(0)(n(25), n(118), null, null);
	e.exports = i.exports;
}, function (e, t, n) {
	n(146);
	var i = n(0)(n(28), n(115), null, null);
	e.exports = i.exports;
}, function (e, t, n) {
	var i = n(0)(n(29), n(125), null, null);
	e.exports = i.exports;
}, function (e, t, n) {
	var i = n(0)(n(30), n(132), null, null);
	e.exports = i.exports;
}, function (e, t, n) {
	n(156);
	var i = n(0)(n(31), n(129), "data-v-6c255638", null);
	e.exports = i.exports;
}, function (e, t, n) {
	n(163);
	var i = n(0)(n(32), n(137), "data-v-9c829956", null);
	e.exports = i.exports;
}, function (e, t, n) {
	n(159);
	var i = n(0)(n(33), n(133), "data-v-7752e4a5", null);
	e.exports = i.exports;
}, function (e, t, n) {
	n(157);
	var i = n(0)(n(34), n(130), "data-v-713f4628", null);
	e.exports = i.exports;
}, function (e, t, n) {
	var i = n(0)(n(35), n(128), null, null);
	e.exports = i.exports;
}, function (e, t, n) {
	var i = n(0)(n(36), n(126), null, null);
	e.exports = i.exports;
}, function (e, t, n) {
	n(150);
	var i = n(0)(n(37), n(119), "data-v-3b37852a", null);
	e.exports = i.exports;
}, function (e, t, n) {
	n(155);
	var i = n(0)(n(38), n(127), "data-v-6099300a", null);
	e.exports = i.exports;
}, function (e, t, n) {
	n(144);
	var i = n(0)(n(39), n(113), null, null);
	e.exports = i.exports;
}, function (e, t, n) {
	n(145);
	var i = n(0)(n(40), n(114), null, null);
	e.exports = i.exports;
}, function (e, t, n) {
	n(148);
	var i = n(0)(n(41), n(117), null, null);
	e.exports = i.exports;
}, function (e, t, n) {
	var i = n(0)(n(42), n(123), null, null);
	e.exports = i.exports;
}, function (e, t, n) {
	n(143);
	var i = n(0)(n(43), n(112), null, null);
	e.exports = i.exports;
}, function (e, t, n) {
	n(154);
	var i = n(0)(n(44), n(124), null, null);
	e.exports = i.exports;
}, function (e, t, n) {
	n(153);
	var i = n(0)(n(45), n(122), "data-v-4e582ddd", null);
	e.exports = i.exports;
}, function (e, t, n) {
	n(166);
	var i = n(0)(n(46), n(141), null, null);
	e.exports = i.exports;
}, function (e, t, n) {
	n(160);
	var i = n(0)(n(47), n(134), "data-v-7810d573", null);
	e.exports = i.exports;
}, function (e, t, n) {
	n(147);
	var i = n(0)(n(48), n(116), null, null);
	e.exports = i.exports;
}, function (e, t, n) {
	n(152);
	var i = n(0)(n(49), n(121), null, null);
	e.exports = i.exports;
}, function (e, t, n) {
	n(161);
	var i = n(0)(n(50), n(135), null, null);
	e.exports = i.exports;
}, function (e, t, n) {
	n(151);
	var i = n(0)(n(51), n(120), "data-v-42cb7b2b", null);
	e.exports = i.exports;
}, function (e, t, n) {
	n(162);
	var i = n(0)(n(52), n(136), null, null);
	e.exports = i.exports;
}, function (e, t) {
	e.exports = {
		render: function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("div", {
				directives: [{
					name: "show",
					rawName: "v-show",
					value: e.show,
					expression: "show"
				}],
				class: [e.show ? "ui active dimmer" : "ui dimmer", "fixed"]
			}, [n("div", {
				staticClass: "ui text loader"
			}, [e._v("Učitavanje...")])]);
		},
		staticRenderFns: []
	};
}, function (e, t) {
	e.exports = {
		render: function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("div", {
				staticClass: "homepage"
			}, [n("div", {
				staticClass: "page-section"
			}, [n("div", {
				attrs: {
					id: "helloDialog"
				}
			}, [n("div", {
				staticClass: "form-group"
			}, [n("div", [n("h1", {
				staticClass: "site-name"
			}, [e._v("\n\n                           A"), n("span", [e._v("gar")]), e._v(" B"), n("span", [e._v("alkan")]), n("div", [e._v("OpenSource")]), e._v(" "), e.am_logged_in ? n("span", {
				attrs: {
					"data-tooltip": "Klikni da preuzmeš dnevni bonus"
				}
			}, [n("i", {
				staticClass: "gift icon",
				on: {
					click: function (t) {
						e.GetDailyBonus();
					}
				}
			})]) : e._e(), e._v(" "), n("div", {
				staticClass: "clearfix"
			})])])]), e._v(" "), n("div", {
				staticClass: "main-page-wrap"
			}, [n("div", {
				staticClass: "ui grid"
			}, [n("div", {
				staticClass: "mobile-row-1 seven wide mobile column six wide tablet column six wide computer column six wide large screen column",
				attrs: {
					id: "nickname-column"
				}
			}, [n("div", [e.hat && e.hat != "" && e.hatDisplay ? n("img", {
				attrs: {
					id: "hat",
					src: e.hatLink
				}
			}) : e._e(), e._v(" "), n("div", {
				staticClass: "skin-reveal-wrap"
			}, [n("i", {
				staticClass: "angle left icon",
				on: {
					click: e.prevSkin
				}
			}), e._v(" "), n("div", {
				attrs: {
					id: "skin-reveal"
				}
			}, [n("div", {
				staticClass: "visible content",
				style: "background-image:url(/agar.rs/assets/images/skins/" + e.safeSN(e.globalSkinName) + ".png)"
			}, [e.am_logged_in ? n("h3", {
				staticClass: "text-nickname"
			}, [e._v(e._s(e.safeName(e.loggedNickName)))]) : n("input", {
				attrs: {
					type: "text",
					id: "nickname",
					placeholder: e.$t("home.type_name"),
					maxlength: e.maxNickName,
					autofocus: ""
				},
				domProps: {
					value: e.nickname
				},
				on: {
					input: e.updateNickname
				}
			})])]), e._v(" "), n("i", {
				staticClass: "angle right icon",
				on: {
					click: e.nextSkin
				}
			})]), e._v(" "), n("div", {
				staticClass: "clearfix"
			}), e._v(" "), n("div", {
				staticClass: "text-center"
			}, [n("input", {
				class: e.globalSkinName.length == 16 ? "no-skin-name" : "",
				attrs: {
					type: "text",
					id: "skin",
					placeholder: e.$t("home.skin"),
					maxlength: e.maxNickName
				},
				domProps: {
					value: e.globalSkinName
				},
				on: {
					input: e.updateGlobalSkinName
				}
			})]), e._v(" "), n("div", {
				attrs: {
					id: "fancy-nick-icons"
				}
			}, [n("i", {
				staticClass: "connectdevelop link icon",
				attrs: {
					title: "Fancy Nick"
				},
				on: {
					click: function (t) {
						e.openFancyNickModal();
					}
				}
			}), e._v(" "), n("i", {
				staticClass: "save link icon",
				attrs: {
					title: "My Nicknames"
				},
				on: {
					click: function (t) {
						e.openSavedNick();
					}
				}
			}), e._v(" "), e.am_logged_in ? n("button", {
				staticClass: "icon-btn private-skin-ico",
				attrs: {
					type: "button",
					"data-tooltip": e.$t("logged.your_private_skins"),
					"data-position": "bottom center",
					"data-inverted": ""
				},
				on: {
					click: function (t) {
						e.openPrivateSkinsModal();
					}
				}
			}, [n("i", {
				staticClass: "image icon"
			})]) : e._e()])])]), e._v(" "), n("div", {
				staticClass: "mobile-row-2 two wide mobile column four wide tablet column five wide computer column five wide large screen column",
				attrs: {
					id: "skin-column"
				}
			}, [n("button", {
				staticClass: "play-game-btn",
				attrs: {
					type: "button"
				},
				on: {
					click: function (t) {
						e.startGame();
					}
				}
			}, [n("i", {
				staticClass: "notched circle loading icon connecting-to-server",
				staticStyle: {
					display: "none"
				}
			}), e._v(" "), n("i", {
				staticClass: "play icon",
				attrs: {
					id: "play-game-icon"
				}
			})]), e._v(" "), n("button", {
				staticClass: "icon-btn spec-btn",
				attrs: {
					type: "button",
					"data-tooltip": e.$t("home.spectate"),
					"data-position": "bottom center",
					"data-inverted": ""
				},
				on: {
					click: function (t) {
						e.spec();
					}
				}
			}, [n("i", {
				staticClass: "unhide icon"
			})]), e._v(" "), n("button", {
				staticClass: "icon-btn settings-btn",
				attrs: {
					type: "button",
					"data-tooltip": e.$t("options.all_settings"),
					"data-position": "bottom center",
					"data-inverted": "",
					onclick: "$('#more-settings').modal('show'); return false;"
				}
			}, [n("i", {
				staticClass: "settings icon"
			})]), e._v(" "), e.am_logged_in ? n("router-link", {
				staticClass: "icon-btn my-statistic-btn",
				attrs: {
					to: "/agar.rs/me",
					tag: "button",
					type: "button",
					"data-tooltip": e.$t("logged.my_statistic"),
					"data-position": "bottom center",
					"data-inverted": ""
				},
				on: {
					click: function (t) {
						e.spec();
					}
				}
			}, [n("i", {
				staticClass: "chart line icon"
			})]) : e._e()], 1), e._v(" "), n("div", {
				staticClass: "mobile-row-3 seven wide mobile column six wide tablet column five wide computer column five wide large screen column"
			}, [n("server-list"), e._v(" "), n("settings", {
				staticClass: "home-settings"
			})], 1)])]), e._v(" "), e.am_logged_in ? n("div", {
				attrs: {
					id: "logged-in-checkboxes"
				}
			}, [n("div", {
				staticClass: "ui toggle checkbox badge-checkbox"
			}, [n("input", {
				attrs: {
					type: "checkbox"
				},
				domProps: {
					checked: e.rankDisplay
				},
				on: {
					change: function (t) {
						e.toggleBadge();
					}
				}
			}), e._v(" "), n("label", [n("h4", {
				directives: [{
					name: "show",
					rawName: "v-show",
					value: e.rank != "" && e.rank != null,
					expression: "rank != '' && rank != null"
				}],
				staticClass: "header"
			}, [e._v(" " + e._s(e.$t("new_21_09.badge")) + ": " + e._s(e._f("ranking")(e.rank)))])])]), e._v(" "), e.hat && e.hat != "" ? n("div", {
				staticClass: "ui toggle checkbox hat-checkbox"
			}, [n("input", {
				attrs: {
					type: "checkbox"
				},
				domProps: {
					checked: e.hatDisplay
				},
				on: {
					change: function (t) {
						e.toggleHat();
					}
				}
			}), e._v(" "), n("label", [n("h4", {
				staticClass: "header"
			}, [e._v(e._s(e.$t("logged.hat")))])])]) : e._e()]) : e._e(), e._v(" "), n("i", {
				staticClass: "animated infinite pulse chevron down\nicon",
				attrs: {
					id: "scroll-down"
				}
			}), e._v(" "), n("div", {
				staticClass: "clearfix"
			}), e._v(" "), e.fromApp ? e._e() : n("div", {
				staticClass: "sixteen wide tablet column sixteen wide large screen column "
			}, [n("div", {
				staticClass: "homepage-ad",
				staticStyle: {
					height: "90px!important",
					position: "relative",
					"z-index": "1"
				}
			}, 1), e._v(" "), n("div", {
				staticClass: "clearfix"
			})])])]), e._v(" "), n("div", {
				staticClass: "page-section second-section"
			}, [n("div", {
				staticClass: "ui container"
			}, [n("div", {
				staticClass: "ui stackable grid"
			}, [n("div", {
				staticClass: "clearfix"
			}), e._v(" "), e.fromApp ? e._e() : n("div", {
				staticClass: "eight wide tablet column eight wide computer column seven wide large screen column"
			}, [e._m(0), e._v(" "), e._m(1), e._v(" "), e._m(2)]), e._v(" "), n("div", {
				staticClass: "eight wide tablet column eight wide computer column seven wide large screen column"
			}, [n("div", {
				staticClass: "safe-internet"
			}, [n("safe-internet")], 1)])])]), e._v(" "), n("div", {
				staticClass: "clearfix"
			}), e._v(" "), n("div", {
				staticClass: "ui container"
			}, [n("div", {
				staticClass: "footer-links"
			}, [n("router-link", {
				attrs: {
					tag: "a",
					to: "/agar.rs/rules"
				}
			}, [n("i", {
				staticClass: "warning sign icon"
			}), e._v(e._s(e.$t("home.rules")) + "\n                   ")]), e._v(" "), n("router-link", {
				attrs: {
					tag: "a",
					to: "/agar.rs/privacy_policy"
				}
			}, [n("i", {
				staticClass: "info sign icon"
			}), e._v(e._s(e.$t("privacy.title")) + "\n                   ")]), e._v(" "), n("router-link", {
				attrs: {
					tag: "a",
					to: "/agar.rs/pillory"
				}
			}, [n("i", {
				staticClass: "ban icon"
			}), e._v(e._s(e.$t("new_21_09.pillory")) + "\n                   ")]), e._v(" ")], 1)]), e._v(" "), n("div", {
				staticClass: "clearfix"
			})]), e._v(" "), n("div", {
				staticClass: "swal-to-go"
			}), e._v(" "), n("saved-nicknames"), e._v(" "), n("div", {
				staticClass: "ui basic modal",
				attrs: {
					id: "set-nick-modal"
				}
			}, [n("div", {
				staticClass: "ui icon header"
			}, [n("i", {
				staticClass: "id badge icon"
			}), e._v("\n               " + e._s(e.$t("home.type_name")) + "\n           ")]), e._v(" "), n("div", {
				staticClass: "content"
			}, [n("p", [e._v(e._s(e.$t("logged.type_nick_desc")))]), e._v(" "), n("div", {
				staticClass: "ui icon input pn-input"
			}, [n("input", {
				attrs: {
					type: "text",
					id: "nickname-modal-input",
					placeholder: e.$t("home.type_name"),
					maxlength: e.maxNickName,
					autofocus: ""
				},
				on: {
					keydown: function (t) {
						e.modalNameEmpty = false;
					}
				}
			})]), e._v(" "), n("p", {
				directives: [{
					name: "show",
					rawName: "v-show",
					value: e.modalNameEmpty,
					expression: "modalNameEmpty"
				}],
				staticClass: "error"
			}, [e._v(e._s(e.$t("logged.no_name")))])]), e._v(" "), n("div", {
				staticClass: "actions"
			}, [n("div", {
				staticClass: "ui green inverted button",
				on: {
					click: function (t) {
						e.SaveNickname();
					}
				}
			}, [n("i", {
				staticClass: "checkmark icon"
			}), e._v("\n                   " + e._s(e.$t("logged.save")) + "\n               ")]), e._v(" "), n("div", {
				staticClass: "ui red basic inverted button",
				on: {
					click: function (t) {
						e.Logout();
					}
				}
			}, [n("i", {
				staticClass: "remove icon"
			}), e._v("\n                   " + e._s(e.$t("home.logout")) + "\n               ")])])]), e._v(" "), n("div", {
				staticClass: "ui modal",
				attrs: {
					id: "player-private-skins-modal"
				}
			}, [n("i", {
				staticClass: "close icon"
			}), e._v(" "), n("div", {
				staticClass: "header"
			}, [e._v("\n               " + e._s(e.$t("logged.your_private_skins")) + "\n           ")]), e._v(" "), n("div", {
				staticClass: "content"
			}, [n("div", {}, e._l(e.privateSkins, function (t) {
				return n("img", {
					class: [t.skin_name == e.activeSkin ? "active" : "", "private-skins ui image"],
					attrs: {
						src: "/agar.rs/assets/images/skins/" + t.skin_name + ".png"
					},
					on: {
						click: function (n) {
							e.activateSkin(t.skin_name);
						}
					}
				});
			})), e._v(" "), e.privateSkins.length == 0 ? n("p", [e._v("\n                   " + e._s(e.$t("logged.no_private_skins")) + "\n               ")]) : e._e(), e._v(" "), n("div", {
				staticClass: "clearfix"
			})])])], 1);
		},
		staticRenderFns: [function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("div", {
				attrs: {
					id: "facebook-page"
				}
			}, [n("iframe", {
				staticStyle: {
					border: "none",
					width: "100%"
				},
				attrs: {
					src: "/agar.rs/data/news.html"
				}
			})]);
		}, function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("a", {
				staticClass: "discord-link",
				attrs: {
					href: "#",
					target: "_blank"
				}
			}, [n("img", {
				staticClass: "ui pull right",
				attrs: {
					alt: "Discord",
					src: "/agar.rs/assets/images/discord.png"
				}
			})]);
		}, function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("a", {
				staticClass: "instagram-link",
				attrs: {
					href: "#",
					target: "_blank"
				}
			}, [n("img", {
				attrs: {
					src: "/agar.rs/assets/images/instagram.png"
				}
			})]);
		}]
	};
}, function (e, t) {
	e.exports = {
		render: function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("div", {
				staticClass: "homepage"
			}, [n("div", {
				attrs: {
					id: "contact"
				}
			}, [n("form", {
				attrs: {
					role: "form",
					name: "info"
				},
				on: {
					submit: function (t) {
						t.preventDefault();
						e.contactBan();
					}
				}
			}, [n("div", {
				staticClass: "form-group"
			}, [n("div", [n("h2", [e._v(e._s(e.$t("contact.banned")))]), e._v(" "), e.reasonToBan != null ? n("p", [e._v("Razlog: " + e._s(e.reasonToBan))]) : e._e(), e._v(" "), e.bannedDateTo != null ? n("p", [e._v("Istek bana: " + e._s(e.bannedDateTo))]) : e._e(), e._v(" "), n("p", [e._v(e._s(e.$t("contact.banned_desc")))]), e._v(" "), n("a", {
				staticStyle: {
					color: "#fff",
					"text-decoration": "underline"
				},
				attrs: {
					href: "#"
				}
			}, [e._v("Agar Balkan")])])]), e._v(" "), n("div", {
				staticClass: "ui hidden divider"
			}), e._v(" "), n("div", {
				staticClass: "ui input"
			}, [n("input", {
				directives: [{
					name: "model",
					rawName: "v-model",
					value: e.form.email,
					expression: "form.email"
				}],
				staticClass: "form-control",
				attrs: {
					placeholder: e.$t("contact.your_email"),
					type: "text",
					autofocus: ""
				},
				domProps: {
					value: e.form.email
				},
				on: {
					input: function (t) {
						if (!t.target.composing) {
							e.form.email = t.target.value;
						}
					}
				}
			})]), e._v(" "), n("div", {
				staticClass: "ui form"
			}, [n("div", {
				staticClass: "field"
			}, [n("label", [e._v(e._s(e.$t("contact.messsage")))]), e._v(" "), n("textarea", {
				directives: [{
					name: "model",
					rawName: "v-model",
					value: e.form.message,
					expression: "form.message"
				}],
				domProps: {
					value: e.form.message
				},
				on: {
					input: function (t) {
						if (!t.target.composing) {
							e.form.message = t.target.value;
						}
					}
				}
			})])]), e._v(" "), n("div", {
				staticClass: "ui hidden divider"
			}), e._v(" "), n("button", {
				staticClass: "start-btn",
				attrs: {
					disabled: e.form.message.length == 0,
					type: "submit"
				}
			}, [e._v(e._s(e.$t("contact.report")))]), e._v(" "), e.reportStatus == 1 ? n("div", {
				staticClass: "ui positive message"
			}, [n("i", {
				staticClass: "close icon"
			}), e._v(" "), n("div", {
				staticClass: "header"
			}, [e._v("\n                    " + e._s(e.$t("contact.success")) + "\n                ")])]) : e._e(), e._v(" "), e.reportStatus == 0 ? n("div", {
				staticClass: "ui negative message"
			}, [n("i", {
				staticClass: "close icon"
			}), e._v(" "), n("div", {
				staticClass: "header"
			}, [e._v("\n                    " + e._s(e.$t("contact.error")) + "\n                ")])]) : e._e()])])]);
		},
		staticRenderFns: []
	};
}, function (e, t) {
	e.exports = {
		render: function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("div", {
				staticClass: "homepage"
			}, [n("div", {
				staticClass: "cont-page",
				attrs: {
					id: "contact"
				}
			}, [n("div", {
				staticClass: "ui stackable two column grid"
			}, [n("div", {
				staticClass: "column"
			}, [n("form", {
				attrs: {
					role: "form",
					name: "info"
				},
				on: {
					submit: function (t) {
						t.preventDefault();
						e.reportBug();
					}
				}
			}, [n("div", {
				staticClass: "form-group"
			}, [n("div", [n("h2", [e._v(e._s(e.$t("contact.report_contact")))])])]), e._v(" "), n("div", {
				staticClass: "ui hidden divider"
			}), e._v(" "), n("div", {
				staticClass: "ui input"
			}, [n("input", {
				directives: [{
					name: "model",
					rawName: "v-model",
					value: e.form.email,
					expression: "form.email"
				}],
				staticClass: "form-control",
				attrs: {
					placeholder: e.$t("contact.your_email"),
					type: "text",
					autofocus: ""
				},
				domProps: {
					value: e.form.email
				},
				on: {
					input: function (t) {
						if (!t.target.composing) {
							e.form.email = t.target.value;
						}
					}
				}
			})]), e._v(" "), n("div", {
				staticClass: "ui form"
			}, [n("div", {
				staticClass: "field"
			}, [n("label", [e._v(e._s(e.$t("contact.messsage")))]), e._v(" "), n("textarea", {
				directives: [{
					name: "model",
					rawName: "v-model",
					value: e.form.message,
					expression: "form.message"
				}],
				domProps: {
					value: e.form.message
				},
				on: {
					input: function (t) {
						if (!t.target.composing) {
							e.form.message = t.target.value;
						}
					}
				}
			})])]), e._v(" "), n("div", {
				staticClass: "ui hidden divider"
			}), e._v(" "), n("button", {
				staticClass: "start-btn",
				attrs: {
					disabled: e.form.message.length == 0,
					type: "submit"
				}
			}, [n("i", {
				staticClass: "spinner loading icon",
				staticStyle: {
					display: "none"
				},
				attrs: {
					id: "loading-send"
				}
			}), e._v("\n                        " + e._s(e.$t("contact.report")) + "\n                    ")]), e._v(" "), e.reportStatus == 1 ? n("div", {
				staticClass: "ui positive message"
			}, [n("div", {
				staticClass: "header"
			}, [e._v("\n                            " + e._s(e.$t("contact.success")) + "\n                        ")])]) : e._e(), e._v(" "), e.reportStatus == 0 ? n("div", {
				staticClass: "ui negative message"
			}, [n("div", {
				staticClass: "header"
			}, [e._v("\n                            " + e._s(e.$t("contact.error")) + "\n                        ")])]) : e._e()])]), e._v(" "), e._m(0)])])]);
		},
		staticRenderFns: [function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("div", {
				staticClass: "column"
			}, [n("div", {
				staticClass: "facebook-chat"
			}, [n("div", {
				staticClass: "fb-page",
				attrs: {
					"data-href": "#",
					"data-tabs": "messages",
					"data-height": "315",
					"data-small-header": "true",
					"data-adapt-container-width": "true",
					"data-hide-cover": "false",
					"data-show-facepile": "true"
				}
			}, [n("blockquote", {
				staticClass: "fb-xfbml-parse-ignore",
				attrs: {
					cite: "#"
				}
			}, [n("a", {
				attrs: {
					href: "#"
				}
			}, [e._v("Agar Balkan")])])])])]);
		}]
	};
}, function (e, t) {
	e.exports = {
		render: function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("div", [n("div", {
				class: [e.oldChat ? "oldChat" : "chat", e.theme + " "]
			}, [n("div", {
				directives: [{
					name: "show",
					rawName: "v-show",
					value: !e.oldChat,
					expression: "!oldChat"
				}],
				staticClass: "chat-header"
			}, [n("div", {
				staticClass: "block-user",
				staticStyle: {
					display: "none"
				}
			}, [e._v("\n              " + e._s(e.$t("home.block")) + " "), n("span", {
				staticClass: "block-name"
			}, [e._v(" ?")]), e._v(" "), n("button", {
				staticClass: "ui right floated small green button",
				attrs: {
					type: "button"
				},
				on: {
					click: function (t) {
						e.block();
					}
				}
			}, [e._v(e._s(e.$t("home.yes")))]), e._v(" "), n("button", {
				staticClass: "ui right floated small red button",
				attrs: {
					type: "button"
				},
				on: {
					click: function (t) {
						e.cancelBlock();
					}
				}
			}, [e._v(e._s(e.$t("home.no")))])]), e._v(" "), e.minimized ? n("span", [n("strong", {
				staticStyle: {
					color: "#fff"
				}
			}, [e._v("Chat")])]) : n("div", {
				staticClass: "chat-left-actions"
			}, [e.color != null && e.color != "" ? n("i", {
				staticClass: "large circle icon",
				style: "color:" + e.color,
				on: {
					click: function (t) {
						e.pickColor();
					}
				}
			}) : e._e(), e._v(" "), e.color != null && e.color != "" ? n("input", {
				attrs: {
					id: "chat-color-picker",
					type: "color"
				},
				domProps: {
					value: e.color
				},
				on: {
					change: e.saveColor
				}
			}) : e._e(), e._v(" "), n("i", {
				staticClass: "circular inverted zoom out link icon cursor",
				on: {
					click: function (t) {
						e.zoomFont("out");
					}
				}
			}), e._v(" "), n("i", {
				staticClass: "circular inverted zoom link icon cursor",
				on: {
					click: function (t) {
						e.zoomFont("in");
					}
				}
			})]), e._v(" "), e.on_mobile ? e._e() : n("div", {
				staticClass: "chat-center-actions"
			}, [n("i", {
				staticClass: "circular inverted image outline link icon cursor",
				attrs: {
					title: e.$t("home.without_skins")
				},
				on: {
					click: function (t) {
						e.goSkinsShow();
					}
				}
			}), e._v(" "), n("i", {
				staticClass: "circular inverted eye slash outline link icon cursor",
				attrs: {
					title: e.$t("home.transparent")
				},
				on: {
					click: function (t) {
						e.goTransparent();
					}
				}
			}), e._v(" "), n("i", {
				staticClass: "circular inverted barcode link icon cursor",
				attrs: {
					title: e.$t("home.without_lines")
				},
				on: {
					click: function (t) {
						e.goLines();
					}
				}
			}), e._v(" "), n("i", {
				staticClass: "circular inverted expand arrows alternate link icon cursor",
				attrs: {
					title: e.$t("options.infinity_zoom")
				},
				on: {
					click: function (t) {
						e.goInfiniteScroll();
					}
				}
			})]), e._v(" "), n("div", {
				staticClass: "chat-right-actions"
			}, [n("i", {
				directives: [{
					name: "show",
					rawName: "v-show",
					value: !e.minimized,
					expression: "!minimized"
				}],
				staticClass: "circular inverted window minimize link icon cursor",
				on: {
					click: function (t) {
						e.minimize();
					}
				}
			}), e._v(" "), n("i", {
				directives: [{
					name: "show",
					rawName: "v-show",
					value: e.minimized,
					expression: "minimized"
				}],
				staticClass: "circular window inverted maximize link icon cursor",
				on: {
					click: function (t) {
						e.maximize();
					}
				}
			})])]), e._v(" "), n("div", {
				staticStyle: {
					clear: "both"
				}
			}), e._v(" "), n("div", {
				directives: [{
					name: "show",
					rawName: "v-show",
					value: !e.oldChat,
					expression: "!oldChat"
				}],
				staticClass: "chat-body",
				style: "font-size:" + e.fontSize + "px"
			}), e._v(" "), n("div", {
				staticClass: "chat-footer"
			}, [n("div", {
				staticClass: "ui icon input",
				attrs: {
					id: "chat_textbox-wrap"
				}
			}, [n("input", {
				attrs: {
					type: "text",
					id: "chat_textbox",
					maxlength: "70",
					placeholder: e.$t("home.enter_to_chat")
				}
			}), e._v(" "), n("i", {
				directives: [{
					name: "show",
					rawName: "v-show",
					value: !e.oldChat,
					expression: "!oldChat"
				}],
				staticClass: "circular inverted marker link icon",
				on: {
					click: function (t) {
						e.sendLocation();
					}
				}
			}), e._v(" "), n("i", {
				staticClass: "circular inverted smile outline link icon cursor",
				on: {
					click: function (t) {
						e.emoji = !e.emoji;
					}
				}
			})])])]), e._v(" "), n("div", {
				directives: [{
					name: "show",
					rawName: "v-show",
					value: e.emoji,
					expression: "emoji"
				}],
				attrs: {
					id: "emoji-list"
				}
			}, [n("div", {
				staticClass: "center"
			}, [n("i", {
				staticClass: "em em-stuck_out_tongue_closed_eyes",
				on: {
					click: function (t) {
						e.insertEmoji("x-p");
					}
				}
			}), e._v(" "), n("i", {
				staticClass: "em em-poop",
				on: {
					click: function (t) {
						e.insertEmoji(":poop:");
					}
				}
			}), e._v(" "), n("i", {
				staticClass: "em em-smiley",
				on: {
					click: function (t) {
						e.insertEmoji(":D");
					}
				}
			}), e._v(" "), n("i", {
				staticClass: "em em-smile",
				on: {
					click: function (t) {
						e.insertEmoji("=D");
					}
				}
			}), e._v(" "), n("i", {
				staticClass: "em em-blush",
				on: {
					click: function (t) {
						e.insertEmoji(":)");
					}
				}
			}), e._v(" "), n("i", {
				staticClass: "em em-angry",
				on: {
					click: function (t) {
						e.insertEmoji(">:(");
					}
				}
			}), e._v(" "), n("i", {
				staticClass: "em em-cry",
				on: {
					click: function (t) {
						e.insertEmoji(":'(");
					}
				}
			}), e._v(" "), n("i", {
				staticClass: "em em-disappointed",
				on: {
					click: function (t) {
						e.insertEmoji(":(");
					}
				}
			}), e._v(" "), n("i", {
				staticClass: "em em-expressionless",
				on: {
					click: function (t) {
						e.insertEmoji("-.-");
					}
				}
			}), e._v(" "), n("i", {
				staticClass: "em em-flushed",
				on: {
					click: function (t) {
						e.insertEmoji("o.o");
					}
				}
			}), e._v(" "), n("i", {
				staticClass: "em em-heart_eyes",
				on: {
					click: function (t) {
						e.insertEmoji("*.*");
					}
				}
			}), e._v(" "), n("i", {
				staticClass: "em em-blue_heart",
				on: {
					click: function (t) {
						e.insertEmoji("❥");
					}
				}
			}), e._v(" "), n("i", {
				staticClass: "em em-heart",
				on: {
					click: function (t) {
						e.insertEmoji("<3");
					}
				}
			}), e._v(" "), n("i", {
				staticClass: "em em-joy",
				on: {
					click: function (t) {
						e.insertEmoji(":'D");
					}
				}
			}), e._v(" "), n("i", {
				staticClass: "em em-kissing_closed_eyes",
				on: {
					click: function (t) {
						e.insertEmoji(":*");
					}
				}
			}), e._v(" "), n("i", {
				staticClass: "em em-kissing_heart",
				on: {
					click: function (t) {
						e.insertEmoji(";*");
					}
				}
			}), e._v(" "), n("i", {
				staticClass: "em em-robot_face",
				on: {
					click: function (t) {
						e.insertEmoji(":|]");
					}
				}
			}), e._v(" "), n("i", {
				staticClass: "em em-neutral_face",
				on: {
					click: function (t) {
						e.insertEmoji(":|");
					}
				}
			}), e._v(" "), n("i", {
				staticClass: "em em-open_mouth",
				on: {
					click: function (t) {
						e.insertEmoji(":O");
					}
				}
			}), e._v(" "), n("i", {
				staticClass: "em em-no_mouth",
				on: {
					click: function (t) {
						e.insertEmoji(":-$");
					}
				}
			}), e._v(" "), n("i", {
				staticClass: "em em-relaxed",
				on: {
					click: function (t) {
						e.insertEmoji(":'>");
					}
				}
			}), e._v(" "), n("i", {
				staticClass: "em em-thumbsup",
				on: {
					click: function (t) {
						e.insertEmoji("(y)");
					}
				}
			}), e._v(" "), n("i", {
				staticClass: "em em-thumbsdown",
				on: {
					click: function (t) {
						e.insertEmoji("(n)");
					}
				}
			}), e._v(" "), n("i", {
				staticClass: "em em-sunglasses",
				on: {
					click: function (t) {
						e.insertEmoji("8)");
					}
				}
			}), e._v(" "), n("i", {
				staticClass: "em em-smirk",
				on: {
					click: function (t) {
						e.insertEmoji(":>");
					}
				}
			}), e._v(" "), n("i", {
				staticClass: "em em-wink",
				on: {
					click: function (t) {
						e.insertEmoji(";)");
					}
				}
			}), e._v(" "), n("i", {
				staticClass: "em em-triumph",
				on: {
					click: function (t) {
						e.insertEmoji(":-<");
					}
				}
			}), e._v(" "), n("i", {
				staticClass: "em em-stuck_out_tongue_winking_eye",
				on: {
					click: function (t) {
						e.insertEmoji(";p");
					}
				}
			}), e._v(" "), n("i", {
				staticClass: "em em-stuck_out_tongue",
				on: {
					click: function (t) {
						e.insertEmoji(":p");
					}
				}
			}), e._v(" "), n("i", {
				staticClass: "em em-confused",
				on: {
					click: function (t) {
						e.insertEmoji(":/");
					}
				}
			}), e._v(" "), n("i", {
				staticClass: "em em-worried",
				on: {
					click: function (t) {
						e.insertEmoji(":-S");
					}
				}
			}), e._v(" "), n("i", {
				staticClass: "em em-dizzy_face",
				on: {
					click: function (t) {
						e.insertEmoji("x.x");
					}
				}
			}), e._v(" "), n("i", {
				staticClass: "em em-purple_heart",
				on: {
					click: function (t) {
						e.insertEmoji("❤");
					}
				}
			}), e._v(" "), n("i", {
				staticClass: "em em-broken_heart",
				on: {
					click: function (t) {
						e.insertEmoji("</3");
					}
				}
			}), e._v(" "), n("i", {
				staticClass: "em em-shark",
				on: {
					click: function (t) {
						e.insertEmoji("(^^^)");
					}
				}
			}), e._v(" "), n("i", {
				staticClass: "em em-penguin",
				on: {
					click: function (t) {
						e.insertEmoji("<(\")");
					}
				}
			})])])]);
		},
		staticRenderFns: []
	};
}, function (e, t) {
	e.exports = {
		render: function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("div", {
				staticClass: "rang",
				attrs: {
					id: "rang-page"
				}
			}, [n("spinner", {
				attrs: {
					show: e.loading
				}
			}), e._v(" "), n("div", {
				staticClass: "ui container"
			}, [n("div", {
				staticClass: "ui hidden divider"
			}), e._v(" "), n("h1", {
				staticClass: "rang-title"
			}, [e._v(e._s(e.$t("new_21_09.top_10")) + " ")]), e._v(" "), n("div", {
				staticClass: "ui hidden divider"
			}), e._v(" "), n("div", {
				staticClass: "ads-skins"
			}, 1), e._v(" "), n("div", {
				staticClass: "ui hidden divider"
			}), e._v(" "), n("div", {
				staticClass: "ui pointing secondary menu"
			}, [n("a", {
				staticClass: "item active",
				attrs: {
					"data-tab": "first"
				}
			}, [e._v(e._s(e.$t("statistic.top_10_logged")))]), e._v(" "), n("a", {
				staticClass: "item",
				attrs: {
					"data-tab": "second"
				}
			}, [e._v(e._s(e.$t("statistic.all_players")))])]), e._v(" "), n("br"), e._v(" "), n("div", {
				staticClass: "dateranger"
			}, [n("div", {
				staticClass: "ui form"
			}, [n("div", {
				staticClass: "inline fields"
			}, [n("div", {
				staticClass: "field"
			}, [n("input", {
				attrs: {
					disabled: "true"
				},
				domProps: {
					value: e.formatDate(e.startDay)
				}
			})]), e._v(" "), n("div", {
				staticClass: "field"
			}, [n("input", {
				attrs: {
					disabled: "true"
				},
				domProps: {
					value: e.formatDate(e.endDay)
				}
			})]), e._v(" "), n("div", {
				staticClass: "field"
			}, [n("div", {
				staticClass: "ui vertical divider"
			}), e._v(" "), n("button", {
				staticClass: "ui inverted button",
				on: {
					click: function (t) {
						e.getPrivateList();
					}
				}
			}, [e._v("\n                           " + e._s(e.$t("home.month")) + "\n                        ")])]), e._v(" "), n("div", {
				staticClass: "field"
			}, [n("div", {
				staticClass: "ui vertical divider"
			}), e._v(" "), n("button", {
				staticClass: "ui inverted button",
				on: {
					click: function (t) {
						e.getToday();
					}
				}
			}, [e._v("\n                            " + e._s(e.$t("home.today")) + "\n                        ")])])])]), e._v(" "), n("p", [e._v(e._s(e.$t("new_21_09.highscore_update")))])]), e._v(" "), n("div", {
				staticClass: "ui bottom attached tab segment active",
				attrs: {
					"data-tab": "first"
				}
			}, [n("div", {
				staticClass: "ui stackable three column grid"
			}, [n("div", {
				staticClass: "column"
			}, [n("h3", [e._v("FFA #1")]), e._v(" "), n("div", {
				staticClass: "ui divided list"
			}, [e._l(e.list.pffa1, function (t, i) {
				return n("div", {
					class: e.classItem(i + 1)
				}, [e._v("\n                            " + e._s(i + 1) + ". " + e._s(decodeURI(e.safeName(t.nickname))) + "\n                            "), n("div", {
					staticClass: "right floated content"
				}, [e._v("\n                                " + e._s(e.numberFormat(parseInt(t.score))) + "\n                                "), e.role == 40 ? n("i", {
					staticClass: "x icon",
					on: {
						click: function (n) {
							e.deleteScore(t.score, "FFA#1");
						}
					}
				}) : e._e()])]);
			}), e._v(" "), e.list.pffa1.length == 0 ? n("div", {
				staticClass: "item"
			}, [e._v("\n                            " + e._s(e.$t("new_21_09.no_players")) + "\n                        ")]) : e._e()], 2)]), e._v(" "), n("div", {
				staticClass: "column"
			}, [n("h3", [e._v("MINIONS #2")]), e._v(" "), n("div", {
				staticClass: "ui divided list"
			}, [e._l(e.list.pmn2, function (t, i) {
				return n("div", {
					class: e.classItem(i + 1)
				}, [e._v("\n                            " + e._s(i + 1) + ". " + e._s(decodeURI(e.safeName(t.nickname))) + "\n                            "), n("div", {
					staticClass: "right floated content"
				}, [e._v("\n                                " + e._s(e.numberFormat(parseInt(t.score))) + "\n                                "), e.role == 40 ? n("i", {
					staticClass: "x icon",
					on: {
						click: function (n) {
							e.deleteScore(t.score, "MINIONS#2");
						}
					}
				}) : e._e()])]);
			}), e._v(" "), e.list.pmn2.length == 0 ? n("div", {
				staticClass: "item"
			}, [e._v("\n                            " + e._s(e.$t("new_21_09.no_players")) + "\n                        ")]) : e._e()], 2)]), e._v(" "), n("div", {
				staticClass: "column"
			}, [n("h3", [e._v("IM #3")]), e._v(" "), n("div", {
				staticClass: "ui divided list"
			}, [e._l(e.list.pim3, function (t, i) {
				return n("div", {
					class: e.classItem(i + 1)
				}, [e._v("\n                            " + e._s(i + 1) + ". " + e._s(decodeURI(e.safeName(t.nickname))) + "\n                            "), n("div", {
					staticClass: "right floated content"
				}, [e._v("\n                                " + e._s(e.numberFormat(parseInt(t.score))) + "\n                                "), e.role == 40 ? n("i", {
					staticClass: "x icon",
					on: {
						click: function (n) {
							e.deleteScore(t.score, "INSTANT MERGE#3");
						}
					}
				}) : e._e()])]);
			}), e._v(" "), e.list.pim3.length == 0 ? n("div", {
				staticClass: "item"
			}, [e._v("\n                            " + e._s(e.$t("new_21_09.no_players")) + "\n                        ")]) : e._e()], 2)]), e._v(" "), n("div", {
				staticClass: "column"
			}, [n("h3", [e._v("MEGA SPLIT #4")]), e._v(" "), n("div", {
				staticClass: "ui divided list"
			}, [e._l(e.list.pffa4, function (t, i) {
				return n("div", {
					class: e.classItem(i + 1)
				}, [e._v("\n                            " + e._s(i + 1) + ". " + e._s(decodeURI(e.safeName(t.nickname))) + "\n                            "), n("div", {
					staticClass: "right floated content"
				}, [e._v("\n                                " + e._s(e.numberFormat(parseInt(t.score))) + "\n                                "), e.role == 40 ? n("i", {
					staticClass: "x icon",
					on: {
						click: function (n) {
							e.deleteScore(t.score, "MEGA SPLIT#4");
						}
					}
				}) : e._e()])]);
			}), e._v(" "), e.list.pffa4.length == 0 ? n("div", {
				staticClass: "item"
			}, [e._v("\n                            " + e._s(e.$t("new_21_09.no_players")) + "\n                        ")]) : e._e()], 2)]), e._v(" "), n("div", {
				staticClass: "column"
			}, [n("h3", [e._v("EX #5")]), e._v(" "), n("div", {
				staticClass: "ui divided list"
			}, [e._l(e.list.pex5, function (t, i) {
				return n("div", {
					class: e.classItem(i + 1)
				}, [e._v("\n                            " + e._s(i + 1) + ". " + e._s(decodeURI(e.safeName(t.nickname))) + "\n                            "), n("div", {
					staticClass: "right floated content"
				}, [e._v("\n                                " + e._s(e.numberFormat(parseInt(t.score))) + "\n                                "), e.role == 40 ? n("i", {
					staticClass: "x icon",
					on: {
						click: function (n) {
							e.deleteScore(t.score, "EXPERIMENTAL#5");
						}
					}
				}) : e._e()])]);
			}), e._v(" "), e.list.pex5.length == 0 ? n("div", {
				staticClass: "item"
			}, [e._v("\n                            " + e._s(e.$t("new_21_09.no_players")) + "\n                        ")]) : e._e()], 2)]), e._v(" "), n("div", {
				staticClass: "column"
			}, [n("h3", [e._v("RNBW #6")]), e._v(" "), n("div", {
				staticClass: "ui divided list"
			}, [e._l(e.list.prnbw6, function (t, i) {
				return n("div", {
					class: e.classItem(i + 1)
				}, [e._v("\n                            " + e._s(i + 1) + ". " + e._s(decodeURI(e.safeName(t.nickname))) + "\n                            "), n("div", {
					staticClass: "right floated content"
				}, [e._v("\n                                " + e._s(e.numberFormat(parseInt(t.score))) + "\n                                "), e.role == 40 ? n("i", {
					staticClass: "x icon",
					on: {
						click: function (n) {
							e.deleteScore(t.score, "RAINBOW#6");
						}
					}
				}) : e._e()])]);
			}), e._v(" "), e.list.prnbw6.length == 0 ? n("div", {
				staticClass: "item"
			}, [e._v("\n                            " + e._s(e.$t("new_21_09.no_players")) + "\n                        ")]) : e._e()], 2)]), e._v(" "), n("div", {
				staticClass: "column"
			}, [n("h3", [e._v("VM #7")]), e._v(" "), n("div", {
				staticClass: "ui divided list"
			}, [e._l(e.list.pvm7, function (t, i) {
				return n("div", {
					class: e.classItem(i + 1)
				}, [e._v("\n                            " + e._s(i + 1) + ". " + e._s(decodeURI(e.safeName(t.nickname))) + "\n                            "), n("div", {
					staticClass: "right floated content"
				}, [e._v("\n                                " + e._s(e.numberFormat(parseInt(t.score))) + "\n                                "), e.role == 40 ? n("i", {
					staticClass: "x icon",
					on: {
						click: function (n) {
							e.deleteScore(t.score, "VIRUS MINES#7");
						}
					}
				}) : e._e()])]);
			}), e._v(" "), e.list.pvm7.length == 0 ? n("div", {
				staticClass: "item"
			}, [e._v("\n                            " + e._s(e.$t("new_21_09.no_players")) + "\n                        ")]) : e._e()], 2)]), e._v(" "), n("div", {
				staticClass: "column"
			}, [n("h3", [e._v("OLD EXP #8")]), e._v(" "), n("div", {
				staticClass: "ui divided list"
			}, [e._l(e.list.poe8, function (t, i) {
				return n("div", {
					class: e.classItem(i + 1)
				}, [e._v("\n                            " + e._s(i + 1) + ". " + e._s(decodeURI(e.safeName(t.nickname))) + "\n                            "), n("div", {
					staticClass: "right floated content"
				}, [e._v("\n                                " + e._s(e.numberFormat(parseInt(t.score))) + "\n                                "), e.role == 40 ? n("i", {
					staticClass: "x icon",
					on: {
						click: function (n) {
							e.deleteScore(t.score, "OLD EXP#8");
						}
					}
				}) : e._e()])]);
			}), e._v(" "), e.list.poe8.length == 0 ? n("div", {
				staticClass: "item"
			}, [e._v("\n                            " + e._s(e.$t("new_21_09.no_players")) + "\n                        ")]) : e._e()], 2)])])]), e._v(" "), n("div", {
				staticClass: "ui bottom attached tab segment",
				attrs: {
					"data-tab": "second"
				}
			}, [n("div", {
				staticClass: "ui stackable three column grid"
			}, [n("div", {
				staticClass: "column"
			}, [n("h3", [e._v("FFA #1")]), e._v(" "), n("div", {
				staticClass: "ui divided list"
			}, [e._l(e.list.ffa1, function (t, i) {
				return n("div", {
					class: e.classItem(i + 1)
				}, [e._v("\n                            " + e._s(i + 1) + ". " + e._s(decodeURI(e.safeName(t.name))) + "\n                            "), n("div", {
					staticClass: "right floated content"
				}, [e._v("\n                                " + e._s(e.numberFormat(parseInt(t.score))) + "\n                                "), e.role == 40 ? n("i", {
					staticClass: "x icon",
					on: {
						click: function (n) {
							e.deleteScore(t.score, "FFA#1");
						}
					}
				}) : e._e()])]);
			}), e._v(" "), e.list.ffa1.length == 0 ? n("div", {
				staticClass: "item"
			}, [e._v("\n                            " + e._s(e.$t("new_21_09.no_players")) + "\n                        ")]) : e._e()], 2)]), e._v(" "), n("div", {
				staticClass: "column"
			}, [n("h3", [e._v("MINIONS #2")]), e._v(" "), n("div", {
				staticClass: "ui divided list"
			}, [e._l(e.list.mn2, function (t, i) {
				return n("div", {
					class: e.classItem(i + 1)
				}, [e._v("\n                            " + e._s(i + 1) + ". " + e._s(decodeURI(e.safeName(t.name))) + "\n                            "), n("div", {
					staticClass: "right floated content"
				}, [e._v("\n                                " + e._s(e.numberFormat(parseInt(t.score))) + "\n                                "), e.role == 40 ? n("i", {
					staticClass: "x icon",
					on: {
						click: function (n) {
							e.deleteScore(t.score, "MINIONS#2");
						}
					}
				}) : e._e()])]);
			}), e._v(" "), e.list.mn2.length == 0 ? n("div", {
				staticClass: "item"
			}, [e._v("\n                            " + e._s(e.$t("new_21_09.no_players")) + "\n                        ")]) : e._e()], 2)]), e._v(" "), n("div", {
				staticClass: "column"
			}, [n("h3", [e._v("IM #3")]), e._v(" "), n("div", {
				staticClass: "ui divided list"
			}, [e._l(e.list.im3, function (t, i) {
				return n("div", {
					class: e.classItem(i + 1)
				}, [e._v("\n                            " + e._s(i + 1) + ". " + e._s(decodeURI(e.safeName(t.name))) + "\n                            "), n("div", {
					staticClass: "right floated content"
				}, [e._v("\n                                " + e._s(e.numberFormat(parseInt(t.score))) + "\n                                "), e.role == 40 ? n("i", {
					staticClass: "x icon",
					on: {
						click: function (n) {
							e.deleteScore(t.score, "INSTANT MERGE#3");
						}
					}
				}) : e._e()])]);
			}), e._v(" "), e.list.im3.length == 0 ? n("div", {
				staticClass: "item"
			}, [e._v("\n                            " + e._s(e.$t("new_21_09.no_players")) + "\n                        ")]) : e._e()], 2)]), e._v(" "), n("div", {
				staticClass: "column"
			}, [n("h3", [e._v("MEGA SPLIT #4")]), e._v(" "), n("div", {
				staticClass: "ui divided list"
			}, [e._l(e.list.ffa4, function (t, i) {
				return n("div", {
					class: e.classItem(i + 1)
				}, [e._v("\n                            " + e._s(i + 1) + ". " + e._s(decodeURI(e.safeName(t.name))) + "\n                            "), n("div", {
					staticClass: "right floated content"
				}, [e._v("\n                                " + e._s(e.numberFormat(parseInt(t.score))) + "\n                                "), e.role == 40 ? n("i", {
					staticClass: "x icon",
					on: {
						click: function (n) {
							e.deleteScore(t.score, "MEGA SPLIT#4");
						}
					}
				}) : e._e()])]);
			}), e._v(" "), e.list.ffa4.length == 0 ? n("div", {
				staticClass: "item"
			}, [e._v("\n                            " + e._s(e.$t("new_21_09.no_players")) + "\n                        ")]) : e._e()], 2)]), e._v(" "), n("div", {
				staticClass: "column"
			}, [n("h3", [e._v("EX #5")]), e._v(" "), n("div", {
				staticClass: "ui divided list"
			}, [e._l(e.list.ex5, function (t, i) {
				return n("div", {
					class: e.classItem(i + 1)
				}, [e._v("\n                            " + e._s(i + 1) + ". " + e._s(decodeURI(e.safeName(t.name))) + "\n                            "), n("div", {
					staticClass: "right floated content"
				}, [e._v("\n                                " + e._s(e.numberFormat(parseInt(t.score))) + "\n                                "), e.role == 40 ? n("i", {
					staticClass: "x icon",
					on: {
						click: function (n) {
							e.deleteScore(t.score, "EXPERIMENTAL#5");
						}
					}
				}) : e._e()])]);
			}), e._v(" "), e.list.ex5.length == 0 ? n("div", {
				staticClass: "item"
			}, [e._v("\n                            " + e._s(e.$t("new_21_09.no_players")) + "\n                        ")]) : e._e()], 2)]), e._v(" "), n("div", {
				staticClass: "column"
			}, [n("h3", [e._v("RNBW #6")]), e._v(" "), n("div", {
				staticClass: "ui divided list"
			}, [e._l(e.list.rnbw6, function (t, i) {
				return n("div", {
					class: e.classItem(i + 1)
				}, [e._v("\n                            " + e._s(i + 1) + ". " + e._s(decodeURI(e.safeName(t.name))) + "\n                            "), n("div", {
					staticClass: "right floated content"
				}, [e._v("\n                                " + e._s(e.numberFormat(parseInt(t.score))) + "\n                                "), e.role == 40 ? n("i", {
					staticClass: "x icon",
					on: {
						click: function (n) {
							e.deleteScore(t.score, "RAINBOW#6");
						}
					}
				}) : e._e()])]);
			}), e._v(" "), e.list.rnbw6.length == 0 ? n("div", {
				staticClass: "item"
			}, [e._v("\n                            " + e._s(e.$t("new_21_09.no_players")) + "\n                        ")]) : e._e()], 2)]), e._v(" "), n("div", {
				staticClass: "column"
			}, [n("h3", [e._v("VM #7")]), e._v(" "), n("div", {
				staticClass: "ui divided list"
			}, [e._l(e.list.vm7, function (t, i) {
				return n("div", {
					class: e.classItem(i + 1)
				}, [e._v("\n                            " + e._s(i + 1) + ". " + e._s(decodeURI(e.safeName(t.name))) + "\n                            "), n("div", {
					staticClass: "right floated content"
				}, [e._v("\n                                " + e._s(e.numberFormat(parseInt(t.score))) + "\n                                "), e.role == 40 ? n("i", {
					staticClass: "x icon",
					on: {
						click: function (n) {
							e.deleteScore(t.score, "VIRUS MINES#7");
						}
					}
				}) : e._e()])]);
			}), e._v(" "), e.list.vm7.length == 0 ? n("div", {
				staticClass: "item"
			}, [e._v("\n                            " + e._s(e.$t("new_21_09.no_players")) + "\n                        ")]) : e._e()], 2)]), e._v(" "), n("div", {
				staticClass: "column"
			}, [n("h3", [e._v("OLD EXP #8")]), e._v(" "), n("div", {
				staticClass: "ui divided list"
			}, [e._l(e.list.oe8, function (t, i) {
				return n("div", {
					class: e.classItem(i + 1)
				}, [e._v("\n                            " + e._s(i + 1) + ". " + e._s(decodeURI(e.safeName(t.name))) + "\n                            "), n("div", {
					staticClass: "right floated content"
				}, [e._v("\n                                " + e._s(e.numberFormat(parseInt(t.score))) + "\n                                "), e.role == 40 ? n("i", {
					staticClass: "x icon",
					on: {
						click: function (n) {
							e.deleteScore(t.score, "OLD EXP#8");
						}
					}
				}) : e._e()])]);
			}), e._v(" "), e.list.oe8.length == 0 ? n("div", {
				staticClass: "item"
			}, [e._v("\n                            " + e._s(e.$t("new_21_09.no_players")) + "\n                        ")]) : e._e()], 2)])])]), e._v(" "), n("div", {
				staticClass: "ui divider"
			}), e._v(" "), n("em", [e._v(e._s(e.$t("new_21_09.result_added")))]), n("br"), e._v(" "), n("em", [e._v(e._s(e.$t("new_21_09.result_count")))])])], 1);
		},
		staticRenderFns: []
	};
}, function (e, t) {
	e.exports = {
		render: function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("div", {
				staticClass: "homepage"
			}, [n("div", {
				staticClass: "ui container",
				attrs: {
					id: "contribute"
				}
			}, [n("div", {
				staticClass: "ui stackable internally celled grid"
			}, [n("div", {
				staticClass: "six wide column"
			}, [n("div", {
				staticClass: "ui raised segment"
			}, [n("h3", [n("i", {
				staticClass: "money icon"
			}), e._v(" " + e._s(e.$t("contribute.donate")))]), e._v(" "), n("div", {
				staticClass: "ui stackable grid"
			}, [n("div", {
				staticClass: "ten wide column"
			}, [n("div", {
				staticClass: "label-divider"
			}), e._v(" "), n("p", [e._v(e._s(e.$t("contribute.donate_desc")))]), e._v(" "), n("div", {
				staticClass: "ui hidden divider"
			}), e._v(" "), n("img", {
				staticClass: "paypal-donate-image",
				attrs: {
					src: "https://www.digitaltrends.com/wp-content/uploads/2011/12/Paypal_button1.jpg"
				}
			})]), e._v(" "), n("div", {
				staticClass: "six wide column"
			}, [n("p", [e._v(e._s(e.$t("contribute.select_amount")))]), e._v(" "), n("div", [n("div", {
				staticClass: "label-divider"
			}), e._v(" "), n("a", {
				staticClass: "ui large tag label",
				on: {
					click: function (t) {
						e.selectDonation("Option 1 -");
					}
				}
			}, [e._v("\n                      €1.00\n                    ")]), e._v(" "), n("div", {
				staticClass: "label-divider"
			}), e._v(" "), n("a", {
				staticClass: "ui large tag label",
				on: {
					click: function (t) {
						e.selectDonation("Option 2 -");
					}
				}
			}, [e._v("\n                      €3.00\n                    ")]), e._v(" "), n("div", {
				staticClass: "label-divider"
			}), e._v(" "), n("a", {
				staticClass: "ui large tag label",
				on: {
					click: function (t) {
						e.selectDonation("Option 3 -");
					}
				}
			}, [e._v("\n                      €5.00\n                    ")]), e._v(" "), n("div", {
				staticClass: "label-divider"
			}), e._v(" "), n("a", {
				staticClass: "ui large tag label",
				on: {
					click: function (t) {
						e.selectDonation("Option 4 -");
					}
				}
			}, [e._v("\n                      €10.00\n                    ")]), e._v(" "), n("div", {
				staticClass: "label-divider"
			}), e._v(" "), n("a", {
				staticClass: "ui large tag label",
				on: {
					click: function (t) {
						e.selectDonation("Option 5 -");
					}
				}
			}, [e._v("\n                      €20.00\n                    ")])])])]), e._v(" "), n("div", {
				staticClass: "ui hidden divider"
			})])]), e._v(" "), n("div", {
				staticClass: "five wide column"
			}, [n("div", {
				staticClass: "ui raised segment"
			}, [n("h3", [n("i", {
				staticClass: "world icon"
			}), e._v(" " + e._s(e.$t("contribute.translate")))]), e._v(" "), n("p", [e._v("\n\n                   " + e._s(e.$t("contribute.translate_desc")) + "\n                ")])]), e._v(" "), n("div", {
				staticClass: "ui divider"
			}), e._v(" "), n("div", {
				staticClass: "ui raised segment"
			}, [n("h3", [n("i", {
				staticClass: "facebook icon"
			}), e._v(" " + e._s(e.$t("contribute.follow")))]), e._v(" "), n("p"), n("div", {
				staticClass: "fb-like",
				attrs: {
					"data-href": "#",
					"data-width": "300",
					"data-layout": "standard",
					"data-action": "like",
					"data-size": "large",
					"data-show-faces": "true",
					"data-share": "true"
				}
			}), e._v(" "), n("p")])]), e._v(" "), n("div", {
				staticClass: "five wide column"
			}, [n("div", {
				staticClass: "ui raised segment"
			}, [n("form", {
				attrs: {
					role: "form",
					name: "info"
				},
				on: {
					submit: function (t) {
						t.preventDefault();
						e.contactUs();
					}
				}
			}, [n("div", {
				staticClass: "form-group"
			}, [n("div", [n("h3", [n("i", {
				staticClass: "question circle icon"
			}), e._v(" " + e._s(e.$t("contact.report_contact")))])])]), e._v(" "), n("div", {
				staticClass: "label-divider"
			}), e._v(" "), n("div", {
				staticClass: "ui form"
			}, [n("div", {
				staticClass: "field"
			}, [n("label", [e._v(e._s(e.$t("contact.your_email")))]), e._v(" "), n("div", {
				staticClass: "ui input"
			}, [n("input", {
				directives: [{
					name: "model",
					rawName: "v-model",
					value: e.form.email,
					expression: "form.email"
				}],
				staticClass: "form-control",
				attrs: {
					type: "text",
					autofocus: ""
				},
				domProps: {
					value: e.form.email
				},
				on: {
					input: function (t) {
						if (!t.target.composing) {
							e.form.email = t.target.value;
						}
					}
				}
			})])]), e._v(" "), n("div", {
				staticClass: "field"
			}, [n("label", [e._v(e._s(e.$t("contact.messsage")))]), e._v(" "), n("textarea", {
				directives: [{
					name: "model",
					rawName: "v-model",
					value: e.form.message,
					expression: "form.message"
				}],
				domProps: {
					value: e.form.message
				},
				on: {
					input: function (t) {
						if (!t.target.composing) {
							e.form.message = t.target.value;
						}
					}
				}
			})])]), e._v(" "), n("div", {
				staticClass: "label-divider"
			}), e._v(" "), n("button", {
				staticClass: "ui secondary fluid button",
				attrs: {
					disabled: e.form.message.length == 0,
					type: "submit"
				}
			}, [n("i", {
				staticClass: "spinner loading icon",
				staticStyle: {
					display: "none"
				},
				attrs: {
					id: "loading-send"
				}
			}), e._v("\n                      " + e._s(e.$t("contact.report")) + "\n                  ")]), e._v(" "), e.reportStatus == 1 ? n("div", {
				staticClass: "ui positive message"
			}, [n("div", {
				staticClass: "header"
			}, [e._v("\n                          " + e._s(e.$t("contact.success")) + "\n                      ")])]) : e._e(), e._v(" "), e.reportStatus == 0 ? n("div", {
				staticClass: "ui negative message"
			}, [n("div", {
				staticClass: "header"
			}, [e._v("\n                          " + e._s(e.$t("contact.error")) + "\n                      ")])]) : e._e()])])])])]), e._v(" "), e._m(0), e._v(" "), n("div", {
				staticClass: "ui hidden divider"
			})]);
		},
		staticRenderFns: [function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("form", {
				staticStyle: {
					display: "none"
				},
				attrs: {
					id: "donate-form",
					action: "https://www.paypal.com/cgi-bin/webscr",
					method: "post",
					target: "_blank"
				}
			}, [n("input", {
				attrs: {
					type: "hidden",
					name: "cmd",
					value: "_s-xclick"
				}
			}), e._v(" "), n("input", {
				attrs: {
					type: "hidden",
					name: "hosted_button_id",
					value: "MYWWNL86EGNKE"
				}
			}), e._v(" "), n("table", [n("tr", [n("td", [n("input", {
				attrs: {
					type: "hidden",
					name: "on0",
					value: "Iznos donacije:"
				}
			}), e._v("Iznos donacije:")])]), n("tr", [n("td", [n("select", {
				attrs: {
					id: "donate-select",
					name: "os0"
				}
			}, [n("option", {
				attrs: {
					value: "Option 1 -"
				}
			}, [e._v("Option 1 - €1.00 EUR")]), e._v(" "), n("option", {
				attrs: {
					value: "Option 2 -"
				}
			}, [e._v("Option 2 - €3.00 EUR")]), e._v(" "), n("option", {
				attrs: {
					value: "Option 3 -"
				}
			}, [e._v("Option 3 - €5.00 EUR")]), e._v(" "), n("option", {
				attrs: {
					value: "Option 4 -"
				}
			}, [e._v("Option 4 - €10.00 EUR")]), e._v(" "), n("option", {
				attrs: {
					value: "Option 5 -"
				}
			}, [e._v("Option 5 - €20.00 EUR")])])])])]), e._v(" "), n("input", {
				attrs: {
					type: "hidden",
					name: "currency_code",
					value: "EUR"
				}
			}), e._v(" "), n("input", {
				attrs: {
					type: "image",
					src: "https://www.psarts.org/wp-content/uploads/2015/08/JVG-Europe-paypal-donation-button.png",
					border: "0",
					name: "submit",
					alt: "PayPal - The safer, easier way to pay online!"
				}
			}), e._v(" "), n("img", {
				attrs: {
					alt: "",
					border: "0",
					src: "https://www.paypalobjects.com/en_US/i/scr/pixel.gif",
					width: "1",
					height: "1"
				}
			})]);
		}]
	};
}, function (e, t) {
	e.exports = {
		render: function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("div", {
				staticClass: "ui grid navigation"
			}, [n("div", {
				staticClass: "computer tablet only row"
			}, [n("div", {
				staticClass: "ui fixed menu navbar grid"
			}, [n("div", {
				staticClass: "ui container"
			}, [e.fromApp ? n("a", {
				attrs: {
					id: "fullScreenBtn2"
				},
				on: {
					click: function (t) {
						e.fullScreen();
					}
				}
			}, [n("i", {
				staticClass: "maximize icon"
			})]) : e._e(), e._v(" "), n("router-link", {
				staticClass: "item",
				attrs: {
					to: "/agar.rs/",
					exact: ""
				}
			}, [n("i", {
				staticClass: "game icon"
			}), e._v(e._s(e.$t("home.home")))]), e._v(" "), n("router-link", {
				staticClass: "item",
				attrs: {
					to: "/agar.rs/skins"
				}
			}, [n("i", {
				staticClass: "image icon"
			}), e._v(e._s(e.$t("home.skins")))]), e._v(" "), n("router-link", {
				staticClass: "item",
				attrs: {
					to: "/agar.rs/highscores"
				}
			}, [n("i", {
				staticClass: "trophy icon"
			}), e._v(e._s(e.$t("logged.results")) + "\n                ")]), e._v(" "), n("router-link", {
				staticClass: "item",
				attrs: {
					to: "/agar.rs/hats"
				}
			}, [n("i", {
				staticClass: "graduation cap icon"
			}), e._v(e._s(e.$t("logged.hats")) + "\n                    ")]), e._v(" "), n("div", {
				staticClass: "right menu"
			}, [e._m(0), e._v(" "), n("a", {
				staticClass: "item",
				on: {
					click: function (t) {
						e.musicPage();
					}
				}
			}, [n("i", {
				staticClass: "music icon"
			})]), e._v(" "), n("div", {
				staticClass: "item ui floating dropdown button change-country"
			}, [n("i", {
				class: e.lang + " flag"
			}), e._v(" "), n("div", {
				staticClass: "menu",
				class: e.lang
			}, [n("div", {
				staticClass: "item",
				class: e.lang == "gb" ? "active" : "",
				on: {
					click: function (t) {
						e.changeLanguage("gb");
					}
				}
			}, [n("i", {
				staticClass: "gb flag"
			}), e._v("English\n                            ")]), e._v(" "), n("div", {
				staticClass: "item",
				class: e.lang == "ba" ? "active" : "",
				on: {
					click: function (t) {
						e.changeLanguage("ba");
					}
				}
			}, [n("i", {
				staticClass: "ba flag"
			}), e._v("Bosanski\n                            ")]), e._v(" "), n("div", {
				staticClass: "item",
				class: e.lang == "rs" ? "active" : "",
				on: {
					click: function (t) {
						e.changeLanguage("rs");
					}
				}
			}, [n("i", {
				staticClass: "rs flag"
			}), e._v("Српски\n                            ")]), e._v(" "), n("div", {
				staticClass: "item",
				class: e.lang == "hr" ? "active" : "",
				on: {
					click: function (t) {
						e.changeLanguage("hr");
					}
				}
			}, [n("i", {
				staticClass: "hr flag"
			}), e._v("Hrvatski\n                            ")]), e._v(" "), n("div", {
				staticClass: "item",
				class: e.lang == "mk" ? "active" : "",
				on: {
					click: function (t) {
						e.changeLanguage("mk");
					}
				}
			}, [n("i", {
				staticClass: "mk flag"
			}), e._v("Македонски\n                            ")]), e._v(" "), n("div", {
				staticClass: "item",
				class: e.lang == "si" ? "active" : "",
				on: {
					click: function (t) {
						e.changeLanguage("si");
					}
				}
			}, [n("i", {
				staticClass: "si flag"
			}), e._v("Slovenščina\n                            ")])])])], 1)], 1)])]), e._v(" "), n("div", {
				staticClass: "mobile only row"
			}, [n("div", {
				staticClass: "ui fixed navbar menu"
			}, [e.fromApp ? e._e() : n("a", {
				attrs: {
					id: "fullScreenBtn"
				},
				on: {
					click: function (t) {
						e.fullScreen();
					}
				}
			}, [n("i", {
				staticClass: "maximize icon"
			})]), e._v(" "), e._m(1)]), e._v(" "), n("div", {
				staticClass: "ui vertical navbar menu"
			}, [n("router-link", {
				staticClass: "item",
				attrs: {
					to: "/agar.rs/",
					exact: ""
				}
			}, [n("i", {
				staticClass: "game icon"
			}), e._v(e._s(e.$t("home.home")))]), e._v(" "), n("router-link", {
				staticClass: "item",
				attrs: {
					to: "/agar.rs/skins"
				}
			}, [n("i", {
				staticClass: "image icon"
			}), e._v(e._s(e.$t("home.skins")))]), e._v(" "), n("router-link", {
				staticClass: "item",
				attrs: {
					to: "/agar.rs/highscores"
				}
			}, [n("i", {
				staticClass: "trophy icon"
			}), e._v(e._s(e.$t("logged.results")) + "\n            ")]), e._v(" "), n("router-link", {
				staticClass: "item",
				attrs: {
					to: "/agar.rs/login"
				}
			}, [n("i", {
				staticClass: "lock icon"
			}), e._v(e._s(e.$t("home.login")))]), e._v(" "), n("router-link", {
				staticClass: "item",
				attrs: {
					to: "/agar.rs/register"
				}
			}, [n("i", {
				staticClass: "lock icon"
			}), e._v(e._s(e.$t("login.register")) + "\n            ")]), e._v(" "), n("a", {
				staticClass: "item",
				on: {
					click: function (t) {
						e.musicPage();
					}
				}
			}, [n("i", {
				staticClass: "music icon"
			}), e._v(e._s(e.$t("home.music")))]), e._v(" "), n("div", {
				staticClass: "item ui floating dropdown button change-country"
			}, [n("i", {
				class: e.lang + " flag"
			}), e._v(" "), n("div", {
				staticClass: "menu",
				class: e.lang
			}, [n("div", {
				staticClass: "item",
				class: e.lang == "gb" ? "active" : "",
				on: {
					click: function (t) {
						e.changeLanguage("gb");
					}
				}
			}, [n("i", {
				staticClass: "gb flag"
			}), e._v("English\n                    ")]), e._v(" "), n("div", {
				staticClass: "item",
				class: e.lang == "ba" ? "active" : "",
				on: {
					click: function (t) {
						e.changeLanguage("ba");
					}
				}
			}, [n("i", {
				staticClass: "ba flag"
			}), e._v("Bosanski\n                    ")]), e._v(" "), n("div", {
				staticClass: "item",
				class: e.lang == "rs" ? "active" : "",
				on: {
					click: function (t) {
						e.changeLanguage("rs");
					}
				}
			}, [n("i", {
				staticClass: "rs flag"
			}), e._v("Српски\n                    ")]), e._v(" "), n("div", {
				staticClass: "item",
				class: e.lang == "hr" ? "active" : "",
				on: {
					click: function (t) {
						e.changeLanguage("hr");
					}
				}
			}, [n("i", {
				staticClass: "hr flag"
			}), e._v("Hrvatski\n                    ")]), e._v(" "), n("div", {
				staticClass: "item",
				class: e.lang == "mk" ? "active" : "",
				on: {
					click: function (t) {
						e.changeLanguage("mk");
					}
				}
			}, [n("i", {
				staticClass: "mk flag"
			}), e._v("Македонски\n                    ")]), e._v(" "), n("div", {
				staticClass: "item",
				class: e.lang == "si" ? "active" : "",
				on: {
					click: function (t) {
						e.changeLanguage("si");
					}
				}
			}, [n("i", {
				staticClass: "si flag"
			}), e._v("Slovenščina\n                    ")])])])], 1)])]);
		},
		staticRenderFns: [function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("div", {
				staticClass: "item ui link dropdown",
				attrs: {
					id: "another-version-dropdown"
				}
			}, [n("i", {
				staticClass: "external alternate icon"
			}), e._v(" "), n("div", {
				staticClass: "menu"
			}, [n("div", {
				staticClass: "item"
			}, [n("a", {
				attrs: {
					href: "#",
					target: "_blank"
				}
			}, [e._v("Beta")])]), e._v(" "), n("div", {
				staticClass: "item"
			}, [n("a", {
				attrs: {
					href: "#",
					target: "_blank"
				}
			}, [e._v("Lite")])]), e._v(" "), n("div", {
				staticClass: "item"
			}, [n("a", {
				attrs: {
					href: "#",
					target: "_blank"
				}
			}, [e._v("\n                                    Android\n                                ")])]), e._v(" "), n("div", {
				staticClass: "item"
			}, [n("a", {
				attrs: {
					href: "#",
					target: "_blank"
				}
			}, [e._v("\n                                    Facebook\n                                ")])])])]);
		}, function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("div", {
				staticClass: "right menu open"
			}, [n("a", {
				staticClass: "menu item",
				attrs: {
					href: ""
				}
			}, [n("i", {
				staticClass: "content icon"
			})])]);
		}]
	};
}, function (e, t) {
	e.exports = {
		render: function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("div", {
				staticClass: "hats",
				attrs: {
					id: "hats-page"
				}
			}, [n("spinner", {
				attrs: {
					show: e.loading
				}
			}), e._v(" "), n("div", {
				staticClass: "ui container"
			}, [n("div", {
				staticClass: "ui hidden divider"
			}), e._v(" "), n("div", {
				staticClass: "ads-skins"
			}, 1)]), e._v(" "), n("div", {
				staticClass: "ui hidden divider"
			}), e._v(" "), n("div", {
				staticClass: "ui container"
			}, [n("div", {
				staticClass: "ui hidden divider"
			}), e._v(" "), n("div", {
				staticClass: "ui grid"
			}, [e._l(e.sortedArray, function (t) {
				if (t.special == "sale") {
					return n("div", {
						staticClass: "sixteen wide mobile column eight wide tablet column four wide computer column"
					}, [n("div", {
						staticClass: "hats-list"
					}, [n("div", {
						staticClass: "ui card",
						staticStyle: {
							margin: "0 auto"
						}
					}, [n("div", {
						staticClass: "content"
					}, [n("p", {
						staticClass: "header"
					}, [e._v(e._s(t.name))])]), e._v(" "), n("div", {
						staticClass: "blurring dimmable image",
						class: t.is_my ? "buyed" : ""
					}, [e.am_logged_in ? n("div", {
						staticClass: "ui dimmer"
					}, [n("div", {
						staticClass: "content"
					}, [n("div", {
						staticClass: "center"
					}, [t.is_my ? n("div", {
						staticClass: "ui inverted button",
						on: {
							click: function (n) {
								e.chooseHat(t.secret);
							}
						}
					}, [e._v(e._s(e.$t("hats.choose")) + "\n                                        ")]) : n("div", {
						staticClass: "ui inverted button",
						on: {
							click: function (n) {
								e.buyHat(t);
							}
						}
					}, [e._v(e._s(e.$t("hats.buy")) + "\n                                        ")])])])]) : e._e(), e._v(" "), n("img", {
						attrs: {
							src: "/agar.rs/assets/images/hats/" + t.link + ".webp"
						}
					})]), e._v(" "), n("div", {
						staticClass: "extra content"
					}, [n("strong", [n("img", {
						staticClass: "coins-img",
						attrs: {
							src: "/agar.rs/assets/images/coins.png"
						}
					}), e._v("\n                                " + e._s(t.price) + " /\n                                "), n("i", {
						staticClass: "clock outline icon"
					}), e._v("\n                                " + e._s(Number(t.price) >= 50000 ? "30" : "7") + " " + e._s(e.$t("hats.days")) + "\n                            ")])])])])]);
				} else {
					return e._e();
				}
			}), e._v(" "), n("div", {
				staticClass: "sixteen wide mobile column eight wide tablet column four wide computer column"
			}, 1)], 2), e._v(" "), n("div", {
				staticClass: "ui hidden divider"
			}), e._v(" "), n("em", {
				staticClass: "info"
			}), e._v(" "), n("div", {
				staticClass: "ui hidden divider"
			})])], 1);
		},
		staticRenderFns: []
	};
}, function (e, t) {
	e.exports = {
		render: function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("div", {
				staticClass: "homepage skin-preview"
			}, [n("div", {
				staticClass: "ui centered card"
			}, [n("div", {
				staticClass: "image"
			}, [n("img", {
				attrs: {
					src: "/agar.rs/assets/images/skins/" + e.name + ".png"
				},
				on: {
					click: function (t) {
						e.chooseSkin(e.name);
					}
				}
			})]), e._v(" "), n("div", {
				staticClass: "text-center content"
			}, [n("h3", {
				staticClass: "header",
				on: {
					click: function (t) {
						e.chooseSkin(e.name);
					}
				}
			}, [e._v(e._s(e.name))])]), e._v(" "), n("div", {
				staticClass: "text-center extra content"
			}, [n("a", {
				staticClass: "ui button",
				attrs: {
					href: "/agar.rs/assets/images/skins/" + e.name + ".png",
					download: ""
				}
			}, [e._v("Preuzmi skin")])])])]);
		},
		staticRenderFns: []
	};
}, function (e, t) {
	e.exports = {
		render: function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("div", {
				staticClass: "homepage"
			}, [n("div", {
				attrs: {
					id: "loginPage"
				}
			}, [n("form", {
				attrs: {
					role: "form",
					name: "info"
				},
				on: {
					keydown: function (t) {
						e.registerForm.errors.clear(t.target.name);
					},
					submit: function (t) {
						t.preventDefault();
						e.Register();
					}
				}
			}, [n("div", {
				staticClass: "form-group"
			}, [n("div", [n("h3", [e._v(e._s(e.$t("login.register_head")))])])]), e._v(" "), n("br"), e._v(" "), n("input", {
				directives: [{
					name: "model",
					rawName: "v-model",
					value: e.registerForm.nickname,
					expression: "registerForm.nickname"
				}],
				staticClass: "form-control",
				attrs: {
					title: e.$t("logged.type_nick_desc"),
					id: "nickname",
					name: "nickname",
					placeholder: e.$t("home.type_name"),
					type: "text",
					maxlength: "15",
					autofocus: ""
				},
				domProps: {
					value: e.registerForm.nickname
				},
				on: {
					input: function (t) {
						if (!t.target.composing) {
							e.registerForm.nickname = t.target.value;
						}
					}
				}
			}), e._v(" "), e.registerForm.errors.has("nickname") ? n("p", {
				staticClass: "error-text"
			}, [e._v(e._s(e.registerForm.errors.get("nickname")))]) : e._e(), e._v(" "), n("input", {
				directives: [{
					name: "model",
					rawName: "v-model",
					value: e.registerForm.email,
					expression: "registerForm.email"
				}],
				staticClass: "form-control",
				attrs: {
					name: "email",
					placeholder: e.$t("login.email"),
					type: "text"
				},
				domProps: {
					value: e.registerForm.email
				},
				on: {
					input: function (t) {
						if (!t.target.composing) {
							e.registerForm.email = t.target.value;
						}
					}
				}
			}), e._v(" "), e.registerForm.errors.has("email") ? n("p", {
				staticClass: "error-text"
			}, [e._v(e._s(e.registerForm.errors.get("email")))]) : e._e(), e._v(" "), n("input", {
				directives: [{
					name: "model",
					rawName: "v-model",
					value: e.registerForm.password,
					expression: "registerForm.password"
				}],
				staticClass: "form-control",
				attrs: {
					placeholder: e.$t("login.type_password"),
					type: "password"
				},
				domProps: {
					value: e.registerForm.password
				},
				on: {
					input: function (t) {
						if (!t.target.composing) {
							e.registerForm.password = t.target.value;
						}
					}
				}
			}), e._v(" "), e.registerForm.errors.has("password") ? n("p", {
				staticClass: "error-text",
				attrs: {
					name: "password"
				}
			}, [e._v(e._s(e.registerForm.errors.get("password")))]) : e._e(), e._v(" "), n("button", {
				staticClass: "start-btn",
				attrs: {
					type: "submit"
				}
			}, [n("i", {
				staticClass: "spinner loading icon",
				staticStyle: {
					display: "none"
				},
				attrs: {
					id: "loading-login"
				}
			}), e._v("\n                " + e._s(e.$t("login.register")) + "\n            ")]), e._v(" "), e.fromApp ? e._e() : n("div", {
				staticClass: "ui horizontal divider"
			}, [e._v("\n                " + e._s(e.$t("new_21_09.or")) + "\n            ")]), e._v(" "), e.fromApp ? e._e() : n("button", {
				staticClass: "login-facebook",
				attrs: {
					type: "button"
				},
				on: {
					click: function (t) {
						e.facebookLogin();
					}
				}
			}, [e._v(e._s(e.$t("new_21_09.login_facebook")))])])])]);
		},
		staticRenderFns: []
	};
}, function (e, t) {
	e.exports = {
		render: function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("div", {
				staticClass: "homepage"
			}, [e.game == "" ? n("div", {
				staticClass: "game-list"
			}, [n("div", {
				staticClass: "ui three stackable cards"
			}, [n("div", {
				staticClass: "teal card",
				on: {
					click: function (t) {
						e.changeGame(1);
					}
				}
			}, [e._m(0), e._v(" "), e._m(1)]), e._v(" "), n("div", {
				staticClass: "teal card",
				on: {
					click: function (t) {
						e.changeGame(2);
					}
				}
			}, [e._m(2), e._v(" "), e._m(3)])])]) : n("iframe", {
				attrs: {
					src: e.game
				}
			})]);
		},
		staticRenderFns: [function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("div", {
				staticClass: "image"
			}, [n("img", {
				attrs: {
					src: "/agar.rs/assets/images/games/fun.jpg"
				}
			})]);
		}, function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("div", {
				staticClass: "content"
			}, [n("p", {
				staticClass: "ui centered header"
			}, [e._v("Kuglice")])]);
		}, function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("div", {
				staticClass: "image"
			}, [n("img", {
				attrs: {
					src: "/agar.rs/assets/images/games/racing.png"
				}
			})]);
		}, function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("div", {
				staticClass: "content"
			}, [n("p", {
				staticClass: "ui centered header"
			}, [e._v("Trke")])]);
		}]
	};
}, function (e, t) {
	e.exports = {
		render: function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("div", {
				staticClass: "homepage"
			}, [n("div", {
				attrs: {
					id: "loginPage"
				}
			}, [e.reset == 0 ? n("form", {
				attrs: {
					role: "form",
					name: "info"
				},
				on: {
					submit: function (t) {
						t.preventDefault();
						e.forgotPassword();
					},
					keydown: function (t) {
						e.status = -1;
					}
				}
			}, [n("div", {
				staticClass: "form-group"
			}, [n("div", [n("h3", [e._v(e._s(e.$t("forgotPassword.question")))])])]), e._v(" "), n("div", {
				staticClass: "ui hidden divider"
			}), e._v(" "), n("input", {
				directives: [{
					name: "model",
					rawName: "v-model",
					value: e.forgotPasswordForm.email,
					expression: "forgotPasswordForm.email"
				}],
				staticClass: "form-control",
				attrs: {
					placeholder: e.$t("login.email"),
					type: "email",
					autofocus: ""
				},
				domProps: {
					value: e.forgotPasswordForm.email
				},
				on: {
					input: function (t) {
						if (!t.target.composing) {
							e.forgotPasswordForm.email = t.target.value;
						}
					}
				}
			}), e._v(" "), n("button", {
				staticClass: "start-btn",
				attrs: {
					type: "submit"
				}
			}, [n("i", {
				staticClass: "spinner loading icon",
				staticStyle: {
					display: "none"
				},
				attrs: {
					id: "loading-login"
				}
			}), e._v("\n                " + e._s(e.$t("contact.report")) + "\n            ")]), e._v(" "), e.status == 0 ? n("div", {
				staticClass: "ui negative message"
			}, [n("i", {
				staticClass: "close icon"
			}), e._v(" "), n("div", {
				staticClass: "header"
			}, [e._v("\n                    " + e._s(e.$t("forgotPassword.email_not_exist")) + "\n                ")])]) : e._e(), e._v(" "), e.status == 1 ? n("div", {
				staticClass: "ui positive message"
			}, [n("i", {
				staticClass: "close icon"
			}), e._v(" "), n("div", {
				staticClass: "header"
			}, [e._v("\n                    " + e._s(e.$t("forgotPassword.email_sent")) + "\n                ")])]) : e._e()]) : e._e(), e._v(" "), e.reset == 1 ? n("form", {
				attrs: {
					role: "form",
					name: "info"
				},
				on: {
					submit: function (t) {
						t.preventDefault();
						e.updatePasswod();
					},
					keydown: function (t) {
						e.status = -1;
					}
				}
			}, [n("div", {
				staticClass: "form-group"
			}, [n("div", [n("h3", [e._v(e._s(e.$t("forgotPassword.change_password")))])])]), e._v(" "), n("div", {
				staticClass: "ui hidden divider"
			}), e._v(" "), n("input", {
				directives: [{
					name: "model",
					rawName: "v-model",
					value: e.forgotPasswordForm.password,
					expression: "forgotPasswordForm.password"
				}],
				staticClass: "form-control",
				attrs: {
					placeholder: e.$t("forgotPassword.new_password"),
					type: "password",
					autofocus: ""
				},
				domProps: {
					value: e.forgotPasswordForm.password
				},
				on: {
					input: function (t) {
						if (!t.target.composing) {
							e.forgotPasswordForm.password = t.target.value;
						}
					}
				}
			}), e._v(" "), n("input", {
				directives: [{
					name: "model",
					rawName: "v-model",
					value: e.forgotPasswordForm.passwordConfirm,
					expression: "forgotPasswordForm.passwordConfirm"
				}],
				staticClass: "form-control",
				attrs: {
					placeholder: e.$t("forgotPassword.repeat_password"),
					type: "password"
				},
				domProps: {
					value: e.forgotPasswordForm.passwordConfirm
				},
				on: {
					input: function (t) {
						if (!t.target.composing) {
							e.forgotPasswordForm.passwordConfirm = t.target.value;
						}
					}
				}
			}), e._v(" "), n("button", {
				staticClass: "start-btn",
				attrs: {
					type: "submit"
				}
			}, [n("i", {
				staticClass: "spinner loading icon",
				staticStyle: {
					display: "none"
				},
				attrs: {
					id: "loading-login"
				}
			}), e._v("\n                 " + e._s(e.$t("forgotPassword.reset")) + "\n             ")]), e._v(" "), e.status == 0 ? n("div", {
				staticClass: "ui negative message"
			}, [n("i", {
				staticClass: "close icon"
			}), e._v(" "), n("div", {
				staticClass: "header"
			}, [e._v("\n                     " + e._s(e.$t("forgotPassword.wrong_code")) + "\n                 ")])]) : e._e(), e._v(" "), e.status == 1 ? n("div", {
				staticClass: "ui positive message"
			}, [n("i", {
				staticClass: "close icon"
			}), e._v(" "), n("div", {
				staticClass: "header"
			}, [e._v("\n                     " + e._s(e.$t("forgotPassword.password_changed")) + "\n                 ")])]) : e._e(), e._v(" "), e.status == 2 ? n("div", {
				staticClass: "ui negative message"
			}, [n("div", {
				staticClass: "header"
			}, [e._v("\n                     " + e._s(e.$t("forgotPassword.passwords_do_not_match")) + "\n                 ")])]) : e._e()]) : e._e(), e._v(" "), e.reset == -1 ? n("div", {
				staticClass: "message-status"
			}, [e.status == 1 ? n("div", {
				staticClass: "ui positive message"
			}, [n("div", {
				staticClass: "header"
			}, [e._v("\n                   " + e._s(e.$t("forgotPassword.password_changed")) + "\n               ")])]) : e._e(), e._v(" "), e.status == 0 ? n("div", {
				staticClass: "ui negative message"
			}, [n("div", {
				staticClass: "header"
			}, [e._v("\n                   " + e._s(e.$t("forgotPassword.wrong_code")) + "\n               ")])]) : e._e()]) : e._e()])]);
		},
		staticRenderFns: []
	};
}, function (e, t) {
	e.exports = {
		render: function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("div", {
				staticClass: "homepage"
			}, [n("div", {
				attrs: {
					id: "loginPage"
				}
			}, [n("form", {
				attrs: {
					role: "form",
					name: "info"
				},
				on: {
					submit: function (t) {
						t.preventDefault();
						e.Login();
					},
					keydown: function (t) {
						e.wrongCredentials = false;
					}
				}
			}, [e._m(0), e._v(" "), n("div", {
				staticClass: "ui hidden divider"
			}), e._v(" "), n("input", {
				directives: [{
					name: "model",
					rawName: "v-model",
					value: e.loginForm.email,
					expression: "loginForm.email"
				}],
				staticClass: "form-control",
				attrs: {
					placeholder: e.$t("login.email_username"),
					type: "text",
					autofocus: ""
				},
				domProps: {
					value: e.loginForm.email
				},
				on: {
					input: function (t) {
						if (!t.target.composing) {
							e.loginForm.email = t.target.value;
						}
					}
				}
			}), e._v(" "), n("input", {
				directives: [{
					name: "model",
					rawName: "v-model",
					value: e.loginForm.password,
					expression: "loginForm.password"
				}],
				staticClass: "form-control",
				attrs: {
					placeholder: e.$t("login.type_password"),
					type: "password"
				},
				domProps: {
					value: e.loginForm.password
				},
				on: {
					input: function (t) {
						if (!t.target.composing) {
							e.loginForm.password = t.target.value;
						}
					}
				}
			}), e._v(" "), n("button", {
				staticClass: "start-btn",
				attrs: {
					type: "submit"
				}
			}, [n("i", {
				staticClass: "spinner loading icon",
				staticStyle: {
					display: "none"
				},
				attrs: {
					id: "loading-login"
				}
			}), e._v("\n                " + e._s(e.$t("login.login")) + "\n            ")]), e._v(" "), e.fromApp ? e._e() : n("div", {
				staticClass: "ui horizontal divider"
			}, [e._v("\n                " + e._s(e.$t("new_21_09.or")) + "\n            ")]), e._v(" "), e.fromApp ? e._e() : n("button", {
				staticClass: "login-facebook",
				attrs: {
					type: "button"
				},
				on: {
					click: function (t) {
						e.facebookLogin();
					}
				}
			}, [e._v(e._s(e.$t("new_21_09.login_facebook")))]), e._v(" "), n("p", {
				staticClass: "forgot-password-link"
			}, [n("router-link", {
				attrs: {
					to: "/agar.rs/forgot-password"
				}
			}, [e._v(e._s(e.$t("forgotPassword.question")))])], 1), e._v(" "), e.wrongCredentials ? n("div", {
				staticClass: "ui negative message"
			}, [n("i", {
				staticClass: "close icon"
			}), e._v(" "), n("div", {
				staticClass: "header"
			}, [e._v("\n                    " + e._s(e.$t("login.wrong_credentials")) + "\n                ")])]) : e._e()])])]);
		},
		staticRenderFns: [function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("div", {
				staticClass: "form-group"
			}, [n("div")]);
		}]
	};
}, function (e, t) {
	e.exports = {
		render: function () {
			var e = this;
			var t = e.$createElement;
			return (e._self._c || t)("div", [e._v("\n    Logovanje...\n")]);
		},
		staticRenderFns: []
	};
}, function (e, t) {
	e.exports = {
		render: function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("div", {
				staticClass: "ui small inverted modal",
				attrs: {
					id: "profile-settings-modal"
				}
			}, [n("i", {
				staticClass: "close icon"
			}), e._v(" "), n("div", {
				staticClass: "header"
			}, [e._v("\n        " + e._s(e.$t("logged.profile_settings")) + "\n    ")]), e._v(" "), n("div", {
				staticClass: "content"
			}, [n("div", {
				staticClass: "ui inverted segment"
			}, [n("div", {
				attrs: {
					role: "form",
					name: "info"
				},
				on: {
					submit: function (t) {
						t.preventDefault();
						e.updateSettings();
					},
					keydown: function (t) {
						e.status = -1;
					}
				}
			}, [n("div", [n("input", {
				directives: [{
					name: "model",
					rawName: "v-model",
					value: e.email,
					expression: "email"
				}],
				staticClass: "form-control",
				attrs: {
					placeholder: e.$t("login.email"),
					type: "email"
				},
				domProps: {
					value: e.email
				},
				on: {
					input: function (t) {
						if (!t.target.composing) {
							e.email = t.target.value;
						}
					}
				}
			})]), e._v(" "), n("div", [n("input", {
				directives: [{
					name: "model",
					rawName: "v-model",
					value: e.updateProfileForm.password,
					expression: "updateProfileForm.password"
				}],
				staticClass: "form-control",
				attrs: {
					placeholder: e.$t("forgotPassword.new_password"),
					type: "password"
				},
				domProps: {
					value: e.updateProfileForm.password
				},
				on: {
					input: function (t) {
						if (!t.target.composing) {
							e.updateProfileForm.password = t.target.value;
						}
					}
				}
			})]), e._v(" "), n("div", [n("input", {
				directives: [{
					name: "model",
					rawName: "v-model",
					value: e.updateProfileForm.passwordConfirm,
					expression: "updateProfileForm.passwordConfirm"
				}],
				staticClass: "form-control",
				attrs: {
					placeholder: e.$t("forgotPassword.repeat_password"),
					type: "password"
				},
				domProps: {
					value: e.updateProfileForm.passwordConfirm
				},
				on: {
					input: function (t) {
						if (!t.target.composing) {
							e.updateProfileForm.passwordConfirm = t.target.value;
						}
					}
				}
			})]), e._v(" "), n("button", {
				staticClass: "start-btn",
				attrs: {
					disabled: e.status == 0,
					type: "button"
				},
				on: {
					click: function (t) {
						e.updateSettings();
					}
				}
			}, [n("i", {
				staticClass: "spinner loading icon",
				staticStyle: {
					display: "none"
				},
				attrs: {
					id: "loading-send"
				}
			}), e._v("\n                    " + e._s(e.$t("logged.save")) + "\n                ")]), e._v(" "), e.status != -1 ? n("div", {
				class: [e.status == 1 ? "positive" : "negative", "message "]
			}, [n("div", {
				staticClass: "header"
			}, [e._v("\n                        " + e._s(e.message) + "\n                    ")])]) : e._e()])]), e._v(" "), n("div", {
				staticClass: "ui inverted segment"
			}, [n("button", {
				staticClass: "start-btn",
				attrs: {
					disabled: e.status == 0,
					type: "button"
				},
				on: {
					click: function (t) {
						e.deleteFB();
					}
				}
			}, [n("i", {
				staticClass: "spinner loading icon",
				staticStyle: {
					display: "none"
				},
				attrs: {
					id: "loading-delete-fb"
				}
			}), e._v("\n                    " + e._s(e.$t("options.delete_facebook")) + "\n                ")]), e._v(" "), n("button", {
				staticClass: "start-btn",
				attrs: {
					disabled: e.status == 0,
					type: "button"
				},
				on: {
					click: function (t) {
						e.deleteProfile();
					}
				}
			}, [n("i", {
				staticClass: "spinner loading icon",
				staticStyle: {
					display: "none"
				},
				attrs: {
					id: "loading-delete"
				}
			}), e._v("\n                    " + e._s(e.$t("options.delete_profile")) + "\n                ")])])])]);
		},
		staticRenderFns: []
	};
}, function (e, t) {
	e.exports = {
		render: function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("div", {
				staticClass: "ui container"
			}, [n("table", {
				staticClass: "ui inverted celled table"
			}, [n("thead", [n("tr", [n("th", [e._v(e._s(e.$t("statistic.server")))]), e._v(" "), n("th", [e._v(e._s(e.$t("statistic.max_score")))]), e._v(" "), n("th", [e._v(e._s(e.$t("statistic.best_time_played")))]), e._v(" "), n("th", [e._v(e._s(e.$t("statistic.all_plays")))])])]), e._v(" "), n("tbody", e._l(e.private_score, function (t) {
				return n("tr", [n("td", [n("div", {
					staticClass: "ui ribbon label"
				}, [e._v(e._s(t.server))])]), e._v(" "), n("td", [e._v(e._s(e.threeDigits(t.max_score)))]), e._v(" "), n("td", [e._v(e._s(e.Cb(t.max_time)))]), e._v(" "), n("td", [e._v(e._s(t.games_played))])]);
			}))])]);
		},
		staticRenderFns: []
	};
}, function (e, t) {
	e.exports = {
		render: function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("div", {
				staticClass: "setting-section",
				attrs: {
					id: "settings"
				}
			}, [n("div", {
				staticClass: "theme-selector"
			}, [e.toggleColors ? n("div", {
				attrs: {
					id: "theme-selector"
				}
			}, [n("div", {
				class: [e.choosenTheme == "tema2" ? "active-theme" : "", "twilight-theme"],
				on: {
					click: function (t) {
						e.changeTheme("tema2");
					}
				}
			}), e._v(" "), n("div", {
				class: [e.choosenTheme == "tema0" ? "active-theme" : "", "light-theme"],
				on: {
					click: function (t) {
						e.changeTheme("tema0");
					}
				}
			}), e._v(" "), n("div", {
				class: [e.choosenTheme == "tema1" ? "active-theme" : "", "dark-theme"],
				on: {
					click: function (t) {
						e.changeTheme("tema1");
					}
				}
			}), e._v(" "), n("div", {
				class: [e.choosenTheme == "tema3" ? "active-theme" : "", "mars-theme"],
				on: {
					click: function (t) {
						e.changeTheme("tema3");
					}
				}
			})]) : e._e(), e._v(" "), n("button", {
				staticClass: "icon-btn theme-btn",
				attrs: {
					type: "button",
					"data-tooltip": e.$t("home.theme"),
					"data-position": "top center",
					"data-inverted": ""
				},
				on: {
					click: function (t) {
						e.toggleColors = !e.toggleColors;
					}
				}
			}, [n("i", {
				staticClass: "paint brush icon"
			})]), e._v(" "), n("button", {
				staticClass: "icon-btn theme-btn",
				attrs: {
					type: "button",
					"data-tooltip": "FUN",
					"data-position": "top center",
					"data-inverted": ""
				},
				on: {
					click: function (t) {
						e.goToFun();
					}
				}
			}, [n("i", {
				staticClass: "gamepad icon"
			})])])]);
		},
		staticRenderFns: []
	};
}, function (e, t) {
	e.exports = {
		render: function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("div", {
				staticClass: "ui modal",
				attrs: {
					id: "more-settings"
				}
			}, [n("i", {
				staticClass: "close icon"
			}), e._v(" "), n("div", {
				staticClass: "header"
			}, [e._v("\n        " + e._s(e.$t("options.all_settings")) + "\n\n        "), n("div", {
				staticClass: "reset-settings"
			}, [n("a", {
				staticClass: "start-btn",
				on: {
					click: function (t) {
						e.resetSettings();
					}
				}
			}, [e._v(e._s(e.$t("home.reset_settings")))])])]), e._v(" "), n("div", {
				staticClass: "content"
			}, [n("div", {
				staticClass: "ui stackable three column grid"
			}, [n("div", {
				staticClass: "column"
			}, [n("h3", [e._v(e._s(e.$t("options.cells_and_controls")))]), e._v(" "), n("div", {
				staticClass: "options"
			}, [n("div", {
				staticClass: "ui toggle checkbox"
			}, [n("input", {
				attrs: {
					type: "checkbox"
				},
				domProps: {
					checked: e.options.transparentCells
				},
				on: {
					change: function (t) {
						e.goTransparent();
					}
				}
			}), e._v(" "), n("label", [e._v(e._s(e.$t("home.transparent")))])]), e._v(" "), n("div", {
				staticClass: "ui toggle checkbox"
			}, [n("input", {
				attrs: {
					type: "checkbox"
				},
				domProps: {
					checked: e.options.hideHats
				},
				on: {
					change: function (t) {
						e.goHats();
					}
				}
			}), e._v(" "), n("label", [e._v(e._s(e.$t("home.hide_hats")) + "\n                            ")])]), e._v(" "), n("div", {
				staticClass: "ui toggle checkbox"
			}, [n("input", {
				attrs: {
					type: "checkbox"
				},
				domProps: {
					checked: e.options.showSkins
				},
				on: {
					change: function (t) {
						e.goSkinsShow();
					}
				}
			}), e._v(" "), n("label", [e._v(e._s(e.$t("home.without_skins")))])]), e._v(" "), n("div", {
				staticClass: "ui toggle checkbox"
			}, [n("input", {
				attrs: {
					type: "checkbox"
				},
				domProps: {
					checked: e.options.mouseControl
				},
				on: {
					change: function (t) {
						e.mouseControlFn();
					}
				}
			}), e._v(" "), n("label", [e._v("\n                            " + e._s(e.$t("home.mouse_control")) + "\n                            "), n("span", {
				attrs: {
					"data-tooltip": e.$t("home.mouse_control_desc"),
					"data-inverted": ""
				}
			}, [n("i", {
				staticClass: "help circle icon"
			})])])]), e._v(" "), n("div", {
				staticClass: "ui toggle checkbox"
			}, [n("input", {
				attrs: {
					type: "checkbox"
				},
				domProps: {
					checked: e.options.arrowDirection
				},
				on: {
					change: function (t) {
						e.goArrow();
					}
				}
			}), e._v(" "), n("label", [e._v(e._s(e.$t("home.pointing_arrow")) + "\n                            "), n("span", {
				attrs: {
					"data-tooltip": e.$t("home.pointing_arrow_desc"),
					"data-inverted": ""
				}
			}, [n("i", {
				staticClass: "info circle icon"
			})])])]), e._v(" "), n("div", {
				staticClass: "ui toggle checkbox"
			}, [n("input", {
				attrs: {
					type: "checkbox"
				},
				domProps: {
					checked: e.options.showMass
				},
				on: {
					change: function (t) {
						e.goShowMass();
					}
				}
			}), e._v(" "), n("label", [e._v(e._s(e.$t("home.show_current_score")))])]), e._v(" "), n("div", {
				staticClass: "ui toggle checkbox"
			}, [n("input", {
				attrs: {
					type: "checkbox"
				},
				domProps: {
					checked: e.options.smoothView
				},
				on: {
					change: function (t) {
						e.goSmooth();
					}
				}
			}), e._v(" "), n("label", [e._v(e._s(e.$t("home.smoth_view")))])]), e._v(" "), n("div", {
				staticClass: "ui toggle checkbox"
			}, [n("input", {
				attrs: {
					type: "checkbox"
				},
				domProps: {
					checked: e.options.cellBorder
				},
				on: {
					change: function (t) {
						e.goCellBorder();
					}
				}
			}), e._v(" "), n("label", [e._v(e._s(e.$t("options.cell_border")) + "\n                            ")])]), e._v(" "), n("div", {
				staticClass: "ui toggle checkbox"
			}, [n("input", {
				attrs: {
					type: "checkbox"
				},
				domProps: {
					checked: e.options.colors
				},
				on: {
					change: function (t) {
						e.goColors();
					}
				}
			}), e._v(" "), n("label", [e._v(e._s(e.$t("options.hide_colors")) + "\n                            ")])])])]), e._v(" "), n("div", {
				staticClass: "column"
			}, [n("h3", [e._v(e._s(e.$t("options.map")))]), e._v(" "), n("div", {
				staticClass: "options"
			}, [n("div", {
				staticClass: "color-option"
			}, [n("input", {
				attrs: {
					id: "mapColor",
					type: "color"
				},
				domProps: {
					value: e.options.mapColor
				},
				on: {
					change: function (t) {
						e.changeMapColor(t.target.value);
					}
				}
			}), e._v(" "), n("label", [e._v(e._s(e.$t("options.map_color")) + "\n                            ")])]), e._v(" "), n("div", {
				staticClass: "ui toggle checkbox"
			}, [n("input", {
				attrs: {
					type: "checkbox"
				},
				domProps: {
					checked: e.options.showLines
				},
				on: {
					change: function (t) {
						e.goLines();
					}
				}
			}), e._v(" "), n("label", [e._v(e._s(e.$t("home.without_lines")))])]), e._v(" "), n("div", {
				staticClass: "ui toggle checkbox"
			}, [n("input", {
				attrs: {
					type: "checkbox"
				},
				domProps: {
					checked: e.options.acidMode
				},
				on: {
					change: function (t) {
						e.goAcid();
					}
				}
			}), e._v(" "), n("label", [e._v("Acid mode")])]), e._v(" "), n("div", {
				staticClass: "ui divider"
			}), e._v(" "), n("div", {
				staticClass: "ui toggle checkbox"
			}, [n("input", {
				attrs: {
					type: "checkbox"
				},
				domProps: {
					checked: e.options.sectorsVisible
				},
				on: {
					change: function (t) {
						e.goSectors();
					}
				}
			}), e._v(" "), n("label", [e._v(e._s(e.$t("options.show_sectors")) + "\n                            ")])]), e._v(" "), n("div", {
				staticClass: "color-option"
			}, [n("input", {
				attrs: {
					id: "sectorColor",
					type: "color"
				},
				domProps: {
					value: e.options.sectorsColor
				},
				on: {
					change: function (t) {
						e.changeSectorColor(t.target.value);
					}
				}
			}), e._v(" "), n("label", [e._v(e._s(e.$t("options.sector_color")) + "\n                            ")])]), e._v(" "), n("div", {
				staticClass: "ui divider"
			}), e._v(" "), n("div", {
				staticClass: "ui toggle checkbox"
			}, [n("input", {
				attrs: {
					type: "checkbox"
				},
				domProps: {
					checked: e.options.infiniteScroll
				},
				on: {
					change: function (t) {
						e.goInfiniteScroll();
					}
				}
			}), e._v(" "), n("label", [e._v(e._s(e.$t("options.infinity_zoom")) + "\n                            ")])]), e._v(" "), n("p", [n("i", {
				staticClass: "circular inverted zoom out link icon cursor",
				on: {
					click: function (t) {
						e.gameViewZoom("out");
					}
				}
			}), n("i", {
				staticClass: "circular inverted zoom link icon cursor",
				on: {
					click: function (t) {
						e.gameViewZoom("in");
					}
				}
			}), e._v("\n                        " + e._s(e.$t("home.game_view")) + "\n                    ")]), e._v(" "), e._m(0)])]), e._v(" "), n("div", {
				staticClass: "column"
			}, [n("h3", [e._v(e._s(e.$t("options.other")))]), e._v(" "), n("div", {
				staticClass: "options"
			}, [n("div", {
				staticClass: "ui toggle checkbox"
			}, [n("input", {
				attrs: {
					type: "checkbox"
				},
				domProps: {
					checked: e.options.hideChat
				},
				on: {
					change: function (t) {
						e.goHideChat();
					}
				}
			}), e._v(" "), n("label", [e._v(e._s(e.$t("home.hide_chat")))])]), e._v(" "), n("div", {
				staticClass: "ui toggle checkbox"
			}, [n("input", {
				attrs: {
					type: "checkbox"
				},
				domProps: {
					checked: e.options.oldChat
				},
				on: {
					change: function (t) {
						e.goOldChat();
					}
				}
			}), e._v(" "), n("label", [e._v(e._s(e.$t("new_21_09.old_chat")))])]), e._v(" "), n("div", {
				staticClass: "ui toggle checkbox"
			}, [n("input", {
				attrs: {
					type: "checkbox"
				},
				domProps: {
					checked: e.options.showResults
				},
				on: {
					change: function (t) {
						e.goNames();
					}
				}
			}), e._v(" "), n("label", [e._v(e._s(e.$t("home.show_table")))])]), e._v(" "), n("div", {
				staticClass: "ui toggle checkbox"
			}, [n("input", {
				attrs: {
					type: "checkbox"
				},
				domProps: {
					checked: e.options.backgroundCanvas
				},
				on: {
					change: function (t) {
						e.backgroundCanvasFn();
					}
				}
			}), e._v(" "), n("label", [e._v(" " + e._s(e.$t("new_21_09.background_canvas")))])])])])]), e._v(" "), n("div", {
				staticClass: "ui divider"
			}), e._v(" "), n("keybinds", {
				staticClass: "keybind-public"
			})], 1)]);
		},
		staticRenderFns: [function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("div", {
				staticClass: "ui indicating tiny progress",
				attrs: {
					"data-total": "10",
					id: "game-view"
				}
			}, [n("div", {
				staticClass: "bar"
			})]);
		}]
	};
}, function (e, t) {
	e.exports = {
		render: function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("div", {
				staticClass: "server-list-wraper"
			}, [e.microsoftBrowsers || e.lowGraphics ? n("div", {
				staticClass: "server-list-wrap"
			}, [n("div", {
				staticClass: "ui head",
				staticStyle: {
					display: "flex"
				}
			}, [n("span", {
				on: {
					click: function (t) {
						e.tabSelect(0);
					}
				}
			}, [n("span", {
				attrs: {
					title: e.$t("home.restart")
				}
			}, [n("i", {
				staticClass: "info circle icon"
			})]), e._v("\n            " + e._s(e.$t("home.servers")) + "\n        ")]), e._v(" "), n("span", {
				on: {
					click: function (t) {
						e.tabSelect(1);
					}
				}
			}, [e._v("\n            |  "), n("i", {
				staticClass: "game circle icon"
			}), e._v(" " + e._s(e.$t("new_21_09.training")) + "\n        ")])]), e._v(" "), n("div", {
				staticStyle: {
					clear: "both"
				}
			}), e._v(" "), e.tab === 0 ? n("div", {
				staticClass: "ui animated list"
			}, e._l(e.servers, function (t, i) {
				if (e.am_logged_in || !t.hidden_from_world) {
					return n("div", {
						class: [e.activeServer == t.name ? "activeServ" : "", "item"],
						on: {
							click: function (t) {
								e.chServer(i, false, true);
							}
						}
					}, [n("div", {
						staticClass: "ui right floated label"
					}, [n("i", {
						staticClass: "user icon"
					}), n("span", [e._v(e._s(e.maxPlayers(t.allPlayers, t.maxPlayers, t.name)) + " / " + e._s(t.maxPlayers))])]), e._v(" "), n("div", {
						class: [t.allPlayers >= t.maxPlayers && t.maxPlayers > 0 ? "full-server" : "", "content"]
					}, [e.activeServer == t.name ? n("i", {
						staticClass: "notched circle loading icon connecting-to-server",
						staticStyle: {
							display: "none",
							color: "yellow"
						}
					}) : e._e(), e._v(" "), n("span", [e._v(e._s(t.name))])])]);
				} else {
					return e._e();
				}
			})) : n("div", {
				staticClass: "ui animated list"
			}, [n("router-link", {
				staticClass: "item",
				attrs: {
					to: "/agar.rs/fun/"
				}
			}, [e._v("1. FUN")])], 1)]) : n("div", {
				staticClass: "csstransforms"
			}, [n("div", {
				staticClass: "component"
			}, [n("div", {
				staticClass: "cn-button",
				attrs: {
					id: "cn-button"
				}
			}, [n("p", {
				staticClass: "srv-title"
			}, [e._v(e._s(e.$t("new_21_09.server")) + "\n                ")]), n("p"), n("p", {
				staticClass: "srv-name"
			}, [e._v(e._s(e.activeServer))]), e._v(" "), n("div", {
				staticClass: "srv-info"
			}, [n("i", {
				staticClass: "user icon"
			}), n("span", {
				staticClass: "srv-info-data"
			}, [e._v(e._s(e.getServerInfo(-1, e.activeServer)) + " ")])])]), e._v(" "), n("div", {
				staticClass: "cn-wrapper opened-nav",
				attrs: {
					id: "cn-wrapper"
				}
			}, [n("ul", e._l(e.servers.slice(0, 10), function (t, i) {
				if (t.hidden_from_world) {
					return e._e();
				} else {
					return n("li", {
						class: [e.activeServer == t.name ? "srv-active" : "", "" + i],
						on: {
							mouseover: function (n) {
								e.getServerInfo(i, t.name);
							},
							mouseleave: function (t) {
								e.getServerInfo(-1, e.activeServer);
							},
							click: function (t) {
								e.chServer(i, false, true);
							}
						}
					}, [n("a", [n("span", [e._v(e._s(i + 1))])])]);
				}
			}))])])])]);
		},
		staticRenderFns: []
	};
}, function (e, t) {
	e.exports = {
		render: function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("div", {
				staticClass: "darkLightOk"
			}, [n("div", {
				staticClass: "ui main begin"
			}, [n("div", {
				staticClass: "overlays",
				attrs: {
					id: "overlays"
				}
			}, [e.am_logged_in ? n("div", [e.noHeadTailVar ? e._e() : n("navigation-logged")], 1) : n("div", [e.noHeadTailVar ? e._e() : n("navigation")], 1), e._v(" "), n("transition", {
				attrs: {
					name: "slide",
					"enter-active-class": e.enterActiveClass
				}
			}, [n("router-view", {
				key: e.$route.fullPath,
				staticClass: "view",
				attrs: {
					am_i_logged: e.fastLoginCheck
				}
			})], 1), e._v(" "), e.backgroundCanvas && !e.lowGraphics ? n("canvas", {
				attrs: {
					id: "nokey"
				}
			}) : e._e()], 1)]), e._v(" "), n("chat-box", {
				directives: [{
					name: "show",
					rawName: "v-show",
					value: !e.hidden_chat,
					expression: "!hidden_chat"
				}]
			}), e._v(" "), n("jukebox", {
				attrs: {
					playedrun: e.playedrun,
					muted: e.muted
				},
				on: {
					jukebox: e.musicEmit
				}
			}), e._v(" "), n("div", {
				directives: [{
					name: "show",
					rawName: "v-show",
					value: e.musicActive,
					expression: "musicActive"
				}],
				staticClass: "music-player"
			}, [n("div", {
				staticClass: "music-player-overlay",
				on: {
					click: function (t) {
						e.mute();
					}
				}
			}, [n("i", {
				directives: [{
					name: "show",
					rawName: "v-show",
					value: e.muted,
					expression: "muted"
				}],
				staticClass: "play icon"
			}), e._v(" "), n("i", {
				directives: [{
					name: "show",
					rawName: "v-show",
					value: !e.muted,
					expression: "!muted"
				}],
				staticClass: "mute icon"
			})])]), e._v(" "), n("div", {
				staticClass: "ui custom popup bottom right transition hidden"
			}, [e._v("\n        " + e._s(e.musicData.name) + "\n    ")]), e._v(" "), n("div", {
				directives: [{
					name: "show",
					rawName: "v-show",
					value: !e.musicActive && !e.playedrun && !e.on_mobile,
					expression: "!musicActive && !playedrun && !on_mobile"
				}],
				staticClass: "music-player2",
				attrs: {
					"data-tooltip": e.$t("mp.play_playlist"),
					"data-inverted": "",
					"data-position": "bottom right"
				},
				on: {
					click: function (t) {
						e.playedrun = true;
					}
				}
			}, [e._m(0)]), e._v(" "), n("div", {
				directives: [{
					name: "show",
					rawName: "v-show",
					value: e.on_mobile,
					expression: "on_mobile"
				}],
				staticClass: "in-game-options"
			}, [n("i", {
				staticClass: "ui large inverted home icon",
				on: {
					click: function (t) {
						e.gotoMenu();
					}
				}
			}), e._v(" "), n("i", {
				staticClass: "ui large inverted circle wechat icon",
				on: {
					click: function (t) {
						e.goHideChat();
					}
				}
			}), e._v(" "), n("i", {
				staticClass: "ui large inverted circle star icon",
				on: {
					click: function (t) {
						e.goNames();
					}
				}
			}), e._v(" "), n("i", {
				staticClass: "ui large inverted circle plus icon",
				attrs: {
					onclick: "zoomInGame(1)"
				}
			}), e._v(" "), n("i", {
				staticClass: "ui large inverted circle minus icon",
				attrs: {
					onclick: "zoomInGame(-1)"
				}
			})]), e._v(" "), n("div", {
				attrs: {
					id: "restart-timer"
				}
			}), e._v(" "), n("more-settings"), e._v(" "), n("div", {
				staticClass: "ui mini modal",
				attrs: {
					id: "tutorial-modal"
				}
			}, [n("i", {
				staticClass: "close icon"
			}), e._v(" "), n("div", {
				staticClass: "content"
			}, [e._m(1), e._v(" "), n("p", [e._v(e._s(e.$t("home.press")) + " "), n("strong", [e._v("SPACE")]), e._v(" " + e._s(e.$t("home.to_split")))]), e._v(" "), n("p", [e._v(e._s(e.$t("home.press")) + " "), n("strong", [e._v("W")]), e._v(" " + e._s(e.$t("home.to_eject")))])])]), e._v(" "), e._m(2), e._v(" "), e._m(3), e._v(" "), e._m(4), e._v(" "), e.minionServer ? n("div", {
				attrs: {
					id: "minion-indicator"
				}
			}, [e._v("\n        To change control to/from the bot: Q\n    ")]) : e._e()], 1);
		},
		staticRenderFns: [function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("div", {
				staticClass: "music-player-overlay2"
			}, [n("i", {
				staticClass: "ui large inverted circle play icon"
			})]);
		}, function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("video", {
				attrs: {
					width: "400",
					controls: "",
					preload: "none"
				}
			}, [n("source", {
				attrs: {
					src: "/agar.rs/assets/tutorial.mp4",
					type: "video/mp4"
				}
			}), e._v("\n                Your browser does not support HTML5 video.\n            ")]);
		}, function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("div", {
				staticClass: "ui basic small opera modal",
				attrs: {
					id: "opera-modal"
				}
			}, [n("div", {
				staticClass: "ui icon header"
			}, [n("i", {
				staticClass: "eye icon"
			}), e._v("\n            Warning: IP address suspended!\n        ")]), e._v(" "), n("div", {
				staticClass: "content text-center"
			}, [n("p", [e._v("\n                An illegal traffic was detected from this IP address or this computer. "), n("br"), e._v("\n                You will be contacted by the authorities soon.\n            ")]), e._v(" "), n("br")])]);
		}, function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("div", {
				staticClass: "ui modal",
				attrs: {
					id: "android-modal"
				}
			}, [n("i", {
				staticClass: "close icon"
			}), e._v(" "), n("div", {
				staticClass: "content"
			}, [n("h3", [e._v("Playing via mobile? "), n("br"), e._v("\n                Try the android game for Agar Balkan.")]), e._v(" "), n("p", [e._v("Download from google play store:")])]), e._v(" "), n("div", {
				staticClass: "actions"
			}, [n("a", {
				staticClass: "ui positive right labeled icon button",
				attrs: {
					target: "_blank",
					href: "#"
				}
			}, [e._v("Preuzmi"), n("i", {
				staticClass: "checkmark icon"
			})]), e._v(" "), n("div", {
				staticClass: "ui black deny button"
			}, [e._v("Close")])])]);
		}, function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("div", {
				staticClass: "connectingToServer"
			}, [e._v("\n        Connecting to server... "), n("br"), e._v(" "), n("p", [e._v("If you are waiting a long time, check your internet connection or try to connect to another server.")])]);
		}]
	};
}, function (e, t) {
	e.exports = {
		render: function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			if (e.mobile) {
				return e._e();
			} else {
				return n("div", {
					staticClass: "ui keybind form"
				}, [e.am_logged_in ? n("h3", [n("label", [e._v(e._s(e.$t("logged.keyboard_controls")) + ":")])]) : e._e(), e._v(" "), n("div", {
					staticClass: "ui grid",
					attrs: {
						id: "keyholder"
					}
				}, [n("div", {
					staticClass: "three wide column"
				}, [n("label", [e._v(e._s(e.$t("home.eject_mass")))]), e._v(" "), n("input", {
					attrs: {
						type: "text",
						id: "key-eject",
						autocomplete: "off"
					},
					on: {
						keyup: function (t) {
							e.defineKey(t, "eject");
						}
					}
				})]), e._v(" "), n("div", {
					staticClass: "three wide column"
				}, [n("label", {
					staticClass: "text-center"
				}, [e._v(e._s(e.$t("home.split")))]), e._v(" "), n("input", {
					attrs: {
						type: "text",
						id: "key-splitCell",
						autocomplete: "off"
					},
					on: {
						keyup: function (t) {
							e.defineKey(t, "splitCell");
						}
					}
				})]), e._v(" "), n("div", {
					staticClass: "three wide column"
				}, [n("label", {
					staticClass: "text-center"
				}, [e._v(e._s(e.$t("home.double_split")))]), e._v(" "), n("input", {
					attrs: {
						type: "text",
						id: "key-doubleSplit",
						autocomplete: "off"
					},
					on: {
						keyup: function (t) {
							e.defineKey(t, "doubleSplit");
						}
					}
				})]), e._v(" "), n("div", {
					staticClass: "three wide column"
				}, [n("label", {
					staticClass: "text-center"
				}, [e._v(e._s(e.$t("home.quad_split")))]), e._v(" "), n("input", {
					attrs: {
						type: "text",
						id: "key-quadSplit",
						autocomplete: "off"
					},
					on: {
						keyup: function (t) {
							e.defineKey(t, "quadSplit");
						}
					}
				})]), e._v(" "), !e.am_logged_in ? n("div", {
					staticClass: "three wide column"
				}, [n("label", {
					staticClass: "text-center"
				}, [e._v("Macro feed")]), e._v(" "), n("input", {
					attrs: {
						type: "text",
						id: "key-macroEject",
						autocomplete: "off"
					},
					on: {
						keyup: function (t) {
							e.defineKey(t, "macroEject");
						}
					}
				})]) : e._e(), e._v(" "), n("div", {
					staticClass: "three wide column"
				}, [n("label", {
					staticClass: "text-center"
				}, [e._v("Spectate")]), e._v(" "), n("input", {
					attrs: {
						type: "text",
						id: "key-spectate",
						autocomplete: "off"
					},
					on: {
						keyup: function (t) {
							e.defineKey(t, "spectate");
						}
					}
				})]), e._v(" "), n("div", {
					staticClass: "three wide column"
				}, [n("label", {
					staticClass: "text-center"
				}, [e._v("Menu switch")]), e._v(" "), n("input", {
					attrs: {
						type: "text",
						id: "key-close",
						autocomplete: "off"
					},
					on: {
						keyup: function (t) {
							e.defineKey(t, "close");
						}
					}
				})]), e._v(" "), n("div", {
					staticClass: "three wide column"
				}, [n("label", {
					staticClass: "text-center"
				}, [e._v("Zoom In")]), e._v(" "), n("input", {
					attrs: {
						type: "text",
						id: "key-zoomIn",
						autocomplete: "off"
					},
					on: {
						keyup: function (t) {
							e.defineKey(t, "zoomIn");
						}
					}
				})]), e._v(" "), n("div", {
					staticClass: "three wide column"
				}, [n("label", {
					staticClass: "text-center"
				}, [e._v("Zoom Out")]), e._v(" "), n("input", {
					attrs: {
						type: "text",
						id: "key-zoomOut",
						autocomplete: "off"
					},
					on: {
						keyup: function (t) {
							e.defineKey(t, "zoomOut");
						}
					}
				})]), e._v(" "), n("div", {
					staticClass: "three wide column"
				}, [n("label", {
					staticClass: "text-center"
				}, [e._v("Arrow Up")]), e._v(" "), n("input", {
					attrs: {
						type: "text",
						id: "key-arrowup",
						autocomplete: "off"
					},
					on: {
						keyup: function (t) {
							e.defineKey(t, "arrowup");
						}
					}
				})]), e._v(" "), n("div", {
					staticClass: "three wide column"
				}, [n("label", {
					staticClass: "text-center"
				}, [e._v("Arrow Down")]), e._v(" "), n("input", {
					attrs: {
						type: "text",
						id: "key-arrowdown",
						autocomplete: "off"
					},
					on: {
						keyup: function (t) {
							e.defineKey(t, "arrowdown");
						}
					}
				})]), e._v(" "), n("div", {
					staticClass: "three wide column"
				}, [n("label", {
					staticClass: "text-center"
				}, [e._v("Arrow Left")]), e._v(" "), n("input", {
					attrs: {
						type: "text",
						id: "key-arrowleft",
						autocomplete: "off"
					},
					on: {
						keyup: function (t) {
							e.defineKey(t, "arrowleft");
						}
					}
				})]), e._v(" "), n("div", {
					staticClass: "three wide column"
				}, [n("label", {
					staticClass: "text-center"
				}, [e._v("Arrow Right")]), e._v(" "), n("input", {
					attrs: {
						type: "text",
						id: "key-arrowright",
						autocomplete: "off"
					},
					on: {
						keyup: function (t) {
							e.defineKey(t, "arrowright");
						}
					}
				})])])]);
			}
		},
		staticRenderFns: []
	};
}, function (e, t) {
	e.exports = {
		render: function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("div", {
				staticClass: "ui mini modal",
				attrs: {
					id: "nicknames-modal"
				}
			}, [n("div", {
				staticClass: "content"
			}, [n("p", {
				staticStyle: {
					color: "#000"
				}
			}, [e._v(e._s(e.$t("home.saved_items")))]), e._v(" "), n("div", {
				staticClass: "ui divider"
			}), e._v(" "), n("div", {
				staticClass: "ui form"
			}, [n("textarea", {
				directives: [{
					name: "model",
					rawName: "v-model",
					value: e.localStorageNicknames,
					expression: "localStorageNicknames"
				}],
				attrs: {
					maxlength: "3000"
				},
				domProps: {
					value: e.localStorageNicknames
				},
				on: {
					input: function (t) {
						if (!t.target.composing) {
							e.localStorageNicknames = t.target.value;
						}
					}
				}
			})])]), e._v(" "), n("div", {
				staticClass: "actions"
			}, [n("div", {
				staticClass: "ui positive right labeled icon button",
				on: {
					click: function (t) {
						e.saveLocalNicknames();
					}
				}
			}, [e._v("\n            " + e._s(e.$t("home.save")) + "\n            "), n("i", {
				staticClass: "checkmark icon"
			})])])]);
		},
		staticRenderFns: []
	};
}, function (e, t) {
	e.exports = {
		render: function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("div", {
				staticClass: "homepage"
			}, [n("div", {
				staticClass: "ui container",
				attrs: {
					id: "rules"
				}
			}, [n("h2", {
				staticClass: "text-center",
				domProps: {
					innerHTML: e._s(e.$t("privacy.title"))
				}
			}), e._v(" "), n("h4", {
				staticClass: "text-center",
				domProps: {
					innerHTML: e._s(e.$t("privacy.valid"))
				}
			}), e._v(" "), n("br"), e._v(" "), n("div", {
				staticClass: "ui hidden divider"
			}), e._v(" "), n("h3", {
				domProps: {
					innerHTML: e._s(e.$t("privacy.ph1"))
				}
			}), e._v(" "), n("p", {
				domProps: {
					innerHTML: e._s(e.$t("privacy.pt1"))
				}
			}), e._v(" "), n("h3", {
				domProps: {
					innerHTML: e._s(e.$t("privacy.ph2"))
				}
			}), e._v(" "), n("p", {
				domProps: {
					innerHTML: e._s(e.$t("privacy.pt2"))
				}
			}), e._v(" "), n("h3", {
				domProps: {
					innerHTML: e._s(e.$t("privacy.ph3"))
				}
			}), e._v(" "), n("p", {
				domProps: {
					innerHTML: e._s(e.$t("privacy.pt3"))
				}
			}), e._v(" "), n("h3", {
				domProps: {
					innerHTML: e._s(e.$t("privacy.ph4"))
				}
			}), e._v(" "), n("p", {
				domProps: {
					innerHTML: e._s(e.$t("privacy.pt4"))
				}
			}), e._v(" "), n("p", {
				domProps: {
					innerHTML: e._s(e.$t("privacy.pt4_delete"))
				}
			}), e._v(" "), n("h3", {
				domProps: {
					innerHTML: e._s(e.$t("privacy.ph5"))
				}
			}), e._v(" "), n("p", {
				domProps: {
					innerHTML: e._s(e.$t("privacy.pt5"))
				}
			}), e._v(" "), n("h3", {
				domProps: {
					innerHTML: e._s(e.$t("privacy.ph6"))
				}
			}), e._v(" "), n("p", {
				domProps: {
					innerHTML: e._s(e.$t("privacy.pt6"))
				}
			}), e._v(" "), n("h3", {
				domProps: {
					innerHTML: e._s(e.$t("privacy.ph7"))
				}
			}), e._v(" "), n("p", {
				domProps: {
					innerHTML: e._s(e.$t("privacy.pt7"))
				}
			}), e._v(" "), n("h3", {
				domProps: {
					innerHTML: e._s(e.$t("privacy.ph8"))
				}
			}), e._v(" "), n("p", {
				domProps: {
					innerHTML: e._s(e.$t("privacy.pt8"))
				}
			}), e._v(" "), n("h3", {
				domProps: {
					innerHTML: e._s(e.$t("privacy.ph9"))
				}
			}), e._v(" "), n("p", {
				domProps: {
					innerHTML: e._s(e.$t("privacy.pt9"))
				}
			}), e._v(" "), n("p", {
				domProps: {
					innerHTML: e._s(e.$t("privacy.pt91"))
				}
			})]), e._v(" "), n("div", {
				staticClass: "ui hidden divider"
			})]);
		},
		staticRenderFns: []
	};
}, function (e, t) {
	e.exports = {
		render: function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("div", {
				staticClass: "homepage"
			}, [n("div", {
				staticClass: "ui container",
				attrs: {
					id: "rules"
				}
			}, [n("h2", {
				staticClass: "text-center",
				domProps: {
					innerHTML: e._s(e.$t("rules.head"))
				}
			}), e._v(" "), n("p", {
				staticClass: "text-center",
				domProps: {
					innerHTML: e._s(e.$t("rules.subhead"))
				}
			}), e._v(" "), n("br"), e._v(" "), n("p", {
				staticClass: "text-center",
				domProps: {
					innerHTML: e._s(e.$t("rules.subhead2"))
				}
			}), e._v(" "), n("div", {
				staticClass: "ui hidden divider"
			}), e._v(" "), n("h3", {
				domProps: {
					innerHTML: e._s(e.$t("rules.r1h"))
				}
			}), e._v(" "), n("p", {
				domProps: {
					innerHTML: e._s(e.$t("rules.r1t"))
				}
			}), e._v(" "), n("h3", {
				domProps: {
					innerHTML: e._s(e.$t("rules.r2h"))
				}
			}), e._v(" "), n("p", {
				domProps: {
					innerHTML: e._s(e.$t("rules.r2t"))
				}
			}), e._v(" "), n("h3", {
				domProps: {
					innerHTML: e._s(e.$t("rules.r3h"))
				}
			}), e._v(" "), n("p", {
				domProps: {
					innerHTML: e._s(e.$t("rules.r3t"))
				}
			}), e._v(" "), n("h3", {
				domProps: {
					innerHTML: e._s(e.$t("rules.r4h"))
				}
			}), e._v(" "), n("p", {
				domProps: {
					innerHTML: e._s(e.$t("rules.r41t"))
				}
			}), e._v(" "), n("p", {
				domProps: {
					innerHTML: e._s(e.$t("rules.r42t"))
				}
			}), e._v(" "), n("p", {
				domProps: {
					innerHTML: e._s(e.$t("rules.r43t"))
				}
			}), e._v(" "), n("p", {
				domProps: {
					innerHTML: e._s(e.$t("rules.r44t"))
				}
			}), e._v(" "), n("p", {
				domProps: {
					innerHTML: e._s(e.$t("rules.r45t"))
				}
			}), e._v(" "), n("p", {
				domProps: {
					innerHTML: e._s(e.$t("rules.r46t"))
				}
			})]), e._v(" "), n("div", {
				staticClass: "ui hidden divider"
			})]);
		},
		staticRenderFns: []
	};
}, function (e, t) {
	e.exports = {
		render: function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("div", {
				staticClass: "skins",
				attrs: {
					id: "skins-page"
				}
			}, [n("spinner", {
				attrs: {
					show: e.loading
				}
			}), e._v(" "), n("div", {
				staticClass: "ui container"
			}, [n("div", {
				staticClass: "ui hidden divider"
			}), e._v(" "), n("div", {
				staticClass: "ads-skins"
			}, 1), e._v(" "), n("div", {
				staticClass: "ui form"
			}, [n("div", {
				staticClass: "inline fields"
			}, [n("div", {
				staticClass: "field"
			}, [e.top_skins ? e._e() : n("a", {
				staticClass: "ui red button",
				on: {
					click: function (t) {
						e.getTopSkins();
					}
				}
			}, [n("i", {
				staticClass: "heart icon"
			}), e._v("\n                        " + e._s(e.$t("skins.top_skins")) + "\n                    ")]), e._v(" "), e.top_skins ? n("a", {
				staticClass: "ui teal button",
				on: {
					click: function (t) {
						e.returnSkins();
					}
				}
			}, [n("i", {
				staticClass: "photo icon"
			}), e._v("\n                        " + e._s(e.$t("skins.all_skins")) + "\n                    ")]) : e._e(), e._v(" "), e.am_logged_in ? n("div", {
				staticClass: "ui  labeled button",
				on: {
					click: function (t) {
						e.myTopSkins();
					}
				}
			}, [n("div", {
				staticClass: "ui purple button"
			}, [n("i", {
				staticClass: "heart icon"
			}), e._v("\n                            " + e._s(e.$t("skins.my_favs")) + "\n                        ")]), e._v(" "), n("a", {
				staticClass: "ui basic purple left pointing label"
			}, [e._v(e._s(e.skins.my_liked.length))])]) : e._e(), e._v(" "), !e.bannedFromSkins() ? e._e() : n("div", {
				staticClass: "ui black animated button",
				on: {
					click: function (t) {
						e.openUploadSkinModal();
					}
				}
			}, [n("div", {
				staticClass: "visible content"
			}, [e._v(e._s(e.$t("skins.add_skin")))]), e._v(" "), e._m(0)])]), e._v(" "), n("div", {
				staticClass: "field"
			}, [n("div", {
				staticClass: "ui inverted transparent icon input"
			}, [n("input", {
				directives: [{
					name: "model",
					rawName: "v-model",
					value: e.skinSearch,
					expression: "skinSearch"
				}],
				attrs: {
					type: "text",
					placeholder: e.$t("new_21_09.search")
				},
				domProps: {
					value: e.skinSearch
				},
				on: {
					keyup: function (t) {
						e.skinSearchDB();
					},
					input: function (t) {
						if (!t.target.composing) {
							e.skinSearch = t.target.value;
						}
					}
				}
			}), e._v(" "), n("i", {
				directives: [{
					name: "show",
					rawName: "v-show",
					value: !e.isActiveSearch,
					expression: "!isActiveSearch"
				}],
				staticClass: "search icon"
			}), e._v(" "), n("i", {
				directives: [{
					name: "show",
					rawName: "v-show",
					value: e.isActiveSearch,
					expression: "isActiveSearch"
				}],
				staticClass: "notched circle loading icon"
			})])])])]), e._v(" "), e.bannedFromSkins() ? n("div", {}, [n("h2", {
				staticStyle: {
					color: "#fff"
				}
			}, [e._v(e._s(e.$t("skins.banned")))])]) : e._e(), e._v(" "), e.skins.images.length ? n("div", {
				staticClass: "ui six stackable cards",
				attrs: {
					id: "skins-cards"
				}
			}, [e._l(e.skins.visible_images, function (t) {
				return n("div", {
					staticClass: "card",
					attrs: {
						"data-skin-id": t.id
					}
				}, [n("div", {
					staticClass: "image"
				}, [n("div", {
					staticClass: "skin-label vote-number"
				}, [n("div", {
					staticClass: "floating ui red label",
					attrs: {
						id: "vote-for-" + t.id
					}
				}, [e._v(e._s(t.votes))])]), e._v(" "), n("img", {
					staticClass: "ui circular image",
					attrs: {
						src: "/agar.rs/assets/images/" + e.skinLink(t.skin_name, t.safe)
					},
					on: {
						click: function (n) {
							e.chooseSkin(t.skin_name);
						}
					}
				}), e._v(" "), e.am_logged_in ? n("div", {
					class: t.me == 1 ? "vote-skin" : "vote vote-skin",
					attrs: {
						id: "heart-for-" + t.id
					},
					on: {
						click: function (n) {
							e.voteSkin(t.id, t.skin_name);
						}
					}
				}, [n("i", {
					staticClass: "heart icon"
				})]) : e._e()]), e._v(" "), n("div", {
					staticClass: "ui bottom attached button chose-skin",
					on: {
						click: function (n) {
							e.chooseSkin(t.skin_name);
						}
					}
				}, [n("i", {
					staticClass: "add icon"
				}), e._v("\n                    " + e._s(t.skin_name) + "\n                ")])]);
			}), e._v(" "), n("i", {
				directives: [{
					name: "show",
					rawName: "v-show",
					value: e.isLoadingNew,
					expression: "isLoadingNew"
				}],
				staticClass: "huge notched circle loading icon"
			})], 2) : n("div", {
				staticClass: "no-skins"
			}, [n("h2", [e._v(e._s(e.$t("skins.not_found")))])])]), e._v(" "), n("div", {
				staticClass: "ui basic modal",
				attrs: {
					id: "upload-skin-modal"
				}
			}, [n("form", {
				staticClass: "ui form"
			}, [n("div", {
				staticClass: "ui stackable grid"
			}, [n("div", {
				staticClass: "ten wide column"
			}, [n("div", {
				staticClass: "upload-item"
			}, [n("div", {
				directives: [{
					name: "show",
					rawName: "v-show",
					value: !e.image,
					expression: "!image"
				}],
				staticClass: "skin-photo-upload"
			}, [n("label", {
				staticClass: "upload-btn"
			}, [n("input", {
				attrs: {
					id: "imageFile",
					type: "file"
				}
			}), e._v(" "), n("span", [e._v(" " + e._s(e.$t("skins.find_skin")))])]), e._v(" "), n("p", [e._v("\n                                " + e._s(e.$t("skins.allowed")) + " .png, .jpg, .jpeg\n                            ")]), e._v(" "), n("p", [e._v("\n                                " + e._s(e.$t("skins.max_size")) + " 2mb\n                            ")]), e._v(" "), n("p", [e._v("\n                                " + e._s(e.$t("skins.min_size")) + "\n                            ")])]), e._v(" "), n("div", {
				directives: [{
					name: "show",
					rawName: "v-show",
					value: e.image,
					expression: "image"
				}],
				staticClass: "skin-photo-upload",
				attrs: {
					id: "uploadd"
				}
			}, [n("button", {
				staticClass: "remove-uploaded-photo",
				attrs: {
					type: "button"
				},
				on: {
					click: e.removeImage
				}
			}, [n("i", {
				staticClass: "remove icon"
			})])])])]), e._v(" "), n("div", {
				staticClass: "six wide column"
			}, [e.private ? e._e() : n("div", {
				staticClass: "upload-item"
			}, [n("h4", [e._v(e._s(e.$t("skins.skin_name")) + ":")]), e._v(" "), n("div", {
				staticClass: "field"
			}, [n("input", {
				directives: [{
					name: "model",
					rawName: "v-model.trim",
					value: e.skins.skin_name,
					expression: "skins.skin_name",
					modifiers: {
						trim: true
					}
				}],
				attrs: {
					type: "text",
					maxlength: "15"
				},
				domProps: {
					value: e.skins.skin_name
				},
				on: {
					input: function (t) {
						if (!t.target.composing) {
							e.skins.skin_name = t.target.value.trim();
						}
					},
					blur: function (t) {
						e.$forceUpdate();
					}
				}
			})])]), e._v(" "), n("br"), e._v(" "), n("div", {
				staticClass: "upload-item"
			}, [n("h4", [e._v(e._s(e.$t("new_21_09.additional_info")) + ":")]), e._v(" "), n("div", {
				staticClass: "field"
			}, [n("textarea", {
				directives: [{
					name: "model",
					rawName: "v-model.trim",
					value: e.skins.additional_info,
					expression: "skins.additional_info",
					modifiers: {
						trim: true
					}
				}],
				attrs: {
					rows: "2"
				},
				domProps: {
					value: e.skins.additional_info
				},
				on: {
					input: function (t) {
						if (!t.target.composing) {
							e.skins.additional_info = t.target.value.trim();
						}
					},
					blur: function (t) {
						e.$forceUpdate();
					}
				}
			})])]), e._v(" "), n("p", {
				directives: [{
					name: "show",
					rawName: "v-show",
					value: e.msg_error != "",
					expression: "msg_error != ''"
				}],
				staticClass: "error",
				domProps: {
					innerHTML: e._s(e.msg_error)
				}
			}), e._v(" "), n("p", {
				directives: [{
					name: "show",
					rawName: "v-show",
					value: e.success,
					expression: "success"
				}],
				staticClass: "success",
				staticStyle: {
					color: "forestgreen"
				}
			}, [e._v(e._s(e.$t("skins.skin_added")))]), e._v(" "), n("br"), e._v(" "), e.am_logged_in ? n("div", {
				staticClass: "ui toggle checkbox"
			}, [n("input", {
				directives: [{
					name: "model",
					rawName: "v-model",
					value: e.private,
					expression: "private"
				}],
				attrs: {
					type: "checkbox"
				},
				domProps: {
					checked: Array.isArray(e.private) ? e._i(e.private, null) > -1 : e.private
				},
				on: {
					__c: function (t) {
						var n = e.private;
						var i = t.target;
						var o = !!i.checked;
						if (Array.isArray(n)) {
							var a = e._i(n, null);
							if (i.checked) {
								if (a < 0) {
									e.private = n.concat([null]);
								}
							} else if (a > -1) {
								e.private = n.slice(0, a).concat(n.slice(a + 1));
							}
						} else {
							e.private = o;
						}
					}
				}
			}), e._v(" "), n("label", {
				staticStyle: {
					color: "#fff"
				}
			}, [e._v("\n                            " + e._s(e.$t("logged.private_skin")) + "\n                            "), n("span", {
				attrs: {
					"data-tooltip": e.$t("logged.private_skin_desc"),
					"data-inverted": ""
				}
			}, [n("i", {
				staticClass: "help circle icon"
			})])])]) : e._e(), e._v(" "), n("div", {
				staticClass: "ui hidden divider"
			}), e._v(" "), e._m(1), e._v(" "), n("div", {
				staticClass: "ui teal button",
				on: {
					"~click": function (t) {
						e.uploadSkinFunc();
					}
				}
			}, [e._v("\n                        " + e._s(e.$t("skins.add_skin")) + "\n\n                    ")]), e._v(" "), n("br"), e._v(" "), n("p", {
				staticStyle: {
					color: "darkorange",
					"margin-top": "10px"
				}
			}, [e._v("\n                        " + e._s(e.$t("new_21_09.skin_aprove")) + "\n                        "), n("span", {
				domProps: {
					innerHTML: e._s(e.$t("new_21_09.skin_rules"))
				}
			}), e._v(" "), n("br"), e._v("\n                        " + e._s(e.$t("skins.not_allowed_skins")) + "\n                    ")])])])])])], 1);
		},
		staticRenderFns: [function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("div", {
				staticClass: "hidden content"
			}, [n("i", {
				staticClass: "right arrow icon"
			})]);
		}, function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("div", {
				attrs: {
					id: "showAddingSkin"
				}
			}, [n("img", {
				attrs: {
					src: "/agar.rs/assets/images/songadd.svg"
				}
			})]);
		}]
	};
}, function (e, t) {
	e.exports = {
		render: function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("div", [n("h3", {
				staticClass: "text-center"
			}, [e._v(e._s(e.$t("online_safe.title")))]), e._v(" "), n("ul", [n("li", [e._v(e._s(e.$t("online_safe.tip1")))]), e._v(" "), n("li", [e._v(e._s(e.$t("online_safe.tip2")))]), e._v(" "), n("li", [e._v(e._s(e.$t("online_safe.tip3")))]), e._v(" "), n("li", [e._v(e._s(e.$t("online_safe.tip4")))]), e._v(" "), n("li", [e._v(e._s(e.$t("online_safe.tip5")))]), e._v(" "), n("li", [e._v(e._s(e.$t("online_safe.tip6")))]), e._v(" "), n("li", [e._v(e._s(e.$t("online_safe.tip7")))]), e._v(" "), n("li", [e._v(e._s(e.$t("online_safe.tip8")))]), e._v(" "), n("li", [e._v(e._s(e.$t("online_safe.tip9")))]), e._v(" "), n("li", [e._v(e._s(e.$t("online_safe.tip10")))])]), e._v(" "), n("div", {
				staticClass: "ui divider"
			}), e._v(" "), n("h3", {
				staticClass: "text-center"
			}, [e._v(e._s(e.$t("online_safe.title2")))]), e._v(" "), n("ul", [n("li", [e._v(e._s(e.$t("online_safe.react1")))]), e._v(" "), n("li", [e._v(e._s(e.$t("online_safe.react2")))]), e._v(" "), n("li", [e._v(e._s(e.$t("online_safe.react3")))]), e._v(" "), n("li", [e._v(e._s(e.$t("online_safe.react4")))]), e._v(" "), n("li", [e._v(e._s(e.$t("online_safe.react5")))])])]);
		},
		staticRenderFns: []
	};
}, function (e, t) {
	e.exports = {
		render: function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("div", {
				staticClass: "ui modal",
				attrs: {
					id: "music-modal"
				}
			}, [n("i", {
				staticClass: "close icon"
			}), e._v(" "), n("div", {
				staticClass: "header"
			}, [e._v("\n        " + e._s(e.$t("mp.music")) + "\n        "), !e.musicActive && e.playlist.length ? n("button", {
				staticClass: "ui teal button",
				attrs: {
					"data-tooltip": e.$t("mp.lag")
				},
				on: {
					click: function (t) {
						e.startMusic();
					}
				}
			}, [n("span", [e._v(e._s(e.$t("mp.play")))])]) : e._e(), e._v(" "), e.musicActive ? n("button", {
				staticClass: "ui teal button",
				on: {
					click: function (t) {
						e.startMusic();
					}
				}
			}, [e.musicActive ? n("span", [e._v(e._s(e.$t("mp.turn_off")))]) : e._e()]) : e._e()]), e._v(" "), n("div", {
				staticClass: "image content"
			}, [n("div", {
				staticClass: "ui medium  left floated image"
			}, [n("img", {
				attrs: {
					src: e.songThumbnail
				}
			})]), e._v(" "), n("div", {
				staticClass: "description"
			}, [n("div", {
				staticClass: "ui header"
			}, [e._v(e._s(e.$t("mp.share_and_listen")))]), e._v(" "), n("div", {
				staticClass: "ui yt-player"
			}, [e.musicActive && e.playlist.length ? n("youtube", {
				attrs: {
					"video-id": e.youtubeIDplaying,
					mute: e.muted,
					"player-width": "0",
					"player-height": "0",
					"player-vars": {
						autoplay: 1
					}
				},
				on: {
					ready: function (t) {
						e.ready();
					},
					ended: function (t) {
						e.switchSong();
					},
					error: function (t) {
						e.switchSong();
					}
				}
			}) : e._e(), e._v(" "), n("div", {
				staticClass: "two columns grid"
			}, [n("div", {
				staticClass: "colum"
			}, [n("div", {
				staticClass: "ui fluid action input"
			}, [n("input", {
				directives: [{
					name: "model",
					rawName: "v-model",
					value: e.youtubeID,
					expression: "youtubeID"
				}],
				attrs: {
					id: "youtubeID",
					type: "text",
					placeholder: e.$t("mp.paste_yt")
				},
				domProps: {
					value: e.youtubeID
				},
				on: {
					input: function (t) {
						if (!t.target.composing) {
							e.youtubeID = t.target.value;
						}
					}
				}
			}), e._v(" "), n("button", {
				staticClass: "ui blue right labeled icon button",
				on: {
					click: function (t) {
						e.sendSong();
					}
				}
			}, [n("i", {
				staticClass: "add icon"
			}), e._v("\n                                " + e._s(e.$t("mp.add")) + "\n                            ")])])])]), e._v(" "), n("div", {
				staticClass: "clearfix"
			}), e._v(" "), n("div", {
				staticClass: "ui divider"
			}), e._v(" "), n("p", {
				staticStyle: {
					color: "red",
					position: "relative",
					top: "15px",
					display: "none"
				},
				attrs: {
					id: "song-exist"
				}
			}, [e._v(e._s(e.$t("mp.song_exist")))]), e._v(" "), e.playlist.length ? n("div", {
				staticClass: "playlist ui divided selection list"
			}, [n("br"), e._v(" "), e._m(0), e._v(" "), n("transition-group", {
				attrs: {
					name: "list"
				}
			}, e._l(e.playlist, function (t, i) {
				return n("div", {
					key: i,
					staticClass: "item",
					staticStyle: {
						"white-space": "nowrap"
					},
					on: {
						click: function (n) {
							e.changeSong(t.youtube_id);
						}
					}
				}, [n("div", {
					staticClass: "ui horizontal  circular labels"
				}, [n("i", {
					staticClass: "circular inverted green thumbs up icon",
					on: {
						"~click": function (n) {
							e.thumb("up", t);
						}
					}
				}), e._v(" "), n("p", {
					staticClass: "ui yellow circular label"
				}, [e._v(e._s(t.num_of_votes))]), e._v(" "), n("i", {
					staticClass: "circular inverted red thumbs down icon",
					on: {
						"~click": function (n) {
							e.thumb("down", t);
						}
					}
				})]), e._v(" "), n("span", {
					staticStyle: {
						cursor: "pointer"
					}
				}, [e._v(e._s(t.name))]), e._v(" "), e.am_logged_in && e.role >= 2 ? n("i", {
					staticClass: "circular inverted red trash icon",
					staticStyle: {
						position: "absolute",
						right: "0"
					},
					on: {
						click: function (n) {
							e.deleteSong(t);
						}
					}
				}) : e._e()]);
			}))], 1) : n("div", {
				staticClass: "playlist"
			}, [n("br"), e._v(" "), e.playlistError ? n("div", [e._v(e._s(e.$t("mp.error")))]) : e._e(), e._v("\n                    " + e._s(e.$t("mp.list_empty")) + " "), n("br"), e._v("\n                    " + e._s(e.$t("mp.copy_song_from_yt")) + "\n                ")])], 1)])])]);
		},
		staticRenderFns: [function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("div", {
				attrs: {
					id: "showAddingSong"
				}
			}, [n("img", {
				attrs: {
					src: "/agar.rs/assets/images/songadd.svg"
				}
			})]);
		}]
	};
}, function (e, t) {
	e.exports = {
		render: function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("div", {
				staticClass: "ui grid navigation"
			}, [n("div", {
				staticClass: "computer tablet only row"
			}, [n("div", {
				staticClass: "ui fixed menu navbar grid"
			}, [n("div", {
				staticClass: "ui container"
			}, [n("router-link", {
				staticClass: "item",
				attrs: {
					to: {
						name: "index"
					}
				}
			}, [n("i", {
				staticClass: "game icon"
			}), e._v(e._s(e.$t("home.home")) + "\n                ")]), e._v(" "), n("router-link", {
				staticClass: "item",
				attrs: {
					to: "/agar.rs/skins"
				}
			}, [n("i", {
				staticClass: "image icon"
			}), e._v(e._s(e.$t("home.skins")))]), e._v(" "), n("router-link", {
				staticClass: "item",
				attrs: {
					to: "/agar.rs/highscores"
				}
			}, [n("i", {
				staticClass: "trophy icon"
			}), e._v(e._s(e.$t("logged.results")) + "\n                ")]), e._v(" "), n("span", {
				staticClass: "item"
			}, [n("router-link", {
				attrs: {
					to: "/agar.rs/hats"
				}
			}, [n("i", {
				staticClass: "graduation cap icon"
			}), e._v(e._s(e.$t("logged.hats")) + "\n                  ")]), e._v(" "), e.myHats.length > 0 ? n("div", {
				staticClass: "ui floating dropdown"
			}, [n("i", {
				staticClass: "dropdown icon"
			}), e._v(" "), n("div", {
				staticClass: "menu"
			}, e._l(e.myHats, function (t) {
				return n("div", {
					staticClass: "item",
					on: {
						click: function (n) {
							e.chooseHat(e.getHatById(t.hat_id).secret);
						}
					}
				}, [e._v(e._s(e.getHatById(t.hat_id).name))]);
			}))]) : e._e()], 1), e._v(" "), n("div", {
				staticClass: "right menu"
			}, [n("a", {
				staticClass: "item",
				on: {
					click: function (t) {
						e.openCoinsModal();
					}
				}
			}, [n("img", {
				staticClass: "coins-img",
				attrs: {
					src: "/agar.rs/assets/images/coins.png"
				}
			}), e._v(" " + e._s(e.coins))]), e._v(" "), n("div", {
				staticClass: "item ui interted dropdown"
			}, [n("i", {
				staticClass: "user circle icon"
			}), e._v(e._s(e.$t("home.profile")) + " "), e.id != 0 ? n("span", {
				staticStyle: {
					color: "#c75342"
				}
			}, [e._v(" #ID: " + e._s(e.id))]) : e._e(), e._v(" "), n("div", {
				staticClass: "menu"
			}, [n("div", {
				staticClass: "item",
				on: {
					click: function (t) {
						e.changeNicknameModal();
					}
				}
			}, [n("i", {
				staticClass: "pencil alternate icon"
			}), e._v("\n                                " + e._s(e.$t("logged.change_nickname")) + "\n                            ")]), e._v(" "), n("div", {
				staticClass: "item",
				on: {
					click: function (t) {
						e.changeProfileSettingsModal();
					}
				}
			}, [n("i", {
				staticClass: "user icon"
			}), e._v("\n                                " + e._s(e.$t("logged.profile_settings")) + "\n                            ")]), e._v(" "), n("div", {
				staticClass: "item",
				on: {
					click: function (t) {
						e.Logout();
					}
				}
			}, [n("i", {
				staticClass: "lock icon"
			}), e._v(e._s(e.$t("home.logout")) + "\n                            ")])])]), e._v(" "), n("a", {
				staticClass: "item",
				on: {
					click: function (t) {
						e.musicPage();
					}
				}
			}, [n("i", {
				staticClass: "music icon"
			})]), e._v(" "), n("div", {
				staticClass: "item ui floating dropdown button change-country"
			}, [n("i", {
				class: e.lang + " flag"
			}), e._v(" "), n("div", {
				staticClass: "menu",
				class: e.lang
			}, [n("div", {
				staticClass: "item",
				class: e.lang == "gb" ? "active" : "",
				on: {
					click: function (t) {
						e.changeLanguage("gb");
					}
				}
			}, [n("i", {
				staticClass: "gb flag"
			}), e._v("English\n                            ")]), e._v(" "), n("div", {
				staticClass: "item",
				class: e.lang == "ba" ? "active" : "",
				on: {
					click: function (t) {
						e.changeLanguage("ba");
					}
				}
			}, [n("i", {
				staticClass: "ba flag"
			}), e._v("Bosanski\n                            ")]), e._v(" "), n("div", {
				staticClass: "item",
				class: e.lang == "rs" ? "active" : "",
				on: {
					click: function (t) {
						e.changeLanguage("rs");
					}
				}
			}, [n("i", {
				staticClass: "rs flag"
			}), e._v("Српски\n                            ")]), e._v(" "), n("div", {
				staticClass: "item",
				class: e.lang == "hr" ? "active" : "",
				on: {
					click: function (t) {
						e.changeLanguage("hr");
					}
				}
			}, [n("i", {
				staticClass: "hr flag"
			}), e._v("Hrvatski\n                            ")]), e._v(" "), n("div", {
				staticClass: "item",
				class: e.lang == "mk" ? "active" : "",
				on: {
					click: function (t) {
						e.changeLanguage("mk");
					}
				}
			}, [n("i", {
				staticClass: "mk flag"
			}), e._v("Македонски\n                            ")]), e._v(" "), n("div", {
				staticClass: "item",
				class: e.lang == "si" ? "active" : "",
				on: {
					click: function (t) {
						e.changeLanguage("si");
					}
				}
			}, [n("i", {
				staticClass: "si flag"
			}), e._v("Slovenščina\n                            ")])])])])], 1)])]), e._v(" "), n("div", {
				staticClass: "mobile only row"
			}, [n("div", {
				staticClass: "ui fixed navbar menu"
			}, [n("a", {
				attrs: {
					id: "fullScreenBtn"
				},
				on: {
					click: function (t) {
						e.fullScreen();
					}
				}
			}, [n("i", {
				staticClass: "maximize icon"
			})]), e._v(" "), e._m(0)]), e._v(" "), n("div", {
				staticClass: "ui vertical navbar menu"
			}, [n("router-link", {
				staticClass: "item",
				attrs: {
					to: {
						name: "index"
					}
				}
			}, [n("i", {
				staticClass: "game icon"
			}), e._v(e._s(e.$t("home.home")) + "\n            ")]), e._v(" "), n("router-link", {
				staticClass: "item",
				attrs: {
					to: "/agar.rs/skins"
				}
			}, [n("i", {
				staticClass: "image icon"
			}), e._v(e._s(e.$t("home.skins")))]), e._v(" "), n("router-link", {
				staticClass: "item",
				attrs: {
					to: "/agar.rs/highscores"
				}
			}, [n("i", {
				staticClass: "trophy icon"
			}), e._v(e._s(e.$t("logged.results")) + "\n            ")]), e._v(" "), n("router-link", {
				staticClass: "item",
				attrs: {
					to: "/agar.rs/hats"
				}
			}, [n("i", {
				staticClass: "graduation cap icon"
			}), e._v(e._s(e.$t("logged.hats")) + "\n            ")]), e._v(" "), n("a", {
				staticClass: "item",
				on: {
					click: function (t) {
						e.openCoinsModal();
					}
				}
			}, [n("img", {
				staticClass: "coins-img",
				attrs: {
					src: "/agar.rs/assets/images/coins.png"
				}
			}), e._v(" " + e._s(e.coins))]), e._v(" "), n("a", {
				staticClass: "item",
				on: {
					click: function (t) {
						e.Logout();
					}
				}
			}, [n("i", {
				staticClass: "lock icon"
			}), e._v(e._s(e.$t("home.logout")))]), e._v(" "), n("a", {
				staticClass: "item",
				on: {
					click: function (t) {
						e.musicPage();
					}
				}
			}, [n("i", {
				staticClass: "music icon"
			}), e._v(e._s(e.$t("home.music")))]), e._v(" "), e.id != 0 ? n("a", {
				staticClass: "item"
			}, [n("span", {
				staticStyle: {
					color: "#c75342"
				}
			}, [e._v(" #ID: " + e._s(e.id))])]) : e._e(), e._v(" "), n("div", {
				staticClass: "item ui floating dropdown button change-country"
			}, [n("i", {
				class: e.lang + " flag"
			}), e._v(" "), n("div", {
				staticClass: "menu",
				class: e.lang
			}, [n("div", {
				staticClass: "item",
				class: e.lang == "gb" ? "active" : "",
				on: {
					click: function (t) {
						e.changeLanguage("gb");
					}
				}
			}, [n("i", {
				staticClass: "gb flag"
			}), e._v("English\n                    ")]), e._v(" "), n("div", {
				staticClass: "item",
				class: e.lang == "ba" ? "active" : "",
				on: {
					click: function (t) {
						e.changeLanguage("ba");
					}
				}
			}, [n("i", {
				staticClass: "ba flag"
			}), e._v("Bosanski\n                    ")]), e._v(" "), n("div", {
				staticClass: "item",
				class: e.lang == "rs" ? "active" : "",
				on: {
					click: function (t) {
						e.changeLanguage("rs");
					}
				}
			}, [n("i", {
				staticClass: "rs flag"
			}), e._v("Српски\n                    ")]), e._v(" "), n("div", {
				staticClass: "item",
				class: e.lang == "hr" ? "active" : "",
				on: {
					click: function (t) {
						e.changeLanguage("hr");
					}
				}
			}, [n("i", {
				staticClass: "hr flag"
			}), e._v("Hrvatski\n                    ")]), e._v(" "), n("div", {
				staticClass: "item",
				class: e.lang == "mk" ? "active" : "",
				on: {
					click: function (t) {
						e.changeLanguage("mk");
					}
				}
			}, [n("i", {
				staticClass: "mk flag"
			}), e._v("Македонски\n                    ")]), e._v(" "), n("div", {
				staticClass: "item",
				class: e.lang == "si" ? "active" : "",
				on: {
					click: function (t) {
						e.changeLanguage("si");
					}
				}
			}, [n("i", {
				staticClass: "si flag"
			}), e._v("Slovenščina\n                    ")])])])], 1)]), e._v(" "), n("div", {
				staticClass: "ui small inverted modal",
				attrs: {
					id: "new-nickname-modal"
				}
			}, [n("i", {
				staticClass: "close icon"
			}), e._v(" "), n("div", {
				staticClass: "header"
			}, [e._v("\n            " + e._s(e.$t("logged.change_nickname")) + "\n        ")]), e._v(" "), n("div", {
				staticClass: "content"
			}, [n("div", {
				staticClass: "ui inverted segment"
			}, [n("div", {
				staticClass: "ui right labeled inverted transparent icon input"
			}, [n("input", {
				directives: [{
					name: "model",
					rawName: "v-model",
					value: e.newNick,
					expression: "newNick"
				}],
				attrs: {
					type: "text",
					placeholder: e.$t("home.type_name"),
					maxlength: "15",
					autofocus: ""
				},
				domProps: {
					value: e.newNick
				},
				on: {
					keyup: function (t) {
						e.message = "";
					},
					input: function (t) {
						if (!t.target.composing) {
							e.newNick = t.target.value;
						}
					}
				}
			}), e._v(" "), n("a", {
				staticClass: "ui red tag label",
				on: {
					click: function (t) {
						e.changeNickname();
					}
				}
			}, [e._v("\n                        " + e._s(e.$t("home.save")) + "\n                    ")])]), e._v(" "), n("p", {
				staticClass: "error",
				domProps: {
					innerHTML: e._s(e.message)
				}
			})])])]), e._v(" "), n("profile-settings-modal")], 1);
		},
		staticRenderFns: [function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("div", {
				staticClass: "right menu open"
			}, [n("a", {
				staticClass: "menu item",
				attrs: {
					href: ""
				}
			}, [n("i", {
				staticClass: "content icon"
			})])]);
		}]
	};
}, function (e, t) {
	e.exports = {
		render: function () {
			var e = this;
			var t = e.$createElement;
			return (e._self._c || t)("ins", {
				staticClass: "adsbygoogle",
				style: e.adStyle,
				attrs: {
					"data-ad-client": e.adClient,
					"data-ad-slot": e.adSlot,
					"data-ad-format": e.adFormat,
					"data-ad-layout-key": e.adLayoutKey,
					"data-full-width-responsive": e.fullWidthResponsive
				}
			});
		},
		staticRenderFns: []
	};
}, function (e, t) {
	e.exports = {
		render: function () {
			var e = this;
			var t = e.$createElement;
			var n = e._self._c || t;
			return n("div", {
				staticClass: "ui container pillory"
			}, [n("table", {
				staticClass: "ui inverted selectable grey table"
			}, [n("thead", [n("tr", [n("th", [e._v(e._s(e.$t("new_21_09.name")))]), e._v(" "), n("th", [e._v(e._s(e.$t("new_21_09.type")))]), e._v(" "), n("th", [e._v(e._s(e.$t("new_21_09.server")))]), e._v(" "), n("th", [e._v(e._s(e.$t("new_21_09.reason")))]), e._v(" "), n("th", [e._v(e._s(e.$t("new_21_09.date")))]), e._v(" "), n("th", [e._v(e._s(e.$t("new_21_09.expiration")))])])]), e._v(" "), e.bannedList.length > 0 ? n("tbody", e._l(e.bannedList, function (t) {
				if (t.nickname != "") {
					return n("tr", {
						directives: [{
							name: "show",
							rawName: "v-show",
							value: e.current_date < t.date_to,
							expression: "current_date < ban.date_to"
						}]
					}, [n("td", [e._v(e._s(decodeURI(t.nickname)))]), e._v(" "), n("td", [e._v(e._s(e.calcType(t.type)))]), e._v(" "), n("td", [e._v(e._s(e.calcServers(t.server)))]), e._v(" "), n("td", [e._v(e._s(t.reason))]), e._v(" "), n("td", [e._v(e._s(t.date_from))]), e._v(" "), n("td", [e._v(e._s(t.date_to))])]);
				} else {
					return e._e();
				}
			})) : n("tbody", [n("div", {
				staticClass: "ui hidden divider"
			}), e._v(" "), n("h3", [e._v("\n                " + e._s(e.$t("new_21_09.empty_list")) + "\n            ")]), e._v(" "), n("div", {
				staticClass: "ui hidden divider"
			})])]), e._v(" "), n("div", {
				staticClass: "ui hidden divider"
			})]);
		},
		staticRenderFns: []
	};
}, function (e, t, n) {
	var i = n(58);
	if (typeof i == "string") {
		i = [[e.i, i, ""]];
	}
	if (i.locals) {
		e.exports = i.locals;
	}
	n(2)("237840be", i, true);
}, function (e, t, n) {
	var i = n(59);
	if (typeof i == "string") {
		i = [[e.i, i, ""]];
	}
	if (i.locals) {
		e.exports = i.locals;
	}
	n(2)("3cba9031", i, true);
}, function (e, t, n) {
	var i = n(60);
	if (typeof i == "string") {
		i = [[e.i, i, ""]];
	}
	if (i.locals) {
		e.exports = i.locals;
	}
	n(2)("522495ec", i, true);
}, function (e, t, n) {
	var i = n(61);
	if (typeof i == "string") {
		i = [[e.i, i, ""]];
	}
	if (i.locals) {
		e.exports = i.locals;
	}
	n(2)("483c71fa", i, true);
}, function (e, t, n) {
	var i = n(62);
	if (typeof i == "string") {
		i = [[e.i, i, ""]];
	}
	if (i.locals) {
		e.exports = i.locals;
	}
	n(2)("329cd79c", i, true);
}, function (e, t, n) {
	var i = n(63);
	if (typeof i == "string") {
		i = [[e.i, i, ""]];
	}
	if (i.locals) {
		e.exports = i.locals;
	}
	n(2)("cf9dc996", i, true);
}, function (e, t, n) {
	var i = n(64);
	if (typeof i == "string") {
		i = [[e.i, i, ""]];
	}
	if (i.locals) {
		e.exports = i.locals;
	}
	n(2)("8915f532", i, true);
}, function (e, t, n) {
	var i = n(65);
	if (typeof i == "string") {
		i = [[e.i, i, ""]];
	}
	if (i.locals) {
		e.exports = i.locals;
	}
	n(2)("ee1ed666", i, true);
}, function (e, t, n) {
	var i = n(66);
	if (typeof i == "string") {
		i = [[e.i, i, ""]];
	}
	if (i.locals) {
		e.exports = i.locals;
	}
	n(2)("a79efe36", i, true);
}, function (e, t, n) {
	var i = n(67);
	if (typeof i == "string") {
		i = [[e.i, i, ""]];
	}
	if (i.locals) {
		e.exports = i.locals;
	}
	n(2)("6cd7a3d0", i, true);
}, function (e, t, n) {
	var i = n(68);
	if (typeof i == "string") {
		i = [[e.i, i, ""]];
	}
	if (i.locals) {
		e.exports = i.locals;
	}
	n(2)("23074fad", i, true);
}, function (e, t, n) {
	var i = n(69);
	if (typeof i == "string") {
		i = [[e.i, i, ""]];
	}
	if (i.locals) {
		e.exports = i.locals;
	}
	n(2)("491809e6", i, true);
}, function (e, t, n) {
	var i = n(70);
	if (typeof i == "string") {
		i = [[e.i, i, ""]];
	}
	if (i.locals) {
		e.exports = i.locals;
	}
	n(2)("a78affa4", i, true);
}, function (e, t, n) {
	var i = n(71);
	if (typeof i == "string") {
		i = [[e.i, i, ""]];
	}
	if (i.locals) {
		e.exports = i.locals;
	}
	n(2)("7444138e", i, true);
}, function (e, t, n) {
	var i = n(72);
	if (typeof i == "string") {
		i = [[e.i, i, ""]];
	}
	if (i.locals) {
		e.exports = i.locals;
	}
	n(2)("312d77e5", i, true);
}, function (e, t, n) {
	var i = n(73);
	if (typeof i == "string") {
		i = [[e.i, i, ""]];
	}
	if (i.locals) {
		e.exports = i.locals;
	}
	n(2)("a505e29c", i, true);
}, function (e, t, n) {
	var i = n(74);
	if (typeof i == "string") {
		i = [[e.i, i, ""]];
	}
	if (i.locals) {
		e.exports = i.locals;
	}
	n(2)("6f8d6b9e", i, true);
}, function (e, t, n) {
	var i = n(75);
	if (typeof i == "string") {
		i = [[e.i, i, ""]];
	}
	if (i.locals) {
		e.exports = i.locals;
	}
	n(2)("48c52880", i, true);
}, function (e, t, n) {
	var i = n(76);
	if (typeof i == "string") {
		i = [[e.i, i, ""]];
	}
	if (i.locals) {
		e.exports = i.locals;
	}
	n(2)("70a0da81", i, true);
}, function (e, t, n) {
	var i = n(77);
	if (typeof i == "string") {
		i = [[e.i, i, ""]];
	}
	if (i.locals) {
		e.exports = i.locals;
	}
	n(2)("1ec7b1b0", i, true);
}, function (e, t, n) {
	var i = n(78);
	if (typeof i == "string") {
		i = [[e.i, i, ""]];
	}
	if (i.locals) {
		e.exports = i.locals;
	}
	n(2)("91f87b3e", i, true);
}, function (e, t, n) {
	var i = n(79);
	if (typeof i == "string") {
		i = [[e.i, i, ""]];
	}
	if (i.locals) {
		e.exports = i.locals;
	}
	n(2)("37738ff5", i, true);
}, function (e, t, n) {
	var i = n(80);
	if (typeof i == "string") {
		i = [[e.i, i, ""]];
	}
	if (i.locals) {
		e.exports = i.locals;
	}
	n(2)("4480248d", i, true);
}, function (e, t, n) {
	var i = n(81);
	if (typeof i == "string") {
		i = [[e.i, i, ""]];
	}
	if (i.locals) {
		e.exports = i.locals;
	}
	n(2)("f2bae8f8", i, true);
}, function (e, t, n) {
	var i = n(82);
	if (typeof i == "string") {
		i = [[e.i, i, ""]];
	}
	if (i.locals) {
		e.exports = i.locals;
	}
	n(2)("6f4f052a", i, true);
}, function (e, t) {
	e.exports = function (e, t) {
		var n = [];
		var i = {};
		for (var o = 0; o < t.length; o++) {
			var a = t[o];
			var s = a[0];
			var r = {
				id: e + ":" + o,
				css: a[1],
				media: a[2],
				sourceMap: a[3]
			};
			if (i[s]) {
				i[s].parts.push(r);
			} else {
				n.push(i[s] = {
					id: s,
					parts: [r]
				});
			}
		}
		return n;
	};
}, function (e, t) {
	e.exports = function (e) {
		function t(i) {
			if (n[i]) {
				return n[i].exports;
			}
			var o = n[i] = {
				i: i,
				l: false,
				exports: {}
			};
			e[i].call(o.exports, o, o.exports, t);
			o.l = true;
			return o.exports;
		}
		var n = {};
		t.m = e;
		t.c = n;
		t.i = function (e) {
			return e;
		};
		t.d = function (e, n, i) {
			if (!t.o(e, n)) {
				Object.defineProperty(e, n, {
					configurable: false,
					enumerable: true,
					get: i
				});
			}
		};
		t.n = function (e) {
			var n = e && e.__esModule ? function () {
				return e.default;
			} : function () {
				return e;
			};
			t.d(n, "a", n);
			return n;
		};
		t.o = function (e, t) {
			return Object.prototype.hasOwnProperty.call(e, t);
		};
		t.p = "/";
		return t(t.s = 76);
	}([function (e, t) {
		var n = e.exports = typeof window != "undefined" && window.Math == Math ? window : typeof self != "undefined" && self.Math == Math ? self : Function("return this")();
		if (typeof __g == "number") {
			__g = n;
		}
	}, function (e, t) {
		var n = {}.hasOwnProperty;
		e.exports = function (e, t) {
			return n.call(e, t);
		};
	}, function (e, t, n) {
		var i = n(53);
		var o = n(14);
		e.exports = function (e) {
			return i(o(e));
		};
	}, function (e, t, n) {
		e.exports = !n(8)(function () {
			return Object.defineProperty({}, "a", {
				get: function () {
					return 7;
				}
			}).a != 7;
		});
	}, function (e, t, n) {
		var i = n(5);
		var o = n(11);
		e.exports = n(3) ? function (e, t, n) {
			return i.f(e, t, o(1, n));
		} : function (e, t, n) {
			e[t] = n;
			return e;
		};
	}, function (e, t, n) {
		var i = n(7);
		var o = n(30);
		var a = n(23);
		var s = Object.defineProperty;
		t.f = n(3) ? Object.defineProperty : function (e, t, n) {
			i(e);
			t = a(t, true);
			i(n);
			if (o) {
				try {
					return s(e, t, n);
				} catch (e) {}
			}
			if ("get" in n || "set" in n) {
				throw TypeError("Accessors not supported!");
			}
			if ("value" in n) {
				e[t] = n.value;
			}
			return e;
		};
	}, function (e, t, n) {
		var i = n(21)("wks");
		var o = n(12);
		var a = n(0).Symbol;
		var s = typeof a == "function";
		(e.exports = function (e) {
			return i[e] ||= s && a[e] || (s ? a : o)("Symbol." + e);
		}).store = i;
	}, function (e, t, n) {
		var i = n(9);
		e.exports = function (e) {
			if (!i(e)) {
				throw TypeError(e + " is not an object!");
			}
			return e;
		};
	}, function (e, t) {
		e.exports = function (e) {
			try {
				return !!e();
			} catch (e) {
				return true;
			}
		};
	}, function (e, t) {
		e.exports = function (e) {
			if (typeof e == "object") {
				return e !== null;
			} else {
				return typeof e == "function";
			}
		};
	}, function (e, t, n) {
		var i = n(35);
		var o = n(15);
		e.exports = Object.keys || function (e) {
			return i(e, o);
		};
	}, function (e, t) {
		e.exports = function (e, t) {
			return {
				enumerable: !(e & 1),
				configurable: !(e & 2),
				writable: !(e & 4),
				value: t
			};
		};
	}, function (e, t) {
		var n = 0;
		var i = Math.random();
		e.exports = function (e) {
			return `Symbol(${e === undefined ? "" : e})_${(++n + i).toString(36)}`;
		};
	}, function (e, t) {
		var n = e.exports = {
			version: "2.4.0"
		};
		if (typeof __e == "number") {
			__e = n;
		}
	}, function (e, t) {
		e.exports = function (e) {
			if (e == undefined) {
				throw TypeError("Can't call method on  " + e);
			}
			return e;
		};
	}, function (e, t) {
		e.exports = "constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",");
	}, function (e, t) {
		e.exports = {};
	}, function (e, t) {
		e.exports = true;
	}, function (e, t) {
		t.f = {}.propertyIsEnumerable;
	}, function (e, t, n) {
		var i = n(5).f;
		var o = n(1);
		var a = n(6)("toStringTag");
		e.exports = function (e, t, n) {
			if (e && !o(e = n ? e : e.prototype, a)) {
				i(e, a, {
					configurable: true,
					value: t
				});
			}
		};
	}, function (e, t, n) {
		var i = n(21)("keys");
		var o = n(12);
		e.exports = function (e) {
			return i[e] ||= o(e);
		};
	}, function (e, t, n) {
		var i = n(0);
		var o = i["__core-js_shared__"] ||= {};
		e.exports = function (e) {
			return o[e] ||= {};
		};
	}, function (e, t) {
		var n = Math.ceil;
		var i = Math.floor;
		e.exports = function (e) {
			if (isNaN(e = +e)) {
				return 0;
			} else {
				return (e > 0 ? i : n)(e);
			}
		};
	}, function (e, t, n) {
		var i = n(9);
		e.exports = function (e, t) {
			if (!i(e)) {
				return e;
			}
			var n;
			var o;
			if (t && typeof (n = e.toString) == "function" && !i(o = n.call(e))) {
				return o;
			}
			if (typeof (n = e.valueOf) == "function" && !i(o = n.call(e))) {
				return o;
			}
			if (!t && typeof (n = e.toString) == "function" && !i(o = n.call(e))) {
				return o;
			}
			throw TypeError("Can't convert object to primitive value");
		};
	}, function (e, t, n) {
		var i = n(0);
		var o = n(13);
		var a = n(17);
		var s = n(25);
		var r = n(5).f;
		e.exports = function (e) {
			var t = o.Symbol ||= a ? {} : i.Symbol || {};
			if (e.charAt(0) != "_" && !(e in t)) {
				r(t, e, {
					value: s.f(e)
				});
			}
		};
	}, function (e, t, n) {
		t.f = n(6);
	}, function (e, t, n) {
		"use strict";

		t.a = {
			translations: {
				ar: {
					language: "Arabic",
					rtl: true,
					months: {
						original: ["يناير", "فبراير", "مارس", "أبريل", "مايو", "يونيو", "يوليو", "أغسطس", "سبتمبر", "أكتوبر", "نوڤمبر", "ديسمبر"],
						abbr: ["يناير", "فبراير", "مارس", "أبريل", "مايو", "يونيو", "يوليو", "أغسطس", "سبتمبر", "أكتوبر", "نوڤمبر", "ديسمبر"]
					},
					days: ["أحد", "إثنين", "ثلاثاء", "أربعاء", "خميس", "جمعة", "سبت"]
				},
				bg: {
					language: "Bulgarian",
					months: {
						original: ["Януари", "Февруари", "Март", "Април", "Май", "Юни", "Юли", "Август", "Септември", "Октомври", "Ноември", "Декември"],
						abbr: ["Ян", "Фев", "Мар", "Апр", "Май", "Юни", "Юли", "Авг", "Сеп", "Окт", "Ное", "Дек"]
					},
					days: ["Нд", "Пн", "Вт", "Ср", "Чт", "Пт", "Сб"]
				},
				bs: {
					language: "Bosnian",
					months: {
						original: ["Januar", "Februar", "Mart", "April", "Maj", "Juni", "Juli", "Avgust", "Septembar", "Oktobar", "Novembar", "Decembar"],
						abbr: ["Jan", "Feb", "Mar", "Apr", "Maj", "Jun", "Jul", "Avg", "Sep", "Okt", "Nov", "Dec"]
					},
					days: ["Ned", "Pon", "Uto", "Sri", "Čet", "Pet", "Sub"]
				},
				cs: {
					language: "Czech",
					months: {
						original: ["leden", "únor", "březen", "duben", "květen", "červen", "červenec", "srpen", "září", "říjen", "listopad", "prosinec"],
						abbr: ["led", "úno", "bře", "dub", "kvě", "čer", "čec", "srp", "zář", "říj", "lis", "pro"]
					},
					days: ["ne", "po", "út", "st", "čt", "pá", "so"]
				},
				da: {
					language: "Danish",
					months: {
						original: ["Januar", "Februar", "Marts", "April", "Maj", "Juni", "Juli", "August", "September", "Oktober", "November", "December"],
						abbr: ["Jan", "Feb", "Mar", "Apr", "Maj", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dec"]
					},
					days: ["Sø", "Ma", "Ti", "On", "To", "Fr", "Lø"]
				},
				de: {
					language: "German",
					months: {
						original: ["Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"],
						abbr: ["Jan", "Feb", "Mär", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"]
					},
					days: ["So.", "Mo.", "Di.", "Mi.", "Do.", "Fr.", "Sa."]
				},
				ee: {
					language: "Estonian",
					months: {
						original: ["Jaanuar", "Veebruar", "Märts", "Aprill", "Mai", "Juuni", "Juuli", "August", "September", "Oktoober", "November", "Detsember"],
						abbr: ["Jaan", "Veebr", "Märts", "Apr", "Mai", "Juuni", "Juuli", "Aug", "Sept", "Okt", "Nov", "Dets"]
					},
					days: ["P", "E", "T", "K", "N", "R", "L"]
				},
				el: {
					language: "Greek",
					months: {
						original: ["Ιανουάριος", "Φεβρουάριος", "Μάρτιος", "Απρίλιος", "Μάϊος", "Ιούνιος", "Ιούλιος", "Αύγουστος", "Σεπτέμβριος", "Οκτώβριος", "Νοέμβριος", "Δεκέμβριος"],
						abbr: ["Ιαν", "Φεβ", "Μαρ", "Απρ", "Μαι", "Ιουν", "Ιουλ", "Αυγ", "Σεπ", "Οκτ", "Νοε", "Δεκ"]
					},
					days: ["Κυρ", "Δευ", "Τρι", "Τετ", "Πεμ", "Παρ", "Σατ"]
				},
				en: {
					language: "English",
					months: {
						original: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
						abbr: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
					},
					days: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"]
				},
				es: {
					language: "Spanish",
					months: {
						original: ["Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"],
						abbr: ["Ene", "Feb", "Mar", "Abr", "May", "Jun", "Jul", "Ago", "Sep", "Oct", "Nov", "Dic"]
					},
					days: ["Dom", "Lun", "Mar", "Mié", "Jue", "Vie", "Sab"]
				},
				ca: {
					language: "Catalan",
					months: {
						original: ["Gener", "Febrer", "Març", "Abril", "Maig", "Juny", "Juliol", "Agost", "Setembre", "Octubre", "Novembre", "Desembre"],
						abbr: ["Gen", "Feb", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Oct", "Nov", "Des"]
					},
					days: ["Diu", "Dil", "Dmr", "Dmc", "Dij", "Div", "Dis"]
				},
				fi: {
					language: "Finish",
					months: {
						original: ["tammikuu", "helmikuu", "maaliskuu", "huhtikuu", "toukokuu", "kesäkuu", "heinäkuu", "elokuu", "syyskuu", "lokakuu", "marraskuu", "joulukuu"],
						abbr: ["tammi", "helmi", "maalis", "huhti", "touko", "kesä", "heinä", "elo", "syys", "loka", "marras", "joulu"]
					},
					days: ["su", "ma", "ti", "ke", "to", "pe", "la"]
				},
				fr: {
					language: "French",
					months: {
						original: ["Janvier", "Février", "Mars", "Avril", "Mai", "Juin", "Juillet", "Août", "Septembre", "Octobre", "Novembre", "Décembre"],
						abbr: ["Jan", "Fév", "Mar", "Avr", "Mai", "Juin", "Juil", "Août", "Sep", "Oct", "Nov", "Déc"]
					},
					days: ["Dim", "Lun", "Mar", "Mer", "Jeu", "Ven", "Sam"]
				},
				ge: {
					language: "Georgia",
					months: {
						original: ["იანვარი", "თებერვალი", "მარტი", "აპრილი", "მაისი", "ივნისი", "ივლისი", "აგვისტო", "სექტემბერი", "ოქტომბერი", "ნოემბერი", "დეკემბერი"],
						abbr: ["იან", "თებ", "მარ", "აპრ", "მაი", "ივნ", "ივლ", "აგვ", "სექ", "ოქტ", "ნოე", "დეკ"]
					},
					days: ["კვი", "ორშ", "სამ", "ოთხ", "ხუთ", "პარ", "შაბ"]
				},
				ja: {
					language: "Japanese",
					months: {
						original: ["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"],
						abbr: ["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"]
					},
					days: ["日", "月", "火", "水", "木", "金", "土"]
				},
				he: {
					language: "Hebrew",
					rtl: true,
					months: {
						original: ["ינואר", "פברואר", "מרץ", "אפריל", "מאי", "יוני", "יולי", "אוגוסט", "ספטמבר", "אוקטובר", "נובמבר", "דצמבר"],
						abbr: ["ינו", "פבר", "מרץ", "אפר", "מאי", "יונ", "יול", "אוג", "ספט", "אוק", "נוב", "דצמ"]
					},
					days: ["א", "ב", "ג", "ד", "ה", "ו", "ש"]
				},
				hu: {
					language: "Hungarian",
					months: {
						original: ["Január", "Február", "Március", "Április", "Május", "Június", "Július", "Augusztus", "Szeptember", "Október", "November", "December"],
						abbr: ["Jan", "Febr", "Márc", "Ápr", "Máj", "Jún", "Júl", "Aug", "Szept", "Okt", "Nov", "Dec"]
					},
					days: ["Vas", "Hét", "Ke", "Sze", "Csü", "Pén", "Szo"]
				},
				hr: {
					language: "Croatian",
					months: {
						original: ["Siječanj", "Veljača", "Ožujak", "Travanj", "Svibanj", "Lipanj", "Srpanj", "Kolovoz", "Rujan", "Listopad", "Studeni", "Prosinac"],
						abbr: ["Sij", "Velj", "Ožu", "Tra", "Svi", "Lip", "Srp", "Kol", "Ruj", "Lis", "Stu", "Pro"]
					},
					days: ["Ned", "Pon", "Uto", "Sri", "Čet", "Pet", "Sub"]
				},
				id: {
					language: "Indonesian",
					months: {
						original: ["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"],
						abbr: ["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Agu", "Sep", "Okt", "Nov", "Des"]
					},
					days: ["Min", "Sen", "Sel", "Rab", "Kam", "Jum", "Sab"]
				},
				it: {
					language: "Italian",
					months: {
						original: ["Gennaio", "Febbraio", "Marzo", "Aprile", "Maggio", "Giugno", "Luglio", "Agosto", "Settembre", "Ottobre", "Novembre", "Dicembre"],
						abbr: ["Gen", "Feb", "Mar", "Apr", "Mag", "Giu", "Lug", "Ago", "Set", "Ott", "Nov", "Dic"]
					},
					days: ["Dom", "Lun", "Mar", "Mer", "Gio", "Ven", "Sab"]
				},
				is: {
					language: "Icelandic",
					months: {
						original: ["Janúar", "Febrúar", "Mars", "Apríl", "Maí", "Júní", "Júlí", "Ágúst", "September", "Október", "Nóvember", "Desember"],
						abbr: ["Jan", "Feb", "Mars", "Apr", "Maí", "Jún", "Júl", "Ágú", "Sep", "Okt", "Nóv", "Des"]
					},
					days: ["Sun", "Mán", "Þri", "Mið", "Fim", "Fös", "Lau"]
				},
				fa: {
					language: "Persian",
					months: {
						original: ["فروردین", "اردیبهشت", "خرداد", "تیر", "مرداد", "شهریور", "مهر", "آبان", "آذر", "دی", "بهمن", "اسفند"],
						abbr: ["فرو", "ارد", "خرد", "تیر", "مرد", "شهر", "مهر", "آبا", "آذر", "دی", "بهم", "اسف"]
					},
					days: ["یکشنبه", "دوشنبه", "سه‌شنبه", "چهارشنبه", "پنجشنبه", "جمعه", "شنبه"]
				},
				ko: {
					language: "Korean",
					months: {
						original: ["1월", "2월", "3월", "4월", "5월", "6월", "7월", "8월", "9월", "10월", "11월", "12월"],
						abbr: ["1월", "2월", "3월", "4월", "5월", "6월", "7월", "8월", "9월", "10월", "11월", "12월"]
					},
					days: ["일", "월", "화", "수", "목", "금", "토"]
				},
				lt: {
					language: "Lithuanian",
					months: {
						original: ["Sausis", "Vasaris", "Kovas", "Balandis", "Gegužė", "Birželis", "Liepa", "Rugpjūtis", "Rugsėjis", "Spalis", "Lapkritis", "Gruodis"],
						abbr: ["Sau", "Vas", "Kov", "Bal", "Geg", "Bir", "Lie", "Rugp", "Rugs", "Spa", "Lap", "Gru"]
					},
					days: ["Sek", "Pir", "Ant", "Tre", "Ket", "Pen", "Šeš"]
				},
				lv: {
					language: "Latvian",
					months: {
						original: ["Janvāris", "Februāris", "Marts", "Aprīlis", "Maijs", "Jūnijs", "Jūlijs", "Augusts", "Septembris", "Oktobris", "Novembris", "Decembris"],
						abbr: ["Jan", "Feb", "Mar", "Apr", "Mai", "Jūn", "Jūl", "Aug", "Sep", "Okt", "Nov", "Dec"]
					},
					days: ["Sv", "Pr", "Ot", "Tr", "Ce", "Pk", "Se"]
				},
				mn: {
					language: "Mongolia",
					months: {
						original: ["1 дүгээр сар", "2 дугаар сар", "3 дугаар сар", "4 дүгээр сар", "5 дугаар сар", "6 дугаар сар", "7 дугаар сар", "8 дугаар сар", "9 дүгээр сар", "10 дугаар сар", "11 дүгээр сар", "12 дугаар сар"],
						abbr: ["1-р сар", "2-р сар", "3-р сар", "4-р сар", "5-р сар", "6-р сар", "7-р сар", "8-р сар", "9-р сар", "10-р сар", "11-р сар", "12-р сар"]
					},
					days: ["Ня", "Да", "Мя", "Лх", "Пү", "Ба", "Бя"]
				},
				nl: {
					language: "Dutch",
					months: {
						original: ["januari", "februari", "maart", "april", "mei", "juni", "juli", "augustus", "september", "oktober", "november", "december"],
						abbr: ["jan", "feb", "maa", "apr", "mei", "jun", "jul", "aug", "sep", "okt", "nov", "dec"]
					},
					days: ["zo", "ma", "di", "wo", "do", "vr", "za"]
				},
				"nb-no": {
					language: "Norwegian Bokmål",
					months: {
						original: ["Januar", "Februar", "Mars", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Desember"],
						abbr: ["Jan", "Feb", "Mar", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Des"]
					},
					days: ["Sø", "Ma", "Ti", "On", "To", "Fr", "Lø"]
				},
				pl: {
					language: "Polish",
					months: {
						original: ["Styczeń", "Luty", "Marzec", "Kwiecień", "Maj", "Czerwiec", "Lipiec", "Sierpień", "Wrzesień", "Październik", "Listopad", "Grudzień"],
						abbr: ["Sty", "Lut", "Mar", "Kwi", "Maj", "Cze", "Lip", "Sie", "Wrz", "Paź", "Lis", "Gru"]
					},
					days: ["Nd", "Pn", "Wt", "Śr", "Czw", "Pt", "Sob"]
				},
				"pt-br": {
					language: "Brazilian",
					months: {
						original: ["Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"],
						abbr: ["Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez"]
					},
					days: ["Dom", "Seg", "Ter", "Qua", "Qui", "Sex", "Sab"]
				},
				ro: {
					language: "Romanian",
					months: {
						original: ["Ianuarie", "Februarie", "Martie", "Aprilie", "Mai", "Iunie", "Iulie", "August", "Septembrie", "Octombrie", "Noiembrie", "Decembrie"],
						abbr: ["Ian", "Feb", "Mar", "Apr", "Mai", "Iun", "Iul", "Aug", "Sep", "Oct", "Noi", "Dec"]
					},
					days: ["D", "L", "Ma", "Mi", "J", "V", "S"]
				},
				ru: {
					language: "Russian",
					months: {
						original: ["Январь", "Февраль", "Март", "Апрель", "Май", "Июнь", "Июль", "Август", "Сентябрь", "Октябрь", "Ноябрь", "Декабрь"],
						abbr: ["Янв", "Февр", "Март", "Апр", "Май", "Июнь", "Июль", "Авг", "Сент", "Окт", "Нояб", "Дек"]
					},
					days: ["Вс", "Пн", "Вт", "Ср", "Чт", "Пт", "Сб"]
				},
				sv: {
					language: "Swedish",
					months: {
						original: ["Januari", "Februari", "Mars", "April", "Maj", "Juni", "Juli", "Augusti", "September", "Oktober", "November", "December"],
						abbr: ["Jan", "Feb", "Mar", "Apr", "Maj", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dec"]
					},
					days: ["Sön", "Mån", "Tis", "Ons", "Tor", "Fre", "Lör"]
				},
				sk: {
					language: "Slovakian",
					months: {
						original: ["január", "február", "marec", "apríl", "máj", "jún", "júl", "august", "september", "október", "november", "december"],
						abbr: ["jan", "feb", "mar", "apr", "máj", "jún", "júl", "aug", "sep", "okt", "nov", "dec"]
					},
					days: ["ne", "po", "ut", "st", "št", "pi", "so"]
				},
				"sl-si": {
					language: "Sloveian",
					months: {
						original: ["Januar", "Februar", "Marec", "April", "Maj", "Junij", "Julij", "Avgust", "September", "Oktober", "November", "December"],
						abbr: ["Jan", "Feb", "Mar", "Apr", "Maj", "Jun", "Jul", "Avg", "Sep", "Okt", "Nov", "Dec"]
					},
					days: ["Ned", "Pon", "Tor", "Sre", "Čet", "Pet", "Sob"]
				},
				sr: {
					language: "Serbian",
					months: {
						original: ["Januar", "Februar", "Mart", "April", "Maj", "Jun", "Jul", "Avgust", "Septembar", "Oktobar", "Novembar", "Decembar"],
						abbr: ["Jan", "Feb", "Mar", "Apr", "Maj", "Jun", "Jul", "Avg", "Sep", "Okt", "Nov", "Dec"]
					},
					days: ["Ned", "Pon", "Uto", "Sre", "Čet", "Pet", "Sub"]
				},
				"sr-Cyrl": {
					language: "Serbian in Cyrillic script",
					months: {
						original: ["Јануар", "Фебруар", "Март", "Април", "Мај", "Јун", "Јул", "Август", "Септембар", "Октобар", "Новембар", "Децембар"],
						abbr: ["Јан", "Феб", "Мар", "Апр", "Мај", "Јун", "Јул", "Авг", "Сеп", "Окт", "Нов", "Дец"]
					},
					days: ["Нед", "Пон", "Уто", "Сре", "Чет", "Пет", "Суб"]
				},
				th: {
					language: "Thai",
					months: {
						original: ["มกราคม", "กุมภาพันธ์", "มีนาคม", "เมษายน", "พฤษภาคม", "มิถุนายน", "กรกฎาคม", "สิงหาคม", "กันยายน", "ตุลาคม", "พฤศจิกายน", "ธันวาคม"],
						abbr: ["ม.ค.", "ก.พ.", "มี.ค.", "เม.ย.", "พ.ค.", "มิ.ย.", "ก.ค.", "ส.ค.", "ก.ย.", "ต.ค.", "พ.ย.", "ธ.ค."]
					},
					days: ["อา", "จ", "อ", "พ", "พฤ", "ศ", "ส"]
				},
				tr: {
					language: "Turkish",
					months: {
						original: ["Ocak", "Şubat", "Mart", "Nisan", "Mayıs", "Haziran", "Temmuz", "Ağustos", "Eylül", "Ekim", "Kasım", "Aralık"],
						abbr: ["Oca", "Şub", "Mar", "Nis", "May", "Haz", "Tem", "Ağu", "Eyl", "Eki", "Kas", "Ara"]
					},
					days: ["Paz", "Pzt", "Sal", "Çar", "Per", "Cum", "Cmt"]
				},
				uk: {
					language: "Ukraine",
					months: {
						original: ["Січень", "Лютий", "Березень", "Квітень", "Травень", "Червень", "Липень", "Серпень", "Вересень", "Жовтень", "Листопад", "Грудень"],
						abbr: ["Січ", "Лют", "Бер", "Квіт", "Трав", "Чер", "Лип", "Серп", "Вер", "Жовт", "Лист", "Груд"]
					},
					days: ["Нд", "Пн", "Вт", "Ср", "Чт", "Пт", "Сб"]
				},
				vi: {
					language: "Vientnamese",
					months: {
						original: ["Tháng 1", "Tháng 2", "Tháng 3", "Tháng 4", "Tháng 5", "Tháng 6", "Tháng 7", "Tháng 8", "Tháng 9", "Tháng 10", "Tháng 11", "Tháng 12"],
						abbr: ["T 01", "T 02", "T 03", "T 04", "T 05", "T 06", "T 07", "T 08", "T 09", "T 10", "T 11", "T 12"]
					},
					days: ["CN", "Thứ 2", "Thứ 3", "Thứ 4", "Thứ 5", "Thứ 6", "Thứ 7"]
				},
				zh: {
					language: "Chinese",
					months: {
						original: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"],
						abbr: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"]
					},
					days: ["日", "一", "二", "三", "四", "五", "六"]
				}
			}
		};
	}, function (e, t) {
		var n = {}.toString;
		e.exports = function (e) {
			return n.call(e).slice(8, -1);
		};
	}, function (e, t, n) {
		var i = n(9);
		var o = n(0).document;
		var a = i(o) && i(o.createElement);
		e.exports = function (e) {
			if (a) {
				return o.createElement(e);
			} else {
				return {};
			}
		};
	}, function (e, t, n) {
		var i = n(0);
		var o = n(13);
		var a = n(50);
		var s = n(4);
		function r(e, t, n) {
			var l;
			var c;
			var u;
			var d = e & r.F;
			var p = e & r.G;
			var f = e & r.S;
			var h = e & r.P;
			var m = e & r.B;
			var g = e & r.W;
			var v = p ? o : o[t] ||= {};
			var b = v.prototype;
			var y = p ? i : f ? i[t] : (i[t] || {}).prototype;
			if (p) {
				n = t;
			}
			for (l in n) {
				if (!(c = !d && y && y[l] !== undefined) || !(l in v)) {
					u = c ? y[l] : n[l];
					v[l] = p && typeof y[l] != "function" ? n[l] : m && c ? a(u, i) : g && y[l] == u ? function (e) {
						function t(t, n, i) {
							if (this instanceof e) {
								switch (arguments.length) {
									case 0:
										return new e();
									case 1:
										return new e(t);
									case 2:
										return new e(t, n);
								}
								return new e(t, n, i);
							}
							return e.apply(this, arguments);
						}
						t.prototype = e.prototype;
						return t;
					}(u) : h && typeof u == "function" ? a(Function.call, u) : u;
					if (h) {
						(v.virtual ||= {})[l] = u;
						if (e & r.R && b && !b[l]) {
							s(b, l, u);
						}
					}
				}
			}
		}
		r.F = 1;
		r.G = 2;
		r.S = 4;
		r.P = 8;
		r.B = 16;
		r.W = 32;
		r.U = 64;
		r.R = 128;
		e.exports = r;
	}, function (e, t, n) {
		e.exports = !n(3) && !n(8)(function () {
			return Object.defineProperty(n(28)("div"), "a", {
				get: function () {
					return 7;
				}
			}).a != 7;
		});
	}, function (e, t, n) {
		"use strict";

		var i = n(17);
		var o = n(29);
		var a = n(36);
		var s = n(4);
		var r = n(1);
		var l = n(16);
		var c = n(55);
		var u = n(19);
		var d = n(62);
		var p = n(6)("iterator");
		var f = ![].keys || !("next" in [].keys());
		function h() {
			return this;
		}
		e.exports = function (e, t, n, m, g, v, b) {
			c(n, t, m);
			var y;
			var w;
			var _;
			function k(e) {
				if (!f && e in A) {
					return A[e];
				}
				switch (e) {
					case "keys":
					case "values":
						return function () {
							return new n(this, e);
						};
				}
				return function () {
					return new n(this, e);
				};
			}
			var x = t + " Iterator";
			var C = g == "values";
			var S = false;
			var A = e.prototype;
			var T = A[p] || A["@@iterator"] || g && A[g];
			var P = T || k(g);
			var j = g ? C ? k("entries") : P : undefined;
			var E = t == "Array" ? A.entries || T : T;
			if (E && (_ = d(E.call(new e()))) !== Object.prototype) {
				u(_, x, true);
				if (!i && !r(_, p)) {
					s(_, p, h);
				}
			}
			if (C && T && T.name !== "values") {
				S = true;
				P = function () {
					return T.call(this);
				};
			}
			if ((!i || !!b) && (!!f || !!S || !A[p])) {
				s(A, p, P);
			}
			l[t] = P;
			l[x] = h;
			if (g) {
				y = {
					values: C ? P : k("values"),
					keys: v ? P : k("keys"),
					entries: j
				};
				if (b) {
					for (w in y) {
						if (!(w in A)) {
							a(A, w, y[w]);
						}
					}
				} else {
					o(o.P + o.F * (f || S), t, y);
				}
			}
			return y;
		};
	}, function (e, t, n) {
		var i = n(7);
		var o = n(59);
		var a = n(15);
		var s = n(20)("IE_PROTO");
		function r() {}
		function l() {
			var e;
			var t = n(28)("iframe");
			var i = a.length;
			t.style.display = "none";
			n(52).appendChild(t);
			t.src = "javascript:";
			(e = t.contentWindow.document).open();
			e.write("<script>document.F=Object</script>");
			e.close();
			l = e.F;
			while (i--) {
				delete l.prototype[a[i]];
			}
			return l();
		}
		e.exports = Object.create || function (e, t) {
			var n;
			if (e !== null) {
				r.prototype = i(e);
				n = new r();
				r.prototype = null;
				n[s] = e;
			} else {
				n = l();
			}
			if (t === undefined) {
				return n;
			} else {
				return o(n, t);
			}
		};
	}, function (e, t, n) {
		var i = n(35);
		var o = n(15).concat("length", "prototype");
		t.f = Object.getOwnPropertyNames || function (e) {
			return i(e, o);
		};
	}, function (e, t) {
		t.f = Object.getOwnPropertySymbols;
	}, function (e, t, n) {
		var i = n(1);
		var o = n(2);
		var a = n(49)(false);
		var s = n(20)("IE_PROTO");
		e.exports = function (e, t) {
			var n;
			var r = o(e);
			var l = 0;
			var c = [];
			for (n in r) {
				if (n != s && i(r, n)) {
					c.push(n);
				}
			}
			while (t.length > l) {
				if (i(r, n = t[l++])) {
					if (!~a(c, n)) {
						c.push(n);
					}
				}
			}
			return c;
		};
	}, function (e, t, n) {
		e.exports = n(4);
	}, function (e, t, n) {
		"use strict";

		Object.defineProperty(t, "__esModule", {
			value: true
		});
		var i = n(41);
		var o = n(26);
		t.default = {
			props: {
				value: {
					validator: function (e) {
						return e === null || e instanceof Date || typeof e == "string";
					}
				},
				name: String,
				refName: String,
				id: String,
				format: {
					type: [String, Function],
					default: "dd MMM yyyy"
				},
				language: {
					type: String,
					default: "en"
				},
				openDate: {
					validator: function (e) {
						return e === null || e instanceof Date || typeof e == "string";
					}
				},
				fullMonthName: Boolean,
				disabled: Object,
				highlighted: Object,
				placeholder: String,
				inline: Boolean,
				calendarClass: [String, Object],
				inputClass: [String, Object],
				wrapperClass: [String, Object],
				mondayFirst: Boolean,
				clearButton: Boolean,
				clearButtonIcon: String,
				calendarButton: Boolean,
				calendarButtonIcon: String,
				calendarButtonIconContent: String,
				bootstrapStyling: Boolean,
				initialView: String,
				disabledPicker: Boolean,
				required: Boolean,
				minimumView: {
					type: String,
					default: "day"
				},
				maximumView: {
					type: String,
					default: "year"
				}
			},
			data: function () {
				return {
					pageTimestamp: (this.openDate ? new Date(this.openDate) : new Date()).setDate(1),
					selectedDate: null,
					showDayView: false,
					showMonthView: false,
					showYearView: false,
					calendarHeight: 0
				};
			},
			watch: {
				value: function (e) {
					this.setValue(e);
				},
				openDate: function () {
					this.setPageDate();
				},
				initialView: function () {
					this.setInitialView();
				}
			},
			computed: {
				computedInitialView: function () {
					if (this.initialView) {
						return this.initialView;
					} else {
						return this.minimumView;
					}
				},
				pageDate: function () {
					return new Date(this.pageTimestamp);
				},
				formattedValue: function () {
					if (this.selectedDate) {
						if (typeof this.format == "function") {
							return this.format(this.selectedDate);
						} else {
							return i.a.formatDate(new Date(this.selectedDate), this.format, this.translation);
						}
					} else {
						return null;
					}
				},
				translation: function () {
					return o.a.translations[this.language];
				},
				currMonthName: function () {
					var e = this.fullMonthName ? this.translation.months.original : this.translation.months.abbr;
					return i.a.getMonthNameAbbr(this.pageDate.getMonth(), e);
				},
				currYear: function () {
					return this.pageDate.getFullYear();
				},
				blankDays: function () {
					var e = this.pageDate;
					var t = new Date(e.getFullYear(), e.getMonth(), 1, e.getHours(), e.getMinutes());
					if (this.mondayFirst) {
						if (t.getDay() > 0) {
							return t.getDay() - 1;
						} else {
							return 6;
						}
					} else {
						return t.getDay();
					}
				},
				daysOfWeek: function () {
					if (this.mondayFirst) {
						var e = this.translation.days.slice();
						e.push(e.shift());
						return e;
					}
					return this.translation.days;
				},
				days: function () {
					var e = this.pageDate;
					var t = [];
					var n = new Date(e.getFullYear(), e.getMonth(), 1, e.getHours(), e.getMinutes());
					for (var o = i.a.daysInMonth(n.getFullYear(), n.getMonth()), a = 0; a < o; a++) {
						t.push({
							date: n.getDate(),
							timestamp: n.getTime(),
							isSelected: this.isSelectedDate(n),
							isDisabled: this.isDisabledDate(n),
							isHighlighted: this.isHighlightedDate(n),
							isHighlightStart: this.isHighlightStart(n),
							isHighlightEnd: this.isHighlightEnd(n),
							isToday: n.toDateString() === new Date().toDateString(),
							isWeekend: n.getDay() === 0 || n.getDay() === 6,
							isSaturday: n.getDay() === 6,
							isSunday: n.getDay() === 0
						});
						n.setDate(n.getDate() + 1);
					}
					return t;
				},
				months: function () {
					var e = this.pageDate;
					var t = [];
					var n = new Date(e.getFullYear(), 0, e.getDate(), e.getHours(), e.getMinutes());
					for (var o = 0; o < 12; o++) {
						t.push({
							month: i.a.getMonthName(o, this.translation.months.original),
							timestamp: n.getTime(),
							isSelected: this.isSelectedMonth(n),
							isDisabled: this.isDisabledMonth(n)
						});
						n.setMonth(n.getMonth() + 1);
					}
					return t;
				},
				years: function () {
					var e = this.pageDate;
					var t = [];
					var n = new Date(Math.floor(e.getFullYear() / 10) * 10, e.getMonth(), e.getDate(), e.getHours(), e.getMinutes());
					for (var i = 0; i < 10; i++) {
						t.push({
							year: n.getFullYear(),
							timestamp: n.getTime(),
							isSelected: this.isSelectedYear(n),
							isDisabled: this.isDisabledYear(n)
						});
						n.setFullYear(n.getFullYear() + 1);
					}
					return t;
				},
				calendarStyle: function () {
					return {
						position: this.isInline ? "static" : undefined
					};
				},
				isOpen: function () {
					return this.showDayView || this.showMonthView || this.showYearView;
				},
				isInline: function () {
					return !!this.inline;
				},
				isRtl: function () {
					return this.translation.rtl === true;
				}
			},
			methods: {
				close: function () {
					this.showDayView = this.showMonthView = this.showYearView = false;
					if (!this.isInline) {
						this.$emit("closed");
						document.removeEventListener("click", this.clickOutside, false);
					}
				},
				resetDefaultDate: function () {
					if (this.selectedDate !== null) {
						this.setPageDate(this.selectedDate);
					} else {
						this.setPageDate();
					}
				},
				showCalendar: function () {
					return !this.disabledPicker && !this.isInline && (this.isOpen ? this.close() : (this.setInitialView(), void (this.isInline || this.$emit("opened"))));
				},
				setInitialView: function () {
					var e = this.computedInitialView;
					if (!this.allowedToShowView(e)) {
						throw new Error("initialView '" + this.initialView + "' cannot be rendered based on minimum '" + this.minimumView + "' and maximum '" + this.maximumView + "'");
					}
					switch (e) {
						case "year":
							this.showYearCalendar();
							break;
						case "month":
							this.showMonthCalendar();
							break;
						default:
							this.showDayCalendar();
					}
				},
				allowedToShowView: function (e) {
					var t = ["day", "month", "year"];
					var n = t.indexOf(this.minimumView);
					var i = t.indexOf(this.maximumView);
					var o = t.indexOf(e);
					return o >= n && o <= i;
				},
				showDayCalendar: function () {
					if (!this.allowedToShowView("day")) {
						return false;
					}
					this.close();
					this.showDayView = true;
					if (!this.isInline) {
						document.addEventListener("click", this.clickOutside, false);
					}
				},
				showMonthCalendar: function () {
					if (!this.allowedToShowView("month")) {
						return false;
					}
					this.close();
					this.showMonthView = true;
					if (!this.isInline) {
						document.addEventListener("click", this.clickOutside, false);
					}
				},
				showYearCalendar: function () {
					if (!this.allowedToShowView("year")) {
						return false;
					}
					this.close();
					this.showYearView = true;
					if (!this.isInline) {
						document.addEventListener("click", this.clickOutside, false);
					}
				},
				setDate: function (e) {
					var t = new Date(e);
					this.selectedDate = new Date(t);
					this.setPageDate(t);
					this.$emit("selected", new Date(t));
					this.$emit("input", new Date(t));
				},
				clearDate: function () {
					this.selectedDate = null;
					this.$emit("selected", null);
					this.$emit("input", null);
					this.$emit("cleared");
				},
				selectDate: function (e) {
					if (e.isDisabled) {
						this.$emit("selectedDisabled", e);
						return false;
					}
					this.setDate(e.timestamp);
					if (this.isInline) {
						this.showDayCalendar();
					} else {
						this.close();
					}
				},
				selectMonth: function (e) {
					if (e.isDisabled) {
						return false;
					}
					var t = new Date(e.timestamp);
					if (this.allowedToShowView("day")) {
						this.setPageDate(t);
						this.$emit("changedMonth", e);
						this.showDayCalendar();
					} else {
						this.setDate(t);
						this.close();
					}
				},
				selectYear: function (e) {
					if (e.isDisabled) {
						return false;
					}
					var t = new Date(e.timestamp);
					if (this.allowedToShowView("month")) {
						this.setPageDate(t);
						this.$emit("changedYear", e);
						this.showMonthCalendar();
					} else {
						this.setDate(t);
						this.close();
					}
				},
				getPageDate: function () {
					return this.pageDate.getDate();
				},
				getPageMonth: function () {
					return this.pageDate.getMonth();
				},
				getPageYear: function () {
					return this.pageDate.getFullYear();
				},
				getPageDecade: function () {
					return Math.floor(this.pageDate.getFullYear() / 10) * 10 + "'s";
				},
				changeMonth: function (e) {
					var t = this.pageDate;
					t.setMonth(t.getMonth() + e);
					this.setPageDate(t);
					this.$emit("changedMonth", t);
				},
				previousMonth: function () {
					if (!this.previousMonthDisabled()) {
						this.changeMonth(-1);
					}
				},
				previousMonthDisabled: function () {
					if (!this.disabled || !this.disabled.to) {
						return false;
					}
					var e = this.pageDate;
					return this.disabled.to.getMonth() >= e.getMonth() && this.disabled.to.getFullYear() >= e.getFullYear();
				},
				nextMonth: function () {
					if (!this.nextMonthDisabled()) {
						this.changeMonth(1);
					}
				},
				nextMonthDisabled: function () {
					if (!this.disabled || !this.disabled.from) {
						return false;
					}
					var e = this.pageDate;
					return this.disabled.from.getMonth() <= e.getMonth() && this.disabled.from.getFullYear() <= e.getFullYear();
				},
				changeYear: function (e, t = "changedYear") {
					var n = this.pageDate;
					n.setYear(n.getFullYear() + e);
					this.setPageDate(n);
					this.$emit(t);
				},
				previousYear: function () {
					if (!this.previousYearDisabled()) {
						this.changeYear(-1);
					}
				},
				previousYearDisabled: function () {
					return !!this.disabled && !!this.disabled.to && this.disabled.to.getFullYear() >= this.pageDate.getFullYear();
				},
				nextYear: function () {
					if (!this.nextYearDisabled()) {
						this.changeYear(1);
					}
				},
				nextYearDisabled: function () {
					return !!this.disabled && !!this.disabled.from && this.disabled.from.getFullYear() <= this.pageDate.getFullYear();
				},
				previousDecade: function () {
					if (!this.previousDecadeDisabled()) {
						this.changeYear(-10, "changeDecade");
					}
				},
				previousDecadeDisabled: function () {
					return !!this.disabled && !!this.disabled.to && Math.floor(this.disabled.to.getFullYear() / 10) * 10 >= Math.floor(this.pageDate.getFullYear() / 10) * 10;
				},
				nextDecade: function () {
					if (!this.nextDecadeDisabled()) {
						this.changeYear(10, "changeDecade");
					}
				},
				nextDecadeDisabled: function () {
					return !!this.disabled && !!this.disabled.from && Math.ceil(this.disabled.from.getFullYear() / 10) * 10 <= Math.ceil(this.pageDate.getFullYear() / 10) * 10;
				},
				isSelectedDate: function (e) {
					return this.selectedDate && this.selectedDate.toDateString() === e.toDateString();
				},
				isDisabledDate: function (e) {
					var t = false;
					return this.disabled !== undefined && (this.disabled.dates !== undefined && this.disabled.dates.forEach(function (n) {
						if (e.toDateString() === n.toDateString()) {
							t = true;
							return true;
						}
					}), this.disabled.to !== undefined && this.disabled.to && e < this.disabled.to && (t = true), this.disabled.from !== undefined && this.disabled.from && e > this.disabled.from && (t = true), this.disabled.ranges !== undefined && this.disabled.ranges.forEach(function (n) {
						if (n.from !== undefined && n.from && n.to !== undefined && n.to && e < n.to && e > n.from) {
							t = true;
							return true;
						}
					}), this.disabled.days !== undefined && this.disabled.days.indexOf(e.getDay()) !== -1 && (t = true), this.disabled.daysOfMonth !== undefined && this.disabled.daysOfMonth.indexOf(e.getDate()) !== -1 && (t = true), typeof this.disabled.customPredictor == "function" && this.disabled.customPredictor(e) && (t = true), t);
				},
				isHighlightedDate: function (e) {
					if (this.isDisabledDate(e)) {
						return false;
					}
					var t = false;
					return this.highlighted !== undefined && (this.highlighted.dates !== undefined && this.highlighted.dates.forEach(function (n) {
						if (e.toDateString() === n.toDateString()) {
							t = true;
							return true;
						}
					}), this.isDefined(this.highlighted.from) && this.isDefined(this.highlighted.to) && (t = e >= this.highlighted.from && e <= this.highlighted.to), this.highlighted.days !== undefined && this.highlighted.days.indexOf(e.getDay()) !== -1 && (t = true), this.highlighted.daysOfMonth !== undefined && this.highlighted.daysOfMonth.indexOf(e.getDate()) !== -1 && (t = true), typeof this.highlighted.customPredictor == "function" && this.highlighted.customPredictor(e) && (t = true), t);
				},
				isHighlightStart: function (e) {
					return this.isHighlightedDate(e) && this.highlighted.from instanceof Date && this.highlighted.from.getFullYear() === e.getFullYear() && this.highlighted.from.getMonth() === e.getMonth() && this.highlighted.from.getDate() === e.getDate();
				},
				isHighlightEnd: function (e) {
					return this.isHighlightedDate(e) && this.highlighted.to instanceof Date && this.highlighted.to.getFullYear() === e.getFullYear() && this.highlighted.to.getMonth() === e.getMonth() && this.highlighted.to.getDate() === e.getDate();
				},
				isDefined: function (e) {
					return e !== undefined && e;
				},
				isSelectedMonth: function (e) {
					return this.selectedDate && this.selectedDate.getFullYear() === e.getFullYear() && this.selectedDate.getMonth() === e.getMonth();
				},
				isDisabledMonth: function (e) {
					var t = false;
					return this.disabled !== undefined && (this.disabled.to !== undefined && this.disabled.to && (e.getMonth() < this.disabled.to.getMonth() && e.getFullYear() <= this.disabled.to.getFullYear() || e.getFullYear() < this.disabled.to.getFullYear()) && (t = true), this.disabled.from !== undefined && this.disabled.from && (this.disabled.from && e.getMonth() > this.disabled.from.getMonth() && e.getFullYear() >= this.disabled.from.getFullYear() || e.getFullYear() > this.disabled.from.getFullYear()) && (t = true), t);
				},
				isSelectedYear: function (e) {
					return this.selectedDate && this.selectedDate.getFullYear() === e.getFullYear();
				},
				isDisabledYear: function (e) {
					var t = false;
					return this.disabled !== undefined && !!this.disabled && (this.disabled.to !== undefined && this.disabled.to && e.getFullYear() < this.disabled.to.getFullYear() && (t = true), this.disabled.from !== undefined && this.disabled.from && e.getFullYear() > this.disabled.from.getFullYear() && (t = true), t);
				},
				setValue: function (e) {
					if (typeof e == "string") {
						var t = new Date(e);
						e = isNaN(t.valueOf()) ? null : t;
					}
					if (!e) {
						this.setPageDate();
						this.selectedDate = null;
						return;
					}
					this.selectedDate = e;
					this.setPageDate(e);
				},
				setPageDate: function (e) {
					e ||= this.openDate ? new Date(this.openDate) : new Date();
					this.pageTimestamp = new Date(e).setDate(1);
				},
				clickOutside: function (e) {
					if (this.$el && !this.$el.contains(e.target)) {
						if (this.isInline) {
							return this.showDayCalendar();
						}
						this.resetDefaultDate();
						this.close();
						document.removeEventListener("click", this.clickOutside, false);
					}
				},
				dayClasses: function (e) {
					return {
						selected: e.isSelected,
						disabled: e.isDisabled,
						highlighted: e.isHighlighted,
						today: e.isToday,
						weekend: e.isWeekend,
						sat: e.isSaturday,
						sun: e.isSunday,
						"highlight-start": e.isHighlightStart,
						"highlight-end": e.isHighlightEnd
					};
				},
				init: function () {
					if (this.value) {
						this.setValue(this.value);
					}
					if (this.isInline) {
						this.setInitialView();
					}
				}
			},
			mounted: function () {
				this.init();
			}
		};
	}, function (e, t) {
		e.exports = function (e, t, n, i, o) {
			var a;
			var s = e = e || {};
			var r = typeof e.default;
			if (r === "object" || r === "function") {
				a = e;
				s = e.default;
			}
			var l = typeof s == "function" ? s.options : s;
			if (t) {
				l.render = t.render;
				l.staticRenderFns = t.staticRenderFns;
			}
			if (i) {
				l._scopeId = i;
			}
			var c;
			if (o) {
				c = function (e) {
					if (!(e = e || this.$vnode && this.$vnode.ssrContext || this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) && typeof __VUE_SSR_CONTEXT__ != "undefined") {
						e = __VUE_SSR_CONTEXT__;
					}
					if (n) {
						n.call(this, e);
					}
					if (e && e._registeredComponents) {
						e._registeredComponents.add(o);
					}
				};
				l._ssrRegister = c;
			} else if (n) {
				c = n;
			}
			if (c) {
				var u = l.functional;
				var d = u ? l.render : l.beforeCreate;
				if (u) {
					l.render = function (e, t) {
						c.call(t);
						return d(e, t);
					};
				} else {
					l.beforeCreate = d ? [].concat(d, c) : [c];
				}
			}
			return {
				esModule: a,
				exports: s,
				options: l
			};
		};
	}, function (e, t) {
		e.exports = {
			render: function () {
				var e = this;
				var t = e.$createElement;
				var n = e._self._c || t;
				return n("div", {
					staticClass: "vdp-datepicker",
					class: [e.wrapperClass, e.isRtl ? "rtl" : ""]
				}, [n("div", {
					class: {
						"input-group": e.bootstrapStyling
					}
				}, [e.calendarButton ? n("span", {
					staticClass: "vdp-datepicker__calendar-button",
					class: {
						"input-group-addon": e.bootstrapStyling
					},
					style: {
						"cursor:not-allowed;": e.disabledPicker
					},
					on: {
						click: e.showCalendar
					}
				}, [n("i", {
					class: e.calendarButtonIcon
				}, [e._v("\n        " + e._s(e.calendarButtonIconContent) + "\n        "), e.calendarButtonIcon ? e._e() : n("span", [e._v("…")])])]) : e._e(), e._v(" "), n("input", {
					ref: e.refName,
					class: [e.inputClass, {
						"form-control": e.bootstrapStyling
					}],
					attrs: {
						type: e.inline ? "hidden" : "text",
						name: e.name,
						id: e.id,
						"open-date": e.openDate,
						placeholder: e.placeholder,
						"clear-button": e.clearButton,
						disabled: e.disabledPicker,
						required: e.required,
						readonly: ""
					},
					domProps: {
						value: e.formattedValue
					},
					on: {
						click: e.showCalendar
					}
				}), e._v(" "), e.clearButton && e.selectedDate ? n("span", {
					staticClass: "vdp-datepicker__clear-button",
					class: {
						"input-group-addon": e.bootstrapStyling
					},
					on: {
						click: function (t) {
							e.clearDate();
						}
					}
				}, [n("i", {
					class: e.clearButtonIcon
				}, [e.clearButtonIcon ? e._e() : n("span", [e._v("×")])])]) : e._e()]), e._v(" "), e.allowedToShowView("day") ? [n("div", {
					directives: [{
						name: "show",
						rawName: "v-show",
						value: e.showDayView,
						expression: "showDayView"
					}],
					class: [e.calendarClass, "vdp-datepicker__calendar"],
					style: e.calendarStyle
				}, [n("header", [n("span", {
					staticClass: "prev",
					class: {
						disabled: e.isRtl ? e.nextMonthDisabled(e.pageTimestamp) : e.previousMonthDisabled(e.pageTimestamp)
					},
					on: {
						click: function (t) {
							if (e.isRtl) {
								e.nextMonth();
							} else {
								e.previousMonth();
							}
						}
					}
				}, [e._v("<")]), e._v(" "), n("span", {
					class: e.allowedToShowView("month") ? "up" : "",
					on: {
						click: e.showMonthCalendar
					}
				}, [e._v(e._s(e.currMonthName) + " " + e._s(e.currYear) + "\n                ")]), e._v(" "), n("span", {
					staticClass: "next",
					class: {
						disabled: e.isRtl ? e.previousMonthDisabled(e.pageTimestamp) : e.nextMonthDisabled(e.pageTimestamp)
					},
					on: {
						click: function (t) {
							if (e.isRtl) {
								e.previousMonth();
							} else {
								e.nextMonth();
							}
						}
					}
				}, [e._v(">")])]), e._v(" "), n("div", {
					class: e.isRtl ? "flex-rtl" : ""
				}, [e._l(e.daysOfWeek, function (t) {
					return n("span", {
						key: t.timestamp,
						staticClass: "cell day-header"
					}, [e._v(e._s(t))]);
				}), e._v(" "), e.blankDays > 0 ? e._l(e.blankDays, function (e) {
					return n("span", {
						key: e.timestamp,
						staticClass: "cell day blank"
					});
				}) : e._e(), e._l(e.days, function (t) {
					return n("span", {
						key: t.timestamp,
						staticClass: "cell day",
						class: e.dayClasses(t),
						attrs: {
							"track-by": "timestamp"
						},
						on: {
							click: function (n) {
								e.selectDate(t);
							}
						}
					}, [e._v(e._s(t.date))]);
				})], 2)])] : e._e(), e._v(" "), e.allowedToShowView("month") ? [n("div", {
					directives: [{
						name: "show",
						rawName: "v-show",
						value: e.showMonthView,
						expression: "showMonthView"
					}],
					class: [e.calendarClass, "vdp-datepicker__calendar"],
					style: e.calendarStyle
				}, [n("header", [n("span", {
					staticClass: "prev",
					class: {
						disabled: e.previousYearDisabled(e.pageTimestamp)
					},
					on: {
						click: e.previousYear
					}
				}, [e._v("<")]), e._v(" "), n("span", {
					class: e.allowedToShowView("year") ? "up" : "",
					on: {
						click: e.showYearCalendar
					}
				}, [e._v(e._s(e.getPageYear()))]), e._v(" "), n("span", {
					staticClass: "next",
					class: {
						disabled: e.nextYearDisabled(e.pageTimestamp)
					},
					on: {
						click: e.nextYear
					}
				}, [e._v(">")])]), e._v(" "), e._l(e.months, function (t) {
					return n("span", {
						key: t.timestamp,
						staticClass: "cell month",
						class: {
							selected: t.isSelected,
							disabled: t.isDisabled
						},
						attrs: {
							"track-by": "timestamp"
						},
						on: {
							click: function (n) {
								n.stopPropagation();
								e.selectMonth(t);
							}
						}
					}, [e._v(e._s(t.month))]);
				})], 2)] : e._e(), e._v(" "), e.allowedToShowView("year") ? [n("div", {
					directives: [{
						name: "show",
						rawName: "v-show",
						value: e.showYearView,
						expression: "showYearView"
					}],
					class: [e.calendarClass, "vdp-datepicker__calendar"],
					style: e.calendarStyle
				}, [n("header", [n("span", {
					staticClass: "prev",
					class: {
						disabled: e.previousDecadeDisabled(e.pageTimestamp)
					},
					on: {
						click: e.previousDecade
					}
				}, [e._v("<")]), e._v(" "), n("span", [e._v(e._s(e.getPageDecade()))]), e._v(" "), n("span", {
					staticClass: "next",
					class: {
						disabled: e.nextMonthDisabled(e.pageTimestamp)
					},
					on: {
						click: e.nextDecade
					}
				}, [e._v(">")])]), e._v(" "), e._l(e.years, function (t) {
					return n("span", {
						key: t.timestamp,
						staticClass: "cell year",
						class: {
							selected: t.isSelected,
							disabled: t.isDisabled
						},
						attrs: {
							"track-by": "timestamp"
						},
						on: {
							click: function (n) {
								n.stopPropagation();
								e.selectYear(t);
							}
						}
					}, [e._v(e._s(t.year))]);
				})], 2)] : e._e()], 2);
			},
			staticRenderFns: []
		};
	}, function (e, t, n) {
		var i = n(74);
		if (typeof i == "string") {
			i = [[e.i, i, ""]];
		}
		if (i.locals) {
			e.exports = i.locals;
		}
		n(77)("cc2c5bfc", i, true);
	}, function (e, t, n) {
		"use strict";

		var i = n(44);
		var o = n.n(i);
		var a = n(26);
		t.a = {
			isValidDate: function (e) {
				return Object.prototype.toString.call(e) === "[object Date]" && !isNaN(e.getTime());
			},
			getDayNameAbbr: function (e, t) {
				if ((e === undefined ? "undefined" : o()(e)) !== "object") {
					throw TypeError("Invalid Type");
				}
				return t[e.getDay()];
			},
			getMonthName: function (e, t) {
				if (!t) {
					throw Error("missing 2nd parameter Months array");
				}
				if ((e === undefined ? "undefined" : o()(e)) === "object") {
					return t[e.getMonth()];
				}
				if (typeof e == "number") {
					return t[e];
				}
				throw TypeError("Invalid type");
			},
			getMonthNameAbbr: function (e, t) {
				if (!t) {
					throw Error("missing 2nd paramter Months array");
				}
				if ((e === undefined ? "undefined" : o()(e)) === "object") {
					return t[e.getMonth()];
				}
				if (typeof e == "number") {
					return t[e];
				}
				throw TypeError("Invalid type");
			},
			daysInMonth: function (e, t) {
				if (/8|3|5|10/.test(t)) {
					return 30;
				} else if (t === 1) {
					if ((e % 4 || !(e % 100)) && e % 400) {
						return 28;
					} else {
						return 29;
					}
				} else {
					return 31;
				}
			},
			getNthSuffix: function (e) {
				switch (e) {
					case 1:
					case 21:
					case 31:
						return "st";
					case 2:
					case 22:
						return "nd";
					case 3:
					case 23:
						return "rd";
					default:
						return "th";
				}
			},
			formatDate: function (e, t, n) {
				n = n || a.a.translations.en;
				var i = e.getFullYear();
				var o = e.getMonth() + 1;
				var s = e.getDate();
				return t.replace(/dd/, ("0" + s).slice(-2)).replace(/d/, s).replace(/yyyy/, i).replace(/yy/, String(i).slice(2)).replace(/MMMM/, this.getMonthName(e.getMonth(), n.months.original)).replace(/MMM/, this.getMonthNameAbbr(e.getMonth(), n.months.abbr)).replace(/MM/, ("0" + o).slice(-2)).replace(/M(?!a|ä)/, o).replace(/su/, this.getNthSuffix(e.getDate())).replace(/D(?!e|é|i)/, this.getDayNameAbbr(e, n.days));
			},
			createDateArray: function (e, t) {
				var n = [];
				for (; e <= t;) {
					n.push(new Date(e));
					e = new Date(e).setDate(new Date(e).getDate() + 1);
				}
				return n;
			}
		};
	}, function (e, t, n) {
		e.exports = {
			default: n(45),
			__esModule: true
		};
	}, function (e, t, n) {
		e.exports = {
			default: n(46),
			__esModule: true
		};
	}, function (e, t, n) {
		"use strict";

		function i(e) {
			if (e && e.__esModule) {
				return e;
			} else {
				return {
					default: e
				};
			}
		}
		t.__esModule = true;
		var o = i(n(43));
		var a = i(n(42));
		var s = typeof a.default == "function" && typeof o.default == "symbol" ? function (e) {
			return typeof e;
		} : function (e) {
			if (e && typeof a.default == "function" && e.constructor === a.default && e !== a.default.prototype) {
				return "symbol";
			} else {
				return typeof e;
			}
		};
		t.default = typeof a.default == "function" && s(o.default) === "symbol" ? function (e) {
			if (e === undefined) {
				return "undefined";
			} else {
				return s(e);
			}
		} : function (e) {
			if (e && typeof a.default == "function" && e.constructor === a.default && e !== a.default.prototype) {
				return "symbol";
			} else if (e === undefined) {
				return "undefined";
			} else {
				return s(e);
			}
		};
	}, function (e, t, n) {
		n(70);
		n(68);
		n(71);
		n(72);
		e.exports = n(13).Symbol;
	}, function (e, t, n) {
		n(69);
		n(73);
		e.exports = n(25).f("iterator");
	}, function (e, t) {
		e.exports = function (e) {
			if (typeof e != "function") {
				throw TypeError(e + " is not a function!");
			}
			return e;
		};
	}, function (e, t) {
		e.exports = function () {};
	}, function (e, t, n) {
		var i = n(2);
		var o = n(65);
		var a = n(64);
		e.exports = function (e) {
			return function (t, n, s) {
				var r;
				var l = i(t);
				var c = o(l.length);
				var u = a(s, c);
				if (e && n != n) {
					while (c > u) {
						if ((r = l[u++]) != r) {
							return true;
						}
					}
				} else {
					for (; c > u; u++) {
						if ((e || u in l) && l[u] === n) {
							return e || u || 0;
						}
					}
				}
				return !e && -1;
			};
		};
	}, function (e, t, n) {
		var i = n(47);
		e.exports = function (e, t, n) {
			i(e);
			if (t === undefined) {
				return e;
			}
			switch (n) {
				case 1:
					return function (n) {
						return e.call(t, n);
					};
				case 2:
					return function (n, i) {
						return e.call(t, n, i);
					};
				case 3:
					return function (n, i, o) {
						return e.call(t, n, i, o);
					};
			}
			return function () {
				return e.apply(t, arguments);
			};
		};
	}, function (e, t, n) {
		var i = n(10);
		var o = n(34);
		var a = n(18);
		e.exports = function (e) {
			var t = i(e);
			var n = o.f;
			if (n) {
				var s;
				for (var r = n(e), l = a.f, c = 0; r.length > c;) {
					if (l.call(e, s = r[c++])) {
						t.push(s);
					}
				}
			}
			return t;
		};
	}, function (e, t, n) {
		e.exports = n(0).document && document.documentElement;
	}, function (e, t, n) {
		var i = n(27);
		e.exports = Object("z").propertyIsEnumerable(0) ? Object : function (e) {
			if (i(e) == "String") {
				return e.split("");
			} else {
				return Object(e);
			}
		};
	}, function (e, t, n) {
		var i = n(27);
		e.exports = Array.isArray || function (e) {
			return i(e) == "Array";
		};
	}, function (e, t, n) {
		"use strict";

		var i = n(32);
		var o = n(11);
		var a = n(19);
		var s = {};
		n(4)(s, n(6)("iterator"), function () {
			return this;
		});
		e.exports = function (e, t, n) {
			e.prototype = i(s, {
				next: o(1, n)
			});
			a(e, t + " Iterator");
		};
	}, function (e, t) {
		e.exports = function (e, t) {
			return {
				value: t,
				done: !!e
			};
		};
	}, function (e, t, n) {
		var i = n(10);
		var o = n(2);
		e.exports = function (e, t) {
			var n;
			var a = o(e);
			var s = i(a);
			for (var r = s.length, l = 0; r > l;) {
				if (a[n = s[l++]] === t) {
					return n;
				}
			}
		};
	}, function (e, t, n) {
		var i = n(12)("meta");
		var o = n(9);
		var a = n(1);
		var s = n(5).f;
		var r = 0;
		var l = Object.isExtensible || function () {
			return true;
		};
		var c = !n(8)(function () {
			return l(Object.preventExtensions({}));
		});
		function u(e) {
			s(e, i, {
				value: {
					i: "O" + ++r,
					w: {}
				}
			});
		}
		var d = e.exports = {
			KEY: i,
			NEED: false,
			fastKey: function (e, t) {
				if (!o(e)) {
					if (typeof e == "symbol") {
						return e;
					} else {
						return (typeof e == "string" ? "S" : "P") + e;
					}
				}
				if (!a(e, i)) {
					if (!l(e)) {
						return "F";
					}
					if (!t) {
						return "E";
					}
					u(e);
				}
				return e[i].i;
			},
			getWeak: function (e, t) {
				if (!a(e, i)) {
					if (!l(e)) {
						return true;
					}
					if (!t) {
						return false;
					}
					u(e);
				}
				return e[i].w;
			},
			onFreeze: function (e) {
				if (c && d.NEED && l(e) && !a(e, i)) {
					u(e);
				}
				return e;
			}
		};
	}, function (e, t, n) {
		var i = n(5);
		var o = n(7);
		var a = n(10);
		e.exports = n(3) ? Object.defineProperties : function (e, t) {
			o(e);
			var n;
			var s = a(t);
			for (var r = s.length, l = 0; r > l;) {
				i.f(e, n = s[l++], t[n]);
			}
			return e;
		};
	}, function (e, t, n) {
		var i = n(18);
		var o = n(11);
		var a = n(2);
		var s = n(23);
		var r = n(1);
		var l = n(30);
		var c = Object.getOwnPropertyDescriptor;
		t.f = n(3) ? c : function (e, t) {
			e = a(e);
			t = s(t, true);
			if (l) {
				try {
					return c(e, t);
				} catch (e) {}
			}
			if (r(e, t)) {
				return o(!i.f.call(e, t), e[t]);
			}
		};
	}, function (e, t, n) {
		var i = n(2);
		var o = n(33).f;
		var a = {}.toString;
		var s = typeof window == "object" && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
		function r(e) {
			try {
				return o(e);
			} catch (e) {
				return s.slice();
			}
		}
		e.exports.f = function (e) {
			if (s && a.call(e) == "[object Window]") {
				return r(e);
			} else {
				return o(i(e));
			}
		};
	}, function (e, t, n) {
		var i = n(1);
		var o = n(66);
		var a = n(20)("IE_PROTO");
		var s = Object.prototype;
		e.exports = Object.getPrototypeOf || function (e) {
			e = o(e);
			if (i(e, a)) {
				return e[a];
			} else if (typeof e.constructor == "function" && e instanceof e.constructor) {
				return e.constructor.prototype;
			} else if (e instanceof Object) {
				return s;
			} else {
				return null;
			}
		};
	}, function (e, t, n) {
		var i = n(22);
		var o = n(14);
		e.exports = function (e) {
			return function (t, n) {
				var a;
				var s;
				var r = String(o(t));
				var l = i(n);
				var c = r.length;
				if (l < 0 || l >= c) {
					if (e) {
						return "";
					} else {
						return undefined;
					}
				} else if ((a = r.charCodeAt(l)) < 55296 || a > 56319 || l + 1 === c || (s = r.charCodeAt(l + 1)) < 56320 || s > 57343) {
					if (e) {
						return r.charAt(l);
					} else {
						return a;
					}
				} else if (e) {
					return r.slice(l, l + 2);
				} else {
					return s - 56320 + (a - 55296 << 10) + 65536;
				}
			};
		};
	}, function (e, t, n) {
		var i = n(22);
		var o = Math.max;
		var a = Math.min;
		e.exports = function (e, t) {
			if ((e = i(e)) < 0) {
				return o(e + t, 0);
			} else {
				return a(e, t);
			}
		};
	}, function (e, t, n) {
		var i = n(22);
		var o = Math.min;
		e.exports = function (e) {
			if (e > 0) {
				return o(i(e), 9007199254740991);
			} else {
				return 0;
			}
		};
	}, function (e, t, n) {
		var i = n(14);
		e.exports = function (e) {
			return Object(i(e));
		};
	}, function (e, t, n) {
		"use strict";

		var i = n(48);
		var o = n(56);
		var a = n(16);
		var s = n(2);
		e.exports = n(31)(Array, "Array", function (e, t) {
			this._t = s(e);
			this._i = 0;
			this._k = t;
		}, function () {
			var e = this._t;
			var t = this._k;
			var n = this._i++;
			if (!e || n >= e.length) {
				this._t = undefined;
				return o(1);
			} else if (t == "keys") {
				return o(0, n);
			} else if (t == "values") {
				return o(0, e[n]);
			} else {
				return o(0, [n, e[n]]);
			}
		}, "values");
		a.Arguments = a.Array;
		i("keys");
		i("values");
		i("entries");
	}, function (e, t) {}, function (e, t, n) {
		"use strict";

		var i = n(63)(true);
		n(31)(String, "String", function (e) {
			this._t = String(e);
			this._i = 0;
		}, function () {
			var e;
			var t = this._t;
			var n = this._i;
			if (n >= t.length) {
				return {
					value: undefined,
					done: true
				};
			} else {
				e = i(t, n);
				this._i += e.length;
				return {
					value: e,
					done: false
				};
			}
		});
	}, function (e, t, n) {
		"use strict";

		var i = n(0);
		var o = n(1);
		var a = n(3);
		var s = n(29);
		var r = n(36);
		var l = n(58).KEY;
		var c = n(8);
		var u = n(21);
		var d = n(19);
		var p = n(12);
		var f = n(6);
		var h = n(25);
		var m = n(24);
		var g = n(57);
		var v = n(51);
		var b = n(54);
		var y = n(7);
		var w = n(2);
		var _ = n(23);
		var k = n(11);
		var x = n(32);
		var C = n(61);
		var S = n(60);
		var A = n(5);
		var T = n(10);
		var P = S.f;
		var j = A.f;
		var E = C.f;
		var N = i.Symbol;
		var O = i.JSON;
		var D = O && O.stringify;
		var I = f("_hidden");
		var $ = f("toPrimitive");
		var M = {}.propertyIsEnumerable;
		var z = u("symbol-registry");
		var F = u("symbols");
		var L = u("op-symbols");
		var R = Object.prototype;
		var H = typeof N == "function";
		var B = i.QObject;
		var q = !B || !B.prototype || !B.prototype.findChild;
		var V = a && c(function () {
			return x(j({}, "a", {
				get: function () {
					return j(this, "a", {
						value: 7
					}).a;
				}
			})).a != 7;
		}) ? function (e, t, n) {
			var i = P(R, t);
			if (i) {
				delete R[t];
			}
			j(e, t, n);
			if (i && e !== R) {
				j(R, t, i);
			}
		} : j;
		function U(e) {
			var t = F[e] = x(N.prototype);
			t._k = e;
			return t;
		}
		var W = H && typeof N.iterator == "symbol" ? function (e) {
			return typeof e == "symbol";
		} : function (e) {
			return e instanceof N;
		};
		function G(e, t, n) {
			if (e === R) {
				G(L, t, n);
			}
			y(e);
			t = _(t, true);
			y(n);
			if (o(F, t)) {
				if (n.enumerable) {
					if (o(e, I) && e[I][t]) {
						e[I][t] = false;
					}
					n = x(n, {
						enumerable: k(0, false)
					});
				} else {
					if (!o(e, I)) {
						j(e, I, k(1, {}));
					}
					e[I][t] = true;
				}
				return V(e, t, n);
			} else {
				return j(e, t, n);
			}
		}
		function Y(e, t) {
			y(e);
			var n;
			var i = v(t = w(t));
			for (var o = 0, a = i.length; a > o;) {
				G(e, n = i[o++], t[n]);
			}
			return e;
		}
		function K(e) {
			var t = M.call(this, e = _(e, true));
			return (this !== R || !o(F, e) || !!o(L, e)) && (!t && !!o(this, e) && !!o(F, e) && (!o(this, I) || !this[I][e]) || t);
		}
		function J(e, t) {
			e = w(e);
			t = _(t, true);
			if (e !== R || !o(F, t) || o(L, t)) {
				var n = P(e, t);
				if (!!n && !!o(F, t) && (!o(e, I) || !e[I][t])) {
					n.enumerable = true;
				}
				return n;
			}
		}
		function X(e) {
			var t;
			for (var n = E(w(e)), i = [], a = 0; n.length > a;) {
				if (!o(F, t = n[a++]) && t != I && t != l) {
					i.push(t);
				}
			}
			return i;
		}
		function Z(e) {
			var t;
			var n = e === R;
			for (var i = E(n ? L : w(e)), a = [], s = 0; i.length > s;) {
				if (!!o(F, t = i[s++]) && (!n || !!o(R, t))) {
					a.push(F[t]);
				}
			}
			return a;
		}
		if (!H) {
			N = function () {
				if (this instanceof N) {
					throw TypeError("Symbol is not a constructor!");
				}
				var e = p(arguments.length > 0 ? arguments[0] : undefined);
				function t(n) {
					if (this === R) {
						t.call(L, n);
					}
					if (o(this, I) && o(this[I], e)) {
						this[I][e] = false;
					}
					V(this, e, k(1, n));
				}
				if (a && q) {
					V(R, e, {
						configurable: true,
						set: t
					});
				}
				return U(e);
			};
			r(N.prototype, "toString", function () {
				return this._k;
			});
			S.f = J;
			A.f = G;
			n(33).f = C.f = X;
			n(18).f = K;
			n(34).f = Z;
			if (a && !n(17)) {
				r(R, "propertyIsEnumerable", K, true);
			}
			h.f = function (e) {
				return U(f(e));
			};
		}
		s(s.G + s.W + s.F * !H, {
			Symbol: N
		});
		for (var Q = "hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","), ee = 0; Q.length > ee;) {
			f(Q[ee++]);
		}
		for (var Q = T(f.store), ee = 0; Q.length > ee;) {
			m(Q[ee++]);
		}
		s(s.S + s.F * !H, "Symbol", {
			for: function (e) {
				if (o(z, e += "")) {
					return z[e];
				} else {
					return z[e] = N(e);
				}
			},
			keyFor: function (e) {
				if (W(e)) {
					return g(z, e);
				}
				throw TypeError(e + " is not a symbol!");
			},
			useSetter: function () {
				q = true;
			},
			useSimple: function () {
				q = false;
			}
		});
		s(s.S + s.F * !H, "Object", {
			create: function (e, t) {
				if (t === undefined) {
					return x(e);
				} else {
					return Y(x(e), t);
				}
			},
			defineProperty: G,
			defineProperties: Y,
			getOwnPropertyDescriptor: J,
			getOwnPropertyNames: X,
			getOwnPropertySymbols: Z
		});
		if (O) {
			s(s.S + s.F * (!H || c(function () {
				var e = N();
				return D([e]) != "[null]" || D({
					a: e
				}) != "{}" || D(Object(e)) != "{}";
			})), "JSON", {
				stringify: function (e) {
					if (e !== undefined && !W(e)) {
						var t;
						var n;
						var i = [e];
						for (var o = 1; arguments.length > o;) {
							i.push(arguments[o++]);
						}
						if (typeof (t = i[1]) == "function") {
							n = t;
						}
						if (!!n || !b(t)) {
							t = function (e, t) {
								if (n) {
									t = n.call(this, e, t);
								}
								if (!W(t)) {
									return t;
								}
							};
						}
						i[1] = t;
						return D.apply(O, i);
					}
				}
			});
		}
		if (!N.prototype[$]) {
			n(4)(N.prototype, $, N.prototype.valueOf);
		}
		d(N, "Symbol");
		d(Math, "Math", true);
		d(i.JSON, "JSON", true);
	}, function (e, t, n) {
		n(24)("asyncIterator");
	}, function (e, t, n) {
		n(24)("observable");
	}, function (e, t, n) {
		n(67);
		var i = n(0);
		var o = n(4);
		var a = n(16);
		var s = n(6)("toStringTag");
		var r = ["NodeList", "DOMTokenList", "MediaList", "StyleSheetList", "CSSRuleList"];
		for (var l = 0; l < 5; l++) {
			var c = r[l];
			var u = i[c];
			var d = u && u.prototype;
			if (d && !d[s]) {
				o(d, s, c);
			}
			a[c] = a.Array;
		}
	}, function (e, t, n) {
		(e.exports = n(75)(true)).push([e.i, ".rtl{direction:rtl}.vdp-datepicker{position:relative;text-align:left}.vdp-datepicker *{box-sizing:border-box}.vdp-datepicker__calendar{position:absolute;z-index:100;background:#fff;width:300px;border:1px solid #ccc}.vdp-datepicker__calendar header{display:block;line-height:40px}.vdp-datepicker__calendar header span{display:inline-block;text-align:center;width:71.42857142857143%;float:left}.vdp-datepicker__calendar header .next,.vdp-datepicker__calendar header .prev{width:14.285714285714286%;float:left;text-indent:-10000px;position:relative}.vdp-datepicker__calendar header .next:after,.vdp-datepicker__calendar header .prev:after{content:\"\";position:absolute;left:50%;top:50%;-webkit-transform:translateX(-50%) translateY(-50%);transform:translateX(-50%) translateY(-50%);border:6px solid transparent}.vdp-datepicker__calendar header .prev:after{border-right:10px solid #000;margin-left:-5px}.vdp-datepicker__calendar header .prev.disabled:after{border-right:10px solid #ddd}.vdp-datepicker__calendar header .next:after{border-left:10px solid #000;margin-left:5px}.vdp-datepicker__calendar header .next.disabled:after{border-left:10px solid #ddd}.vdp-datepicker__calendar header .next:not(.disabled),.vdp-datepicker__calendar header .prev:not(.disabled),.vdp-datepicker__calendar header .up:not(.disabled){cursor:pointer}.vdp-datepicker__calendar header .next:not(.disabled):hover,.vdp-datepicker__calendar header .prev:not(.disabled):hover,.vdp-datepicker__calendar header .up:not(.disabled):hover{background:#eee}.vdp-datepicker__calendar .disabled{color:#ddd;cursor:default}.vdp-datepicker__calendar .flex-rtl{display:-webkit-box;display:-ms-flexbox;display:flex;width:inherit;-ms-flex-wrap:wrap;flex-wrap:wrap}.vdp-datepicker__calendar .cell{display:inline-block;padding:0 5px;width:14.285714285714286%;height:40px;line-height:40px;text-align:center;vertical-align:middle;border:1px solid transparent}.vdp-datepicker__calendar .cell:not(.blank):not(.disabled).day,.vdp-datepicker__calendar .cell:not(.blank):not(.disabled).month,.vdp-datepicker__calendar .cell:not(.blank):not(.disabled).year{cursor:pointer}.vdp-datepicker__calendar .cell:not(.blank):not(.disabled).day:hover,.vdp-datepicker__calendar .cell:not(.blank):not(.disabled).month:hover,.vdp-datepicker__calendar .cell:not(.blank):not(.disabled).year:hover{border:1px solid #4bd}.vdp-datepicker__calendar .cell.selected,.vdp-datepicker__calendar .cell.selected.highlighted,.vdp-datepicker__calendar .cell.selected:hover{background:#4bd}.vdp-datepicker__calendar .cell.highlighted{background:#cae5ed}.vdp-datepicker__calendar .cell.grey{color:#888}.vdp-datepicker__calendar .cell.grey:hover{background:inherit}.vdp-datepicker__calendar .cell.day-header{font-size:75%;white-space:no-wrap;cursor:inherit}.vdp-datepicker__calendar .cell.day-header:hover{background:inherit}.vdp-datepicker__calendar .month,.vdp-datepicker__calendar .year{width:33.333%}.vdp-datepicker__calendar-button,.vdp-datepicker__clear-button{cursor:pointer;font-style:normal}.vdp-datepicker__calendar-button.disabled,.vdp-datepicker__clear-button.disabled{color:#999;cursor:default}", "", {
			version: 3,
			sources: ["/Users/charlie.kassel/Server/sites/vuejs-datepicker/src/components/Datepicker.vue"],
			names: [],
			mappings: "AACA,KACE,aAAe,CAChB,AACD,gBACE,kBAAmB,AACnB,eAAiB,CAClB,AACD,kBACE,qBAAuB,CACxB,AACD,0BACE,kBAAmB,AACnB,YAAa,AACb,gBAAiB,AACjB,YAAa,AACb,qBAAuB,CACxB,AACD,iCACE,cAAe,AACf,gBAAkB,CACnB,AACD,sCACE,qBAAsB,AACtB,kBAAmB,AACnB,yBAA0B,AAC1B,UAAY,CACb,AACD,8EAEE,0BAA2B,AAC3B,WAAY,AACZ,qBAAsB,AACtB,iBAAmB,CACpB,AACD,0FAEE,WAAY,AACZ,kBAAmB,AACnB,SAAU,AACV,QAAS,AACT,oDAAqD,AAC7C,4CAA6C,AACrD,4BAA8B,CAC/B,AACD,6CACE,6BAA8B,AAC9B,gBAAkB,CACnB,AACD,sDACE,4BAA8B,CAC/B,AACD,6CACE,4BAA6B,AAC7B,eAAiB,CAClB,AACD,sDACE,2BAA6B,CAC9B,AACD,gKAGE,cAAgB,CACjB,AACD,kLAGE,eAAiB,CAClB,AACD,oCACE,WAAY,AACZ,cAAgB,CACjB,AACD,oCACE,oBAAqB,AACrB,oBAAqB,AACrB,aAAc,AACd,cAAe,AACf,mBAAoB,AAChB,cAAgB,CACrB,AACD,gCACE,qBAAsB,AACtB,cAAe,AACf,0BAA2B,AAC3B,YAAa,AACb,iBAAkB,AAClB,kBAAmB,AACnB,sBAAuB,AACvB,4BAA8B,CAC/B,AACD,gMAGE,cAAgB,CACjB,AACD,kNAGE,qBAAuB,CACxB,AAOD,6IACE,eAAiB,CAClB,AACD,4CACE,kBAAoB,CACrB,AACD,qCACE,UAAY,CACb,AACD,2CACE,kBAAoB,CACrB,AACD,2CACE,cAAe,AACf,oBAAqB,AACrB,cAAgB,CACjB,AACD,iDACE,kBAAoB,CACrB,AACD,iEAEE,aAAe,CAChB,AACD,+DAEE,eAAgB,AAChB,iBAAmB,CACpB,AACD,iFAEE,WAAY,AACZ,cAAgB,CACjB",
			file: "Datepicker.vue",
			sourcesContent: ["\n.rtl {\n  direction: rtl;\n}\n.vdp-datepicker {\n  position: relative;\n  text-align: left;\n}\n.vdp-datepicker * {\n  box-sizing: border-box;\n}\n.vdp-datepicker__calendar {\n  position: absolute;\n  z-index: 100;\n  background: #fff;\n  width: 300px;\n  border: 1px solid #ccc;\n}\n.vdp-datepicker__calendar header {\n  display: block;\n  line-height: 40px;\n}\n.vdp-datepicker__calendar header span {\n  display: inline-block;\n  text-align: center;\n  width: 71.42857142857143%;\n  float: left;\n}\n.vdp-datepicker__calendar header .prev,\n.vdp-datepicker__calendar header .next {\n  width: 14.285714285714286%;\n  float: left;\n  text-indent: -10000px;\n  position: relative;\n}\n.vdp-datepicker__calendar header .prev:after,\n.vdp-datepicker__calendar header .next:after {\n  content: '';\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  -webkit-transform: translateX(-50%) translateY(-50%);\n          transform: translateX(-50%) translateY(-50%);\n  border: 6px solid transparent;\n}\n.vdp-datepicker__calendar header .prev:after {\n  border-right: 10px solid #000;\n  margin-left: -5px;\n}\n.vdp-datepicker__calendar header .prev.disabled:after {\n  border-right: 10px solid #ddd;\n}\n.vdp-datepicker__calendar header .next:after {\n  border-left: 10px solid #000;\n  margin-left: 5px;\n}\n.vdp-datepicker__calendar header .next.disabled:after {\n  border-left: 10px solid #ddd;\n}\n.vdp-datepicker__calendar header .prev:not(.disabled),\n.vdp-datepicker__calendar header .next:not(.disabled),\n.vdp-datepicker__calendar header .up:not(.disabled) {\n  cursor: pointer;\n}\n.vdp-datepicker__calendar header .prev:not(.disabled):hover,\n.vdp-datepicker__calendar header .next:not(.disabled):hover,\n.vdp-datepicker__calendar header .up:not(.disabled):hover {\n  background: #eee;\n}\n.vdp-datepicker__calendar .disabled {\n  color: #ddd;\n  cursor: default;\n}\n.vdp-datepicker__calendar .flex-rtl {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  width: inherit;\n  -ms-flex-wrap: wrap;\n      flex-wrap: wrap;\n}\n.vdp-datepicker__calendar .cell {\n  display: inline-block;\n  padding: 0 5px;\n  width: 14.285714285714286%;\n  height: 40px;\n  line-height: 40px;\n  text-align: center;\n  vertical-align: middle;\n  border: 1px solid transparent;\n}\n.vdp-datepicker__calendar .cell:not(.blank):not(.disabled).day,\n.vdp-datepicker__calendar .cell:not(.blank):not(.disabled).month,\n.vdp-datepicker__calendar .cell:not(.blank):not(.disabled).year {\n  cursor: pointer;\n}\n.vdp-datepicker__calendar .cell:not(.blank):not(.disabled).day:hover,\n.vdp-datepicker__calendar .cell:not(.blank):not(.disabled).month:hover,\n.vdp-datepicker__calendar .cell:not(.blank):not(.disabled).year:hover {\n  border: 1px solid #4bd;\n}\n.vdp-datepicker__calendar .cell.selected {\n  background: #4bd;\n}\n.vdp-datepicker__calendar .cell.selected:hover {\n  background: #4bd;\n}\n.vdp-datepicker__calendar .cell.selected.highlighted {\n  background: #4bd;\n}\n.vdp-datepicker__calendar .cell.highlighted {\n  background: #cae5ed;\n}\n.vdp-datepicker__calendar .cell.grey {\n  color: #888;\n}\n.vdp-datepicker__calendar .cell.grey:hover {\n  background: inherit;\n}\n.vdp-datepicker__calendar .cell.day-header {\n  font-size: 75%;\n  white-space: no-wrap;\n  cursor: inherit;\n}\n.vdp-datepicker__calendar .cell.day-header:hover {\n  background: inherit;\n}\n.vdp-datepicker__calendar .month,\n.vdp-datepicker__calendar .year {\n  width: 33.333%;\n}\n.vdp-datepicker__clear-button,\n.vdp-datepicker__calendar-button {\n  cursor: pointer;\n  font-style: normal;\n}\n.vdp-datepicker__clear-button.disabled,\n.vdp-datepicker__calendar-button.disabled {\n  color: #999;\n  cursor: default;\n}"],
			sourceRoot: ""
		}]);
	}, function (e, t) {
		function n(e, t) {
			var n = e[1] || "";
			var o = e[3];
			if (!o) {
				return n;
			}
			if (t && typeof btoa == "function") {
				var a = i(o);
				return [n].concat(o.sources.map(function (e) {
					return "/*# sourceURL=" + o.sourceRoot + e + " */";
				})).concat([a]).join("\n");
			}
			return [n].join("\n");
		}
		function i(e) {
			return "/*# sourceMappingURL=data:application/json;charset=utf-8;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(e)))) + " */";
		}
		e.exports = function (e) {
			var t = [];
			t.toString = function () {
				return this.map(function (t) {
					var i = n(t, e);
					if (t[2]) {
						return "@media " + t[2] + "{" + i + "}";
					} else {
						return i;
					}
				}).join("");
			};
			t.i = function (e, n) {
				if (typeof e == "string") {
					e = [[null, e, ""]];
				}
				var i = {};
				for (var o = 0; o < this.length; o++) {
					var a = this[o][0];
					if (typeof a == "number") {
						i[a] = true;
					}
				}
				for (o = 0; o < e.length; o++) {
					var s = e[o];
					if (typeof s[0] != "number" || !i[s[0]]) {
						if (n && !s[2]) {
							s[2] = n;
						} else if (n) {
							s[2] = "(" + s[2] + ") and (" + n + ")";
						}
						t.push(s);
					}
				}
			};
			return t;
		};
	}, function (e, t, n) {
		var i = n(38)(n(37), n(39), function (e) {
			n(40);
		}, null, null);
		e.exports = i.exports;
	}, function (e, t, n) {
		function i(e) {
			for (var t = 0; t < e.length; t++) {
				var n = e[t];
				var i = u[n.id];
				if (i) {
					i.refs++;
					for (s = 0; s < i.parts.length; s++) {
						i.parts[s](n.parts[s]);
					}
					for (; s < n.parts.length; s++) {
						i.parts.push(a(n.parts[s]));
					}
					if (i.parts.length > n.parts.length) {
						i.parts.length = n.parts.length;
					}
				} else {
					var o = [];
					for (var s = 0; s < n.parts.length; s++) {
						o.push(a(n.parts[s]));
					}
					u[n.id] = {
						id: n.id,
						refs: 1,
						parts: o
					};
				}
			}
		}
		function o() {
			var e = document.createElement("style");
			e.type = "text/css";
			d.appendChild(e);
			return e;
		}
		function a(e) {
			var t;
			var n;
			var i = document.querySelector("style[data-vue-ssr-id~=\"" + e.id + "\"]");
			if (i) {
				if (h) {
					return m;
				}
				i.parentNode.removeChild(i);
			}
			if (g) {
				var a = f++;
				i = p ||= o();
				t = s.bind(null, i, a, false);
				n = s.bind(null, i, a, true);
			} else {
				i = o();
				t = r.bind(null, i);
				n = function () {
					i.parentNode.removeChild(i);
				};
			}
			t(e);
			return function (i) {
				if (i) {
					if (i.css === e.css && i.media === e.media && i.sourceMap === e.sourceMap) {
						return;
					}
					t(e = i);
				} else {
					n();
				}
			};
		}
		function s(e, t, n, i) {
			var o = n ? "" : i.css;
			if (e.styleSheet) {
				e.styleSheet.cssText = v(t, o);
			} else {
				var a = document.createTextNode(o);
				var s = e.childNodes;
				if (s[t]) {
					e.removeChild(s[t]);
				}
				if (s.length) {
					e.insertBefore(a, s[t]);
				} else {
					e.appendChild(a);
				}
			}
		}
		function r(e, t) {
			var n = t.css;
			var i = t.media;
			var o = t.sourceMap;
			if (i) {
				e.setAttribute("media", i);
			}
			if (o) {
				n += "\n/*# sourceURL=" + o.sources[0] + " */";
				n += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(o)))) + " */";
			}
			if (e.styleSheet) {
				e.styleSheet.cssText = n;
			} else {
				while (e.firstChild) {
					e.removeChild(e.firstChild);
				}
				e.appendChild(document.createTextNode(n));
			}
		}
		var l = typeof document != "undefined";
		if (typeof DEBUG != "undefined" && DEBUG && !l) {
			throw new Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");
		}
		var c = n(78);
		var u = {};
		var d = l && (document.head || document.getElementsByTagName("head")[0]);
		var p = null;
		var f = 0;
		var h = false;
		function m() {}
		var g = typeof navigator != "undefined" && /msie [6-9]\b/.test(navigator.userAgent.toLowerCase());
		e.exports = function (e, t, n) {
			h = n;
			var o = c(e, t);
			i(o);
			return function (t) {
				var n = [];
				for (var a = 0; a < o.length; a++) {
					var s = o[a];
					(r = u[s.id]).refs--;
					n.push(r);
				}
				if (t) {
					o = c(e, t);
					i(o);
				} else {
					o = [];
				}
				for (a = 0; a < n.length; a++) {
					var r = n[a];
					if (r.refs === 0) {
						for (var l = 0; l < r.parts.length; l++) {
							r.parts[l]();
						}
						delete u[r.id];
					}
				}
			};
		};
		var v = function () {
			var e = [];
			return function (t, n) {
				e[t] = n;
				return e.filter(Boolean).join("\n");
			};
		}();
	}, function (e, t) {
		e.exports = function (e, t) {
			var n = [];
			var i = {};
			for (var o = 0; o < t.length; o++) {
				var a = t[o];
				var s = a[0];
				var r = {
					id: e + ":" + o,
					css: a[1],
					media: a[2],
					sourceMap: a[3]
				};
				if (i[s]) {
					i[s].parts.push(r);
				} else {
					n.push(i[s] = {
						id: s,
						parts: [r]
					});
				}
			}
			return n;
		};
	}]);
}, function (e, t) {
	var n;
	n = function () {
		return this;
	}();
	try {
		n = n || Function("return this")() || (0, eval)("this");
	} catch (e) {
		if (typeof window == "object") {
			n = window;
		}
	}
	e.exports = n;
}]);


// =========================================================================================


if (window.CONNECTION_URL == undefined) {
	if (location.protocol != "https:") {
		window.CONNECTION_URL = "195.201.88.91";
		sessionStorage.setItem("server", "195.201.88.91");
	} else {
		window.CONNECTION_URL = "agar2.emupedia.net/ws3/";
		sessionStorage.setItem("server", "agar2.emupedia.net/ws3/");
	}
	sessionStorage.setItem("serverName", "EXPERIMENTAL#5");
}

if (window.keyToSplit === undefined) {
	window.keyToSplit = 32;
}

if (window.keyToEject === undefined) {
	window.keyToEject = 87;
}

var warnings = 0;

(function (e, n) {
	function i(e) {
		for (i = 0; i < e.changedTouches.length; i++) {
			var t = e.changedTouches[i];

			if (ce < 0 && t.clientX < ve / 1.5) {
				ce = t.identifier;
				de.reset(t.clientX, t.clientY);
				ue.copyFrom(de);
				pe.reset(0, 0);
			}

			if (ve > be) {
				n = ~~(ve / 10);
			} else {
				var n = ~~(ve / 7);
			}

			if (t.clientX > ve - n - 30 && t.clientY > be - n) {
				T();
				N(17);
			}
			if (t.clientX > ve - n && t.clientY > be - n * 2 - 10 && t.clientY < be - n - 10) {
				T();
				N(21);
			}
			if (t.clientX > ve - n && t.clientY > be - n * 3 - 10 && t.clientY < be - n * 2 - 10) {
				for (var i = 0; i < 6; ++i) {
					setTimeout(function () {
						N(21);
					}, i * 80);
				}
			}
		}
		le = e.touches;
	}
	function o(e) {
		e.preventDefault();
		for (var t = 0; t < e.changedTouches.length; t++) {
			var n = e.changedTouches[t];
			if (ce == n.identifier) {
				ue.reset(n.clientX, n.clientY);
				pe.copyFrom(ue);
				pe.minusEq(de);
				Ne = pe.x * 3 + ve / 2;
				Oe = pe.y * 3 + be / 2;
				l();
				T();
			}
		}
		le = e.touches;
	}
	function a(e) {
		le = e.touches;
		for (var t = 0; t < e.changedTouches.length; t++) {
			var n = e.changedTouches[t];
			if (ce == n.identifier) {
				ce = -1;
				pe.reset(0, 0);
				break;
			}
		}
	}
	function s(e) {
		jt *= Math.pow(0.9, e.wheelDelta / -120 || e.detail || 0);
		if (!Qe && jt < 1) {
			jt = 1;
		}
		if (jt > 4 / Be) {
			jt = 4 / Be;
		}
	}
	function r() {
		if (Be < 0.4) {
			ye = null;
		} else {
			var e = Number.POSITIVE_INFINITY;
			var t = Number.POSITIVE_INFINITY;
			var n = Number.NEGATIVE_INFINITY;
			var i = Number.NEGATIVE_INFINITY;
			var o = 0;
			for (var a = 0; a < Ae.length; a++) {
				var s = Ae[a];
				if (s.shouldRender() && !s.prepareData && s.size * Be > 20) {
					o = Math.max(s.size, o);
					e = Math.min(s.x, e);
					t = Math.min(s.y, t);
					n = Math.max(s.x, n);
					i = Math.max(s.y, i);
				}
			}
			ye = Gt.init({
				minX: e - (o + 100),
				minY: t - (o + 100),
				maxX: n + (o + 100),
				maxY: i + (o + 100),
				maxChildren: 2,
				maxDepth: 4
			});
			a = 0;
			for (; a < Ae.length; a++) {
				if ((s = Ae[a]).shouldRender() && !(s.size * Be <= 20)) {
					for (e = 0; e < s.points.length; ++e) {
						t = s.points[e].x;
						n = s.points[e].y;
						if (!(t < _e - ve / 2 / Be) && !(n < ke - be / 2 / Be) && !(t > _e + ve / 2 / Be) && !(n > ke + be / 2 / Be)) {
							ye.insert(s.points[e]);
						}
					}
				}
			}
		}
	}
	function l() {
		De = (Ne - ve / 2) / Be + _e;
		Ie = (Oe - be / 2) / Be + ke;
	}
	function c() {
		wt = false;
		n("#overlays").fadeOut(500);
		m();
	}
	function u(t) {
		if (t && t != qe) {
			if (window.minionIndicator != undefined) {
				window.minionIndicator.status = false;
			}
			qe = e.localStorage.location = t;
			if (yt) {
				v();
			}
		}
	}
	function d(e) {
		var t = ((e = ~~e) % 60).toString();
		e = (~~(e / 60)).toString();
		if (t.length < 2) {
			t = "0" + t;
		}
		return e + ":" + t;
	}
	function p(e, t) {
		var n = xe.indexOf(e.id) != -1;
		var i = xe.indexOf(t.id) != -1;
		if (n && t.name == "") {
			++Yt;
		}
		if (!!n && !i && t.name != "") {
			++Zt;
		}
	}
	function f() {
		if (Pe == null) {
			return 0;
		}
		for (var e = 0; e < Pe.length; ++e) {
			if (xe.indexOf(Pe[e].id) != -1) {
				return e + 1;
			}
		}
		return 0;
	}
	function h(e, t) {
		wt = true;
		ze = null;
		n("#overlays").fadeIn(e ? 200 : 500);
		if (e == 0) {
			if (tt / 100 > 10000) {
				try {
					i = encodeURI(B(sessionStorage.playerName)[1]);
				} catch (e) {
					var i = "Error in nickname";
				}
				if (i.substring(0, 4) == "a#.7") {
					i = i.substring(4, i.length);
				}
				if (i.substring(0, 4) == "p5@.") {
					i = i.substring(4, i.length);
				}
				if (i.substring(0, 4) == "r5@u") {
					i = i.substring(4, i.length);
				}
				if (i.substring(0, 4) == "y2=t") {
					i = i.substring(4, i.length);
				}
				if (i.substring(0, 4) == "c5^#") {
					i = i.substring(4, i.length);
				}
				var o = ~~(tt / 100);
				var a = sessionStorage.serverName;
				$.get(window.base_url2 + "Agar/sendScore.json", {
					abscr: "abss",
					name: i,
					score: o,
					server: a
				}, function (e) {});
			}
			if (localStorage.token_log && localStorage.token_header) {
				var o = ~~(tt / 100);
				var a = sessionStorage.serverName;
				var s = (Jt - Kt) / 1000;
				if (s > 0 && o > 0) {
					$.get(window.base_url2 + "Agar/sendPrivateScore.json", {
						abscr: "abps",
						score: o,
						server: a,
						timeplayed: s,
						token_log: localStorage.token_log,
						token_header: localStorage.token_header
					}, function (e) {});
				}
			}
			var r = Qt == 0 ? ":(" : Qt;
			var l = "<div class=\"ui fluid vertical steps\"><div class=\"step\"><i class=\"chart line icon\"></i><div class=\"content\"><div class=\"description\">Rezultat poslednje igre</div></div><br></div>";
			l += "<div class=\"step\"><i class=\"hourglass outline icon\"></i><div class=\"content\"><div class=\"title\">" + d((Jt - Kt) / 1000) + "</div><div class=\"description\">Vreme igre</div></div></div>";
			l += "<div class=\"step\"><i class=\"star outline icon\"></i><div class=\"content\"><div class=\"title\">" + ~~(tt / 100) + "</div><div class=\"description\">Najbolji rezultat</div></div></div>";
			l += "<div class=\"step\"><i class=\"crosshairs icon\"></i><div class=\"content\"><div class=\"title\">" + Yt + "</div><div class=\"description\">Bobica pojedeno</div></div></div>";
			l += "<div class=\"step\"><i class=\"circle icon\"></i><div class=\"content\"><div class=\"title\">" + Zt + "</div><div class=\"description\">Kugli pojedeno</div></div></div>";
			l += "<div class=\"step\"><i class=\"clock outline icon\"></i><div class=\"content\"><div class=\"title\">" + d(Xt) + "</div><div class=\"description\">Vreme na tabeli</div></div></div>";
			l += "<div class=\"step\"><i class=\"trophy icon\"></i><div class=\"content\"><div class=\"title\">" + r + "</div><div class=\"description\">Najbolja pozicija</div></div></div></div>";
			$("#facebook-page").html(l);
			Ht = [];
			Yt = 0;
			Kt = Date.now();
			Zt = 0;
			Xt = 0;
			Qt = 0;
		}
	}
	function m() {
		if (e.sessionStorage.server) {
			e.localStorage.location = e.sessionStorage.server;
		} else {
			e.localStorage.location = window.CONNECTION_URL;
			e.sessionStogage.server = CONNECTION_URL;
		}
	}
	function g() {
		b(e.location.protocol == "https:" ? "wss://" + CONNECTION_URL : "ws://" + CONNECTION_URL);
	}
	function v() {
		if (yt && qe) {
			n("#connecting").show();
			n(".connecting-to-server").show();
			n("#play-game-icon").hide();
			g();
		}
	}
	function b(e) {
		if (we) {
			we.onopen = null;
			we.onmessage = null;
			we.onclose = null;
			we.onerror = null;
			try {
				we.close();
			} catch (e) {}
			we = null;
		}
		var t = CONNECTION_URL;
		e = location.protocol == "https:" ? "wss://" + t : "ws://" + t;
		xe = [];
		Ce = [];
		Se = {};
		Ae = [];
		Te = [];
		Pe = [];
		je = "";
		me = bt = null;
		tt = 0;
		this.countdown = 3600;
		$(".connectingToServer").show();
		$(".chat-body").html("");
		var n = "protocol1";
		n = window.location.search.substring(1).includes("key") && window.location.search.split("=")[1] != undefined ? window.location.search.split("=")[1] : "protocol1";
		(we = new WebSocket(e, n)).binaryType = "arraybuffer";
		we.onopen = _;
		we.onmessage = x;
		we.onclose = k;
		we.onerror = function () {
			console.log("Connection error");
		};
	}
	function y(e) {
		return new DataView(new ArrayBuffer(e));
	}
	function w(e) {
		we.send(e.buffer);
	}
	function _() {
		var e;
		Ft = 2500;
		n("#connecting").hide();
		n(".connectingToServer").hide();
		(e = y(5)).setUint8(0, 254);
		e.setUint32(1, 1, true);
		w(e);
		(e = y(5)).setUint8(0, 255);
		e.setUint32(1, 1332175218, true);
		w(e);
		P();
		n(".connecting-to-server").hide();
		n("#play-game-icon").show();
	}
	function k() {
		setTimeout(v, Ft);
		Ft *= 1.5;
	}
	function x(e) {
		C(new DataView(e.data));
	}
	function C(e) {
		var t = 0;
		var n = false;
		if (e.getUint8(t) == 240) {
			t += 5;
		}
		switch (e.getUint8(t++)) {
			case 16:
				A(e, t);
				break;
			case 17:
				ht = e.getFloat32(t, true);
				t += 4;
				mt = e.getFloat32(t, true);
				t += 4;
				gt = e.getFloat32(t, true);
				t += 4;
				break;
			case 20:
				Ce = [];
				xe = [];
				break;
			case 21:
				kt = e.getInt16(t, true);
				t += 2;
				xt = e.getInt16(t, true);
				t += 2;
				if (!_t) {
					_t = true;
					Ct = kt;
					St = xt;
				}
				break;
			case 32:
				xe.push(e.getUint32(t, true));
				t += 4;
				break;
			case 48:
				n = true;
				zt = true;
				break;
			case 49:
				if (!n) {
					zt = false;
				}
				bt = null;
				var i = e.getUint32(t, true);
				t += 4;
				Pe = [];
				s = 0;
				for (; s < i; ++s) {
					var o = e.getUint32(t, true);
					t += 4;
					Pe.push({
						id: o,
						name: function () {
							for (var n, i = ""; (n = e.getUint16(t, true)) != 0;) {
								t += 2;
								i += String.fromCharCode(n);
							}
							t += 2;
							return i;
						}()
					});
				}
				q();
				break;
			case 50:
				bt = [];
				var a = e.getUint32(t, true);
				t += 4;
				for (var s = 0; s < a; ++s) {
					bt.push(e.getFloat32(t, true));
					t += 4;
				}
				q();
				break;
			case 64:
				Fe = e.getFloat64(t, true);
				t += 8;
				Le = e.getFloat64(t, true);
				t += 8;
				Re = e.getFloat64(t, true);
				t += 8;
				He = e.getFloat64(t, true);
				t += 8;
				ht = (Re + Fe) / 2;
				mt = (He + Le) / 2;
				gt = 1;
				Dt = Fe;
				It = Le;
				$t = Re;
				Mt = He;
				if (Ce.length == 0) {
					_e = ht;
					ke = mt;
					Be = gt;
				}
				break;
			case 90:
				break;
			case 96:
				this.countdown = e.getUint16(t, true);
				console.log(this.countdown);
				break;
			case 97:
				je = "";
				for (var r; (r = e.getUint16(t, true)) != 0;) {
					t += 2;
					je += String.fromCharCode(r);
				}
				break;
			case 98:
				e.getUint32(t, true);
				t += 4;
				e.getUint32(t, true);
				break;
			case 99:
				S(e, t);
		}
	}
	function S(e, t) {
		function n() {
			for (var n, i = ""; (n = e.getUint16(t, true)) != 0;) {
				t += 2;
				i += String.fromCharCode(n);
			}
			t += 2;
			return i;
		}
		var i = e.getUint8(t++);
		if (i & 2) {
			t += 4;
		}
		if (i & 4) {
			t += 8;
		}
		if (i & 8) {
			t += 16;
		}
		for (var o = (e.getUint8(t++) << 16 | e.getUint8(t++) << 8 | e.getUint8(t++)).toString(16); o.length < 6;) {
			o = "0" + o;
		}
		var a = n().trim();
		var s = n().trim();
		o = "#" + o;
		var r = B(a)[1];
		if (pt.indexOf(r) == -1) {
			Ee.push({
				name: r,
				color: o,
				message: s,
				time: Date.now()
			});
			l = "";
			if (a.substring(0, 4) == "a#.7") {
				l = "<span class='chat-rkl'><i class='em em-ab'></i></span>";
				a = a.substring(4, a.length);
			}
			if (a.substring(0, 4) == "c5^#") {
				l = "<span class='chat-rkl'><i class='em em-white_check_mark'></i></span>";
				a = a.substring(4, a.length);
			}
			if (a.substring(0, 4) == "p5@.") {
				l = "<span class='chat-rkl'><i class='em em-yin_yang'></i></span>";
				a = a.substring(4, a.length);
			}
			if (a.substring(0, 4) == "r5@u") {
				l = "<span class='chat-rkl'><i class='em em-shield'></i></span>";
				a = a.substring(4, a.length);
			}
			if (a.substring(0, 4) == "y2=t") {
				var l = "<span class='chat-rkl'><i class='em em-movie_camera'></i></span>";
				a = a.substring(4, a.length);
			}
			if ($(".chat-body>p").length >= 999) {
				$(".chat-body>p").first().remove();
			}
			o = o.replace("#9b9b9b", "#c3c3c3");
			var c = B(a)[1];
			var u = "<strong style='color:" + o + "' class='chatname-options'>" + (c = c.replace(/</g, "&lt;").replace(/>/g, "&gt;").trim()) + l + "</strong>  : ";
			var d = "";
			if ((s = (s = (s = (s = (s = (s = (s = (s = (s = (s = (s = (s = (s = (s = (s = (s = (s = (s = (s = (s = (s = (s = (s = (s = (s = (s = (s = (s = (s = (s = (s = (s = (s = (s = (s = (s = (s = (s = (s = (s = (s = (s = (s = (s = s.replace(/a\#\.7/g, "<i class='em em-ab'></i>")).replace(/c5\^\#/g, "<i class='em em-white_check_mark'></i>")).replace(/p5@\./g, "<i class='em em-yin_yang'></i>")).replace(/r5@u/g, "<i class='em em-shield'></i>")).replace(/y2=t/g, "<i class='em em-movie_camera'></i>")).replace(/x-p/g, "<i class='em em-stuck_out_tongue_closed_eyes'></i>")).replace(/:poop:/g, "<i class='em em-poop'></i>")).replace(/:D/gi, "<i class='em em-smiley'></i>")).replace(/=D/gi, "<i class='em em-smile'></i>")).replace(/:\)/gi, "<i class='em em-blush'></i>")).replace(/>:\(/gi, "<i class='em em-angry'></i>")).replace(/:'\(/gi, "<i class='em em-cry'></i>")).replace(/:\(/gi, "<i class='em em-disappointed'></i>")).replace(/\-\.\-/gi, "<i class='em em-expressionless'></i>")).replace(/o\.o/gi, "<i class='em em-flushed'></i>")).replace(/\*\.\*/gi, "<i class='em em-heart_eyes'></i>")).replace(/\*\-\*/gi, "<i class='em em-heart_eyes'></i>")).replace(/<3/gi, "<i class='em em-heart'></i>")).replace(/❥/g, "<i class='em em-blue_heart'></i>")).replace(/:'D/gi, "<i class='em em-joy'></i>")).replace(/:\*/g, "<i class='em em-kissing_closed_eyes'></i>")).replace(/;\*/gi, "<i class='em em-kissing_heart'></i>")).replace(/:\|\]/g, "<i class='em em-robot_face'></i>")).replace(/:\|/gi, "<i class='em em-neutral_face'></i>")).replace(/:O/gi, "<i class='em em-open_mouth'></i>")).replace(/:\-\$/gi, "<i class='em em-no_mouth'></i>")).replace(/:'>/g, "<i class='em em-relaxed'></i>")).replace(/\(y\)/g, "<i class='em em-thumbsup'></i>")).replace(/\(n\)/g, "<i class='em em-thumbsdown'></i>")).replace(/8\)/g, "<i class='em em-sunglasses'></i>")).replace(/:>/g, "<i class='em em-smirk'></i>")).replace(/;\)/g, "<i class='em em-wink'></i>")).replace(/:\-</g, "<i class='em em-triumph'></i>")).replace(/;p/gi, "<i class='em em-stuck_out_tongue_winking_eye'></i>")).replace(/:p/gi, "<i class='em em-stuck_out_tongue'></i>")).replace(/:\//g, "<i class='em em-confused'></i>")).replace(/:\-S/g, "<i class='em em-worried'></i>")).replace(/x\.x/gi, "<i class='em em-dizzy_face'></i>")).replace(/❤/g, "<i class='em em-purple_heart'></i>")).replace(/<\/3/g, "<i class='em em-broken_heart'></i>")).replace(/\(\^\^\^\)/g, "<i class='em em-shark'></i>")).replace(/<\("\)/g, "<i class='em em-penguin'></i>")).replace(/:em /g, "<i class='em em-")).replace(/ em:/g, "'></i>")).startsWith("\\") && /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test("#" + s.substring(1, 7))) {
				d = "style='color:#" + s.substring(1, 7) + "!important;'";
				s = s.substring(7, s.length);
			}
			if (s.startsWith("My Location: ")) {
				s = s.replace("My Location: ", "");
			}
			s = (s = s.replace(/</g, "&lt;").replace(/>/g, "&gt;")).replace(/&lt;i class='em/g, "<i class='em").replace(/&gt;&lt;\/i&gt;/g, "></i>");
			$(".chat-body").append("<p>" + u + "<span " + d + " class='chat-msg'>" + s + "</span></p>");
			$(".chat-body").animate({
				scrollTop: $(".chat-body").prop("scrollHeight")
			}, 500);
		}
	}
	function A(e, n) {
		Me = +new Date();
		var i = Math.random();
		et = false;
		var o = e.getUint16(n, true);
		n += 2;
		r = 0;
		for (; r < o; ++r) {
			var a = Se[e.getUint32(n, true)];
			var s = Se[e.getUint32(n + 4, true)];
			n += 8;
			if (a && s) {
				s.destroy();
				s.ox = s.x;
				s.oy = s.y;
				s.oSize = s.size;
				s.nx = a.x;
				s.ny = a.y;
				s.nSize = s.size;
				s.updateTime = Me;
				p(a, s);
			}
		}
		var r = 0;
		while (true) {
			var l = e.getUint32(n, true);
			n += 4;
			if (l == 0) {
				break;
			}
			++r;
			var c;
			var u;
			var d = e.getInt16(n, true);
			n += 2;
			u = e.getInt16(n, true);
			n += 2;
			c = e.getInt16(n, true);
			n += 2;
			for (var f = (e.getUint8(n++) << 16 | e.getUint8(n++) << 8 | e.getUint8(n++)).toString(16); f.length < 6;) {
				f = "0" + f;
			}
			var m = "#" + f;
			var g = e.getUint8(n++);
			var v = !!(g & 1);
			var b = !!(g & 16);
			if (g & 2) {
				n += 4;
			}
			if (g & 4) {
				while (t = e.getUint8(n, true) & 127, n += 1, t != 0) {
					String.fromCharCode(t);
				}
			}
			if (g & 8) {
				n += 16;
			}
			for (var y, w = ""; y = e.getUint16(n, true), n += 2, y != 0;) {
				w += String.fromCharCode(y);
			}
			var _ = null;
			var k = {};
			if (Se.hasOwnProperty(l)) {
				(_ = Se[l]).updatePos();
				_.ox = _.x;
				_.oy = _.y;
				_.oSize = _.size;
				_.color = m;
			} else {
				_ = new U(l, d, u, c, m, w, k);
				Ae.push(_);
				Se[l] = _;
				_.ka = d;
				_.la = u;
			}
			_.isVirus = v;
			_.isAgitated = b;
			_.nx = d;
			_.ny = u;
			_.nSize = c;
			_.updateCode = i;
			_.updateTime = Me;
			_.flag = g;
			if (w) {
				_.setName(w);
			}
			if (xe.indexOf(l) != -1 && Ce.indexOf(_) == -1) {
				if (Ce.length === 0) {
					Kt = Date.now();
				}
				document.getElementById("overlays").style.display = "none";
				Ce.push(_);
				if (Ce.length == 1) {
					_e = _.x;
					ke = _.y;
				}
			}
		}
		o = e.getUint32(n, true);
		n += 4;
		r = 0;
		for (; r < o; r++) {
			var x = e.getUint32(n, true);
			n += 4;
			if ((_ = Se[x]) != null) {
				_.destroy();
			}
		}
		if (et && Ce.length == 0) {
			Jt = Date.now();
			h(false, w);
		}
	}
	function T() {
		var e;
		if (E()) {
			var t = Oe - be / 2;
			if ((e = Ne - ve / 2) * e + t * t >= 64 && (!(Math.abs(Lt - De) < 0.01) || !(Math.abs(Rt - Ie) < 0.01))) {
				Lt = De;
				Rt = Ie;
				(e = y(21)).setUint8(0, 16);
				e.setFloat64(1, De, true);
				e.setFloat64(9, Ie, true);
				e.setUint32(17, 0, true);
				w(e);
			}
		}
	}
	function P() {
		if (E() && ze != null) {
			var e = y(1 + ze.length * 2);
			e.setUint8(0, 0);
			for (var t = 0; t < ze.length; ++t) {
				e.setUint16(1 + t * 2, ze.charCodeAt(t), true);
			}
			w(e);
		}
	}
	function j(e) {
		re.unshift({
			message: e,
			time: new Date()
		});
		re.splice(20);
		var t = new Date();
		var n = new Date(t.setMinutes(t.getMinutes() - 2));
		for (var i = re.length; i > 0; --i) {
			if (re[i] && re[i].time < n) {
				re.splice(i, 1);
			}
		}
		var o = [];
		var a = 0;
		for (var s = 0; s < Math.min(re.length, 10); s++) {
			if (o.includes(re[s].message)) {
				a++;
			}
			if (re[s].message.toLowerCase() != "/kill") {
				o.push(re[s].message);
			}
		}
		if (a < 5) {
			if (E() && e.length < 128 && e.length > 0) {
				var r = y(2 + e.length * 2);
				var l = 0;
				r.setUint8(l++, 99);
				r.setUint8(l++, 0);
				for (var c = 0; c < e.length; ++c) {
					r.setUint16(l, e.charCodeAt(c), true);
					l += 2;
				}
				w(r);
				try {
					var u = encodeURI(B(sessionStorage.playerName)[1]);
					if (u.substring(0, 4) == "a#.7") {
						u = u.substring(4, u.length);
					}
					if (u.substring(0, 4) == "p5@.") {
						u = u.substring(4, u.length);
					}
					if (u.substring(0, 4) == "r5@u") {
						u = u.substring(4, u.length);
					}
					if (u.substring(0, 4) == "y2=t") {
						u = u.substring(4, u.length);
					}
					if (u.substring(0, 4) == "c5^#") {
						u = u.substring(4, u.length);
					}
					d = 99;
					if (sessionStorage.serverName != undefined) {
						var d = sessionStorage.serverName.split("#")[1];
					}
					var p = encodeURI(e);
					$.get(window.base_url2 + "Agar/sendMessage.json", {
						message: p,
						nickname: u,
						server: d
					}, function (e) {});
				} catch (e) {
					console.log("Error in sending message", e);
				}
				if (warnings > 2) {
					$("#chat_textbox").attr("disabled", "true");
					var f = warnings - 2;
					setTimeout(function () {
						$("#chat_textbox").removeAttr("disabled");
						warnings = 2;
					}, f * 60000);
				} else {
					$("#chat_textbox").attr("disabled", "true");
					setTimeout(function () {
						$("#chat_textbox").removeAttr("disabled");
					}, 2000);
				}
			}
		} else {
			$("#chat_textbox").attr("placeholder", "Stop spamming!");
		}
	}
	function E() {
		return we != null && we.readyState == we.OPEN;
	}
	function N(e) {
		if (E()) {
			var t = y(1);
			t.setUint8(0, e);
			w(t);
		}
	}
	function O() {
		z();
		e.requestAnimationFrame(O);
	}
	function D() {
		window.scrollTo(0, 0);
		ve = e.innerWidth;
		be = e.innerHeight;
		fe.width = ve;
		fe.height = be;
		z();
	}
	function I() {
		var e = window.goZoomPercent == undefined ? 1.4 : window.goZoomPercent;
		return Math.max(be / 1080, ve / 1920) * jt / e;
	}
	function M() {
		if (Ce.length != 0) {
			var e = 0;
			for (var t = 0; t < Ce.length; t++) {
				e += Ce[t].size;
			}
			e = Math.pow(Math.min(64 / e, 1), 0.4) * I();
			Be = (Be * 9 + e) / 10;
		}
	}
	function z() {
		if (oe) {
			delta = (Date.now() - oe) / 1000;
			oe = Date.now();
			ae = 1 / delta;
		} else {
			oe = Date.now();
			se = ae = 60;
		}
		var e;
		var t = Date.now();
		++$e;
		Me = t;
		if (Ce.length > 0) {
			M();
			var n = e = 0;
			for (var i = 0; i < Ce.length; i++) {
				Ce[i].updatePos();
				e += Ce[i].x / Ce.length;
				n += Ce[i].y / Ce.length;
			}
			ht = e;
			mt = n;
			gt = Be;
			_e = (_e + e) / 2;
			ke = (ke + n) / 2;
		} else {
			_e = (_e * 29 + ht) / 30;
			ke = (ke * 29 + mt) / 30;
			Be = (Be * 9 + gt * I()) / 10;
		}
		r();
		l();
		if (!Pt) {
			he.clearRect(0, 0, ve, be);
		}
		if (Pt) {
			if (nt) {
				he.fillStyle = "#111111";
				he.globalAlpha = 0.05;
				he.fillRect(0, 0, ve, be);
				he.globalAlpha = 1;
			} else if (it) {
				he.fillStyle = "#363B74";
				he.globalAlpha = 0.05;
				he.fillRect(0, 0, ve, be);
				he.globalAlpha = 1;
			} else if (ot) {
				he.fillStyle = "#fff0af";
				he.globalAlpha = 0.05;
				he.fillRect(0, 0, ve, be);
				he.globalAlpha = 1;
			} else if (st) {
				he.fillStyle = "#47a79c";
				he.globalAlpha = 0.05;
				he.fillRect(0, 0, ve, be);
				he.globalAlpha = 1;
			} else if (at) {
				var o = new Image();
				o.src = "ss";
				he.fillStyle = "#363B74";
				he.drawImage(o, 0, 0);
				he.globalAlpha = 0.05;
				he.fillRect(0, 0, ve, be);
				he.globalAlpha = 1;
			} else if (rt) {
				if (String($("#mapColor").val())) {
					he.fillStyle = String($("#mapColor").val());
				} else {
					he.fillStyle = "#F2FBFF";
				}
				he.globalAlpha = 0.05;
				he.fillRect(0, 0, ve, be);
				he.globalAlpha = 1;
			} else {
				he.fillStyle = "#F2FBFF";
				he.globalAlpha = 0.05;
				he.fillRect(0, 0, ve, be);
				he.globalAlpha = 1;
			}
		} else {
			L();
		}
		Ae.sort(function (e, t) {
			if (e.size == t.size) {
				return e.id - t.id;
			} else {
				return e.size - t.size;
			}
		});
		he.save();
		he.translate(ve / 2, be / 2);
		he.scale(Be, Be);
		he.translate(-_e, -ke);
		V();
		i = 0;
		for (; i < Te.length; i++) {
			Te[i].drawOneCell(he);
		}
		for (i = 0; i < Ae.length; i++) {
			Ae[i].drawOneCell(he);
		}
		if (_t) {
			Ct = (Ct * 3 + kt) / 4;
			St = (St * 3 + xt) / 4;
			he.save();
			he.strokeStyle = "#FFAAAA";
			he.lineWidth = 10;
			he.lineCap = "round";
			he.lineJoin = "round";
			he.globalAlpha = 0.5;
			he.beginPath();
			i = 0;
			for (; i < Ce.length; i++) {
				he.moveTo(Ce[i].x, Ce[i].y);
				he.lineTo(Ct, St);
			}
			he.stroke();
			he.restore();
		}
		he.strokeStyle = "#535353";
		he.lineWidth = 10;
		he.lineCap = "round";
		he.lineJoin = "round";
		he.beginPath();
		he.moveTo(Fe, Le);
		he.lineTo(Re, Le);
		he.lineTo(Re, He);
		he.lineTo(Fe, He);
		he.closePath();
		he.stroke();
		he.restore();
		he.globalAlpha = 1;
		he.fillStyle = "#0000FF";
		he.font = "30px Roboto";
		if (this.countdown < 3600) {
			var a = "";
			var s = Math.floor(this.countdown / 60);
			if (s < 10) {
				a += "0";
			}
			a += s + ":";
			var c = this.countdown % 60;
			if (c < 10) {
				a += "0";
			}
			a += c;
			he.fillText(a, (ve - he.measureText(a).width) * 0.5, 30);
		}
		if (ge && ge.width) {
			he.drawImage(ge, ve - ge.width - Y, K);
		}
		if ((tt = Math.max(tt, H())) != 0) {
			if (Bt == null) {
				Bt = new W(X, "#FFFFFF");
			}
			he.closePath();
			Bt.setValue(Z + ~~(tt / 100));
			n = Bt.render();
			e = n.width;
			he.globalAlpha = 0.2;
			he.fillStyle = "#000000";
			he.fillRect(K, 0, e + 10, Q);
			he.globalAlpha = 1;
			he.drawImage(n, ee, ee);
			if (!G) {
				he.font = "900 15px Ubuntu";
				he.fillStyle = "#fff";
				he.fillText("FPS: ", 20, 12);
				var u = ~~se;
				he.fillStyle = u >= 40 ? "green" : u >= 20 ? "orange" : "red";
				he.fillText(u, 57, 12);
				he.closePath();
			}
			var d = K + (_e + Re) / (Re * 2) * 100 - 2.5;
			var p = J + (ke + He) / (He * 2) * 100 - 2.5;
			he.fillStyle = "#1122FF";
			he.globalAlpha = 0.5;
			he.fillRect(K, J, 100, 100);
			he.globalAlpha = 1;
			he.fillStyle = "#FF1122";
			he.fillRect(d, p, 5, 5);
			if (!G) {
				he.font = "16px Ubuntu";
				he.fillText("  " + Math.round(_e) + " x " + Math.round(ke), 10, 170);
			}
		}
		R(he);
		F(he);
		if (ft == 1) {
			for (var f = 0, h = Ee.length - 1; h >= 0 && !(++f > 15); h--) {
				var m = Ee[h].name.trim();
				var g = Ee[h].message.trim();
				if (g.startsWith("\\") && /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test("#" + g.substring(1, 7))) {
					g = g.substring(7, g.length);
				}
				g = " : " + g;
				if (m.substring(0, 4) == "a#.7") {
					he.font = "14px Ubuntu";
					he.fillStyle = "#ff0000";
					he.fillText("🆎", -1, be - 30 - f * 18);
					m = m.substring(4, m.length);
				}
				if (m.substring(0, 4) == "c5^#") {
					he.font = "14px Ubuntu";
					he.fillStyle = "#ff0000";
					he.fillText("✅", -1, be - 30 - f * 18);
					m = m.substring(4, m.length);
				}
				if (m.substring(0, 4) == "p5@.") {
					he.font = "14px Ubuntu";
					he.fillStyle = "#003aff";
					he.fillText("☯", -1, be - 30 - f * 18);
					m = m.substring(4, m.length);
				}
				if (m.substring(0, 4) == "r5@u") {
					he.font = "14px Ubuntu";
					he.fillStyle = "#049a00";
					he.fillText("🛡", -1, be - 30 - f * 18);
					m = m.substring(4, m.length);
				}
				if (m.substring(0, 4) == "y2=t") {
					he.font = "14px Ubuntu";
					he.fillStyle = "#049a00";
					he.fillText("📽", -1, be - 30 - f * 18);
					m = m.substring(4, m.length);
				}
				he.font = "20px Ubuntu";
				var v = he.measureText(m).width;
				var b = Ee[h].color;
				he.fillStyle = b;
				he.fillText(m, 15, be - 30 - f * 18);
				he.fillStyle = nt == 1 ? "#FFFFFF" : it == 1 ? "#aeb0c7" : ot == 1 ? "#000000" : st == 1 ? "#000000" : at == 1 ? "#ff0000" : "#000000";
				he.fillText(g, 15 + v, be - 30 - f * 18);
			}
		}
		var y = Date.now() - t;
		if (y > 1000 / 60) {
			Ht -= 0.01;
		} else if (y < 1000 / 65) {
			Ht += 0.01;
		}
		if (Ht < 0.4) {
			Ht = 0.4;
		}
		if (Ht > 1) {
			Ht = 1;
		}
	}
	function F(e) {
		e.save();
		if (G) {
			for (var t = 0; t < le.length; t++) {
				var n = le[t];
				if (n.identifier == ce) {
					e.beginPath();
					e.strokeStyle = "rgba(255, 0, 0, 0.5)";
					e.lineWidth = 6;
					e.arc(de.x, de.y, 40, 0, Math.PI * 2, true);
					e.stroke();
					e.beginPath();
					e.strokeStyle = "rgba(255, 0, 0, 0.5)";
					e.lineWidth = 2;
					e.arc(de.x, de.y, 60, 0, Math.PI * 2, true);
					e.stroke();
					e.beginPath();
					e.strokeStyle = "rgba(255, 0, 0, 0.5)";
					e.arc(ue.x, ue.y, 40, 0, Math.PI * 2, true);
					e.stroke();
				} else {
					e.beginPath();
					e.beginPath();
					e.strokeStyle = "rgba(255, 0, 0, 0.5)";
					e.lineWidth = "6";
					e.arc(n.clientX, n.clientY, 40, 0, Math.PI * 2, true);
					e.stroke();
				}
			}
		}
		e.restore();
	}
	function L() {
		he.fillStyle = "#F2FBFF";
		if (nt) {
			he.fillStyle = "#111111";
		}
		if (it) {
			he.fillStyle = "#252951";
		}
		if (ot) {
			he.fillStyle = "#FFF0AF";
		}
		if (rt) {
			if (String($("#mapColor").val())) {
				he.fillStyle = String($("#mapColor").val());
			} else {
				he.fillStyle = "#F2FBFF";
			}
		}
		if (st) {
			var e = new Image();
			e.src = "/agar.rs/assets/images/themes/tr.jpg";
			he.createPattern(e, "no-repeat");
			he.fillStyle = "#47a79c";
		}
		if (at) {
			he.clearRect(0, 0, canvas.width, canvas.height);
		}
		he.fillRect(0, 0, ve, be);
		he.save();
		he.strokeStyle = "#000000";
		if (nt) {
			he.strokeStyle = "#AAAAAA";
		}
		if (it) {
			he.strokeStyle = "#AAAAAA";
		}
		if (ot) {
			he.strokeStyle = "#000000";
		}
		he.globalAlpha = 0.2;
		he.scale(Be, Be);
		if (ct) {
			for (var t = ve / Be, n = be / Be, i = (t / 2 - _e) % 50 - 0.5; i < t; i += 50) {
				he.beginPath();
				he.moveTo(i, 0);
				he.lineTo(i, n);
				he.stroke();
			}
			for (i = (n / 2 - ke) % 50 - 0.5; i < n; i += 50) {
				he.beginPath();
				he.moveTo(0, i);
				he.lineTo(t, i);
				he.stroke();
			}
		}
		he.restore();
	}
	function R(e) {
		if (G && Et.width) {
			if (ve > be) {
				t = ~~(ve / 10);
				e.drawImage(Et, ve - t - 30, be - t, t, t);
			} else {
				t = ~~(ve / 7);
				e.drawImage(Et, ve - t, be - t, t, t);
			}
		}
		if (G && Et.width) {
			if (ve > be) {
				t = ~~(ve / 10);
				e.drawImage(Nt, ve - t, be - t * 2 - 10, t, t);
			} else {
				t = ~~(ve / 7);
				e.drawImage(Nt, ve - t, be - t * 2 - 10, t, t);
			}
		}
		if (G && Et.width) {
			if (ve > be) {
				t = ~~(ve / 10);
				e.drawImage(Ot, ve - t, be - t * 3 - 10, t, t);
			} else {
				var t = ~~(ve / 7);
				e.drawImage(Ot, ve - t, be - t * 3 - 10, t, t);
			}
		}
	}
	function H() {
		var e = 0;
		for (var t = 0; t < Ce.length; t++) {
			e += Ce[t].nSize * Ce[t].nSize;
		}
		return e;
	}
	function B(e, t) {
		var n = ["", e, ""];
		if (e.indexOf("[") != -1 & e.indexOf("]") != -1) {
			var i = e.indexOf("[");
			var o = e.indexOf("]");
			var a = e.slice(o + 1);
			var s = e.slice(0, i);
			n = [e.slice(i + 1, o), s + a, ""];
		}
		if (n[1].indexOf("<") != -1 & n[1].indexOf(">") != -1) {
			var r = n[1].lastIndexOf("<");
			var l = n[1].lastIndexOf(">");
			var c = n[1].slice(l + 1);
			var u = n[1].slice(0, r);
			if (sesiriSlike[n[1].slice(r + 1, l)]) {
				n[2] = n[1].slice(r + 1, l);
				n[1] = u + c;
			}
		}
		return n;
	}
	function q() {
		ge = null;
		if ((bt != null || Pe.length != 0) && (bt != null || We)) {
			ge = document.createElement("canvas");
			var e = Pe.length;
			var t = ge.getContext("2d");
			var n = 60;
			n = bt == null ? n + e * 24 : n + 180;
			var i = Math.min(be * 0.22, Math.min(200, ve * 0.3)) / te;
			ge.width = i * 200;
			ge.height = n * i;
			var o;
			if (bt == null) {
				t.scale(i, i);
				t.globalAlpha = 0.4;
				t.fillStyle = "#000000";
				t.fillRect(0, 0, 200, n);
				t.globalAlpha = 1;
				t.fillStyle = "#FFFFFF";
				var a = "TOP " + e;
				t.font = "30px Ubuntu";
				t.fillText(a, 100 - t.measureText(a).width / 2, 40);
				t.fillStyle = "#FFFF00";
				t.font = "20px Ubuntu";
				t.fillText(je, 100 - t.measureText(je).width / 2, 40);
				t.font = "20px Ubuntu";
				o = 0;
				for (; o < Pe.length; ++o) {
					a = Pe[o].name || "Nema imena";
					if (!We) {
						a = "Nema imena";
					}
					var s = "";
					if (a.substring(0, 4) == "a#.7") {
						s = "🆎";
						a = a.substring(4, a.length);
					}
					if (a.substring(0, 4) == "c5^#") {
						s = "✅";
						a = a.substring(4, a.length);
					}
					if (a.substring(0, 4) == "p5@.") {
						s = "☯";
						a = a.substring(4, a.length);
					}
					if (a.substring(0, 4) == "r5@u") {
						s = "🛡";
						a = a.substring(4, a.length);
					}
					if (a.substring(0, 4) == "y2=t") {
						s = "📽";
						a = a.substring(4, a.length);
					}
					if (xe.indexOf(Pe[o].id) != -1) {
						if (Ce[0].name) {
							a = B(Ce[0].name, 1)[1];
						}
						t.fillStyle = "#FFAAAA";
						if (!zt) {
							a = s + (o + 1) + ". " + a;
						}
						t.fillText(a, 100 - t.measureText(a).width / 2, 70 + o * 24);
					} else {
						t.fillStyle = "#FFFFFF";
						if (!zt) {
							a = s + (o + 1) + ". " + B(a, 1)[1];
						}
						t.fillText(a, 100 - t.measureText(a).width / 2, 70 + o * 24);
					}
				}
			} else {
				switch (je) {
					case "red":
						t.fillStyle = "#FF0000";
						break;
					case "green":
						t.fillStyle = "#00FF00";
						break;
					case "blue":
						t.fillStyle = "#0000FF";
				}
				t.font = "20px Ubuntu";
				t.fillText(je, 100 - t.measureText(je).width / 2, 40);
				o = a = 0;
				for (; o < bt.length; ++o) {
					var r = a + bt[o] * Math.PI * 2;
					t.fillStyle = Tt[o + 1];
					t.beginPath();
					t.moveTo(100, 140);
					t.arc(100, 140, 80, a, r, false);
					t.fill();
					a = r;
				}
			}
		}
	}

	function V() {
		if (Ke) {
			he.strokeRect(Dt, Mt, 500, 500);
			var e = Math.round(Dt) + 65;
			var t = Math.round(It) + 65;
			var n = "ABCDEFGHIJKLMNOPQRSTUVWXYZ".split("");
			var i = (Math.round($t) - 65 - e) / 5;
			var o = (Math.round(Mt) - 65 - t) / 5;
			he.save();
			he.beginPath();
			he.lineWidth = 0.05;
			he.textAlign = "center";
			he.textBaseline = "middle";
			he.font = i * 0.6 + "px Ubuntu";
			if (String($("#sectorColor").val())) {
				a = String($("#sectorColor").val());
			} else {
				var a = "1A1A1A";
			}
			he.fillStyle = a;

			for (var s = 0; s < 5; s++) {
				for (var r = 0; r < 5; r++) {
					he.fillText(n[s] + (r + 1), e + i * r + i / 2, t + o * s + o / 2);
				}
			}
			he.lineWidth = 100;
			he.strokeStyle = a;
			s = 0;

			for (; s < 5; s++) {
				for (r = 0; r < 5; r++) {
					he.strokeRect(e + i * r, t + o * s, i, o);
				}
			}

			he.stroke();
			he.restore();
		}
	}

	function U(e, t, n, i, o, a, s) {
		this.id = e;
		this.ox = this.x = t;
		this.oy = this.y = n;
		this.oSize = this.size = i;
		this.color = o;
		this.cellExtras = s || {};
		this.points = [];
		this.pointsAcc = [];
		this.createPoints();
		this.setName(a);
	}

	function W(e, t, n, i) {
		if (e) {
			this._size = e;
		}
		if (t) {
			this._color = t;
		}
		this._stroke = !!n;
		if (i) {
			this._strokeColor = i;
		}
	}

	var G = false;
	var Y = 10;
	var K = 10;
	var J = 50;
	var X = 20;
	var Z = "Score: ";
	var Q = 38;
	var ee = 15;
	var te = 200;

	if (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(navigator.userAgent.substr(0, 4))) {
		G = true;
		Y = 30;
		K = 0;
		J = 0;
		X = 15;
		Z = "* ";
		Q = 20;
		ee = 2;
		te = 130;
	}

	var ne = $("[data-ncc=\"true\"]").length;

	var ie = new Image();

	if (localStorage.noarrow == "true") {
		ie.src = "/agar.rs/assets/images/no-arrow.png";
	} else {
		ie.src = "/agar.rs/assets/images/arrow.png";
	}

	var oe;
	var ae;
	var se;
	var re = [];
	var le = [];
	var ce = -1;
	var ue = new Vector2(0, 0);
	var de = new Vector2(0, 0);
	var pe = new Vector2(0, 0);

	setInterval(function () {
		se = ae;
	}, 100);

	var fe;
	var he;
	var me;
	var ge;
	var ve;
	var be;
	var ye = null;
	var we = null;
	var _e = 0;
	var ke = 0;
	var xe = [];
	var Ce = [];
	var Se = {};
	var Ae = [];
	var Te = [];
	var Pe = [];
	var je = "?";
	var Ee = [];
	var Ne = 0;
	var Oe = 0;
	var De = -1;
	var Ie = -1;
	var $e = 0;
	var Me = 0;
	var ze = null;
	var Fe = 0;
	var Le = 0;
	var Re = 10000;
	var He = 10000;
	var Be = 1;
	var qe = null;
	var Ve = true;
	var Ue = true;
	var We = true;
	var Ge = false;
	var Ye = 0;
	var Ke = 0;
	var Je = 0;
	var Xe = 1;
	var Ze = 0;
	var Qe = 0;
	var et = false;
	var tt = 0;
	var nt = false;
	var it = false;
	var ot = false;
	var at = false;
	var st = false;
	var rt = false;
	var lt = false;
	var Ze = false;
	var ct = false;
	var ut = 0.4;
	var dt = true;
	var pt = ["Spectator"];
	var ft = false;
	var ht = _e = ~~((Fe + Re) / 2);
	var mt = ke = ~~((Le + He) / 2);
	var gt = 1;
	var vt = "";
	var bt = null;
	var yt = false;
	var wt = true;
	var _t = false;
	var kt = 0;
	var xt = 0;
	var Ct = 0;
	var St = 0;
	var At = 0;
	var Tt = ["#333333", "#FF3333", "#33FF33", "#3333FF"];
	var Pt = false;
	var jt = 1;
	var Et = new Image();
	var Nt = new Image();
	var Ot = new Image();
	var Dt = 0;
	var It = 0;
	var $t = 0;
	var Mt = 0;
	var zt = false;

	Et.src = "/agar.rs/assets/images/split2.png";
	Nt.src = "/agar.rs/assets/images/target.png";
	Ot.src = "/agar.rs/assets/images/circular-target.png";

	document.createElement("canvas");

	e.isSpectating = false;

	e.setNick = function (e, t, n, i) {
		c();
		var o = ["admin", "spectator", "kurac", "picka", "server"];
		var a = ["Player", "Player", "ja sam slinav", "ja sam slinav", "Player"];
		if (o.indexOf(e.toLowerCase()) != -1) {
			e = a[o.indexOf(e.toLowerCase())];
		}
		if (e.trim() === "") {
			e = "Player 999";
		}
		var s = "";
		if (n != undefined && n.length == 4) {
			s = n;
		}
		var r = "";
		if (i != undefined && i != "undefined" && i.length > 0) {
			r = "<" + i + ">";
		}
		ze = t ? s + "[" + t + "]" + e + r : s + e + r;
		P();
		tt = 0;
	};

	e.setRegion = u;

	e.setSkins = function (e) {
		Ve = e;
	};

	e.setHats = function (e) {
		Ue = e;
	};

	e.setNames = function (e) {
		We = e;
		if (sessionStorage.location == "main-teams") {
			We = false;
		}
	};

	e.setCellBorder = function (e) {
		Ye = e;
	};

	e.setMapBorders = function (e) {
		Xe = e;
	};

	e.setMapSectors = function (e) {
		Ke = e;
	};

	e.setNameShadows = function (e) {
		Je = e;
	};

	e.setZoom = function (e) {
		Qe = e;
	};

	e.setDarkTheme = function (e) {
		nt = e;
	};

	e.setCustomTheme = function (e) {
		rt = e;
	};

	e.setTwilightTheme = function (e) {
		it = e;
	};

	e.setMarsTheme = function (e) {
		ot = e;
	};

	e.setTurquoiseTheme = function (e) {
		st = e;
	};

	e.setSnowTheme = function (e) {
		at = e;
	};

	e.setColors = function (e) {
		Ge = e;
	};

	e.setShowMass = function (e) {
		lt = e;
	};

	e.setTransparent = function (e) {
		Ze = e;
	};

	e.setShowLines = function (e) {
		ct = e;
	};

	e.setSmooth = function (e) {
		ut = e ? 2 : 0.4;
	};

	e.blockFromChat = function (e) {
		if (e != undefined) {
			pt.push(e);
		}
	};

	e.setHideChat = function (e) {
		Ee = [];
		dt = e;
		ft = e;
	};

	e.spectate = function () {
		ze = null;
		e.isSpectating = true;
		N(1);
		c();
	};
	e.setGameMode = function (e) {
		if (e != vt) {
			vt = e;
			v();
		}
	};
	e.setAcid = function (e) {
		Pt = e;
	};

	e.sendLocation = function (e) {
		j("My Location: " + ~~_e + " x " + ~~ke);
	};

	e.zoomInGame = function (e) {
		jt *= e == -1 ? 0.8 : 1.2;
		jt = Math.max(jt, 0.1);
		jt = Math.min(jt, 4);
	};

	e.splitCell = function () {
		T();
		N(17);
	};

	e.ejectMass = function () {
		T();
		N(21);
	};

	if (e.localStorage != null) {
		if (e.localStorage.AB8 == null) {
			e.localStorage.AB8 = ~~(Math.random() * 100);
		}
		At = +e.localStorage.AB8;
		e.ABGroup = At;
	}

	e.connect = b;

	var Ft = 500;
	var Lt = -1;
	var Rt = -1;
	var Ht = 1;
	var Bt = null;
	var qt = {};

	"poland;usa;".split(";");

	var Vt = "tdy;doctor_strange;emoji;bearr;squi2;deda_mraz;crow;rhb;amkisha;lollipop;wonder_woman;zekica;okice;tdb;alien;ice_cream;ruffy;jtn;rody;bravo;spidermann;minijonnnnn;hijene;garfield;kirby;wolverine;pirate_flag;harley;wolff;croft;char1;poty;spd2_byguerrero;werewolf;dude;capricorn;sbt;bo1;biker;kane093;diver;mumia;coins;las;octopus;awaaaaaaa;eagle;thief;pig;gengice;meteor;robot;hhaubi;mii10;pig2;saso89;unicorn888;htf;an01;pik;bsr;kruno102;pink_pig;bart;aln;rooster;haubbi;firebird;plug;troll_face;uros;xray;elvis_presley;dragon;srpskavucica101;foxy;sanik;warlus;mask;mju;sph;choko_heart;cactus;joker;pandelium;saso04;dog;ms4;nemanja31;flowers;batman;lock;nerd;frky;hat;tini;snoopy;kawaii1;cro_kings;gryphon;water_monster;just_medo;azdrahas;slatkica;ram;aqa;c03;troxy;ss1;t112t;faun;bull;jia;drmator;chicken_leg;kane092;jaca;roty;sla42;vikings;frock;witch;pcelica_123;glove;cope_car_msm_ja;pokiiiii;amazing;black_cat;drg;one_eye;terminator;vitez;devil;ojz;zmajce;viking;suprais;mst_by_guerrero;snc;heart;b28;bfk;black_kace;p_bear;eb_chanell;daki_king;maka;goldfish;evil_cactus;tigrus;boar;srpskavucica38;avav;hehe74;mr.crash;amor;kane028;frb;madara_uchiha;elephant;badger;pirates;boxing;ninja_harly;haski;caki24;healing_potion;fencer;evil_panda;narutoooo;coffe;elektra;sovice;san;mr_;stone;crazy_fox;vukiking;squirtle;french_fries;santa1;macak;tacospro;kong;zekan;freeze;lionking;thelonewolfw22;tiger;zy666;sandwich;hopy;anonymous;koala;robocop;mamute;bee;bhm;hunter;stefan_t_skins;frankenstein;pikachou;cat;maja;lara_crofna;gorilla;m_y;ignis;micukyyt;pou;the_lion_king;rook;aer;chicken;yu_gi_oh;ms9;fntc;ms3;fox;yugt_slo;reptil;deadpool;bom;lily;dogy;horseshoe;srpskavucica05;lion;black_mask;toxic;husky;bear;huh;yolo;msk;wmuc;ladybug;kriss;chihuahua;555;dinosaur;karate;toast;caki23;monkey;zayns;haubii;hhaawaahh;athletic;lisica;tyrant;hook;cnb;ironman;duck;pikachu;srpskavucica100;bcia;chuck_norris;golf_ball;wojakk;sir_rekt;zivotinjka;chili_pepper;let;fire;1231;bp21;pewdiepie;".split(";");

	var Ut = [];

	var Wt = ["_canvas'blob"];

	U.prototype = {
		id: 0,
		points: null,
		pointsAcc: null,
		name: null,
		nameCache: null,
		sizeCache: null,
		cellExtras: {},
		x: 0,
		y: 0,
		size: 0,
		ox: 0,
		oy: 0,
		oSize: 0,
		nx: 0,
		ny: 0,
		nSize: 0,
		flag: 0,
		updateTime: 0,
		updateCode: 0,
		drawTime: 0,
		destroyed: false,
		isVirus: false,
		isAgitated: false,
		wasSimpleDrawing: true,
		destroy: function () {
			var e;
			for (e = 0; e < Ae.length; e++) {
				if (Ae[e] == this) {
					Ae.splice(e, 1);
					break;
				}
			}
			delete Se[this.id];
			if ((e = Ce.indexOf(this)) != -1) {
				et = true;
				Ce.splice(e, 1);
			}
			if ((e = xe.indexOf(this.id)) != -1) {
				xe.splice(e, 1);
			}
			this.destroyed = true;
			Te.push(this);
		},
		getNameSize: function () {
			return Math.max(~~(this.size * 0.3), 24);
		},
		setName: function (e) {
			if (this.name = e) {
				if (this.name.substring(0, 4) == "a#.7" || this.name.substring(0, 4) == "p5@." || this.name.substring(0, 4) == "r5@u" || this.name.substring(0, 4) == "y2=t" || this.name.substring(0, 4) == "c5^#") {
					this.name = this.name.substring(4, this.name.length);
				}
				if (this.nameCache == null) {
					this.nameCache = new W(this.getNameSize(), "#FFFFFF", true, "#000000");
					this.nameCache.setValue(this.name);
				} else {
					this.nameCache.setSize(this.getNameSize());
					this.nameCache.setValue(this.name);
				}
			}
		},
		createPoints: function () {
			for (var e = this.getNumPoints(); this.points.length > e;) {
				var t = ~~(Math.random() * this.points.length);
				this.points.splice(t, 1);
				this.pointsAcc.splice(t, 1);
			}
			for (this.points.length == 0 && e > 0 && (this.points.push({
				ref: this,
				size: this.size,
				x: this.x,
				y: this.y
			}), this.pointsAcc.push(Math.random() - 0.5)); this.points.length < e;) {
				var n = ~~(Math.random() * this.points.length);
				var i = this.points[n];
				this.points.splice(n, 0, {
					ref: this,
					size: i.size,
					x: i.x,
					y: i.y
				});
				this.pointsAcc.splice(n, 0, this.pointsAcc[n]);
			}
		},
		getNumPoints: function () {
			if (this.id == 0) {
				return 16;
			}
			var e = 10;
			if (this.size < 20) {
				e = 0;
			}
			if (this.isVirus) {
				e = 30;
			}
			var t = this.size;
			if (!this.isVirus) {
				t *= Be;
			}
			t *= Ht;
			if (this.flag & 32) {
				t *= 0.25;
			}
			return ~~Math.max(t, e);
		},
		movePoints: function () {
			this.createPoints();
			var e = this.points;
			var t = this.pointsAcc;
			for (var n = e.length, i = 0; i < n; ++i) {
				var o = t[(i - 1 + n) % n];
				var a = t[(i + 1) % n];
				t[i] += (Math.random() - 0.5) * (this.isAgitated ? 3 : 1);
				t[i] *= 0.7;
				if (t[i] > 10) {
					t[i] = 10;
				}
				if (t[i] < -10) {
					t[i] = -10;
				}
				t[i] = (o + a + t[i] * 8) / 10;
			}
			var s = this;
			var r = this.isVirus ? 0 : (this.id / 1000 + Me / 10000) % (Math.PI * 2);
			for (var l = 0; l < n; ++l) {
				var c = e[l].size;
				var u = e[(l - 1 + n) % n].size;
				var d = e[(l + 1) % n].size;
				if (this.size > 15 && ye != null && this.size * Be > 20 && this.id != 0) {
					var p = false;
					var f = e[l].x;
					var h = e[l].y;
					ye.retrieve2(f - 5, h - 5, 10, 10, function (e) {
						if (e.ref != s && (f - e.x) * (f - e.x) + (h - e.y) * (h - e.y) < 25) {
							p = true;
						}
					});
					if (!p && e[l].x < Fe || e[l].y < Le || e[l].x > Re || e[l].y > He) {
						p = true;
					}
					if (p) {
						if (t[l] > 0) {
							t[l] = 0;
						}
						t[l] -= 1;
					}
				}
				if ((c += t[l]) < 0) {
					c = 0;
				}
				c = this.isAgitated ? (c * 19 + this.size) / 20 : (c * 12 + this.size) / 13;
				e[l].size = (u + d + c * 8) / 10;
				u = Math.PI * 2 / n;
				d = this.points[l].size;
				if (this.isVirus && l % 2 == 0) {
					d += 5;
				}
				e[l].x = this.x + Math.cos(u * l + r) * d;
				e[l].y = this.y + Math.sin(u * l + r) * d;
			}
		},
		updatePos: function () {
			if (this.id == 0) {
				return 1;
			}
			var e;
			var t = (e = (e = (Me - this.updateTime) / 120) < 0 ? 0 : e > 1 ? 1 : e) < 0 ? 0 : e > 1 ? 1 : e;
			this.getNameSize();
			if (this.destroyed && t >= 1) {
				var n = Te.indexOf(this);
				if (n != -1) {
					Te.splice(n, 1);
				}
			}
			this.x = e * (this.nx - this.ox) + this.ox;
			this.y = e * (this.ny - this.oy) + this.oy;
			this.size = t * (this.nSize - this.oSize) + this.oSize;
			return t;
		},
		shouldRender: function () {
			return this.id == 0 || !(this.x + this.size + 40 < _e - ve / 2 / Be) && !(this.y + this.size + 40 < ke - be / 2 / Be) && !(this.x - this.size - 40 > _e + ve / 2 / Be) && !(this.y - this.size - 40 > ke + be / 2 / Be);
		},
		getScore: function () {
			return ~~(this.nSize * this.nSize / 100);
		},
		drawOneCell: function (e) {
			if (this.shouldRender()) {
				h = this.id != 0 && !this.isVirus && !this.isAgitated && ut > Be;
				if (this.getNumPoints() < 10) {
					h = true;
				}
				if (this.wasSimpleDrawing && !h) {
					for (var t = 0; t < this.points.length; t++) {
						this.points[t].size = this.size;
					}
				}
				this.wasSimpleDrawing = h;
				e.save();
				this.drawTime = Me;
				t = this.updatePos();
				if (this.destroyed) {
					e.globalAlpha *= 1 - t;
				}
				e.lineWidth = 10;
				e.lineCap = "round";
				e.lineJoin = this.isVirus ? "miter" : "round";
				if (Ge) {
					e.fillStyle = "#FFFFFF";
					e.strokeStyle = "#AAAAAA";
				} else {
					e.fillStyle = this.color;
					e.strokeStyle = this.color;
				}
				if (Ze) {
					e.globalAlpha = 0.7;
				}
				if (h) {
					e.beginPath();
					e.arc(this.x, this.y, this.size - (this.size > 20 || !Ye ? 0 : 5), 0, Math.PI * 2, 0, Math.PI * 2, false);
				} else {
					this.movePoints();
					e.beginPath();
					var n = this.getNumPoints();
					e.moveTo(this.points[0].x, this.points[0].y);
					t = 1;
					for (; t <= n; ++t) {
						var i = t % n;
						e.lineTo(this.points[i].x, this.points[i].y);
					}
				}
				e.closePath();
				var o = this.name.toLowerCase();
				o = B(o)[0];
				if (this._skin !== undefined && this._skin != "" && this._skin[0] == "%") {
					o = this._skin.substring(1);
				}
				if (!this.isAgitated && Ve && vt != ":teams") {
					if (Vt.indexOf(o) != -1) {
						if (!qt.hasOwnProperty(o)) {
							qt[o] = new Image();
							qt[o].src = "/agar.rs/assets/images/skins_safe/" + o + ".png";
						}
						t = qt[o].width != 0 && qt[o].complete ? qt[o] : null;
					} else {
						t = null;
						if (!qt.hasOwnProperty(o)) {
							qt[o] = new Image();
							qt[o].src = "/agar.rs/assets/images/skins/" + o + ".png";
						}
						t = qt[o].width != 0 && qt[o].complete ? qt[o] : null;
					}
				} else {
					t = null;
				}
				t = !!(i = t) && Wt.indexOf(o) != -1;
				if (Ye) {
					if (!h || this.size > 20) {
						e.lineWidth = 5;
					}
					e.stroke();
				} else if (!h) {
					e.stroke();
				}
				e.fill();
				if (i != null && !t) {
					e.save();
					e.clip();
					e.drawImage(i, this.x - this.size, this.y - this.size, this.size * 2, this.size * 2);
					e.restore();
				}
				if (Ye && (!h || this.size > 20)) {
					var a = String($("#cellBorderColor").val());
					e.strokeStyle = "#" + a;
					if (a != "000000" && a != "000" && a) {
						var s = 1;
					} else {
						s = 0.12;
					}
					e.globalAlpha *= s;
					var r = String($("#cellBorderSize").val());
					e.lineWidth = r;
					e.stroke();
				}
				var l = B(this.name)[2];
				if (Ue && l && sesiriSlike[l] && this.size > 300) {
					var c = this.size + 5;
					try {
						e.globalAlpha = 0.7;
						e.drawImage(sesiriSlike[l], this.x - c, this.y - c - c * 1.66, c * 2, c * 2);
					} catch (e) {}
				}
				if (Ce[0] !== undefined && this.id == Ce[0].id && ~~(this.size * this.size / 100) < tt / 100 && Ce.length == 1) {
					e.save();
					var u = Ne - ve / 2;
					var d = Oe - (h = be / 2);
					var p = Math.atan2(d, u);
					e.translate(this.x, this.y);
					e.rotate(p);
					e.translate(-this.x, -this.y);
					e.drawImage(ie, this.x - this.size * 1.5, this.y - this.size * 1.5, this.size * 3, this.size * 3);
					e.restore();
				}
				if ((Ge || this.size > 15) && !h) {
					e.strokeStyle = "#000000";
					e.globalAlpha *= 0.1;
					e.stroke();
				}
				e.globalAlpha = 1;
				if (i != null && t) {
					e.drawImage(i, this.x - this.size * 2, this.y - this.size * 2, this.size * 4, this.size * 4);
				}
				t = Ce.indexOf(this) != -1;
				var f;
				if (this.id != 0) {
					var h = ~~this.y;
					if ((We || t) && this.name && this.nameCache && (i == null || Ut.indexOf(o) == -1)) {
						(f = this.nameCache).setValue(B(this.name)[1]);
						f.setSize(this.getNameSize());
						var m = Math.ceil(Be * 10) / 10;
						f.setScale(m);
						var g = f.render();
						var v = ~~(g.width / m);
						var b = ~~(g.height / m);
						if (g.width > 0 && g.height > 0) {
							e.drawImage(g, ~~this.x - ~~(v / 2), h - ~~(b / 2), v, b);
						}
						h += g.height / 2 / m + 4;
					}
					if (lt && (t || Ce.length == 0 && (!this.isVirus || this.isAgitated) && this.size > 20)) {
						if (this.sizeCache == null) {
							this.sizeCache = new W(this.getNameSize() / 2, "#FFFFFF", true, "#000000");
						}
						(t = this.sizeCache).setSize(this.getNameSize() / 2);
						t.setValue(~~(this.size * this.size / 100));
						m = Math.ceil(Be * 10) / 10;
						t.setScale(m);
						v = ~~((i = t.render()).width / m);
						b = ~~(i.height / m);
						e.drawImage(i, ~~this.x - ~~(v / 2), h - ~~(b / 2), v, b);
					}
				}
				e.restore();
			}
		}
	};

	W.prototype = {
		_value: "",
		_color: "#000000",
		_stroke: false,
		_strokeColor: "#000000",
		_size: 16,
		_canvas: null,
		_ctx: null,
		_dirty: false,
		_scale: 1,
		setSize: function (e) {
			if (this._size != e) {
				this._size = e;
				this._dirty = true;
			}
		},
		setScale: function (e) {
			if (this._scale != e) {
				this._scale = e;
				this._dirty = true;
			}
		},
		setStrokeColor: function (e) {
			if (this._strokeColor != e) {
				this._strokeColor = e;
				this._dirty = true;
			}
		},
		setValue: function (e) {
			if (e != this._value) {
				this._value = e;
				this._dirty = true;
			}
		},
		render: function () {
			if (this._canvas == null) {
				this._canvas = document.createElement("canvas");
				this._ctx = this._canvas.getContext("2d");
			}
			if (this._dirty) {
				this._dirty = false;
				var e = this._canvas;
				var t = this._ctx;
				var n = this._value;
				var i = this._scale;
				var o = this._size;
				var a = o + "px Ubuntu";
				t.font = a;
				var s = ~~(o * 0.2);
				e.width = (t.measureText(n).width + 6) * i;
				e.height = (o + s) * i;
				t.font = a;
				t.scale(i, i);
				t.globalAlpha = 1;
				t.lineWidth = 3;
				t.strokeStyle = this._strokeColor;
				t.fillStyle = this._color;
				if (this._stroke) {
					t.strokeText(n, 3, o - s / 2);
				}
				t.fillText(n, 3, o - s / 2);
			}
			return this._canvas;
		},
		getWidth: function () {
			return he.measureText(this._value).width + 6;
		}
	};

	Date.now ||= function () {
		return new Date().getTime();
	};

	// Quadtree
	var Gt = {
		init: function (args) {
			function Node(x, y, w, h, depth) {
				this.x = x;
				this.y = y;
				this.w = w;
				this.h = y;
				this.depth = depth; // current depth
				this.items = []; // Actual stored position node // Array<PosNode>
				this.nodes = []; // Nodes used to divide space, referred to as space nodes // Array<AreaNode>
			}

			var m_maxChildren = args.maxChildren || 2;
			var m_maxDepth = args.maxDepth || 4;

			Node.prototype = {
				x: 0,
				y: 0,
				w: 0,
				h: 0,
				depth: 0,
				items: null,
				nodes: null,
				// selector: {x: Number, y: Number, w: Number, h: Number}
				// Determine whether there is a PosNode in the area represented by the selector. If yes, return true otherwise, return false
				exists: function (selector) {
					for (var i = 0; i < this.items.length; ++i) {
						var item = this.items[i];

						if (item.x >= selector.x && item.y >= selector.y && item.x < selector.x + selector.w && item.y < selector.y + selector.h) {
							return true;
						}
					}

					if (this.nodes.length != 0) {
						var self = this;

						return this.findOverlappingNodes(selector, function (dir) {
							return self.nodes[dir].exists(selector);
						});
					}

					return false;
				},
				// node: {x: Number, y: Number, w: Number, h: Number}; callback: function (PosNode);
				// Determine if there is a PosNode in the area represented by item, and call the callback() function for all eligible PosNodes in turn
				retrieve: function (node, callback) {
					for (var i = 0; i < this.items.length; ++i) {
						callback(this.items[i]);
					}

					if (this.nodes.length != 0) {
						var self = this;

						this.findOverlappingNodes(e, function (dir) {
							self.nodes[dir].retrieve(node, callback);
						});
					}
				},
				// node: {x: Number, y: Number}
				insert: function (node) {
					if (this.nodes.length != 0) {
						this.nodes[this.findInsertNode(node)].insert(node);
						// If there are too many position nodes under this node and the maximum depth has not been reached, split this node and put these position nodes into the split nodes
					} else if (this.items.length >= m_maxChildren && this.depth < m_maxDepth) {
						this.devide();
						this.nodes[this.findInsertNode(node)].insert(node);
					} else {
						this.items.push(node);
					}
				},
				// Find which quadrant of this this node belongs to
				// Spatial region number airId, →x ↑y, lower left is 0, upper left is 2, lower right is 1, upper right is 3
				findInsertNode: function (node) {
					if (node.x < this.x + this.w / 2) {
						if (node.y < this.y + this.h / 2) {
							return 0;
						} else {
							return 2;
						}
					} else if (node.y < this.y + this.h / 2) {
						return 1;
					} else {
						return 3;
					}
				},
				findOverlappingNodes: function (e, t) {
					return !!(e.x < this.x + this.w / 2) && (!!(e.y < this.y + this.h / 2) && !!t(0) || !!(e.y >= this.y + this.h / 2) && !!t(2)) || !!(e.x >= this.x + this.w / 2) && (!!(e.y < this.y + this.h / 2) && !!t(1) || !!(e.y >= this.y + this.h / 2) && !!t(3));
				},
				devide: function () {
					var nd = this.depth + 1;
					var hw = this.w / 2;
					var hh = this.h / 2;

					this.nodes.push(new Node(this.x, this.y, hw, hh, nd));
					this.nodes.push(new Node(this.x + hw, this.y, hw, hh, nd));
					this.nodes.push(new Node(this.x, this.y + hh, hw, hh, nd));
					this.nodes.push(new Node(this.x + hw, this.y + hh, hw, hh, nd));

					nd = this.items;

					this.items = [];

					for (hw = 0; hw < nd.length; hw++) {
						this.insert(nd[hw]);
					}
				},
				clear: function () {
					for (var i = 0; i < this.nodes.length; i++) {
						this.nodes[i].clear();
					}

					this.items.length = 0;
					this.nodes.length = 0;
				}
			};

			var interalSelector = {
				x: 0,
				y: 0,
				w: 0,
				h: 0
			};

			return {
				root: new Node(args.minX, args.minY, args.maxX - args.minX, args.maxY - args.minY, 0),
				insert: function (node) {
					this.root.insert(node);
				},
				retrieve: function (node, callback) {
					this.root.retrieve(node, callback);
				},
				retrieve2: function (x, y, w, h, callback) {
					interalSelector.x = x;
					interalSelector.y = y;
					interalSelector.w = w;
					interalSelector.h = h;
					this.root.retrieve(interalSelector, callback);
				},
				exists: function (node) {
					return this.root.exists(node);
				},
				clear: function () {
					this.root.clear();
				}
			};
		}
	};

	var Ht = [];
	var Yt = 0;
	var Kt = 0;
	var Jt = 0;
	var Xt = 0;
	var Zt = 0;
	var Qt = 0;

	// setInterval(function () {}, 1000 / 60);

	setInterval(function () {
		var e = f();

		if (e != 0) {
			++Xt;
			if (Qt == 0) {
				Qt = e;
			}
			Qt = Math.min(Qt, e);
		}
	}, 1000);

	n(function () {
		new U(0, 0, 0, 32, "#ED1C24", "");
		var e = document.createElement("canvas");
		e.width = 32;
		e.height = 32;
		e.getContext("2d");
	});

	e.onload = function () {
		function t() {
			if (_) {
				T();
				N(21);
				setTimeout(t, k);
			}
		}

		yt = true;

		document.getElementById("canvas").focus();

		var r;
		var d = false;

		me = fe = document.getElementById("canvas");
		he = me.getContext("2d");

		window.onmousemove = function (e) {
			Ne = e.clientX;
			Oe = e.clientY;
			l();
		};

		if (G) {
			me.addEventListener("touchstart", i, false);
			me.addEventListener("touchmove", o, false);
			me.addEventListener("touchend", a, false);
		}

		me.onmouseup = function () {};

		if (/firefox/i.test(navigator.userAgent)) {
			document.addEventListener("DOMMouseScroll", s, false);
		} else {
			document.body.onmousewheel = s;
		}

		me.onfocus = function () {
			d = false;
		};

		document.getElementById("chat_textbox").onblur = function () {
			d = false;
		};

		document.getElementById("chat_textbox").onfocus = function () {
			d = true;
		};

		window.minionIndicator = {
			status: false
		};

		window.minionIndicator.watchfrog("status", function (e, t, n) {
			if (n) {
				$("#minion-indicator").text("BOT");
			} else {
				$("#minion-indicator").text("JA");
			}
			return n;
		});

		var p = false;
		var f = false;
		var g = false;
		var b = false;
		var y = false;
		var w = false;
		var _ = false;
		var k = 10;

		var x = {
			rzzpojwgug: "/agar.rs/assets/images/hats/crown.webp",
			idpsltfshi: "/agar.rs/assets/images/hats/irish.webp",
			bvqcccntlp: "/agar.rs/assets/images/hats/penguin.webp",
			xpdrgyzyyv: "/agar.rs/assets/images/hats/yt.webp",
			dfjuepgkau: "/agar.rs/assets/images/hats/troll.webp",
			gegbuipivv: "/agar.rs/assets/images/hats/santa.webp",
			qkcchbjoto: "/agar.rs/assets/images/hats/viking2.webp",
			duvpgfdkhi: "/agar.rs/assets/images/hats/poop.webp",
			qhvtikciiq: "/agar.rs/assets/images/hats/crown2.webp",
			ilxuxkotyl: "/agar.rs/assets/images/hats/blue.webp",
			wpnrgfhesy: "/agar.rs/assets/images/hats/pine.webp",
			omxsqlwobc: "/agar.rs/assets/images/hats/marl.webp",
			hiouiyzhhk: "/agar.rs/assets/images/hats/omar.webp",
			bxyzsjqlbj: "/agar.rs/assets/images/hats/asuma.webp",
			dikhiupytg: "/agar.rs/assets/images/hats/cat.webp",
			stwqbfrihj: "/agar.rs/assets/images/hats/poke.webp",
			zvbvubfbak: "/agar.rs/assets/images/hats/fancy.webp",
			qtwilujopm: "/agar.rs/assets/images/hats/r2d2.webp",
			uknytlgffl: "/agar.rs/assets/images/hats/theo.webp",
			owsenanuwa: "/agar.rs/assets/images/hats/archer.webp",
			obmjbcmyln: "/agar.rs/assets/images/hats/micky.webp",
			fbfbgjnnuv: "/agar.rs/assets/images/hats/angel.webp",
			fxaznohqzi: "/agar.rs/assets/images/hats/sirius.webp",
			mqwfdmepqq: "/agar.rs/assets/images/hats/kristo.webp",
			racakcutcs: "/agar.rs/assets/images/hats/tripex.webp",
			fetemkyhpr: "/agar.rs/assets/images/hats/shadox.webp",
			iplgzpvrlt: "/agar.rs/assets/images/hats/kokin.webp",
			mzywbcdzow: "/agar.rs/assets/images/hats/pumpkin.webp",
			utselgryms: "/agar.rs/assets/images/hats/ninja.webp",
			ihnhqgjhxy: "/agar.rs/assets/images/hats/terah.webp",
			plnhqgjhxy: "/agar.rs/assets/images/hats/minnie.webp",
			lkfflfjsdf: "/agar.rs/assets/images/hats/octopus.webp",
			opwekelvew: "/agar.rs/assets/images/hats/death.webp",
			wervdsfdse: "/agar.rs/assets/images/hats/halo.webp",
			rewwedldsw: "/agar.rs/assets/images/hats/noob.webp",
			sjqweijcqw: "/agar.rs/assets/images/hats/birthday.webp"
		};

		window.sesiriSlike = {};

		for (var C in x) {
			var S = new Image();
			S.src = x[C];
			sesiriSlike[C] = S;
		}

		var A = ["kurac", "kurcu", "picka", "picku", "picko", "govno", "jebem", "jebo", "jebe", "siso", "drolja", "droljo", "zakolji", "cetnik", "ustasa", "ustaso", "balija", "karam", "pusi", "kurva", "kurvo", "senpa"];
		var P = 0;
		var E = 0;
		var I = 0;
		var M = 0;

		e.onkeydown = function (n) {
			switch (n?.key?.toLowerCase()) {
				case window.gameKeys.splitCell:
					if (!p && !d) {
						T();
						N(17);
						p = true;
					}
					break;
				case window.gameKeys.doubleSplit:
					if (!b && !d) {
						T();
						N(17);
						T();
						N(17);
						setTimeout(function () {
							N(17);
						}, 100);
						b = true;
					}
					break;
				case window.gameKeys.quadSplit:
					if (!y && !d) {
						T();
						N(17);
						setTimeout(function () {
							N(17);
						}, 100);
						setTimeout(function () {
							N(17);
						}, 200);
						y = true;
					}
					break;
				case window.gameKeys.macroEject:
					if (!d) {
						_ = true;
						setTimeout(t, k);
						w = true;
					}
					break;
				case window.gameKeys.spectate:
					if (!f && !d) {
						N(18);
						f = true;
						window.minionIndicator.status = !window.minionIndicator.status;
					}
					break;
				case window.gameKeys.eject:
					if (!g && !d) {
						T();
						N(21);
						g = true;
					}
					break;
				case window.gameKeys.close:
					if ($("#overlays").is(":visible")) {
						c();
					} else {
						h(true, "");
					}
					break;
				case window.gameKeys.arrowleft:
					if (!d) {
						P = 1;
						M = 0;
						Ne = -10000;
						Oe = E === 1 ? -10000 : I === 1 ? 10000 : 0;
						l();
					}
					break;
				case window.gameKeys.arrowup:
					if (!d) {
						E = 1;
						I = 0;
						Oe = -10000;
						Ne = P === 1 ? -10000 : M === 1 ? 10000 : 0;
						l();
					}
					break;
				case window.gameKeys.arrowright:
					if (!d) {
						M = 1;
						P = 0;
						Ne = 10000;
						Oe = E === 1 ? -10000 : I === 1 ? 10000 : 0;
						l();
					}
					break;
				case window.gameKeys.arrowdown:
					if (!d) {
						I = 1;
						E = 0;
						Oe = 10000;
						Ne = P === 1 ? -10000 : M === 1 ? 10000 : 0;
						l();
					}
					break;
				case window.gameKeys.zoomIn:
					zoomInGame(1);
					break;
				case window.gameKeys.zoomOut:
					zoomInGame(-1);
					break;
				case "enter":
					if (d) {
						d = false;
						document.getElementById("chat_textbox").blur();
						r = document.getElementById("chat_textbox").value;
						var i;
						var o;
						var a = r = r.replace(/ +(?= )/g, "");
						var s = r.split(" ");
						for (var u = 0; u < A.length; u++) {
							var m = A[u].length;
							for (i = 0; i < s.length; i++) {
								for (o = 0; o < m; o++) {
									if (s.slice(i, i + o + 1).join("").toLowerCase() == A[u]) {
										s.splice(i, i + o + 1);
									}
								}
							}
						}
						r = s.join(" ");
						r = r.replace(/kurac/gi, "");
						r = r.replace(/kurc/gi, "");
						r = r.replace(/pusi/gi, "");
						r = r.replace(/puši/gi, "");
						r = r.replace(/pick/gi, "");
						r = r.replace(/pičk/gi, "");
						r = r.replace(/picko/gi, "");
						r = r.replace(/govno/gi, "");
						r = r.replace(/fafa/gi, "");
						r = r.replace(/jebe/gi, "");
						r = r.replace(/jebo/gi, "");
						r = r.replace(/karam/gi, "");
						r = r.replace(/ ubit/gi, "");
						r = r.replace(/zakolji/gi, "");
						r = r.replace(/zakla/gi, "");
						r = r.replace(/crkni/gi, "");
						r = r.replace(/crko/gi, "");
						r = r.replace(/guzi/gi, "");
						r = r.replace(/jeba/gi, "");
						r = r.replace(/nabijem/gi, "");
						r = r.replace(/kurv/gi, "");
						r = r.replace(/kurav/gi, "");
						r = r.replace(/kur/gi, "");
						r = r.replace(/drkam/gi, "");
						r = r.replace(/jbm/gi, "");
						r = r.replace(/prci/gi, "");
						r = r.replace(/prcam/gi, "");
						r = r.replace(/peder/gi, "");
						r = r.replace(/lezbo/gi, "");
						r = r.replace(/drolj/gi, "");
						r = r.replace(/ustas/gi, "");
						r = r.replace(/ustash/gi, "");
						r = r.replace(/balij/gi, "");
						r = r.replace(/cetnik/gi, "");
						if (a != r) {
							warnings++;
							toastr.options = {
								closeButton: false,
								debug: false,
								newestOnTop: false,
								progressBar: true,
								positionClass: "toast-bottom-right",
								preventDuplicates: false,
								onclick: null,
								showDuration: "300",
								hideDuration: "1000",
								timeOut: "3000",
								extendedTimeOut: "1000",
								showEasing: "swing",
								hideEasing: "linear",
								showMethod: "fadeIn",
								hideMethod: "fadeOut"
							};
							if (warnings > 2) {
								var v = warnings === 3 ? "minut" : "minuta";
								toastr.error("Chat će vam biti isključen na " + (warnings - 2) + " " + v);
							} else {
								toastr.error("Molimo Vas ne vređajte druge igrače. Opomena: " + warnings);
							}
						}
						if (r.length > 0 && ne < 1) {
							if (e.clrdMsg != undefined && e.clrdMsg != null && e.clrdMsg.length == 7 && r != "/kill") {
								r = "\\" + e.clrdMsg.substring(1, 7) + r;
							}
							j(r = r.slice(0, 127));
						}
						document.getElementById("chat_textbox").value = "";
					} else if (!wt) {
						document.getElementById("chat_textbox").focus();
						d = true;
						if (ne >= 1) {
							d = false;
							document.getElementById("chat_textbox").blur();
						}
					}
			}
		};

		e.onkeyup = function (e) {
			switch (e.key.toLowerCase()) {
				case window.gameKeys.splitCell:
					p = false;
					break;
				case window.gameKeys.doubleSplit:
					b = false;
					break;
				case window.gameKeys.eject:
					g = false;
					break;
				case window.gameKeys.quadSplit:
					y = false;
					break;
				case window.gameKeys.macroEject:
					w = false;
					_ = false;
					break;
				case window.gameKeys.arrowleft:
					P = 0;
					Ne = canvas.width / 2;
					if (!E && !I) {
						Oe = canvas.height / 2;
					}
					l();
					break;
				case window.gameKeys.arrowup:
					E = 0;
					if (!P && !M) {
						Ne = canvas.width / 2;
					}
					Oe = canvas.height / 2;
					l();
					break;
				case window.gameKeys.arrowright:
					M = 0;
					Ne = canvas.width / 2;
					if (!E && !I) {
						Oe = canvas.height / 2;
					}
					l();
					break;
				case window.gameKeys.arrowdown:
					I = 0;
					if (!P && !M) {
						Ne = canvas.width / 2;
					}
					Oe = canvas.height / 2;
					l();
					break;
				case window.gameKeys.spectate:
					if (f) {
						N(19);
						f = false;
						window.minionIndicator.status;
						window.minionIndicator.status;
					}
			}
		};

		e.onblur = function () {
			N(19);
			g = f = p = b = y = w = false;
		};

		e.onresize = D;

		D();

		if (e.requestAnimationFrame) {
			e.requestAnimationFrame(O);
		} else {
			setInterval(z, 1000 / 60);
		}

		setInterval(T, 40);

		m();

		u(CONNECTION_URL);

		if (we == null && qe) {
			v();
		}

		n("#overlays").fadeIn(500);

		D();
	};
})(window, window.jQuery);

(function () {
	var e = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame || function (e) { window.setTimeout(e, 1000 / 60); };
	window.requestAnimationFrame = e;
})();

var flakes = [];
var canvas = document.getElementById("nokey");
var ctx = canvas.getContext("2d");
var flakeCount = 100;
var mX = -100;
var mY = -100;

canvas.width = window.innerWidth;
canvas.height = window.innerHeight;
canvas.addEventListener("mousemove", function (e) {
	mX = e.clientX;
	mY = e.clientY;
});

window.addEventListener("resize", function () {
	canvas.width = window.innerWidth - 20;
	canvas.height = window.innerHeight;
});